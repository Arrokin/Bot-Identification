[
    {
        "id": "25076983741",
        "type": "IssuesEvent",
        "actor": {
            "id": 990177,
            "login": "adamrauh",
            "display_login": "adamrauh",
            "gravatar_id": "",
            "url": "https://api.github.com/users/adamrauh",
            "avatar_url": "https://avatars.githubusercontent.com/u/990177?"
        },
        "repo": {
            "id": 124099147,
            "name": "insongkim/PanelMatch",
            "url": "https://api.github.com/repos/insongkim/PanelMatch"
        },
        "payload": {
            "action": "closed",
            "issue": {
                "url": "https://api.github.com/repos/insongkim/PanelMatch/issues/111",
                "repository_url": "https://api.github.com/repos/insongkim/PanelMatch",
                "labels_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/111/labels{/name}",
                "comments_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/111/comments",
                "events_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/111/events",
                "html_url": "https://github.com/insongkim/PanelMatch/issues/111",
                "id": 1411953388,
                "node_id": "I_kwDOB2WaS85UKLLs",
                "number": 111,
                "title": "Issue with R manipulated/ modified datasets vs newly imported",
                "user": {
                    "login": "HanjaNirina",
                    "id": 26062621,
                    "node_id": "MDQ6VXNlcjI2MDYyNjIx",
                    "avatar_url": "https://avatars.githubusercontent.com/u/26062621?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/HanjaNirina",
                    "html_url": "https://github.com/HanjaNirina",
                    "followers_url": "https://api.github.com/users/HanjaNirina/followers",
                    "following_url": "https://api.github.com/users/HanjaNirina/following{/other_user}",
                    "gists_url": "https://api.github.com/users/HanjaNirina/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/HanjaNirina/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/HanjaNirina/subscriptions",
                    "organizations_url": "https://api.github.com/users/HanjaNirina/orgs",
                    "repos_url": "https://api.github.com/users/HanjaNirina/repos",
                    "events_url": "https://api.github.com/users/HanjaNirina/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/HanjaNirina/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "closed",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 2,
                "created_at": "2022-10-17T17:33:06Z",
                "updated_at": "2022-11-07T16:10:37Z",
                "closed_at": "2022-11-07T16:10:37Z",
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "Hi,\r\nI recently encountered an error that I couldn't understand but found a workaround for it. I constructed a dataset from existing CSV and online downloads through packages on R. It's a country-year panel dataset [all_merged_conflict.csv](https://github.com/insongkim/PanelMatch/files/9790459/all_merged_conflict.csv). \r\n\r\n1. I ran DisplayTreatment and got this error: \r\n```\r\nError in DisplayTreatment(unit.id = \"iso3c_n\", time.id = \"year\", legend.position = \"none\",  : \r\n  please convert time id to consecutive integers\r\n```\r\nI did not understand at all why this would occur as my year variable is set correctly as an integer and consecutive. So at first I gave up and simply used another package for this purpose. \r\n\r\n2. I ran PanelMatch and I got this error: \r\n```\r\nError in panel_match(lag, time.id, unit.id, treatment, refinement.method,  : \r\n  please convert unit id column to integer or numeric\r\n```\r\n\r\nI checked and checked again, and even changed the type from double to integer (just like wbcode2 is the dem data) but the unit id is numeric (Tried with as.integer() too but no luck).\r\n\r\nHowever in the process of creating sample data and code snippets. The functions worked with the same exact data but newly imported from a CSV file. I don't know what's causing this but the code I used to recreate this problem is as below. \r\n\r\nHoping you can figure out the issue for your next release. Thank you for a great package.\r\n\r\n```\r\n#NOTE:\r\n# 1. uncomment Package installation chunk if running for 1st time\r\n# 2. change location accordingly\r\n\r\n# Package Installation\r\ndevtools::install_github(\"insongkim/PanelMatch\", ref = \"development\")\r\n\r\n#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\r\n# Package Loading\r\n\r\n## pacman will apply library() to specified package or install first if needed\r\n\r\nif (!require(\"pacman\")) install.packages(\"pacman\")\r\npacman::p_load(\r\n  reshape, \r\n  dplyr,\r\n  tidyverse,\r\n  countrycode,\r\n  car, \r\n  psData,\r\n  validate\r\n)\r\n\r\nlibrary(PanelMatch)\r\n\r\n# Location of/ folder containing files\r\n# 1. Create your personal path to where folder is located on your machine \r\n# 2. Change currentpath to that personalized path\r\n\r\nnirinapath <- \"~/Dropbox (Princeton)/02Projects/KR - New Paper/\"\r\n#yourpath <- \r\ncurrentpath <- nirinapath\r\n\r\n#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\r\n\r\n# This section will present differents sets of code chunks:\r\n#   \r\n# 1. They will create the same exact dataset (as far as the R user is concerned)\r\n# 2. Set 1 will create the dataset by merging an older dataset with newer variables we would like. Set 1 will output errors.\r\n# 3. Set 2 will export the dataset as it is from set 1 to a csv somewher, then import back. Set 2 will work.\r\n\r\n#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\r\n\r\n# SET 1: Non-functional This set of chunk will NOT work\r\n\r\n## Importing initial dataset: Change to where all_merged_conflict is located\r\n\r\nall_merged_conflict <- read_csv(paste0(currentpath, \"all_merged_conflict.csv\"))\r\n\r\n#Downloading Polity scores and creating democracy indicators\r\n## Downloading and selecting polity scores\r\n\r\npolity <- psData::PolityGet(\"http://www.systemicpeace.org/inscr/p5v2018.sav\", \r\n                            vars = NULL,\r\n                            OutCountryID = \"iso3c\",\r\n                            standardCountryName = FALSE,\r\n                            na.rm = TRUE, \r\n                            duplicates = \"message\") %>% \r\n  dplyr::select(iso3c, p5, year, fragment, democ, autoc, polity, polity2, durable) %>% \r\n  filter(year > 1998)\r\n\r\npolity_dem_indicator <- polity %>% \r\n  filter( polity2 >= -10 & polity2 <= 10) %>% \r\n  mutate(polity_democracy = case_when(polity2 >= 6 ~ 1,\r\n                                      polity2 < 6 ~ 0),\r\n         polity_autocracy = case_when(polity2 <= -6 ~ 1,\r\n                                      polity2 > -6 ~ 0),\r\n         polity_anoncracy = case_when(polity2 < 6 & polity2 > -6 ~ 1,\r\n                                      polity2 >= 6 | polity2 <= -6 ~ 0),\r\n         polity_norm = (polity2 + 10)/20)\r\n\r\n## Merging with all_merged data & creating country codes numeric equivalents\r\n\r\nall_merged_conflict <- all_merged_conflict %>% \r\n  mutate(all_merged_conflict_flag = 1)\r\n\r\nall_merged_polity <- left_join(all_merged_conflict, polity_dem_indicator, by = c(\"iso3c\", \"year\")) %>%\r\n  group_by(iso3c) %>% \r\n  mutate(iso3c_r = cur_group_id()) %>% ## iso3c_r is ID for country in form of an integer (has no real connection to other numeric codes) \r\n  ungroup() %>% \r\n  mutate(iso3c_n = countrycode(iso3c, \"iso3c\", \"iso3n\", warn = TRUE, nomatch = NA),\r\n         year = as.integer(year)) %>% ## iso3c_n is the official iso3 numeric equivalent\r\n  relocate(c(\"iso3c_n\", \"iso3c_r\"), .after = iso3c) \r\n\r\n## Checking for uniqueness by year and country\r\n\r\nrule_polity <- validator(is_unique(iso3c_r, year))\r\nout_polity <- confront(all_merged_polity, rule_polity)\r\nsummary(out_polity)[1:7]\r\nviolating(all_merged_polity, out_polity)\r\n\r\n# Sudan is repeated twice for some unknown reason (almost all column values are equal)\r\n# Fix: randomly drop either Sudan 2011\r\nall_merged_polity$randval <- runif(nrow(all_merged_polity))\r\nall_merged_polity <- arrange(all_merged_polity,iso3c_n, year,randval) #%>% filter(!is.na(polity2))\r\nall_merged_polity <- all_merged_polity %>% \r\n  group_by(iso3c, year) %>% \r\n  top_n(n = 1) %>% \r\n  ungroup() %>% \r\n  filter(!is.na(iso3c_n) & !is.na(year))\r\n\r\n### PanelMatch estimator\r\n#### DisplayTreatment: FAIL\r\nDisplayTreatment(unit.id = \"iso3c_n\",\r\n                 time.id = \"year\", legend.position = \"none\",\r\n                 xlab = \"year\", ylab = \"Country Code\",\r\n                 treatment = \"polity_democracy\", data = all_merged_polity)\r\n\r\n#### PanelMatch: FAIL\r\npoli_dem_match <- all_merged_polity %>% \r\n  PanelMatch::PanelMatch(lag = 3, \r\n                         unit.id = \"iso3c_n\",\r\n                         time.id = \"year\",\r\n                         treatment = \"polity_democracy\",\r\n                         refinement.method = \"ps.match\",\r\n                         match.missing = TRUE, \r\n                         covs.formula = ~GDP_per_capita_current_US_dollar + GDP_per_capita_current_US_dollar2\r\n                         + GDP_per_capita_growth + trade_per_gdp + population_density + military_conflict, \r\n                         size.match = 5, \r\n                         qoi = \"att\", \r\n                         outcome.var = \"tree_cover_loss_value\",\r\n                         lead = 0:10, \r\n                         forbid.treatment.reversal = FALSE)\r\n\r\n#### Confirmation: it is not about the variable type\r\nclass(all_merged_polity$iso3c_n)\r\ntypeof(all_merged_polity$iso3c_n)\r\n\r\n#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\r\n# SET 2: \r\n## Exporting the CSV\r\nwrite_csv(all_merged_polity, paste0(currentpath, \"all_merged_polity_err.csv\"))\r\n\r\n\r\n## Importing the CSV\r\nall_merged_polity_new <- read.csv(paste0(currentpath, \"all_merged_polity_err.csv\"))\r\n\r\n### PanelMatch estimator\r\n#### DisplayTreatment\r\nDisplayTreatment(unit.id = \"iso3c_n\",\r\n                 time.id = \"year\", legend.position = \"none\",\r\n                 xlab = \"year\", ylab = \"Country Code\",\r\n                 treatment = \"polity_democracy\", data = all_merged_polity_new)\r\n\r\n\r\n\r\n#### PanelMatch\r\npoli_dem_match <- all_merged_polity_new %>% \r\n  PanelMatch::PanelMatch(lag = 3, \r\n                         unit.id = \"iso3c_n\",\r\n                         time.id = \"year\",\r\n                         treatment = \"polity_democracy\",\r\n                         refinement.method = \"ps.match\",\r\n                         match.missing = TRUE, \r\n                         covs.formula = ~GDP_per_capita_current_US_dollar + GDP_per_capita_current_US_dollar2\r\n                         + GDP_per_capita_growth + trade_per_gdp + population_density + military_conflict, \r\n                         size.match = 5, \r\n                         qoi = \"att\", \r\n                         outcome.var = \"tree_cover_loss_value\",\r\n                         lead = 0:10, \r\n                         forbid.treatment.reversal = FALSE)\r\n\r\npoli_dem_fe <- PanelEstimate(sets = poli_dem_match, all_merged_polity_new)\r\n\r\nsummary(poli_dem_fe)\r\n\r\nplot(poli_dem_fe)\r\n\r\n```\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/insongkim/PanelMatch/issues/111/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/111/timeline",
                "performed_via_github_app": null,
                "state_reason": "completed"
            }
        },
        "public": true,
        "created_at": "2022-11-07T16:10:38Z"
    },
    {
        "id": "25017157681",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 990177,
            "login": "adamrauh",
            "display_login": "adamrauh",
            "gravatar_id": "",
            "url": "https://api.github.com/users/adamrauh",
            "avatar_url": "https://avatars.githubusercontent.com/u/990177?"
        },
        "repo": {
            "id": 124099147,
            "name": "insongkim/PanelMatch",
            "url": "https://api.github.com/repos/insongkim/PanelMatch"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/insongkim/PanelMatch/issues/111",
                "repository_url": "https://api.github.com/repos/insongkim/PanelMatch",
                "labels_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/111/labels{/name}",
                "comments_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/111/comments",
                "events_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/111/events",
                "html_url": "https://github.com/insongkim/PanelMatch/issues/111",
                "id": 1411953388,
                "node_id": "I_kwDOB2WaS85UKLLs",
                "number": 111,
                "title": "Issue with R manipulated/ modified datasets vs newly imported",
                "user": {
                    "login": "HanjaNirina",
                    "id": 26062621,
                    "node_id": "MDQ6VXNlcjI2MDYyNjIx",
                    "avatar_url": "https://avatars.githubusercontent.com/u/26062621?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/HanjaNirina",
                    "html_url": "https://github.com/HanjaNirina",
                    "followers_url": "https://api.github.com/users/HanjaNirina/followers",
                    "following_url": "https://api.github.com/users/HanjaNirina/following{/other_user}",
                    "gists_url": "https://api.github.com/users/HanjaNirina/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/HanjaNirina/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/HanjaNirina/subscriptions",
                    "organizations_url": "https://api.github.com/users/HanjaNirina/orgs",
                    "repos_url": "https://api.github.com/users/HanjaNirina/repos",
                    "events_url": "https://api.github.com/users/HanjaNirina/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/HanjaNirina/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 2,
                "created_at": "2022-10-17T17:33:06Z",
                "updated_at": "2022-11-03T19:55:33Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "Hi,\r\nI recently encountered an error that I couldn't understand but found a workaround for it. I constructed a dataset from existing CSV and online downloads through packages on R. It's a country-year panel dataset [all_merged_conflict.csv](https://github.com/insongkim/PanelMatch/files/9790459/all_merged_conflict.csv). \r\n\r\n1. I ran DisplayTreatment and got this error: \r\n```\r\nError in DisplayTreatment(unit.id = \"iso3c_n\", time.id = \"year\", legend.position = \"none\",  : \r\n  please convert time id to consecutive integers\r\n```\r\nI did not understand at all why this would occur as my year variable is set correctly as an integer and consecutive. So at first I gave up and simply used another package for this purpose. \r\n\r\n2. I ran PanelMatch and I got this error: \r\n```\r\nError in panel_match(lag, time.id, unit.id, treatment, refinement.method,  : \r\n  please convert unit id column to integer or numeric\r\n```\r\n\r\nI checked and checked again, and even changed the type from double to integer (just like wbcode2 is the dem data) but the unit id is numeric (Tried with as.integer() too but no luck).\r\n\r\nHowever in the process of creating sample data and code snippets. The functions worked with the same exact data but newly imported from a CSV file. I don't know what's causing this but the code I used to recreate this problem is as below. \r\n\r\nHoping you can figure out the issue for your next release. Thank you for a great package.\r\n\r\n```\r\n#NOTE:\r\n# 1. uncomment Package installation chunk if running for 1st time\r\n# 2. change location accordingly\r\n\r\n# Package Installation\r\ndevtools::install_github(\"insongkim/PanelMatch\", ref = \"development\")\r\n\r\n#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\r\n# Package Loading\r\n\r\n## pacman will apply library() to specified package or install first if needed\r\n\r\nif (!require(\"pacman\")) install.packages(\"pacman\")\r\npacman::p_load(\r\n  reshape, \r\n  dplyr,\r\n  tidyverse,\r\n  countrycode,\r\n  car, \r\n  psData,\r\n  validate\r\n)\r\n\r\nlibrary(PanelMatch)\r\n\r\n# Location of/ folder containing files\r\n# 1. Create your personal path to where folder is located on your machine \r\n# 2. Change currentpath to that personalized path\r\n\r\nnirinapath <- \"~/Dropbox (Princeton)/02Projects/KR - New Paper/\"\r\n#yourpath <- \r\ncurrentpath <- nirinapath\r\n\r\n#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\r\n\r\n# This section will present differents sets of code chunks:\r\n#   \r\n# 1. They will create the same exact dataset (as far as the R user is concerned)\r\n# 2. Set 1 will create the dataset by merging an older dataset with newer variables we would like. Set 1 will output errors.\r\n# 3. Set 2 will export the dataset as it is from set 1 to a csv somewher, then import back. Set 2 will work.\r\n\r\n#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\r\n\r\n# SET 1: Non-functional This set of chunk will NOT work\r\n\r\n## Importing initial dataset: Change to where all_merged_conflict is located\r\n\r\nall_merged_conflict <- read_csv(paste0(currentpath, \"all_merged_conflict.csv\"))\r\n\r\n#Downloading Polity scores and creating democracy indicators\r\n## Downloading and selecting polity scores\r\n\r\npolity <- psData::PolityGet(\"http://www.systemicpeace.org/inscr/p5v2018.sav\", \r\n                            vars = NULL,\r\n                            OutCountryID = \"iso3c\",\r\n                            standardCountryName = FALSE,\r\n                            na.rm = TRUE, \r\n                            duplicates = \"message\") %>% \r\n  dplyr::select(iso3c, p5, year, fragment, democ, autoc, polity, polity2, durable) %>% \r\n  filter(year > 1998)\r\n\r\npolity_dem_indicator <- polity %>% \r\n  filter( polity2 >= -10 & polity2 <= 10) %>% \r\n  mutate(polity_democracy = case_when(polity2 >= 6 ~ 1,\r\n                                      polity2 < 6 ~ 0),\r\n         polity_autocracy = case_when(polity2 <= -6 ~ 1,\r\n                                      polity2 > -6 ~ 0),\r\n         polity_anoncracy = case_when(polity2 < 6 & polity2 > -6 ~ 1,\r\n                                      polity2 >= 6 | polity2 <= -6 ~ 0),\r\n         polity_norm = (polity2 + 10)/20)\r\n\r\n## Merging with all_merged data & creating country codes numeric equivalents\r\n\r\nall_merged_conflict <- all_merged_conflict %>% \r\n  mutate(all_merged_conflict_flag = 1)\r\n\r\nall_merged_polity <- left_join(all_merged_conflict, polity_dem_indicator, by = c(\"iso3c\", \"year\")) %>%\r\n  group_by(iso3c) %>% \r\n  mutate(iso3c_r = cur_group_id()) %>% ## iso3c_r is ID for country in form of an integer (has no real connection to other numeric codes) \r\n  ungroup() %>% \r\n  mutate(iso3c_n = countrycode(iso3c, \"iso3c\", \"iso3n\", warn = TRUE, nomatch = NA),\r\n         year = as.integer(year)) %>% ## iso3c_n is the official iso3 numeric equivalent\r\n  relocate(c(\"iso3c_n\", \"iso3c_r\"), .after = iso3c) \r\n\r\n## Checking for uniqueness by year and country\r\n\r\nrule_polity <- validator(is_unique(iso3c_r, year))\r\nout_polity <- confront(all_merged_polity, rule_polity)\r\nsummary(out_polity)[1:7]\r\nviolating(all_merged_polity, out_polity)\r\n\r\n# Sudan is repeated twice for some unknown reason (almost all column values are equal)\r\n# Fix: randomly drop either Sudan 2011\r\nall_merged_polity$randval <- runif(nrow(all_merged_polity))\r\nall_merged_polity <- arrange(all_merged_polity,iso3c_n, year,randval) #%>% filter(!is.na(polity2))\r\nall_merged_polity <- all_merged_polity %>% \r\n  group_by(iso3c, year) %>% \r\n  top_n(n = 1) %>% \r\n  ungroup() %>% \r\n  filter(!is.na(iso3c_n) & !is.na(year))\r\n\r\n### PanelMatch estimator\r\n#### DisplayTreatment: FAIL\r\nDisplayTreatment(unit.id = \"iso3c_n\",\r\n                 time.id = \"year\", legend.position = \"none\",\r\n                 xlab = \"year\", ylab = \"Country Code\",\r\n                 treatment = \"polity_democracy\", data = all_merged_polity)\r\n\r\n#### PanelMatch: FAIL\r\npoli_dem_match <- all_merged_polity %>% \r\n  PanelMatch::PanelMatch(lag = 3, \r\n                         unit.id = \"iso3c_n\",\r\n                         time.id = \"year\",\r\n                         treatment = \"polity_democracy\",\r\n                         refinement.method = \"ps.match\",\r\n                         match.missing = TRUE, \r\n                         covs.formula = ~GDP_per_capita_current_US_dollar + GDP_per_capita_current_US_dollar2\r\n                         + GDP_per_capita_growth + trade_per_gdp + population_density + military_conflict, \r\n                         size.match = 5, \r\n                         qoi = \"att\", \r\n                         outcome.var = \"tree_cover_loss_value\",\r\n                         lead = 0:10, \r\n                         forbid.treatment.reversal = FALSE)\r\n\r\n#### Confirmation: it is not about the variable type\r\nclass(all_merged_polity$iso3c_n)\r\ntypeof(all_merged_polity$iso3c_n)\r\n\r\n#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\r\n# SET 2: \r\n## Exporting the CSV\r\nwrite_csv(all_merged_polity, paste0(currentpath, \"all_merged_polity_err.csv\"))\r\n\r\n\r\n## Importing the CSV\r\nall_merged_polity_new <- read.csv(paste0(currentpath, \"all_merged_polity_err.csv\"))\r\n\r\n### PanelMatch estimator\r\n#### DisplayTreatment\r\nDisplayTreatment(unit.id = \"iso3c_n\",\r\n                 time.id = \"year\", legend.position = \"none\",\r\n                 xlab = \"year\", ylab = \"Country Code\",\r\n                 treatment = \"polity_democracy\", data = all_merged_polity_new)\r\n\r\n\r\n\r\n#### PanelMatch\r\npoli_dem_match <- all_merged_polity_new %>% \r\n  PanelMatch::PanelMatch(lag = 3, \r\n                         unit.id = \"iso3c_n\",\r\n                         time.id = \"year\",\r\n                         treatment = \"polity_democracy\",\r\n                         refinement.method = \"ps.match\",\r\n                         match.missing = TRUE, \r\n                         covs.formula = ~GDP_per_capita_current_US_dollar + GDP_per_capita_current_US_dollar2\r\n                         + GDP_per_capita_growth + trade_per_gdp + population_density + military_conflict, \r\n                         size.match = 5, \r\n                         qoi = \"att\", \r\n                         outcome.var = \"tree_cover_loss_value\",\r\n                         lead = 0:10, \r\n                         forbid.treatment.reversal = FALSE)\r\n\r\npoli_dem_fe <- PanelEstimate(sets = poli_dem_match, all_merged_polity_new)\r\n\r\nsummary(poli_dem_fe)\r\n\r\nplot(poli_dem_fe)\r\n\r\n```\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/insongkim/PanelMatch/issues/111/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/111/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/insongkim/PanelMatch/issues/comments/1302597269",
                "html_url": "https://github.com/insongkim/PanelMatch/issues/111#issuecomment-1302597269",
                "issue_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/111",
                "id": 1302597269,
                "node_id": "IC_kwDOB2WaS85NpA6V",
                "user": {
                    "login": "adamrauh",
                    "id": 990177,
                    "node_id": "MDQ6VXNlcjk5MDE3Nw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/990177?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/adamrauh",
                    "html_url": "https://github.com/adamrauh",
                    "followers_url": "https://api.github.com/users/adamrauh/followers",
                    "following_url": "https://api.github.com/users/adamrauh/following{/other_user}",
                    "gists_url": "https://api.github.com/users/adamrauh/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/adamrauh/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/adamrauh/subscriptions",
                    "organizations_url": "https://api.github.com/users/adamrauh/orgs",
                    "repos_url": "https://api.github.com/users/adamrauh/repos",
                    "events_url": "https://api.github.com/users/adamrauh/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/adamrauh/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2022-11-03T19:55:33Z",
                "updated_at": "2022-11-03T19:55:33Z",
                "author_association": "COLLABORATOR",
                "body": "> I experienced the same issue. However there is a simpler solution than saving and re-importing. What I have experienced it only accepts base `data.frame` object as input for data, thus if you convert your data with `as.data.frame(mydata)`, then it works.\r\n\r\nThanks for posting this! This should be right. We will add an update to provide better warnings/errors about this.",
                "reactions": {
                    "url": "https://api.github.com/repos/insongkim/PanelMatch/issues/comments/1302597269/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2022-11-03T19:55:33Z"
    },
    {
        "id": "25076983741",
        "type": "IssuesEvent",
        "actor": {
            "id": 990177,
            "login": "adamrauh",
            "display_login": "adamrauh",
            "gravatar_id": "",
            "url": "https://api.github.com/users/adamrauh",
            "avatar_url": "https://avatars.githubusercontent.com/u/990177?"
        },
        "repo": {
            "id": 124099147,
            "name": "insongkim/PanelMatch",
            "url": "https://api.github.com/repos/insongkim/PanelMatch"
        },
        "payload": {
            "action": "closed",
            "issue": {
                "url": "https://api.github.com/repos/insongkim/PanelMatch/issues/111",
                "repository_url": "https://api.github.com/repos/insongkim/PanelMatch",
                "labels_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/111/labels{/name}",
                "comments_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/111/comments",
                "events_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/111/events",
                "html_url": "https://github.com/insongkim/PanelMatch/issues/111",
                "id": 1411953388,
                "node_id": "I_kwDOB2WaS85UKLLs",
                "number": 111,
                "title": "Issue with R manipulated/ modified datasets vs newly imported",
                "user": {
                    "login": "HanjaNirina",
                    "id": 26062621,
                    "node_id": "MDQ6VXNlcjI2MDYyNjIx",
                    "avatar_url": "https://avatars.githubusercontent.com/u/26062621?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/HanjaNirina",
                    "html_url": "https://github.com/HanjaNirina",
                    "followers_url": "https://api.github.com/users/HanjaNirina/followers",
                    "following_url": "https://api.github.com/users/HanjaNirina/following{/other_user}",
                    "gists_url": "https://api.github.com/users/HanjaNirina/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/HanjaNirina/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/HanjaNirina/subscriptions",
                    "organizations_url": "https://api.github.com/users/HanjaNirina/orgs",
                    "repos_url": "https://api.github.com/users/HanjaNirina/repos",
                    "events_url": "https://api.github.com/users/HanjaNirina/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/HanjaNirina/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "closed",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 2,
                "created_at": "2022-10-17T17:33:06Z",
                "updated_at": "2022-11-07T16:10:37Z",
                "closed_at": "2022-11-07T16:10:37Z",
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "Hi,\r\nI recently encountered an error that I couldn't understand but found a workaround for it. I constructed a dataset from existing CSV and online downloads through packages on R. It's a country-year panel dataset [all_merged_conflict.csv](https://github.com/insongkim/PanelMatch/files/9790459/all_merged_conflict.csv). \r\n\r\n1. I ran DisplayTreatment and got this error: \r\n```\r\nError in DisplayTreatment(unit.id = \"iso3c_n\", time.id = \"year\", legend.position = \"none\",  : \r\n  please convert time id to consecutive integers\r\n```\r\nI did not understand at all why this would occur as my year variable is set correctly as an integer and consecutive. So at first I gave up and simply used another package for this purpose. \r\n\r\n2. I ran PanelMatch and I got this error: \r\n```\r\nError in panel_match(lag, time.id, unit.id, treatment, refinement.method,  : \r\n  please convert unit id column to integer or numeric\r\n```\r\n\r\nI checked and checked again, and even changed the type from double to integer (just like wbcode2 is the dem data) but the unit id is numeric (Tried with as.integer() too but no luck).\r\n\r\nHowever in the process of creating sample data and code snippets. The functions worked with the same exact data but newly imported from a CSV file. I don't know what's causing this but the code I used to recreate this problem is as below. \r\n\r\nHoping you can figure out the issue for your next release. Thank you for a great package.\r\n\r\n```\r\n#NOTE:\r\n# 1. uncomment Package installation chunk if running for 1st time\r\n# 2. change location accordingly\r\n\r\n# Package Installation\r\ndevtools::install_github(\"insongkim/PanelMatch\", ref = \"development\")\r\n\r\n#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\r\n# Package Loading\r\n\r\n## pacman will apply library() to specified package or install first if needed\r\n\r\nif (!require(\"pacman\")) install.packages(\"pacman\")\r\npacman::p_load(\r\n  reshape, \r\n  dplyr,\r\n  tidyverse,\r\n  countrycode,\r\n  car, \r\n  psData,\r\n  validate\r\n)\r\n\r\nlibrary(PanelMatch)\r\n\r\n# Location of/ folder containing files\r\n# 1. Create your personal path to where folder is located on your machine \r\n# 2. Change currentpath to that personalized path\r\n\r\nnirinapath <- \"~/Dropbox (Princeton)/02Projects/KR - New Paper/\"\r\n#yourpath <- \r\ncurrentpath <- nirinapath\r\n\r\n#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\r\n\r\n# This section will present differents sets of code chunks:\r\n#   \r\n# 1. They will create the same exact dataset (as far as the R user is concerned)\r\n# 2. Set 1 will create the dataset by merging an older dataset with newer variables we would like. Set 1 will output errors.\r\n# 3. Set 2 will export the dataset as it is from set 1 to a csv somewher, then import back. Set 2 will work.\r\n\r\n#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\r\n\r\n# SET 1: Non-functional This set of chunk will NOT work\r\n\r\n## Importing initial dataset: Change to where all_merged_conflict is located\r\n\r\nall_merged_conflict <- read_csv(paste0(currentpath, \"all_merged_conflict.csv\"))\r\n\r\n#Downloading Polity scores and creating democracy indicators\r\n## Downloading and selecting polity scores\r\n\r\npolity <- psData::PolityGet(\"http://www.systemicpeace.org/inscr/p5v2018.sav\", \r\n                            vars = NULL,\r\n                            OutCountryID = \"iso3c\",\r\n                            standardCountryName = FALSE,\r\n                            na.rm = TRUE, \r\n                            duplicates = \"message\") %>% \r\n  dplyr::select(iso3c, p5, year, fragment, democ, autoc, polity, polity2, durable) %>% \r\n  filter(year > 1998)\r\n\r\npolity_dem_indicator <- polity %>% \r\n  filter( polity2 >= -10 & polity2 <= 10) %>% \r\n  mutate(polity_democracy = case_when(polity2 >= 6 ~ 1,\r\n                                      polity2 < 6 ~ 0),\r\n         polity_autocracy = case_when(polity2 <= -6 ~ 1,\r\n                                      polity2 > -6 ~ 0),\r\n         polity_anoncracy = case_when(polity2 < 6 & polity2 > -6 ~ 1,\r\n                                      polity2 >= 6 | polity2 <= -6 ~ 0),\r\n         polity_norm = (polity2 + 10)/20)\r\n\r\n## Merging with all_merged data & creating country codes numeric equivalents\r\n\r\nall_merged_conflict <- all_merged_conflict %>% \r\n  mutate(all_merged_conflict_flag = 1)\r\n\r\nall_merged_polity <- left_join(all_merged_conflict, polity_dem_indicator, by = c(\"iso3c\", \"year\")) %>%\r\n  group_by(iso3c) %>% \r\n  mutate(iso3c_r = cur_group_id()) %>% ## iso3c_r is ID for country in form of an integer (has no real connection to other numeric codes) \r\n  ungroup() %>% \r\n  mutate(iso3c_n = countrycode(iso3c, \"iso3c\", \"iso3n\", warn = TRUE, nomatch = NA),\r\n         year = as.integer(year)) %>% ## iso3c_n is the official iso3 numeric equivalent\r\n  relocate(c(\"iso3c_n\", \"iso3c_r\"), .after = iso3c) \r\n\r\n## Checking for uniqueness by year and country\r\n\r\nrule_polity <- validator(is_unique(iso3c_r, year))\r\nout_polity <- confront(all_merged_polity, rule_polity)\r\nsummary(out_polity)[1:7]\r\nviolating(all_merged_polity, out_polity)\r\n\r\n# Sudan is repeated twice for some unknown reason (almost all column values are equal)\r\n# Fix: randomly drop either Sudan 2011\r\nall_merged_polity$randval <- runif(nrow(all_merged_polity))\r\nall_merged_polity <- arrange(all_merged_polity,iso3c_n, year,randval) #%>% filter(!is.na(polity2))\r\nall_merged_polity <- all_merged_polity %>% \r\n  group_by(iso3c, year) %>% \r\n  top_n(n = 1) %>% \r\n  ungroup() %>% \r\n  filter(!is.na(iso3c_n) & !is.na(year))\r\n\r\n### PanelMatch estimator\r\n#### DisplayTreatment: FAIL\r\nDisplayTreatment(unit.id = \"iso3c_n\",\r\n                 time.id = \"year\", legend.position = \"none\",\r\n                 xlab = \"year\", ylab = \"Country Code\",\r\n                 treatment = \"polity_democracy\", data = all_merged_polity)\r\n\r\n#### PanelMatch: FAIL\r\npoli_dem_match <- all_merged_polity %>% \r\n  PanelMatch::PanelMatch(lag = 3, \r\n                         unit.id = \"iso3c_n\",\r\n                         time.id = \"year\",\r\n                         treatment = \"polity_democracy\",\r\n                         refinement.method = \"ps.match\",\r\n                         match.missing = TRUE, \r\n                         covs.formula = ~GDP_per_capita_current_US_dollar + GDP_per_capita_current_US_dollar2\r\n                         + GDP_per_capita_growth + trade_per_gdp + population_density + military_conflict, \r\n                         size.match = 5, \r\n                         qoi = \"att\", \r\n                         outcome.var = \"tree_cover_loss_value\",\r\n                         lead = 0:10, \r\n                         forbid.treatment.reversal = FALSE)\r\n\r\n#### Confirmation: it is not about the variable type\r\nclass(all_merged_polity$iso3c_n)\r\ntypeof(all_merged_polity$iso3c_n)\r\n\r\n#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\r\n# SET 2: \r\n## Exporting the CSV\r\nwrite_csv(all_merged_polity, paste0(currentpath, \"all_merged_polity_err.csv\"))\r\n\r\n\r\n## Importing the CSV\r\nall_merged_polity_new <- read.csv(paste0(currentpath, \"all_merged_polity_err.csv\"))\r\n\r\n### PanelMatch estimator\r\n#### DisplayTreatment\r\nDisplayTreatment(unit.id = \"iso3c_n\",\r\n                 time.id = \"year\", legend.position = \"none\",\r\n                 xlab = \"year\", ylab = \"Country Code\",\r\n                 treatment = \"polity_democracy\", data = all_merged_polity_new)\r\n\r\n\r\n\r\n#### PanelMatch\r\npoli_dem_match <- all_merged_polity_new %>% \r\n  PanelMatch::PanelMatch(lag = 3, \r\n                         unit.id = \"iso3c_n\",\r\n                         time.id = \"year\",\r\n                         treatment = \"polity_democracy\",\r\n                         refinement.method = \"ps.match\",\r\n                         match.missing = TRUE, \r\n                         covs.formula = ~GDP_per_capita_current_US_dollar + GDP_per_capita_current_US_dollar2\r\n                         + GDP_per_capita_growth + trade_per_gdp + population_density + military_conflict, \r\n                         size.match = 5, \r\n                         qoi = \"att\", \r\n                         outcome.var = \"tree_cover_loss_value\",\r\n                         lead = 0:10, \r\n                         forbid.treatment.reversal = FALSE)\r\n\r\npoli_dem_fe <- PanelEstimate(sets = poli_dem_match, all_merged_polity_new)\r\n\r\nsummary(poli_dem_fe)\r\n\r\nplot(poli_dem_fe)\r\n\r\n```\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/insongkim/PanelMatch/issues/111/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/111/timeline",
                "performed_via_github_app": null,
                "state_reason": "completed"
            }
        },
        "public": true,
        "created_at": "2022-11-07T16:10:38Z"
    },
    {
        "id": "25017157681",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 990177,
            "login": "adamrauh",
            "display_login": "adamrauh",
            "gravatar_id": "",
            "url": "https://api.github.com/users/adamrauh",
            "avatar_url": "https://avatars.githubusercontent.com/u/990177?"
        },
        "repo": {
            "id": 124099147,
            "name": "insongkim/PanelMatch",
            "url": "https://api.github.com/repos/insongkim/PanelMatch"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/insongkim/PanelMatch/issues/111",
                "repository_url": "https://api.github.com/repos/insongkim/PanelMatch",
                "labels_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/111/labels{/name}",
                "comments_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/111/comments",
                "events_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/111/events",
                "html_url": "https://github.com/insongkim/PanelMatch/issues/111",
                "id": 1411953388,
                "node_id": "I_kwDOB2WaS85UKLLs",
                "number": 111,
                "title": "Issue with R manipulated/ modified datasets vs newly imported",
                "user": {
                    "login": "HanjaNirina",
                    "id": 26062621,
                    "node_id": "MDQ6VXNlcjI2MDYyNjIx",
                    "avatar_url": "https://avatars.githubusercontent.com/u/26062621?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/HanjaNirina",
                    "html_url": "https://github.com/HanjaNirina",
                    "followers_url": "https://api.github.com/users/HanjaNirina/followers",
                    "following_url": "https://api.github.com/users/HanjaNirina/following{/other_user}",
                    "gists_url": "https://api.github.com/users/HanjaNirina/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/HanjaNirina/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/HanjaNirina/subscriptions",
                    "organizations_url": "https://api.github.com/users/HanjaNirina/orgs",
                    "repos_url": "https://api.github.com/users/HanjaNirina/repos",
                    "events_url": "https://api.github.com/users/HanjaNirina/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/HanjaNirina/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 2,
                "created_at": "2022-10-17T17:33:06Z",
                "updated_at": "2022-11-03T19:55:33Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "Hi,\r\nI recently encountered an error that I couldn't understand but found a workaround for it. I constructed a dataset from existing CSV and online downloads through packages on R. It's a country-year panel dataset [all_merged_conflict.csv](https://github.com/insongkim/PanelMatch/files/9790459/all_merged_conflict.csv). \r\n\r\n1. I ran DisplayTreatment and got this error: \r\n```\r\nError in DisplayTreatment(unit.id = \"iso3c_n\", time.id = \"year\", legend.position = \"none\",  : \r\n  please convert time id to consecutive integers\r\n```\r\nI did not understand at all why this would occur as my year variable is set correctly as an integer and consecutive. So at first I gave up and simply used another package for this purpose. \r\n\r\n2. I ran PanelMatch and I got this error: \r\n```\r\nError in panel_match(lag, time.id, unit.id, treatment, refinement.method,  : \r\n  please convert unit id column to integer or numeric\r\n```\r\n\r\nI checked and checked again, and even changed the type from double to integer (just like wbcode2 is the dem data) but the unit id is numeric (Tried with as.integer() too but no luck).\r\n\r\nHowever in the process of creating sample data and code snippets. The functions worked with the same exact data but newly imported from a CSV file. I don't know what's causing this but the code I used to recreate this problem is as below. \r\n\r\nHoping you can figure out the issue for your next release. Thank you for a great package.\r\n\r\n```\r\n#NOTE:\r\n# 1. uncomment Package installation chunk if running for 1st time\r\n# 2. change location accordingly\r\n\r\n# Package Installation\r\ndevtools::install_github(\"insongkim/PanelMatch\", ref = \"development\")\r\n\r\n#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\r\n# Package Loading\r\n\r\n## pacman will apply library() to specified package or install first if needed\r\n\r\nif (!require(\"pacman\")) install.packages(\"pacman\")\r\npacman::p_load(\r\n  reshape, \r\n  dplyr,\r\n  tidyverse,\r\n  countrycode,\r\n  car, \r\n  psData,\r\n  validate\r\n)\r\n\r\nlibrary(PanelMatch)\r\n\r\n# Location of/ folder containing files\r\n# 1. Create your personal path to where folder is located on your machine \r\n# 2. Change currentpath to that personalized path\r\n\r\nnirinapath <- \"~/Dropbox (Princeton)/02Projects/KR - New Paper/\"\r\n#yourpath <- \r\ncurrentpath <- nirinapath\r\n\r\n#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\r\n\r\n# This section will present differents sets of code chunks:\r\n#   \r\n# 1. They will create the same exact dataset (as far as the R user is concerned)\r\n# 2. Set 1 will create the dataset by merging an older dataset with newer variables we would like. Set 1 will output errors.\r\n# 3. Set 2 will export the dataset as it is from set 1 to a csv somewher, then import back. Set 2 will work.\r\n\r\n#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\r\n\r\n# SET 1: Non-functional This set of chunk will NOT work\r\n\r\n## Importing initial dataset: Change to where all_merged_conflict is located\r\n\r\nall_merged_conflict <- read_csv(paste0(currentpath, \"all_merged_conflict.csv\"))\r\n\r\n#Downloading Polity scores and creating democracy indicators\r\n## Downloading and selecting polity scores\r\n\r\npolity <- psData::PolityGet(\"http://www.systemicpeace.org/inscr/p5v2018.sav\", \r\n                            vars = NULL,\r\n                            OutCountryID = \"iso3c\",\r\n                            standardCountryName = FALSE,\r\n                            na.rm = TRUE, \r\n                            duplicates = \"message\") %>% \r\n  dplyr::select(iso3c, p5, year, fragment, democ, autoc, polity, polity2, durable) %>% \r\n  filter(year > 1998)\r\n\r\npolity_dem_indicator <- polity %>% \r\n  filter( polity2 >= -10 & polity2 <= 10) %>% \r\n  mutate(polity_democracy = case_when(polity2 >= 6 ~ 1,\r\n                                      polity2 < 6 ~ 0),\r\n         polity_autocracy = case_when(polity2 <= -6 ~ 1,\r\n                                      polity2 > -6 ~ 0),\r\n         polity_anoncracy = case_when(polity2 < 6 & polity2 > -6 ~ 1,\r\n                                      polity2 >= 6 | polity2 <= -6 ~ 0),\r\n         polity_norm = (polity2 + 10)/20)\r\n\r\n## Merging with all_merged data & creating country codes numeric equivalents\r\n\r\nall_merged_conflict <- all_merged_conflict %>% \r\n  mutate(all_merged_conflict_flag = 1)\r\n\r\nall_merged_polity <- left_join(all_merged_conflict, polity_dem_indicator, by = c(\"iso3c\", \"year\")) %>%\r\n  group_by(iso3c) %>% \r\n  mutate(iso3c_r = cur_group_id()) %>% ## iso3c_r is ID for country in form of an integer (has no real connection to other numeric codes) \r\n  ungroup() %>% \r\n  mutate(iso3c_n = countrycode(iso3c, \"iso3c\", \"iso3n\", warn = TRUE, nomatch = NA),\r\n         year = as.integer(year)) %>% ## iso3c_n is the official iso3 numeric equivalent\r\n  relocate(c(\"iso3c_n\", \"iso3c_r\"), .after = iso3c) \r\n\r\n## Checking for uniqueness by year and country\r\n\r\nrule_polity <- validator(is_unique(iso3c_r, year))\r\nout_polity <- confront(all_merged_polity, rule_polity)\r\nsummary(out_polity)[1:7]\r\nviolating(all_merged_polity, out_polity)\r\n\r\n# Sudan is repeated twice for some unknown reason (almost all column values are equal)\r\n# Fix: randomly drop either Sudan 2011\r\nall_merged_polity$randval <- runif(nrow(all_merged_polity))\r\nall_merged_polity <- arrange(all_merged_polity,iso3c_n, year,randval) #%>% filter(!is.na(polity2))\r\nall_merged_polity <- all_merged_polity %>% \r\n  group_by(iso3c, year) %>% \r\n  top_n(n = 1) %>% \r\n  ungroup() %>% \r\n  filter(!is.na(iso3c_n) & !is.na(year))\r\n\r\n### PanelMatch estimator\r\n#### DisplayTreatment: FAIL\r\nDisplayTreatment(unit.id = \"iso3c_n\",\r\n                 time.id = \"year\", legend.position = \"none\",\r\n                 xlab = \"year\", ylab = \"Country Code\",\r\n                 treatment = \"polity_democracy\", data = all_merged_polity)\r\n\r\n#### PanelMatch: FAIL\r\npoli_dem_match <- all_merged_polity %>% \r\n  PanelMatch::PanelMatch(lag = 3, \r\n                         unit.id = \"iso3c_n\",\r\n                         time.id = \"year\",\r\n                         treatment = \"polity_democracy\",\r\n                         refinement.method = \"ps.match\",\r\n                         match.missing = TRUE, \r\n                         covs.formula = ~GDP_per_capita_current_US_dollar + GDP_per_capita_current_US_dollar2\r\n                         + GDP_per_capita_growth + trade_per_gdp + population_density + military_conflict, \r\n                         size.match = 5, \r\n                         qoi = \"att\", \r\n                         outcome.var = \"tree_cover_loss_value\",\r\n                         lead = 0:10, \r\n                         forbid.treatment.reversal = FALSE)\r\n\r\n#### Confirmation: it is not about the variable type\r\nclass(all_merged_polity$iso3c_n)\r\ntypeof(all_merged_polity$iso3c_n)\r\n\r\n#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\r\n# SET 2: \r\n## Exporting the CSV\r\nwrite_csv(all_merged_polity, paste0(currentpath, \"all_merged_polity_err.csv\"))\r\n\r\n\r\n## Importing the CSV\r\nall_merged_polity_new <- read.csv(paste0(currentpath, \"all_merged_polity_err.csv\"))\r\n\r\n### PanelMatch estimator\r\n#### DisplayTreatment\r\nDisplayTreatment(unit.id = \"iso3c_n\",\r\n                 time.id = \"year\", legend.position = \"none\",\r\n                 xlab = \"year\", ylab = \"Country Code\",\r\n                 treatment = \"polity_democracy\", data = all_merged_polity_new)\r\n\r\n\r\n\r\n#### PanelMatch\r\npoli_dem_match <- all_merged_polity_new %>% \r\n  PanelMatch::PanelMatch(lag = 3, \r\n                         unit.id = \"iso3c_n\",\r\n                         time.id = \"year\",\r\n                         treatment = \"polity_democracy\",\r\n                         refinement.method = \"ps.match\",\r\n                         match.missing = TRUE, \r\n                         covs.formula = ~GDP_per_capita_current_US_dollar + GDP_per_capita_current_US_dollar2\r\n                         + GDP_per_capita_growth + trade_per_gdp + population_density + military_conflict, \r\n                         size.match = 5, \r\n                         qoi = \"att\", \r\n                         outcome.var = \"tree_cover_loss_value\",\r\n                         lead = 0:10, \r\n                         forbid.treatment.reversal = FALSE)\r\n\r\npoli_dem_fe <- PanelEstimate(sets = poli_dem_match, all_merged_polity_new)\r\n\r\nsummary(poli_dem_fe)\r\n\r\nplot(poli_dem_fe)\r\n\r\n```\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/insongkim/PanelMatch/issues/111/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/111/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/insongkim/PanelMatch/issues/comments/1302597269",
                "html_url": "https://github.com/insongkim/PanelMatch/issues/111#issuecomment-1302597269",
                "issue_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/111",
                "id": 1302597269,
                "node_id": "IC_kwDOB2WaS85NpA6V",
                "user": {
                    "login": "adamrauh",
                    "id": 990177,
                    "node_id": "MDQ6VXNlcjk5MDE3Nw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/990177?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/adamrauh",
                    "html_url": "https://github.com/adamrauh",
                    "followers_url": "https://api.github.com/users/adamrauh/followers",
                    "following_url": "https://api.github.com/users/adamrauh/following{/other_user}",
                    "gists_url": "https://api.github.com/users/adamrauh/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/adamrauh/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/adamrauh/subscriptions",
                    "organizations_url": "https://api.github.com/users/adamrauh/orgs",
                    "repos_url": "https://api.github.com/users/adamrauh/repos",
                    "events_url": "https://api.github.com/users/adamrauh/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/adamrauh/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2022-11-03T19:55:33Z",
                "updated_at": "2022-11-03T19:55:33Z",
                "author_association": "COLLABORATOR",
                "body": "> I experienced the same issue. However there is a simpler solution than saving and re-importing. What I have experienced it only accepts base `data.frame` object as input for data, thus if you convert your data with `as.data.frame(mydata)`, then it works.\r\n\r\nThanks for posting this! This should be right. We will add an update to provide better warnings/errors about this.",
                "reactions": {
                    "url": "https://api.github.com/repos/insongkim/PanelMatch/issues/comments/1302597269/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2022-11-03T19:55:33Z"
    },
    {
        "id": "25076983741",
        "type": "IssuesEvent",
        "actor": {
            "id": 990177,
            "login": "adamrauh",
            "display_login": "adamrauh",
            "gravatar_id": "",
            "url": "https://api.github.com/users/adamrauh",
            "avatar_url": "https://avatars.githubusercontent.com/u/990177?"
        },
        "repo": {
            "id": 124099147,
            "name": "insongkim/PanelMatch",
            "url": "https://api.github.com/repos/insongkim/PanelMatch"
        },
        "payload": {
            "action": "closed",
            "issue": {
                "url": "https://api.github.com/repos/insongkim/PanelMatch/issues/111",
                "repository_url": "https://api.github.com/repos/insongkim/PanelMatch",
                "labels_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/111/labels{/name}",
                "comments_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/111/comments",
                "events_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/111/events",
                "html_url": "https://github.com/insongkim/PanelMatch/issues/111",
                "id": 1411953388,
                "node_id": "I_kwDOB2WaS85UKLLs",
                "number": 111,
                "title": "Issue with R manipulated/ modified datasets vs newly imported",
                "user": {
                    "login": "HanjaNirina",
                    "id": 26062621,
                    "node_id": "MDQ6VXNlcjI2MDYyNjIx",
                    "avatar_url": "https://avatars.githubusercontent.com/u/26062621?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/HanjaNirina",
                    "html_url": "https://github.com/HanjaNirina",
                    "followers_url": "https://api.github.com/users/HanjaNirina/followers",
                    "following_url": "https://api.github.com/users/HanjaNirina/following{/other_user}",
                    "gists_url": "https://api.github.com/users/HanjaNirina/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/HanjaNirina/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/HanjaNirina/subscriptions",
                    "organizations_url": "https://api.github.com/users/HanjaNirina/orgs",
                    "repos_url": "https://api.github.com/users/HanjaNirina/repos",
                    "events_url": "https://api.github.com/users/HanjaNirina/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/HanjaNirina/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "closed",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 2,
                "created_at": "2022-10-17T17:33:06Z",
                "updated_at": "2022-11-07T16:10:37Z",
                "closed_at": "2022-11-07T16:10:37Z",
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "Hi,\r\nI recently encountered an error that I couldn't understand but found a workaround for it. I constructed a dataset from existing CSV and online downloads through packages on R. It's a country-year panel dataset [all_merged_conflict.csv](https://github.com/insongkim/PanelMatch/files/9790459/all_merged_conflict.csv). \r\n\r\n1. I ran DisplayTreatment and got this error: \r\n```\r\nError in DisplayTreatment(unit.id = \"iso3c_n\", time.id = \"year\", legend.position = \"none\",  : \r\n  please convert time id to consecutive integers\r\n```\r\nI did not understand at all why this would occur as my year variable is set correctly as an integer and consecutive. So at first I gave up and simply used another package for this purpose. \r\n\r\n2. I ran PanelMatch and I got this error: \r\n```\r\nError in panel_match(lag, time.id, unit.id, treatment, refinement.method,  : \r\n  please convert unit id column to integer or numeric\r\n```\r\n\r\nI checked and checked again, and even changed the type from double to integer (just like wbcode2 is the dem data) but the unit id is numeric (Tried with as.integer() too but no luck).\r\n\r\nHowever in the process of creating sample data and code snippets. The functions worked with the same exact data but newly imported from a CSV file. I don't know what's causing this but the code I used to recreate this problem is as below. \r\n\r\nHoping you can figure out the issue for your next release. Thank you for a great package.\r\n\r\n```\r\n#NOTE:\r\n# 1. uncomment Package installation chunk if running for 1st time\r\n# 2. change location accordingly\r\n\r\n# Package Installation\r\ndevtools::install_github(\"insongkim/PanelMatch\", ref = \"development\")\r\n\r\n#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\r\n# Package Loading\r\n\r\n## pacman will apply library() to specified package or install first if needed\r\n\r\nif (!require(\"pacman\")) install.packages(\"pacman\")\r\npacman::p_load(\r\n  reshape, \r\n  dplyr,\r\n  tidyverse,\r\n  countrycode,\r\n  car, \r\n  psData,\r\n  validate\r\n)\r\n\r\nlibrary(PanelMatch)\r\n\r\n# Location of/ folder containing files\r\n# 1. Create your personal path to where folder is located on your machine \r\n# 2. Change currentpath to that personalized path\r\n\r\nnirinapath <- \"~/Dropbox (Princeton)/02Projects/KR - New Paper/\"\r\n#yourpath <- \r\ncurrentpath <- nirinapath\r\n\r\n#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\r\n\r\n# This section will present differents sets of code chunks:\r\n#   \r\n# 1. They will create the same exact dataset (as far as the R user is concerned)\r\n# 2. Set 1 will create the dataset by merging an older dataset with newer variables we would like. Set 1 will output errors.\r\n# 3. Set 2 will export the dataset as it is from set 1 to a csv somewher, then import back. Set 2 will work.\r\n\r\n#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\r\n\r\n# SET 1: Non-functional This set of chunk will NOT work\r\n\r\n## Importing initial dataset: Change to where all_merged_conflict is located\r\n\r\nall_merged_conflict <- read_csv(paste0(currentpath, \"all_merged_conflict.csv\"))\r\n\r\n#Downloading Polity scores and creating democracy indicators\r\n## Downloading and selecting polity scores\r\n\r\npolity <- psData::PolityGet(\"http://www.systemicpeace.org/inscr/p5v2018.sav\", \r\n                            vars = NULL,\r\n                            OutCountryID = \"iso3c\",\r\n                            standardCountryName = FALSE,\r\n                            na.rm = TRUE, \r\n                            duplicates = \"message\") %>% \r\n  dplyr::select(iso3c, p5, year, fragment, democ, autoc, polity, polity2, durable) %>% \r\n  filter(year > 1998)\r\n\r\npolity_dem_indicator <- polity %>% \r\n  filter( polity2 >= -10 & polity2 <= 10) %>% \r\n  mutate(polity_democracy = case_when(polity2 >= 6 ~ 1,\r\n                                      polity2 < 6 ~ 0),\r\n         polity_autocracy = case_when(polity2 <= -6 ~ 1,\r\n                                      polity2 > -6 ~ 0),\r\n         polity_anoncracy = case_when(polity2 < 6 & polity2 > -6 ~ 1,\r\n                                      polity2 >= 6 | polity2 <= -6 ~ 0),\r\n         polity_norm = (polity2 + 10)/20)\r\n\r\n## Merging with all_merged data & creating country codes numeric equivalents\r\n\r\nall_merged_conflict <- all_merged_conflict %>% \r\n  mutate(all_merged_conflict_flag = 1)\r\n\r\nall_merged_polity <- left_join(all_merged_conflict, polity_dem_indicator, by = c(\"iso3c\", \"year\")) %>%\r\n  group_by(iso3c) %>% \r\n  mutate(iso3c_r = cur_group_id()) %>% ## iso3c_r is ID for country in form of an integer (has no real connection to other numeric codes) \r\n  ungroup() %>% \r\n  mutate(iso3c_n = countrycode(iso3c, \"iso3c\", \"iso3n\", warn = TRUE, nomatch = NA),\r\n         year = as.integer(year)) %>% ## iso3c_n is the official iso3 numeric equivalent\r\n  relocate(c(\"iso3c_n\", \"iso3c_r\"), .after = iso3c) \r\n\r\n## Checking for uniqueness by year and country\r\n\r\nrule_polity <- validator(is_unique(iso3c_r, year))\r\nout_polity <- confront(all_merged_polity, rule_polity)\r\nsummary(out_polity)[1:7]\r\nviolating(all_merged_polity, out_polity)\r\n\r\n# Sudan is repeated twice for some unknown reason (almost all column values are equal)\r\n# Fix: randomly drop either Sudan 2011\r\nall_merged_polity$randval <- runif(nrow(all_merged_polity))\r\nall_merged_polity <- arrange(all_merged_polity,iso3c_n, year,randval) #%>% filter(!is.na(polity2))\r\nall_merged_polity <- all_merged_polity %>% \r\n  group_by(iso3c, year) %>% \r\n  top_n(n = 1) %>% \r\n  ungroup() %>% \r\n  filter(!is.na(iso3c_n) & !is.na(year))\r\n\r\n### PanelMatch estimator\r\n#### DisplayTreatment: FAIL\r\nDisplayTreatment(unit.id = \"iso3c_n\",\r\n                 time.id = \"year\", legend.position = \"none\",\r\n                 xlab = \"year\", ylab = \"Country Code\",\r\n                 treatment = \"polity_democracy\", data = all_merged_polity)\r\n\r\n#### PanelMatch: FAIL\r\npoli_dem_match <- all_merged_polity %>% \r\n  PanelMatch::PanelMatch(lag = 3, \r\n                         unit.id = \"iso3c_n\",\r\n                         time.id = \"year\",\r\n                         treatment = \"polity_democracy\",\r\n                         refinement.method = \"ps.match\",\r\n                         match.missing = TRUE, \r\n                         covs.formula = ~GDP_per_capita_current_US_dollar + GDP_per_capita_current_US_dollar2\r\n                         + GDP_per_capita_growth + trade_per_gdp + population_density + military_conflict, \r\n                         size.match = 5, \r\n                         qoi = \"att\", \r\n                         outcome.var = \"tree_cover_loss_value\",\r\n                         lead = 0:10, \r\n                         forbid.treatment.reversal = FALSE)\r\n\r\n#### Confirmation: it is not about the variable type\r\nclass(all_merged_polity$iso3c_n)\r\ntypeof(all_merged_polity$iso3c_n)\r\n\r\n#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\r\n# SET 2: \r\n## Exporting the CSV\r\nwrite_csv(all_merged_polity, paste0(currentpath, \"all_merged_polity_err.csv\"))\r\n\r\n\r\n## Importing the CSV\r\nall_merged_polity_new <- read.csv(paste0(currentpath, \"all_merged_polity_err.csv\"))\r\n\r\n### PanelMatch estimator\r\n#### DisplayTreatment\r\nDisplayTreatment(unit.id = \"iso3c_n\",\r\n                 time.id = \"year\", legend.position = \"none\",\r\n                 xlab = \"year\", ylab = \"Country Code\",\r\n                 treatment = \"polity_democracy\", data = all_merged_polity_new)\r\n\r\n\r\n\r\n#### PanelMatch\r\npoli_dem_match <- all_merged_polity_new %>% \r\n  PanelMatch::PanelMatch(lag = 3, \r\n                         unit.id = \"iso3c_n\",\r\n                         time.id = \"year\",\r\n                         treatment = \"polity_democracy\",\r\n                         refinement.method = \"ps.match\",\r\n                         match.missing = TRUE, \r\n                         covs.formula = ~GDP_per_capita_current_US_dollar + GDP_per_capita_current_US_dollar2\r\n                         + GDP_per_capita_growth + trade_per_gdp + population_density + military_conflict, \r\n                         size.match = 5, \r\n                         qoi = \"att\", \r\n                         outcome.var = \"tree_cover_loss_value\",\r\n                         lead = 0:10, \r\n                         forbid.treatment.reversal = FALSE)\r\n\r\npoli_dem_fe <- PanelEstimate(sets = poli_dem_match, all_merged_polity_new)\r\n\r\nsummary(poli_dem_fe)\r\n\r\nplot(poli_dem_fe)\r\n\r\n```\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/insongkim/PanelMatch/issues/111/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/111/timeline",
                "performed_via_github_app": null,
                "state_reason": "completed"
            }
        },
        "public": true,
        "created_at": "2022-11-07T16:10:38Z"
    },
    {
        "id": "25017157681",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 990177,
            "login": "adamrauh",
            "display_login": "adamrauh",
            "gravatar_id": "",
            "url": "https://api.github.com/users/adamrauh",
            "avatar_url": "https://avatars.githubusercontent.com/u/990177?"
        },
        "repo": {
            "id": 124099147,
            "name": "insongkim/PanelMatch",
            "url": "https://api.github.com/repos/insongkim/PanelMatch"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/insongkim/PanelMatch/issues/111",
                "repository_url": "https://api.github.com/repos/insongkim/PanelMatch",
                "labels_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/111/labels{/name}",
                "comments_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/111/comments",
                "events_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/111/events",
                "html_url": "https://github.com/insongkim/PanelMatch/issues/111",
                "id": 1411953388,
                "node_id": "I_kwDOB2WaS85UKLLs",
                "number": 111,
                "title": "Issue with R manipulated/ modified datasets vs newly imported",
                "user": {
                    "login": "HanjaNirina",
                    "id": 26062621,
                    "node_id": "MDQ6VXNlcjI2MDYyNjIx",
                    "avatar_url": "https://avatars.githubusercontent.com/u/26062621?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/HanjaNirina",
                    "html_url": "https://github.com/HanjaNirina",
                    "followers_url": "https://api.github.com/users/HanjaNirina/followers",
                    "following_url": "https://api.github.com/users/HanjaNirina/following{/other_user}",
                    "gists_url": "https://api.github.com/users/HanjaNirina/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/HanjaNirina/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/HanjaNirina/subscriptions",
                    "organizations_url": "https://api.github.com/users/HanjaNirina/orgs",
                    "repos_url": "https://api.github.com/users/HanjaNirina/repos",
                    "events_url": "https://api.github.com/users/HanjaNirina/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/HanjaNirina/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 2,
                "created_at": "2022-10-17T17:33:06Z",
                "updated_at": "2022-11-03T19:55:33Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "Hi,\r\nI recently encountered an error that I couldn't understand but found a workaround for it. I constructed a dataset from existing CSV and online downloads through packages on R. It's a country-year panel dataset [all_merged_conflict.csv](https://github.com/insongkim/PanelMatch/files/9790459/all_merged_conflict.csv). \r\n\r\n1. I ran DisplayTreatment and got this error: \r\n```\r\nError in DisplayTreatment(unit.id = \"iso3c_n\", time.id = \"year\", legend.position = \"none\",  : \r\n  please convert time id to consecutive integers\r\n```\r\nI did not understand at all why this would occur as my year variable is set correctly as an integer and consecutive. So at first I gave up and simply used another package for this purpose. \r\n\r\n2. I ran PanelMatch and I got this error: \r\n```\r\nError in panel_match(lag, time.id, unit.id, treatment, refinement.method,  : \r\n  please convert unit id column to integer or numeric\r\n```\r\n\r\nI checked and checked again, and even changed the type from double to integer (just like wbcode2 is the dem data) but the unit id is numeric (Tried with as.integer() too but no luck).\r\n\r\nHowever in the process of creating sample data and code snippets. The functions worked with the same exact data but newly imported from a CSV file. I don't know what's causing this but the code I used to recreate this problem is as below. \r\n\r\nHoping you can figure out the issue for your next release. Thank you for a great package.\r\n\r\n```\r\n#NOTE:\r\n# 1. uncomment Package installation chunk if running for 1st time\r\n# 2. change location accordingly\r\n\r\n# Package Installation\r\ndevtools::install_github(\"insongkim/PanelMatch\", ref = \"development\")\r\n\r\n#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\r\n# Package Loading\r\n\r\n## pacman will apply library() to specified package or install first if needed\r\n\r\nif (!require(\"pacman\")) install.packages(\"pacman\")\r\npacman::p_load(\r\n  reshape, \r\n  dplyr,\r\n  tidyverse,\r\n  countrycode,\r\n  car, \r\n  psData,\r\n  validate\r\n)\r\n\r\nlibrary(PanelMatch)\r\n\r\n# Location of/ folder containing files\r\n# 1. Create your personal path to where folder is located on your machine \r\n# 2. Change currentpath to that personalized path\r\n\r\nnirinapath <- \"~/Dropbox (Princeton)/02Projects/KR - New Paper/\"\r\n#yourpath <- \r\ncurrentpath <- nirinapath\r\n\r\n#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\r\n\r\n# This section will present differents sets of code chunks:\r\n#   \r\n# 1. They will create the same exact dataset (as far as the R user is concerned)\r\n# 2. Set 1 will create the dataset by merging an older dataset with newer variables we would like. Set 1 will output errors.\r\n# 3. Set 2 will export the dataset as it is from set 1 to a csv somewher, then import back. Set 2 will work.\r\n\r\n#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\r\n\r\n# SET 1: Non-functional This set of chunk will NOT work\r\n\r\n## Importing initial dataset: Change to where all_merged_conflict is located\r\n\r\nall_merged_conflict <- read_csv(paste0(currentpath, \"all_merged_conflict.csv\"))\r\n\r\n#Downloading Polity scores and creating democracy indicators\r\n## Downloading and selecting polity scores\r\n\r\npolity <- psData::PolityGet(\"http://www.systemicpeace.org/inscr/p5v2018.sav\", \r\n                            vars = NULL,\r\n                            OutCountryID = \"iso3c\",\r\n                            standardCountryName = FALSE,\r\n                            na.rm = TRUE, \r\n                            duplicates = \"message\") %>% \r\n  dplyr::select(iso3c, p5, year, fragment, democ, autoc, polity, polity2, durable) %>% \r\n  filter(year > 1998)\r\n\r\npolity_dem_indicator <- polity %>% \r\n  filter( polity2 >= -10 & polity2 <= 10) %>% \r\n  mutate(polity_democracy = case_when(polity2 >= 6 ~ 1,\r\n                                      polity2 < 6 ~ 0),\r\n         polity_autocracy = case_when(polity2 <= -6 ~ 1,\r\n                                      polity2 > -6 ~ 0),\r\n         polity_anoncracy = case_when(polity2 < 6 & polity2 > -6 ~ 1,\r\n                                      polity2 >= 6 | polity2 <= -6 ~ 0),\r\n         polity_norm = (polity2 + 10)/20)\r\n\r\n## Merging with all_merged data & creating country codes numeric equivalents\r\n\r\nall_merged_conflict <- all_merged_conflict %>% \r\n  mutate(all_merged_conflict_flag = 1)\r\n\r\nall_merged_polity <- left_join(all_merged_conflict, polity_dem_indicator, by = c(\"iso3c\", \"year\")) %>%\r\n  group_by(iso3c) %>% \r\n  mutate(iso3c_r = cur_group_id()) %>% ## iso3c_r is ID for country in form of an integer (has no real connection to other numeric codes) \r\n  ungroup() %>% \r\n  mutate(iso3c_n = countrycode(iso3c, \"iso3c\", \"iso3n\", warn = TRUE, nomatch = NA),\r\n         year = as.integer(year)) %>% ## iso3c_n is the official iso3 numeric equivalent\r\n  relocate(c(\"iso3c_n\", \"iso3c_r\"), .after = iso3c) \r\n\r\n## Checking for uniqueness by year and country\r\n\r\nrule_polity <- validator(is_unique(iso3c_r, year))\r\nout_polity <- confront(all_merged_polity, rule_polity)\r\nsummary(out_polity)[1:7]\r\nviolating(all_merged_polity, out_polity)\r\n\r\n# Sudan is repeated twice for some unknown reason (almost all column values are equal)\r\n# Fix: randomly drop either Sudan 2011\r\nall_merged_polity$randval <- runif(nrow(all_merged_polity))\r\nall_merged_polity <- arrange(all_merged_polity,iso3c_n, year,randval) #%>% filter(!is.na(polity2))\r\nall_merged_polity <- all_merged_polity %>% \r\n  group_by(iso3c, year) %>% \r\n  top_n(n = 1) %>% \r\n  ungroup() %>% \r\n  filter(!is.na(iso3c_n) & !is.na(year))\r\n\r\n### PanelMatch estimator\r\n#### DisplayTreatment: FAIL\r\nDisplayTreatment(unit.id = \"iso3c_n\",\r\n                 time.id = \"year\", legend.position = \"none\",\r\n                 xlab = \"year\", ylab = \"Country Code\",\r\n                 treatment = \"polity_democracy\", data = all_merged_polity)\r\n\r\n#### PanelMatch: FAIL\r\npoli_dem_match <- all_merged_polity %>% \r\n  PanelMatch::PanelMatch(lag = 3, \r\n                         unit.id = \"iso3c_n\",\r\n                         time.id = \"year\",\r\n                         treatment = \"polity_democracy\",\r\n                         refinement.method = \"ps.match\",\r\n                         match.missing = TRUE, \r\n                         covs.formula = ~GDP_per_capita_current_US_dollar + GDP_per_capita_current_US_dollar2\r\n                         + GDP_per_capita_growth + trade_per_gdp + population_density + military_conflict, \r\n                         size.match = 5, \r\n                         qoi = \"att\", \r\n                         outcome.var = \"tree_cover_loss_value\",\r\n                         lead = 0:10, \r\n                         forbid.treatment.reversal = FALSE)\r\n\r\n#### Confirmation: it is not about the variable type\r\nclass(all_merged_polity$iso3c_n)\r\ntypeof(all_merged_polity$iso3c_n)\r\n\r\n#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\r\n# SET 2: \r\n## Exporting the CSV\r\nwrite_csv(all_merged_polity, paste0(currentpath, \"all_merged_polity_err.csv\"))\r\n\r\n\r\n## Importing the CSV\r\nall_merged_polity_new <- read.csv(paste0(currentpath, \"all_merged_polity_err.csv\"))\r\n\r\n### PanelMatch estimator\r\n#### DisplayTreatment\r\nDisplayTreatment(unit.id = \"iso3c_n\",\r\n                 time.id = \"year\", legend.position = \"none\",\r\n                 xlab = \"year\", ylab = \"Country Code\",\r\n                 treatment = \"polity_democracy\", data = all_merged_polity_new)\r\n\r\n\r\n\r\n#### PanelMatch\r\npoli_dem_match <- all_merged_polity_new %>% \r\n  PanelMatch::PanelMatch(lag = 3, \r\n                         unit.id = \"iso3c_n\",\r\n                         time.id = \"year\",\r\n                         treatment = \"polity_democracy\",\r\n                         refinement.method = \"ps.match\",\r\n                         match.missing = TRUE, \r\n                         covs.formula = ~GDP_per_capita_current_US_dollar + GDP_per_capita_current_US_dollar2\r\n                         + GDP_per_capita_growth + trade_per_gdp + population_density + military_conflict, \r\n                         size.match = 5, \r\n                         qoi = \"att\", \r\n                         outcome.var = \"tree_cover_loss_value\",\r\n                         lead = 0:10, \r\n                         forbid.treatment.reversal = FALSE)\r\n\r\npoli_dem_fe <- PanelEstimate(sets = poli_dem_match, all_merged_polity_new)\r\n\r\nsummary(poli_dem_fe)\r\n\r\nplot(poli_dem_fe)\r\n\r\n```\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/insongkim/PanelMatch/issues/111/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/111/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/insongkim/PanelMatch/issues/comments/1302597269",
                "html_url": "https://github.com/insongkim/PanelMatch/issues/111#issuecomment-1302597269",
                "issue_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/111",
                "id": 1302597269,
                "node_id": "IC_kwDOB2WaS85NpA6V",
                "user": {
                    "login": "adamrauh",
                    "id": 990177,
                    "node_id": "MDQ6VXNlcjk5MDE3Nw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/990177?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/adamrauh",
                    "html_url": "https://github.com/adamrauh",
                    "followers_url": "https://api.github.com/users/adamrauh/followers",
                    "following_url": "https://api.github.com/users/adamrauh/following{/other_user}",
                    "gists_url": "https://api.github.com/users/adamrauh/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/adamrauh/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/adamrauh/subscriptions",
                    "organizations_url": "https://api.github.com/users/adamrauh/orgs",
                    "repos_url": "https://api.github.com/users/adamrauh/repos",
                    "events_url": "https://api.github.com/users/adamrauh/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/adamrauh/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2022-11-03T19:55:33Z",
                "updated_at": "2022-11-03T19:55:33Z",
                "author_association": "COLLABORATOR",
                "body": "> I experienced the same issue. However there is a simpler solution than saving and re-importing. What I have experienced it only accepts base `data.frame` object as input for data, thus if you convert your data with `as.data.frame(mydata)`, then it works.\r\n\r\nThanks for posting this! This should be right. We will add an update to provide better warnings/errors about this.",
                "reactions": {
                    "url": "https://api.github.com/repos/insongkim/PanelMatch/issues/comments/1302597269/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2022-11-03T19:55:33Z"
    }
]
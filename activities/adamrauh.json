[
    {
        "id": "25017157681",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 990177,
            "login": "adamrauh",
            "display_login": "adamrauh",
            "gravatar_id": "",
            "url": "https://api.github.com/users/adamrauh",
            "avatar_url": "https://avatars.githubusercontent.com/u/990177?"
        },
        "repo": {
            "id": 124099147,
            "name": "insongkim/PanelMatch",
            "url": "https://api.github.com/repos/insongkim/PanelMatch"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/insongkim/PanelMatch/issues/111",
                "repository_url": "https://api.github.com/repos/insongkim/PanelMatch",
                "labels_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/111/labels{/name}",
                "comments_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/111/comments",
                "events_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/111/events",
                "html_url": "https://github.com/insongkim/PanelMatch/issues/111",
                "id": 1411953388,
                "node_id": "I_kwDOB2WaS85UKLLs",
                "number": 111,
                "title": "Issue with R manipulated/ modified datasets vs newly imported",
                "user": {
                    "login": "HanjaNirina",
                    "id": 26062621,
                    "node_id": "MDQ6VXNlcjI2MDYyNjIx",
                    "avatar_url": "https://avatars.githubusercontent.com/u/26062621?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/HanjaNirina",
                    "html_url": "https://github.com/HanjaNirina",
                    "followers_url": "https://api.github.com/users/HanjaNirina/followers",
                    "following_url": "https://api.github.com/users/HanjaNirina/following{/other_user}",
                    "gists_url": "https://api.github.com/users/HanjaNirina/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/HanjaNirina/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/HanjaNirina/subscriptions",
                    "organizations_url": "https://api.github.com/users/HanjaNirina/orgs",
                    "repos_url": "https://api.github.com/users/HanjaNirina/repos",
                    "events_url": "https://api.github.com/users/HanjaNirina/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/HanjaNirina/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 2,
                "created_at": "2022-10-17T17:33:06Z",
                "updated_at": "2022-11-03T19:55:33Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "Hi,\r\nI recently encountered an error that I couldn't understand but found a workaround for it. I constructed a dataset from existing CSV and online downloads through packages on R. It's a country-year panel dataset [all_merged_conflict.csv](https://github.com/insongkim/PanelMatch/files/9790459/all_merged_conflict.csv). \r\n\r\n1. I ran DisplayTreatment and got this error: \r\n```\r\nError in DisplayTreatment(unit.id = \"iso3c_n\", time.id = \"year\", legend.position = \"none\",  : \r\n  please convert time id to consecutive integers\r\n```\r\nI did not understand at all why this would occur as my year variable is set correctly as an integer and consecutive. So at first I gave up and simply used another package for this purpose. \r\n\r\n2. I ran PanelMatch and I got this error: \r\n```\r\nError in panel_match(lag, time.id, unit.id, treatment, refinement.method,  : \r\n  please convert unit id column to integer or numeric\r\n```\r\n\r\nI checked and checked again, and even changed the type from double to integer (just like wbcode2 is the dem data) but the unit id is numeric (Tried with as.integer() too but no luck).\r\n\r\nHowever in the process of creating sample data and code snippets. The functions worked with the same exact data but newly imported from a CSV file. I don't know what's causing this but the code I used to recreate this problem is as below. \r\n\r\nHoping you can figure out the issue for your next release. Thank you for a great package.\r\n\r\n```\r\n#NOTE:\r\n# 1. uncomment Package installation chunk if running for 1st time\r\n# 2. change location accordingly\r\n\r\n# Package Installation\r\ndevtools::install_github(\"insongkim/PanelMatch\", ref = \"development\")\r\n\r\n#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\r\n# Package Loading\r\n\r\n## pacman will apply library() to specified package or install first if needed\r\n\r\nif (!require(\"pacman\")) install.packages(\"pacman\")\r\npacman::p_load(\r\n  reshape, \r\n  dplyr,\r\n  tidyverse,\r\n  countrycode,\r\n  car, \r\n  psData,\r\n  validate\r\n)\r\n\r\nlibrary(PanelMatch)\r\n\r\n# Location of/ folder containing files\r\n# 1. Create your personal path to where folder is located on your machine \r\n# 2. Change currentpath to that personalized path\r\n\r\nnirinapath <- \"~/Dropbox (Princeton)/02Projects/KR - New Paper/\"\r\n#yourpath <- \r\ncurrentpath <- nirinapath\r\n\r\n#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\r\n\r\n# This section will present differents sets of code chunks:\r\n#   \r\n# 1. They will create the same exact dataset (as far as the R user is concerned)\r\n# 2. Set 1 will create the dataset by merging an older dataset with newer variables we would like. Set 1 will output errors.\r\n# 3. Set 2 will export the dataset as it is from set 1 to a csv somewher, then import back. Set 2 will work.\r\n\r\n#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\r\n\r\n# SET 1: Non-functional This set of chunk will NOT work\r\n\r\n## Importing initial dataset: Change to where all_merged_conflict is located\r\n\r\nall_merged_conflict <- read_csv(paste0(currentpath, \"all_merged_conflict.csv\"))\r\n\r\n#Downloading Polity scores and creating democracy indicators\r\n## Downloading and selecting polity scores\r\n\r\npolity <- psData::PolityGet(\"http://www.systemicpeace.org/inscr/p5v2018.sav\", \r\n                            vars = NULL,\r\n                            OutCountryID = \"iso3c\",\r\n                            standardCountryName = FALSE,\r\n                            na.rm = TRUE, \r\n                            duplicates = \"message\") %>% \r\n  dplyr::select(iso3c, p5, year, fragment, democ, autoc, polity, polity2, durable) %>% \r\n  filter(year > 1998)\r\n\r\npolity_dem_indicator <- polity %>% \r\n  filter( polity2 >= -10 & polity2 <= 10) %>% \r\n  mutate(polity_democracy = case_when(polity2 >= 6 ~ 1,\r\n                                      polity2 < 6 ~ 0),\r\n         polity_autocracy = case_when(polity2 <= -6 ~ 1,\r\n                                      polity2 > -6 ~ 0),\r\n         polity_anoncracy = case_when(polity2 < 6 & polity2 > -6 ~ 1,\r\n                                      polity2 >= 6 | polity2 <= -6 ~ 0),\r\n         polity_norm = (polity2 + 10)/20)\r\n\r\n## Merging with all_merged data & creating country codes numeric equivalents\r\n\r\nall_merged_conflict <- all_merged_conflict %>% \r\n  mutate(all_merged_conflict_flag = 1)\r\n\r\nall_merged_polity <- left_join(all_merged_conflict, polity_dem_indicator, by = c(\"iso3c\", \"year\")) %>%\r\n  group_by(iso3c) %>% \r\n  mutate(iso3c_r = cur_group_id()) %>% ## iso3c_r is ID for country in form of an integer (has no real connection to other numeric codes) \r\n  ungroup() %>% \r\n  mutate(iso3c_n = countrycode(iso3c, \"iso3c\", \"iso3n\", warn = TRUE, nomatch = NA),\r\n         year = as.integer(year)) %>% ## iso3c_n is the official iso3 numeric equivalent\r\n  relocate(c(\"iso3c_n\", \"iso3c_r\"), .after = iso3c) \r\n\r\n## Checking for uniqueness by year and country\r\n\r\nrule_polity <- validator(is_unique(iso3c_r, year))\r\nout_polity <- confront(all_merged_polity, rule_polity)\r\nsummary(out_polity)[1:7]\r\nviolating(all_merged_polity, out_polity)\r\n\r\n# Sudan is repeated twice for some unknown reason (almost all column values are equal)\r\n# Fix: randomly drop either Sudan 2011\r\nall_merged_polity$randval <- runif(nrow(all_merged_polity))\r\nall_merged_polity <- arrange(all_merged_polity,iso3c_n, year,randval) #%>% filter(!is.na(polity2))\r\nall_merged_polity <- all_merged_polity %>% \r\n  group_by(iso3c, year) %>% \r\n  top_n(n = 1) %>% \r\n  ungroup() %>% \r\n  filter(!is.na(iso3c_n) & !is.na(year))\r\n\r\n### PanelMatch estimator\r\n#### DisplayTreatment: FAIL\r\nDisplayTreatment(unit.id = \"iso3c_n\",\r\n                 time.id = \"year\", legend.position = \"none\",\r\n                 xlab = \"year\", ylab = \"Country Code\",\r\n                 treatment = \"polity_democracy\", data = all_merged_polity)\r\n\r\n#### PanelMatch: FAIL\r\npoli_dem_match <- all_merged_polity %>% \r\n  PanelMatch::PanelMatch(lag = 3, \r\n                         unit.id = \"iso3c_n\",\r\n                         time.id = \"year\",\r\n                         treatment = \"polity_democracy\",\r\n                         refinement.method = \"ps.match\",\r\n                         match.missing = TRUE, \r\n                         covs.formula = ~GDP_per_capita_current_US_dollar + GDP_per_capita_current_US_dollar2\r\n                         + GDP_per_capita_growth + trade_per_gdp + population_density + military_conflict, \r\n                         size.match = 5, \r\n                         qoi = \"att\", \r\n                         outcome.var = \"tree_cover_loss_value\",\r\n                         lead = 0:10, \r\n                         forbid.treatment.reversal = FALSE)\r\n\r\n#### Confirmation: it is not about the variable type\r\nclass(all_merged_polity$iso3c_n)\r\ntypeof(all_merged_polity$iso3c_n)\r\n\r\n#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\r\n# SET 2: \r\n## Exporting the CSV\r\nwrite_csv(all_merged_polity, paste0(currentpath, \"all_merged_polity_err.csv\"))\r\n\r\n\r\n## Importing the CSV\r\nall_merged_polity_new <- read.csv(paste0(currentpath, \"all_merged_polity_err.csv\"))\r\n\r\n### PanelMatch estimator\r\n#### DisplayTreatment\r\nDisplayTreatment(unit.id = \"iso3c_n\",\r\n                 time.id = \"year\", legend.position = \"none\",\r\n                 xlab = \"year\", ylab = \"Country Code\",\r\n                 treatment = \"polity_democracy\", data = all_merged_polity_new)\r\n\r\n\r\n\r\n#### PanelMatch\r\npoli_dem_match <- all_merged_polity_new %>% \r\n  PanelMatch::PanelMatch(lag = 3, \r\n                         unit.id = \"iso3c_n\",\r\n                         time.id = \"year\",\r\n                         treatment = \"polity_democracy\",\r\n                         refinement.method = \"ps.match\",\r\n                         match.missing = TRUE, \r\n                         covs.formula = ~GDP_per_capita_current_US_dollar + GDP_per_capita_current_US_dollar2\r\n                         + GDP_per_capita_growth + trade_per_gdp + population_density + military_conflict, \r\n                         size.match = 5, \r\n                         qoi = \"att\", \r\n                         outcome.var = \"tree_cover_loss_value\",\r\n                         lead = 0:10, \r\n                         forbid.treatment.reversal = FALSE)\r\n\r\npoli_dem_fe <- PanelEstimate(sets = poli_dem_match, all_merged_polity_new)\r\n\r\nsummary(poli_dem_fe)\r\n\r\nplot(poli_dem_fe)\r\n\r\n```\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/insongkim/PanelMatch/issues/111/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/111/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/insongkim/PanelMatch/issues/comments/1302597269",
                "html_url": "https://github.com/insongkim/PanelMatch/issues/111#issuecomment-1302597269",
                "issue_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/111",
                "id": 1302597269,
                "node_id": "IC_kwDOB2WaS85NpA6V",
                "user": {
                    "login": "adamrauh",
                    "id": 990177,
                    "node_id": "MDQ6VXNlcjk5MDE3Nw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/990177?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/adamrauh",
                    "html_url": "https://github.com/adamrauh",
                    "followers_url": "https://api.github.com/users/adamrauh/followers",
                    "following_url": "https://api.github.com/users/adamrauh/following{/other_user}",
                    "gists_url": "https://api.github.com/users/adamrauh/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/adamrauh/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/adamrauh/subscriptions",
                    "organizations_url": "https://api.github.com/users/adamrauh/orgs",
                    "repos_url": "https://api.github.com/users/adamrauh/repos",
                    "events_url": "https://api.github.com/users/adamrauh/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/adamrauh/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2022-11-03T19:55:33Z",
                "updated_at": "2022-11-03T19:55:33Z",
                "author_association": "COLLABORATOR",
                "body": "> I experienced the same issue. However there is a simpler solution than saving and re-importing. What I have experienced it only accepts base `data.frame` object as input for data, thus if you convert your data with `as.data.frame(mydata)`, then it works.\r\n\r\nThanks for posting this! This should be right. We will add an update to provide better warnings/errors about this.",
                "reactions": {
                    "url": "https://api.github.com/repos/insongkim/PanelMatch/issues/comments/1302597269/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2022-11-03T19:55:33Z"
    },
    {
        "id": "23882991580",
        "type": "IssuesEvent",
        "actor": {
            "id": 990177,
            "login": "adamrauh",
            "display_login": "adamrauh",
            "gravatar_id": "",
            "url": "https://api.github.com/users/adamrauh",
            "avatar_url": "https://avatars.githubusercontent.com/u/990177?"
        },
        "repo": {
            "id": 124099147,
            "name": "insongkim/PanelMatch",
            "url": "https://api.github.com/repos/insongkim/PanelMatch"
        },
        "payload": {
            "action": "closed",
            "issue": {
                "url": "https://api.github.com/repos/insongkim/PanelMatch/issues/109",
                "repository_url": "https://api.github.com/repos/insongkim/PanelMatch",
                "labels_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/109/labels{/name}",
                "comments_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/109/comments",
                "events_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/109/events",
                "html_url": "https://github.com/insongkim/PanelMatch/issues/109",
                "id": 1361500345,
                "node_id": "I_kwDOB2WaS85RJti5",
                "number": 109,
                "title": "Change in the computation of bootstrapped SE?",
                "user": {
                    "login": "augustocerqua",
                    "id": 53040170,
                    "node_id": "MDQ6VXNlcjUzMDQwMTcw",
                    "avatar_url": "https://avatars.githubusercontent.com/u/53040170?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/augustocerqua",
                    "html_url": "https://github.com/augustocerqua",
                    "followers_url": "https://api.github.com/users/augustocerqua/followers",
                    "following_url": "https://api.github.com/users/augustocerqua/following{/other_user}",
                    "gists_url": "https://api.github.com/users/augustocerqua/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/augustocerqua/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/augustocerqua/subscriptions",
                    "organizations_url": "https://api.github.com/users/augustocerqua/orgs",
                    "repos_url": "https://api.github.com/users/augustocerqua/repos",
                    "events_url": "https://api.github.com/users/augustocerqua/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/augustocerqua/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "closed",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 4,
                "created_at": "2022-09-05T07:10:21Z",
                "updated_at": "2022-09-08T04:16:55Z",
                "closed_at": "2022-09-08T04:16:55Z",
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "Dear Authors,\r\n\r\nI have recently worked on a code I created last year using PanelMatch. After running the estimates, I noticed that the point estimates are the same as they used to be, while I noticed a steep increase in the standard errors (between +20 and +30%). As my code has not changed over the last year (Mahalanobis matching, with bootstrapped SE and 1,000 iterations), this might be due to the use of a novel version of R or, more likely, to some updates to PanelMatch/PanelEstimate. Is it possible you modified the way PanelEstimate computes bootstrapped standard errors over the last few months?\r\n\r\nMany thanks,\r\nAugusto Cerqua",
                "reactions": {
                    "url": "https://api.github.com/repos/insongkim/PanelMatch/issues/109/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/109/timeline",
                "performed_via_github_app": null,
                "state_reason": "completed"
            }
        },
        "public": true,
        "created_at": "2022-09-08T04:16:55Z"
    },
    {
        "id": "23853419712",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 990177,
            "login": "adamrauh",
            "display_login": "adamrauh",
            "gravatar_id": "",
            "url": "https://api.github.com/users/adamrauh",
            "avatar_url": "https://avatars.githubusercontent.com/u/990177?"
        },
        "repo": {
            "id": 124099147,
            "name": "insongkim/PanelMatch",
            "url": "https://api.github.com/repos/insongkim/PanelMatch"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/insongkim/PanelMatch/issues/109",
                "repository_url": "https://api.github.com/repos/insongkim/PanelMatch",
                "labels_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/109/labels{/name}",
                "comments_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/109/comments",
                "events_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/109/events",
                "html_url": "https://github.com/insongkim/PanelMatch/issues/109",
                "id": 1361500345,
                "node_id": "I_kwDOB2WaS85RJti5",
                "number": 109,
                "title": "Change in the computation of bootstrapped SE?",
                "user": {
                    "login": "augustocerqua",
                    "id": 53040170,
                    "node_id": "MDQ6VXNlcjUzMDQwMTcw",
                    "avatar_url": "https://avatars.githubusercontent.com/u/53040170?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/augustocerqua",
                    "html_url": "https://github.com/augustocerqua",
                    "followers_url": "https://api.github.com/users/augustocerqua/followers",
                    "following_url": "https://api.github.com/users/augustocerqua/following{/other_user}",
                    "gists_url": "https://api.github.com/users/augustocerqua/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/augustocerqua/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/augustocerqua/subscriptions",
                    "organizations_url": "https://api.github.com/users/augustocerqua/orgs",
                    "repos_url": "https://api.github.com/users/augustocerqua/repos",
                    "events_url": "https://api.github.com/users/augustocerqua/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/augustocerqua/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 2,
                "created_at": "2022-09-05T07:10:21Z",
                "updated_at": "2022-09-06T20:17:07Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "Dear Authors,\r\n\r\nI have recently worked on a code I created last year using PanelMatch. After running the estimates, I noticed that the point estimates are the same as they used to be, while I noticed a steep increase in the standard errors (between +20 and +30%). As my code has not changed over the last year (Mahalanobis matching, with bootstrapped SE and 1,000 iterations), this might be due to the use of a novel version of R or, more likely, to some updates to PanelMatch/PanelEstimate. Is it possible you modified the way PanelEstimate computes bootstrapped standard errors over the last few months?\r\n\r\nMany thanks,\r\nAugusto Cerqua",
                "reactions": {
                    "url": "https://api.github.com/repos/insongkim/PanelMatch/issues/109/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/109/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/insongkim/PanelMatch/issues/comments/1238607977",
                "html_url": "https://github.com/insongkim/PanelMatch/issues/109#issuecomment-1238607977",
                "issue_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/109",
                "id": 1238607977,
                "node_id": "IC_kwDOB2WaS85J06hp",
                "user": {
                    "login": "adamrauh",
                    "id": 990177,
                    "node_id": "MDQ6VXNlcjk5MDE3Nw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/990177?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/adamrauh",
                    "html_url": "https://github.com/adamrauh",
                    "followers_url": "https://api.github.com/users/adamrauh/followers",
                    "following_url": "https://api.github.com/users/adamrauh/following{/other_user}",
                    "gists_url": "https://api.github.com/users/adamrauh/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/adamrauh/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/adamrauh/subscriptions",
                    "organizations_url": "https://api.github.com/users/adamrauh/orgs",
                    "repos_url": "https://api.github.com/users/adamrauh/repos",
                    "events_url": "https://api.github.com/users/adamrauh/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/adamrauh/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2022-09-06T20:17:07Z",
                "updated_at": "2022-09-06T20:17:07Z",
                "author_association": "COLLABORATOR",
                "body": "The [paper](https://imai.fas.harvard.edu/research/files/tscs.pdf) goes over the various assumptions that each type makes (starting on page 11). So, there are no hard and fast rules, but the conditional standard errors will make a few extra assumptions, which may or may not be defensible in your particular application. \r\n\r\nAside from that, the analytical standard errors will be faster to compute. But, there are a few cases where we haven't implemented them yet, so the option is not available. ",
                "reactions": {
                    "url": "https://api.github.com/repos/insongkim/PanelMatch/issues/comments/1238607977/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2022-09-06T20:17:08Z"
    },
    {
        "id": "23829471370",
        "type": "IssuesEvent",
        "actor": {
            "id": 990177,
            "login": "adamrauh",
            "display_login": "adamrauh",
            "gravatar_id": "",
            "url": "https://api.github.com/users/adamrauh",
            "avatar_url": "https://avatars.githubusercontent.com/u/990177?"
        },
        "repo": {
            "id": 124099147,
            "name": "insongkim/PanelMatch",
            "url": "https://api.github.com/repos/insongkim/PanelMatch"
        },
        "payload": {
            "action": "opened",
            "issue": {
                "url": "https://api.github.com/repos/insongkim/PanelMatch/issues/110",
                "repository_url": "https://api.github.com/repos/insongkim/PanelMatch",
                "labels_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/110/labels{/name}",
                "comments_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/110/comments",
                "events_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/110/events",
                "html_url": "https://github.com/insongkim/PanelMatch/issues/110",
                "id": 1362369405,
                "node_id": "I_kwDOB2WaS85RNBt9",
                "number": 110,
                "title": "Possible bug related to placebo tests",
                "user": {
                    "login": "adamrauh",
                    "id": 990177,
                    "node_id": "MDQ6VXNlcjk5MDE3Nw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/990177?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/adamrauh",
                    "html_url": "https://github.com/adamrauh",
                    "followers_url": "https://api.github.com/users/adamrauh/followers",
                    "following_url": "https://api.github.com/users/adamrauh/following{/other_user}",
                    "gists_url": "https://api.github.com/users/adamrauh/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/adamrauh/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/adamrauh/subscriptions",
                    "organizations_url": "https://api.github.com/users/adamrauh/orgs",
                    "repos_url": "https://api.github.com/users/adamrauh/repos",
                    "events_url": "https://api.github.com/users/adamrauh/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/adamrauh/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 0,
                "created_at": "2022-09-05T18:31:45Z",
                "updated_at": "2022-09-05T18:31:45Z",
                "closed_at": null,
                "author_association": "COLLABORATOR",
                "active_lock_reason": null,
                "body": "A user reported a possible bug in that specifying  `plot = FALSE` to the placebo test function did not work properly, only returning point estimates and no standard errors.",
                "reactions": {
                    "url": "https://api.github.com/repos/insongkim/PanelMatch/issues/110/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/110/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            }
        },
        "public": true,
        "created_at": "2022-09-05T18:31:45Z"
    },
    {
        "id": "23828767831",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 990177,
            "login": "adamrauh",
            "display_login": "adamrauh",
            "gravatar_id": "",
            "url": "https://api.github.com/users/adamrauh",
            "avatar_url": "https://avatars.githubusercontent.com/u/990177?"
        },
        "repo": {
            "id": 124099147,
            "name": "insongkim/PanelMatch",
            "url": "https://api.github.com/repos/insongkim/PanelMatch"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/insongkim/PanelMatch/issues/109",
                "repository_url": "https://api.github.com/repos/insongkim/PanelMatch",
                "labels_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/109/labels{/name}",
                "comments_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/109/comments",
                "events_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/109/events",
                "html_url": "https://github.com/insongkim/PanelMatch/issues/109",
                "id": 1361500345,
                "node_id": "I_kwDOB2WaS85RJti5",
                "number": 109,
                "title": "Change in the computation of bootstrapped SE?",
                "user": {
                    "login": "augustocerqua",
                    "id": 53040170,
                    "node_id": "MDQ6VXNlcjUzMDQwMTcw",
                    "avatar_url": "https://avatars.githubusercontent.com/u/53040170?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/augustocerqua",
                    "html_url": "https://github.com/augustocerqua",
                    "followers_url": "https://api.github.com/users/augustocerqua/followers",
                    "following_url": "https://api.github.com/users/augustocerqua/following{/other_user}",
                    "gists_url": "https://api.github.com/users/augustocerqua/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/augustocerqua/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/augustocerqua/subscriptions",
                    "organizations_url": "https://api.github.com/users/augustocerqua/orgs",
                    "repos_url": "https://api.github.com/users/augustocerqua/repos",
                    "events_url": "https://api.github.com/users/augustocerqua/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/augustocerqua/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 1,
                "created_at": "2022-09-05T07:10:21Z",
                "updated_at": "2022-09-05T17:32:12Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "Dear Authors,\r\n\r\nI have recently worked on a code I created last year using PanelMatch. After running the estimates, I noticed that the point estimates are the same as they used to be, while I noticed a steep increase in the standard errors (between +20 and +30%). As my code has not changed over the last year (Mahalanobis matching, with bootstrapped SE and 1,000 iterations), this might be due to the use of a novel version of R or, more likely, to some updates to PanelMatch/PanelEstimate. Is it possible you modified the way PanelEstimate computes bootstrapped standard errors over the last few months?\r\n\r\nMany thanks,\r\nAugusto Cerqua",
                "reactions": {
                    "url": "https://api.github.com/repos/insongkim/PanelMatch/issues/109/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/109/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/insongkim/PanelMatch/issues/comments/1237333611",
                "html_url": "https://github.com/insongkim/PanelMatch/issues/109#issuecomment-1237333611",
                "issue_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/109",
                "id": 1237333611,
                "node_id": "IC_kwDOB2WaS85JwDZr",
                "user": {
                    "login": "adamrauh",
                    "id": 990177,
                    "node_id": "MDQ6VXNlcjk5MDE3Nw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/990177?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/adamrauh",
                    "html_url": "https://github.com/adamrauh",
                    "followers_url": "https://api.github.com/users/adamrauh/followers",
                    "following_url": "https://api.github.com/users/adamrauh/following{/other_user}",
                    "gists_url": "https://api.github.com/users/adamrauh/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/adamrauh/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/adamrauh/subscriptions",
                    "organizations_url": "https://api.github.com/users/adamrauh/orgs",
                    "repos_url": "https://api.github.com/users/adamrauh/repos",
                    "events_url": "https://api.github.com/users/adamrauh/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/adamrauh/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2022-09-05T17:32:12Z",
                "updated_at": "2022-09-05T17:32:12Z",
                "author_association": "COLLABORATOR",
                "body": "Hi Augusto, \r\n\r\nYes, we did make some updates to PanelEstimate a little while ago that would have exactly this kind of result. So, this seems like the most likely explanation. We did also add analytical standard errors in recent version of the package, which you may be interested in trying out as well.\r\n\r\nThanks for your continued use of the package. Let us know if you have other questions.\r\n-Adam",
                "reactions": {
                    "url": "https://api.github.com/repos/insongkim/PanelMatch/issues/comments/1237333611/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2022-09-05T17:32:12Z"
    },
    {
        "id": "23695462069",
        "type": "IssuesEvent",
        "actor": {
            "id": 990177,
            "login": "adamrauh",
            "display_login": "adamrauh",
            "gravatar_id": "",
            "url": "https://api.github.com/users/adamrauh",
            "avatar_url": "https://avatars.githubusercontent.com/u/990177?"
        },
        "repo": {
            "id": 124099147,
            "name": "insongkim/PanelMatch",
            "url": "https://api.github.com/repos/insongkim/PanelMatch"
        },
        "payload": {
            "action": "closed",
            "issue": {
                "url": "https://api.github.com/repos/insongkim/PanelMatch/issues/99",
                "repository_url": "https://api.github.com/repos/insongkim/PanelMatch",
                "labels_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/99/labels{/name}",
                "comments_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/99/comments",
                "events_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/99/events",
                "html_url": "https://github.com/insongkim/PanelMatch/issues/99",
                "id": 1170229061,
                "node_id": "I_kwDOB2WaS85FwEdF",
                "number": 99,
                "title": "Estimate the ATT over time ",
                "user": {
                    "login": "avishwanath28",
                    "id": 45737928,
                    "node_id": "MDQ6VXNlcjQ1NzM3OTI4",
                    "avatar_url": "https://avatars.githubusercontent.com/u/45737928?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/avishwanath28",
                    "html_url": "https://github.com/avishwanath28",
                    "followers_url": "https://api.github.com/users/avishwanath28/followers",
                    "following_url": "https://api.github.com/users/avishwanath28/following{/other_user}",
                    "gists_url": "https://api.github.com/users/avishwanath28/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/avishwanath28/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/avishwanath28/subscriptions",
                    "organizations_url": "https://api.github.com/users/avishwanath28/orgs",
                    "repos_url": "https://api.github.com/users/avishwanath28/repos",
                    "events_url": "https://api.github.com/users/avishwanath28/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/avishwanath28/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "closed",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 1,
                "created_at": "2022-03-15T20:41:14Z",
                "updated_at": "2022-08-29T14:19:07Z",
                "closed_at": "2022-08-29T14:19:07Z",
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "Right now, the package produces ATTs by treatment time (e.g., t+1, t+2). Is it possible to return a single estimate of the ATT pooled across treatment time? I imagine this would have to take into account a) differing number of treated units at different treatment times and b) within-unit covariance over time. ",
                "reactions": {
                    "url": "https://api.github.com/repos/insongkim/PanelMatch/issues/99/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/99/timeline",
                "performed_via_github_app": null,
                "state_reason": "completed"
            }
        },
        "public": true,
        "created_at": "2022-08-29T14:19:08Z"
    },
    {
        "id": "23695461898",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 990177,
            "login": "adamrauh",
            "display_login": "adamrauh",
            "gravatar_id": "",
            "url": "https://api.github.com/users/adamrauh",
            "avatar_url": "https://avatars.githubusercontent.com/u/990177?"
        },
        "repo": {
            "id": 124099147,
            "name": "insongkim/PanelMatch",
            "url": "https://api.github.com/repos/insongkim/PanelMatch"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/insongkim/PanelMatch/issues/99",
                "repository_url": "https://api.github.com/repos/insongkim/PanelMatch",
                "labels_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/99/labels{/name}",
                "comments_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/99/comments",
                "events_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/99/events",
                "html_url": "https://github.com/insongkim/PanelMatch/issues/99",
                "id": 1170229061,
                "node_id": "I_kwDOB2WaS85FwEdF",
                "number": 99,
                "title": "Estimate the ATT over time ",
                "user": {
                    "login": "avishwanath28",
                    "id": 45737928,
                    "node_id": "MDQ6VXNlcjQ1NzM3OTI4",
                    "avatar_url": "https://avatars.githubusercontent.com/u/45737928?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/avishwanath28",
                    "html_url": "https://github.com/avishwanath28",
                    "followers_url": "https://api.github.com/users/avishwanath28/followers",
                    "following_url": "https://api.github.com/users/avishwanath28/following{/other_user}",
                    "gists_url": "https://api.github.com/users/avishwanath28/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/avishwanath28/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/avishwanath28/subscriptions",
                    "organizations_url": "https://api.github.com/users/avishwanath28/orgs",
                    "repos_url": "https://api.github.com/users/avishwanath28/repos",
                    "events_url": "https://api.github.com/users/avishwanath28/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/avishwanath28/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "closed",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 1,
                "created_at": "2022-03-15T20:41:14Z",
                "updated_at": "2022-08-29T14:19:07Z",
                "closed_at": "2022-08-29T14:19:07Z",
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "Right now, the package produces ATTs by treatment time (e.g., t+1, t+2). Is it possible to return a single estimate of the ATT pooled across treatment time? I imagine this would have to take into account a) differing number of treated units at different treatment times and b) within-unit covariance over time. ",
                "reactions": {
                    "url": "https://api.github.com/repos/insongkim/PanelMatch/issues/99/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/99/timeline",
                "performed_via_github_app": null,
                "state_reason": "completed"
            },
            "comment": {
                "url": "https://api.github.com/repos/insongkim/PanelMatch/issues/comments/1230377554",
                "html_url": "https://github.com/insongkim/PanelMatch/issues/99#issuecomment-1230377554",
                "issue_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/99",
                "id": 1230377554,
                "node_id": "IC_kwDOB2WaS85JVhJS",
                "user": {
                    "login": "adamrauh",
                    "id": 990177,
                    "node_id": "MDQ6VXNlcjk5MDE3Nw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/990177?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/adamrauh",
                    "html_url": "https://github.com/adamrauh",
                    "followers_url": "https://api.github.com/users/adamrauh/followers",
                    "following_url": "https://api.github.com/users/adamrauh/following{/other_user}",
                    "gists_url": "https://api.github.com/users/adamrauh/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/adamrauh/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/adamrauh/subscriptions",
                    "organizations_url": "https://api.github.com/users/adamrauh/orgs",
                    "repos_url": "https://api.github.com/users/adamrauh/repos",
                    "events_url": "https://api.github.com/users/adamrauh/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/adamrauh/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2022-08-29T14:19:07Z",
                "updated_at": "2022-08-29T14:19:07Z",
                "author_association": "COLLABORATOR",
                "body": "(For future reference)\r\nimplemented in: b0a33710fafdfe3f723871d34b0b7eea25b1c38e",
                "reactions": {
                    "url": "https://api.github.com/repos/insongkim/PanelMatch/issues/comments/1230377554/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2022-08-29T14:19:07Z"
    },
    {
        "id": "23695400725",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 990177,
            "login": "adamrauh",
            "display_login": "adamrauh",
            "gravatar_id": "",
            "url": "https://api.github.com/users/adamrauh",
            "avatar_url": "https://avatars.githubusercontent.com/u/990177?"
        },
        "repo": {
            "id": 124099147,
            "name": "insongkim/PanelMatch",
            "url": "https://api.github.com/repos/insongkim/PanelMatch"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/insongkim/PanelMatch/issues/107",
                "repository_url": "https://api.github.com/repos/insongkim/PanelMatch",
                "labels_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/107/labels{/name}",
                "comments_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/107/comments",
                "events_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/107/events",
                "html_url": "https://github.com/insongkim/PanelMatch/issues/107",
                "id": 1353321865,
                "node_id": "I_kwDOB2WaS85Qqg2J",
                "number": 107,
                "title": "Data/ data frame",
                "user": {
                    "login": "eostrinidad",
                    "id": 67266504,
                    "node_id": "MDQ6VXNlcjY3MjY2NTA0",
                    "avatar_url": "https://avatars.githubusercontent.com/u/67266504?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/eostrinidad",
                    "html_url": "https://github.com/eostrinidad",
                    "followers_url": "https://api.github.com/users/eostrinidad/followers",
                    "following_url": "https://api.github.com/users/eostrinidad/following{/other_user}",
                    "gists_url": "https://api.github.com/users/eostrinidad/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/eostrinidad/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/eostrinidad/subscriptions",
                    "organizations_url": "https://api.github.com/users/eostrinidad/orgs",
                    "repos_url": "https://api.github.com/users/eostrinidad/repos",
                    "events_url": "https://api.github.com/users/eostrinidad/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/eostrinidad/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 1,
                "created_at": "2022-08-28T11:14:09Z",
                "updated_at": "2022-08-29T14:16:34Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "I get this message whenever I use PanelMatch:\r\n\r\nplease convert data to data.frame class\r\nIn addition: Warning message:\r\nIn if (class(data) != \"data.frame\") stop(\"please convert data to data.frame class\") :\r\n  the condition has length > 1 and only the first element will be used\r\n\r\nHowever, my data is already a data frame. Any advice for this? Thanks!",
                "reactions": {
                    "url": "https://api.github.com/repos/insongkim/PanelMatch/issues/107/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/107/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/insongkim/PanelMatch/issues/comments/1230373464",
                "html_url": "https://github.com/insongkim/PanelMatch/issues/107#issuecomment-1230373464",
                "issue_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/107",
                "id": 1230373464,
                "node_id": "IC_kwDOB2WaS85JVgJY",
                "user": {
                    "login": "adamrauh",
                    "id": 990177,
                    "node_id": "MDQ6VXNlcjk5MDE3Nw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/990177?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/adamrauh",
                    "html_url": "https://github.com/adamrauh",
                    "followers_url": "https://api.github.com/users/adamrauh/followers",
                    "following_url": "https://api.github.com/users/adamrauh/following{/other_user}",
                    "gists_url": "https://api.github.com/users/adamrauh/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/adamrauh/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/adamrauh/subscriptions",
                    "organizations_url": "https://api.github.com/users/adamrauh/orgs",
                    "repos_url": "https://api.github.com/users/adamrauh/repos",
                    "events_url": "https://api.github.com/users/adamrauh/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/adamrauh/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2022-08-29T14:16:34Z",
                "updated_at": "2022-08-29T14:16:34Z",
                "author_association": "COLLABORATOR",
                "body": "Hi @eostrinidad , thanks for using the package! \r\n\r\nIt is a bit hard to say, but have you tried explicitly setting the class of the data -- something like `class(data) <- \"data.frame\"`? This error seems to suggest that the data object being passed has more than one class associated with it.",
                "reactions": {
                    "url": "https://api.github.com/repos/insongkim/PanelMatch/issues/comments/1230373464/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2022-08-29T14:16:34Z"
    },
    {
        "id": "23432911224",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 990177,
            "login": "adamrauh",
            "display_login": "adamrauh",
            "gravatar_id": "",
            "url": "https://api.github.com/users/adamrauh",
            "avatar_url": "https://avatars.githubusercontent.com/u/990177?"
        },
        "repo": {
            "id": 124099147,
            "name": "insongkim/PanelMatch",
            "url": "https://api.github.com/repos/insongkim/PanelMatch"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/insongkim/PanelMatch/issues/106",
                "repository_url": "https://api.github.com/repos/insongkim/PanelMatch",
                "labels_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/106/labels{/name}",
                "comments_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/106/comments",
                "events_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/106/events",
                "html_url": "https://github.com/insongkim/PanelMatch/issues/106",
                "id": 1337754808,
                "node_id": "I_kwDOB2WaS85PvIS4",
                "number": 106,
                "title": "Handling different numbers of maximum lags in data",
                "user": {
                    "login": "emcghee73",
                    "id": 34285803,
                    "node_id": "MDQ6VXNlcjM0Mjg1ODAz",
                    "avatar_url": "https://avatars.githubusercontent.com/u/34285803?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/emcghee73",
                    "html_url": "https://github.com/emcghee73",
                    "followers_url": "https://api.github.com/users/emcghee73/followers",
                    "following_url": "https://api.github.com/users/emcghee73/following{/other_user}",
                    "gists_url": "https://api.github.com/users/emcghee73/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/emcghee73/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/emcghee73/subscriptions",
                    "organizations_url": "https://api.github.com/users/emcghee73/orgs",
                    "repos_url": "https://api.github.com/users/emcghee73/repos",
                    "events_url": "https://api.github.com/users/emcghee73/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/emcghee73/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 1,
                "created_at": "2022-08-12T22:31:21Z",
                "updated_at": "2022-08-15T06:10:00Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "What does PanelMatch do if some of the treated units have fewer total lags in the data than lags specified in PanelMatch?  For example, if I set PanelMatch to use 2 lags (both for the initial matched set and for refinement) but treated unit X only has one lag in the data, what does PanelMatch do?  Does it drop X?  Or does it attempt to match on one lag?",
                "reactions": {
                    "url": "https://api.github.com/repos/insongkim/PanelMatch/issues/106/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/106/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/insongkim/PanelMatch/issues/comments/1214652750",
                "html_url": "https://github.com/insongkim/PanelMatch/issues/106#issuecomment-1214652750",
                "issue_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/106",
                "id": 1214652750,
                "node_id": "IC_kwDOB2WaS85IZiFO",
                "user": {
                    "login": "adamrauh",
                    "id": 990177,
                    "node_id": "MDQ6VXNlcjk5MDE3Nw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/990177?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/adamrauh",
                    "html_url": "https://github.com/adamrauh",
                    "followers_url": "https://api.github.com/users/adamrauh/followers",
                    "following_url": "https://api.github.com/users/adamrauh/following{/other_user}",
                    "gists_url": "https://api.github.com/users/adamrauh/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/adamrauh/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/adamrauh/subscriptions",
                    "organizations_url": "https://api.github.com/users/adamrauh/orgs",
                    "repos_url": "https://api.github.com/users/adamrauh/repos",
                    "events_url": "https://api.github.com/users/adamrauh/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/adamrauh/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2022-08-15T06:10:00Z",
                "updated_at": "2022-08-15T06:10:00Z",
                "author_association": "COLLABORATOR",
                "body": "Hi @emcghee73 , thanks for using the package. I have a clarifying question. Are you talking about the case of one or more treated unit missing some treatment data in the lag window? ",
                "reactions": {
                    "url": "https://api.github.com/repos/insongkim/PanelMatch/issues/comments/1214652750/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2022-08-15T06:10:00Z"
    },
    {
        "id": "25017157681",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 990177,
            "login": "adamrauh",
            "display_login": "adamrauh",
            "gravatar_id": "",
            "url": "https://api.github.com/users/adamrauh",
            "avatar_url": "https://avatars.githubusercontent.com/u/990177?"
        },
        "repo": {
            "id": 124099147,
            "name": "insongkim/PanelMatch",
            "url": "https://api.github.com/repos/insongkim/PanelMatch"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/insongkim/PanelMatch/issues/111",
                "repository_url": "https://api.github.com/repos/insongkim/PanelMatch",
                "labels_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/111/labels{/name}",
                "comments_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/111/comments",
                "events_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/111/events",
                "html_url": "https://github.com/insongkim/PanelMatch/issues/111",
                "id": 1411953388,
                "node_id": "I_kwDOB2WaS85UKLLs",
                "number": 111,
                "title": "Issue with R manipulated/ modified datasets vs newly imported",
                "user": {
                    "login": "HanjaNirina",
                    "id": 26062621,
                    "node_id": "MDQ6VXNlcjI2MDYyNjIx",
                    "avatar_url": "https://avatars.githubusercontent.com/u/26062621?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/HanjaNirina",
                    "html_url": "https://github.com/HanjaNirina",
                    "followers_url": "https://api.github.com/users/HanjaNirina/followers",
                    "following_url": "https://api.github.com/users/HanjaNirina/following{/other_user}",
                    "gists_url": "https://api.github.com/users/HanjaNirina/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/HanjaNirina/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/HanjaNirina/subscriptions",
                    "organizations_url": "https://api.github.com/users/HanjaNirina/orgs",
                    "repos_url": "https://api.github.com/users/HanjaNirina/repos",
                    "events_url": "https://api.github.com/users/HanjaNirina/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/HanjaNirina/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 2,
                "created_at": "2022-10-17T17:33:06Z",
                "updated_at": "2022-11-03T19:55:33Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "Hi,\r\nI recently encountered an error that I couldn't understand but found a workaround for it. I constructed a dataset from existing CSV and online downloads through packages on R. It's a country-year panel dataset [all_merged_conflict.csv](https://github.com/insongkim/PanelMatch/files/9790459/all_merged_conflict.csv). \r\n\r\n1. I ran DisplayTreatment and got this error: \r\n```\r\nError in DisplayTreatment(unit.id = \"iso3c_n\", time.id = \"year\", legend.position = \"none\",  : \r\n  please convert time id to consecutive integers\r\n```\r\nI did not understand at all why this would occur as my year variable is set correctly as an integer and consecutive. So at first I gave up and simply used another package for this purpose. \r\n\r\n2. I ran PanelMatch and I got this error: \r\n```\r\nError in panel_match(lag, time.id, unit.id, treatment, refinement.method,  : \r\n  please convert unit id column to integer or numeric\r\n```\r\n\r\nI checked and checked again, and even changed the type from double to integer (just like wbcode2 is the dem data) but the unit id is numeric (Tried with as.integer() too but no luck).\r\n\r\nHowever in the process of creating sample data and code snippets. The functions worked with the same exact data but newly imported from a CSV file. I don't know what's causing this but the code I used to recreate this problem is as below. \r\n\r\nHoping you can figure out the issue for your next release. Thank you for a great package.\r\n\r\n```\r\n#NOTE:\r\n# 1. uncomment Package installation chunk if running for 1st time\r\n# 2. change location accordingly\r\n\r\n# Package Installation\r\ndevtools::install_github(\"insongkim/PanelMatch\", ref = \"development\")\r\n\r\n#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\r\n# Package Loading\r\n\r\n## pacman will apply library() to specified package or install first if needed\r\n\r\nif (!require(\"pacman\")) install.packages(\"pacman\")\r\npacman::p_load(\r\n  reshape, \r\n  dplyr,\r\n  tidyverse,\r\n  countrycode,\r\n  car, \r\n  psData,\r\n  validate\r\n)\r\n\r\nlibrary(PanelMatch)\r\n\r\n# Location of/ folder containing files\r\n# 1. Create your personal path to where folder is located on your machine \r\n# 2. Change currentpath to that personalized path\r\n\r\nnirinapath <- \"~/Dropbox (Princeton)/02Projects/KR - New Paper/\"\r\n#yourpath <- \r\ncurrentpath <- nirinapath\r\n\r\n#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\r\n\r\n# This section will present differents sets of code chunks:\r\n#   \r\n# 1. They will create the same exact dataset (as far as the R user is concerned)\r\n# 2. Set 1 will create the dataset by merging an older dataset with newer variables we would like. Set 1 will output errors.\r\n# 3. Set 2 will export the dataset as it is from set 1 to a csv somewher, then import back. Set 2 will work.\r\n\r\n#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\r\n\r\n# SET 1: Non-functional This set of chunk will NOT work\r\n\r\n## Importing initial dataset: Change to where all_merged_conflict is located\r\n\r\nall_merged_conflict <- read_csv(paste0(currentpath, \"all_merged_conflict.csv\"))\r\n\r\n#Downloading Polity scores and creating democracy indicators\r\n## Downloading and selecting polity scores\r\n\r\npolity <- psData::PolityGet(\"http://www.systemicpeace.org/inscr/p5v2018.sav\", \r\n                            vars = NULL,\r\n                            OutCountryID = \"iso3c\",\r\n                            standardCountryName = FALSE,\r\n                            na.rm = TRUE, \r\n                            duplicates = \"message\") %>% \r\n  dplyr::select(iso3c, p5, year, fragment, democ, autoc, polity, polity2, durable) %>% \r\n  filter(year > 1998)\r\n\r\npolity_dem_indicator <- polity %>% \r\n  filter( polity2 >= -10 & polity2 <= 10) %>% \r\n  mutate(polity_democracy = case_when(polity2 >= 6 ~ 1,\r\n                                      polity2 < 6 ~ 0),\r\n         polity_autocracy = case_when(polity2 <= -6 ~ 1,\r\n                                      polity2 > -6 ~ 0),\r\n         polity_anoncracy = case_when(polity2 < 6 & polity2 > -6 ~ 1,\r\n                                      polity2 >= 6 | polity2 <= -6 ~ 0),\r\n         polity_norm = (polity2 + 10)/20)\r\n\r\n## Merging with all_merged data & creating country codes numeric equivalents\r\n\r\nall_merged_conflict <- all_merged_conflict %>% \r\n  mutate(all_merged_conflict_flag = 1)\r\n\r\nall_merged_polity <- left_join(all_merged_conflict, polity_dem_indicator, by = c(\"iso3c\", \"year\")) %>%\r\n  group_by(iso3c) %>% \r\n  mutate(iso3c_r = cur_group_id()) %>% ## iso3c_r is ID for country in form of an integer (has no real connection to other numeric codes) \r\n  ungroup() %>% \r\n  mutate(iso3c_n = countrycode(iso3c, \"iso3c\", \"iso3n\", warn = TRUE, nomatch = NA),\r\n         year = as.integer(year)) %>% ## iso3c_n is the official iso3 numeric equivalent\r\n  relocate(c(\"iso3c_n\", \"iso3c_r\"), .after = iso3c) \r\n\r\n## Checking for uniqueness by year and country\r\n\r\nrule_polity <- validator(is_unique(iso3c_r, year))\r\nout_polity <- confront(all_merged_polity, rule_polity)\r\nsummary(out_polity)[1:7]\r\nviolating(all_merged_polity, out_polity)\r\n\r\n# Sudan is repeated twice for some unknown reason (almost all column values are equal)\r\n# Fix: randomly drop either Sudan 2011\r\nall_merged_polity$randval <- runif(nrow(all_merged_polity))\r\nall_merged_polity <- arrange(all_merged_polity,iso3c_n, year,randval) #%>% filter(!is.na(polity2))\r\nall_merged_polity <- all_merged_polity %>% \r\n  group_by(iso3c, year) %>% \r\n  top_n(n = 1) %>% \r\n  ungroup() %>% \r\n  filter(!is.na(iso3c_n) & !is.na(year))\r\n\r\n### PanelMatch estimator\r\n#### DisplayTreatment: FAIL\r\nDisplayTreatment(unit.id = \"iso3c_n\",\r\n                 time.id = \"year\", legend.position = \"none\",\r\n                 xlab = \"year\", ylab = \"Country Code\",\r\n                 treatment = \"polity_democracy\", data = all_merged_polity)\r\n\r\n#### PanelMatch: FAIL\r\npoli_dem_match <- all_merged_polity %>% \r\n  PanelMatch::PanelMatch(lag = 3, \r\n                         unit.id = \"iso3c_n\",\r\n                         time.id = \"year\",\r\n                         treatment = \"polity_democracy\",\r\n                         refinement.method = \"ps.match\",\r\n                         match.missing = TRUE, \r\n                         covs.formula = ~GDP_per_capita_current_US_dollar + GDP_per_capita_current_US_dollar2\r\n                         + GDP_per_capita_growth + trade_per_gdp + population_density + military_conflict, \r\n                         size.match = 5, \r\n                         qoi = \"att\", \r\n                         outcome.var = \"tree_cover_loss_value\",\r\n                         lead = 0:10, \r\n                         forbid.treatment.reversal = FALSE)\r\n\r\n#### Confirmation: it is not about the variable type\r\nclass(all_merged_polity$iso3c_n)\r\ntypeof(all_merged_polity$iso3c_n)\r\n\r\n#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\r\n# SET 2: \r\n## Exporting the CSV\r\nwrite_csv(all_merged_polity, paste0(currentpath, \"all_merged_polity_err.csv\"))\r\n\r\n\r\n## Importing the CSV\r\nall_merged_polity_new <- read.csv(paste0(currentpath, \"all_merged_polity_err.csv\"))\r\n\r\n### PanelMatch estimator\r\n#### DisplayTreatment\r\nDisplayTreatment(unit.id = \"iso3c_n\",\r\n                 time.id = \"year\", legend.position = \"none\",\r\n                 xlab = \"year\", ylab = \"Country Code\",\r\n                 treatment = \"polity_democracy\", data = all_merged_polity_new)\r\n\r\n\r\n\r\n#### PanelMatch\r\npoli_dem_match <- all_merged_polity_new %>% \r\n  PanelMatch::PanelMatch(lag = 3, \r\n                         unit.id = \"iso3c_n\",\r\n                         time.id = \"year\",\r\n                         treatment = \"polity_democracy\",\r\n                         refinement.method = \"ps.match\",\r\n                         match.missing = TRUE, \r\n                         covs.formula = ~GDP_per_capita_current_US_dollar + GDP_per_capita_current_US_dollar2\r\n                         + GDP_per_capita_growth + trade_per_gdp + population_density + military_conflict, \r\n                         size.match = 5, \r\n                         qoi = \"att\", \r\n                         outcome.var = \"tree_cover_loss_value\",\r\n                         lead = 0:10, \r\n                         forbid.treatment.reversal = FALSE)\r\n\r\npoli_dem_fe <- PanelEstimate(sets = poli_dem_match, all_merged_polity_new)\r\n\r\nsummary(poli_dem_fe)\r\n\r\nplot(poli_dem_fe)\r\n\r\n```\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/insongkim/PanelMatch/issues/111/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/111/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/insongkim/PanelMatch/issues/comments/1302597269",
                "html_url": "https://github.com/insongkim/PanelMatch/issues/111#issuecomment-1302597269",
                "issue_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/111",
                "id": 1302597269,
                "node_id": "IC_kwDOB2WaS85NpA6V",
                "user": {
                    "login": "adamrauh",
                    "id": 990177,
                    "node_id": "MDQ6VXNlcjk5MDE3Nw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/990177?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/adamrauh",
                    "html_url": "https://github.com/adamrauh",
                    "followers_url": "https://api.github.com/users/adamrauh/followers",
                    "following_url": "https://api.github.com/users/adamrauh/following{/other_user}",
                    "gists_url": "https://api.github.com/users/adamrauh/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/adamrauh/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/adamrauh/subscriptions",
                    "organizations_url": "https://api.github.com/users/adamrauh/orgs",
                    "repos_url": "https://api.github.com/users/adamrauh/repos",
                    "events_url": "https://api.github.com/users/adamrauh/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/adamrauh/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2022-11-03T19:55:33Z",
                "updated_at": "2022-11-03T19:55:33Z",
                "author_association": "COLLABORATOR",
                "body": "> I experienced the same issue. However there is a simpler solution than saving and re-importing. What I have experienced it only accepts base `data.frame` object as input for data, thus if you convert your data with `as.data.frame(mydata)`, then it works.\r\n\r\nThanks for posting this! This should be right. We will add an update to provide better warnings/errors about this.",
                "reactions": {
                    "url": "https://api.github.com/repos/insongkim/PanelMatch/issues/comments/1302597269/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2022-11-03T19:55:33Z"
    },
    {
        "id": "23882991580",
        "type": "IssuesEvent",
        "actor": {
            "id": 990177,
            "login": "adamrauh",
            "display_login": "adamrauh",
            "gravatar_id": "",
            "url": "https://api.github.com/users/adamrauh",
            "avatar_url": "https://avatars.githubusercontent.com/u/990177?"
        },
        "repo": {
            "id": 124099147,
            "name": "insongkim/PanelMatch",
            "url": "https://api.github.com/repos/insongkim/PanelMatch"
        },
        "payload": {
            "action": "closed",
            "issue": {
                "url": "https://api.github.com/repos/insongkim/PanelMatch/issues/109",
                "repository_url": "https://api.github.com/repos/insongkim/PanelMatch",
                "labels_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/109/labels{/name}",
                "comments_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/109/comments",
                "events_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/109/events",
                "html_url": "https://github.com/insongkim/PanelMatch/issues/109",
                "id": 1361500345,
                "node_id": "I_kwDOB2WaS85RJti5",
                "number": 109,
                "title": "Change in the computation of bootstrapped SE?",
                "user": {
                    "login": "augustocerqua",
                    "id": 53040170,
                    "node_id": "MDQ6VXNlcjUzMDQwMTcw",
                    "avatar_url": "https://avatars.githubusercontent.com/u/53040170?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/augustocerqua",
                    "html_url": "https://github.com/augustocerqua",
                    "followers_url": "https://api.github.com/users/augustocerqua/followers",
                    "following_url": "https://api.github.com/users/augustocerqua/following{/other_user}",
                    "gists_url": "https://api.github.com/users/augustocerqua/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/augustocerqua/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/augustocerqua/subscriptions",
                    "organizations_url": "https://api.github.com/users/augustocerqua/orgs",
                    "repos_url": "https://api.github.com/users/augustocerqua/repos",
                    "events_url": "https://api.github.com/users/augustocerqua/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/augustocerqua/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "closed",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 4,
                "created_at": "2022-09-05T07:10:21Z",
                "updated_at": "2022-09-08T04:16:55Z",
                "closed_at": "2022-09-08T04:16:55Z",
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "Dear Authors,\r\n\r\nI have recently worked on a code I created last year using PanelMatch. After running the estimates, I noticed that the point estimates are the same as they used to be, while I noticed a steep increase in the standard errors (between +20 and +30%). As my code has not changed over the last year (Mahalanobis matching, with bootstrapped SE and 1,000 iterations), this might be due to the use of a novel version of R or, more likely, to some updates to PanelMatch/PanelEstimate. Is it possible you modified the way PanelEstimate computes bootstrapped standard errors over the last few months?\r\n\r\nMany thanks,\r\nAugusto Cerqua",
                "reactions": {
                    "url": "https://api.github.com/repos/insongkim/PanelMatch/issues/109/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/109/timeline",
                "performed_via_github_app": null,
                "state_reason": "completed"
            }
        },
        "public": true,
        "created_at": "2022-09-08T04:16:55Z"
    },
    {
        "id": "23853419712",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 990177,
            "login": "adamrauh",
            "display_login": "adamrauh",
            "gravatar_id": "",
            "url": "https://api.github.com/users/adamrauh",
            "avatar_url": "https://avatars.githubusercontent.com/u/990177?"
        },
        "repo": {
            "id": 124099147,
            "name": "insongkim/PanelMatch",
            "url": "https://api.github.com/repos/insongkim/PanelMatch"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/insongkim/PanelMatch/issues/109",
                "repository_url": "https://api.github.com/repos/insongkim/PanelMatch",
                "labels_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/109/labels{/name}",
                "comments_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/109/comments",
                "events_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/109/events",
                "html_url": "https://github.com/insongkim/PanelMatch/issues/109",
                "id": 1361500345,
                "node_id": "I_kwDOB2WaS85RJti5",
                "number": 109,
                "title": "Change in the computation of bootstrapped SE?",
                "user": {
                    "login": "augustocerqua",
                    "id": 53040170,
                    "node_id": "MDQ6VXNlcjUzMDQwMTcw",
                    "avatar_url": "https://avatars.githubusercontent.com/u/53040170?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/augustocerqua",
                    "html_url": "https://github.com/augustocerqua",
                    "followers_url": "https://api.github.com/users/augustocerqua/followers",
                    "following_url": "https://api.github.com/users/augustocerqua/following{/other_user}",
                    "gists_url": "https://api.github.com/users/augustocerqua/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/augustocerqua/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/augustocerqua/subscriptions",
                    "organizations_url": "https://api.github.com/users/augustocerqua/orgs",
                    "repos_url": "https://api.github.com/users/augustocerqua/repos",
                    "events_url": "https://api.github.com/users/augustocerqua/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/augustocerqua/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 2,
                "created_at": "2022-09-05T07:10:21Z",
                "updated_at": "2022-09-06T20:17:07Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "Dear Authors,\r\n\r\nI have recently worked on a code I created last year using PanelMatch. After running the estimates, I noticed that the point estimates are the same as they used to be, while I noticed a steep increase in the standard errors (between +20 and +30%). As my code has not changed over the last year (Mahalanobis matching, with bootstrapped SE and 1,000 iterations), this might be due to the use of a novel version of R or, more likely, to some updates to PanelMatch/PanelEstimate. Is it possible you modified the way PanelEstimate computes bootstrapped standard errors over the last few months?\r\n\r\nMany thanks,\r\nAugusto Cerqua",
                "reactions": {
                    "url": "https://api.github.com/repos/insongkim/PanelMatch/issues/109/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/109/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/insongkim/PanelMatch/issues/comments/1238607977",
                "html_url": "https://github.com/insongkim/PanelMatch/issues/109#issuecomment-1238607977",
                "issue_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/109",
                "id": 1238607977,
                "node_id": "IC_kwDOB2WaS85J06hp",
                "user": {
                    "login": "adamrauh",
                    "id": 990177,
                    "node_id": "MDQ6VXNlcjk5MDE3Nw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/990177?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/adamrauh",
                    "html_url": "https://github.com/adamrauh",
                    "followers_url": "https://api.github.com/users/adamrauh/followers",
                    "following_url": "https://api.github.com/users/adamrauh/following{/other_user}",
                    "gists_url": "https://api.github.com/users/adamrauh/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/adamrauh/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/adamrauh/subscriptions",
                    "organizations_url": "https://api.github.com/users/adamrauh/orgs",
                    "repos_url": "https://api.github.com/users/adamrauh/repos",
                    "events_url": "https://api.github.com/users/adamrauh/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/adamrauh/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2022-09-06T20:17:07Z",
                "updated_at": "2022-09-06T20:17:07Z",
                "author_association": "COLLABORATOR",
                "body": "The [paper](https://imai.fas.harvard.edu/research/files/tscs.pdf) goes over the various assumptions that each type makes (starting on page 11). So, there are no hard and fast rules, but the conditional standard errors will make a few extra assumptions, which may or may not be defensible in your particular application. \r\n\r\nAside from that, the analytical standard errors will be faster to compute. But, there are a few cases where we haven't implemented them yet, so the option is not available. ",
                "reactions": {
                    "url": "https://api.github.com/repos/insongkim/PanelMatch/issues/comments/1238607977/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2022-09-06T20:17:08Z"
    },
    {
        "id": "23829471370",
        "type": "IssuesEvent",
        "actor": {
            "id": 990177,
            "login": "adamrauh",
            "display_login": "adamrauh",
            "gravatar_id": "",
            "url": "https://api.github.com/users/adamrauh",
            "avatar_url": "https://avatars.githubusercontent.com/u/990177?"
        },
        "repo": {
            "id": 124099147,
            "name": "insongkim/PanelMatch",
            "url": "https://api.github.com/repos/insongkim/PanelMatch"
        },
        "payload": {
            "action": "opened",
            "issue": {
                "url": "https://api.github.com/repos/insongkim/PanelMatch/issues/110",
                "repository_url": "https://api.github.com/repos/insongkim/PanelMatch",
                "labels_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/110/labels{/name}",
                "comments_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/110/comments",
                "events_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/110/events",
                "html_url": "https://github.com/insongkim/PanelMatch/issues/110",
                "id": 1362369405,
                "node_id": "I_kwDOB2WaS85RNBt9",
                "number": 110,
                "title": "Possible bug related to placebo tests",
                "user": {
                    "login": "adamrauh",
                    "id": 990177,
                    "node_id": "MDQ6VXNlcjk5MDE3Nw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/990177?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/adamrauh",
                    "html_url": "https://github.com/adamrauh",
                    "followers_url": "https://api.github.com/users/adamrauh/followers",
                    "following_url": "https://api.github.com/users/adamrauh/following{/other_user}",
                    "gists_url": "https://api.github.com/users/adamrauh/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/adamrauh/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/adamrauh/subscriptions",
                    "organizations_url": "https://api.github.com/users/adamrauh/orgs",
                    "repos_url": "https://api.github.com/users/adamrauh/repos",
                    "events_url": "https://api.github.com/users/adamrauh/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/adamrauh/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 0,
                "created_at": "2022-09-05T18:31:45Z",
                "updated_at": "2022-09-05T18:31:45Z",
                "closed_at": null,
                "author_association": "COLLABORATOR",
                "active_lock_reason": null,
                "body": "A user reported a possible bug in that specifying  `plot = FALSE` to the placebo test function did not work properly, only returning point estimates and no standard errors.",
                "reactions": {
                    "url": "https://api.github.com/repos/insongkim/PanelMatch/issues/110/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/110/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            }
        },
        "public": true,
        "created_at": "2022-09-05T18:31:45Z"
    },
    {
        "id": "23828767831",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 990177,
            "login": "adamrauh",
            "display_login": "adamrauh",
            "gravatar_id": "",
            "url": "https://api.github.com/users/adamrauh",
            "avatar_url": "https://avatars.githubusercontent.com/u/990177?"
        },
        "repo": {
            "id": 124099147,
            "name": "insongkim/PanelMatch",
            "url": "https://api.github.com/repos/insongkim/PanelMatch"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/insongkim/PanelMatch/issues/109",
                "repository_url": "https://api.github.com/repos/insongkim/PanelMatch",
                "labels_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/109/labels{/name}",
                "comments_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/109/comments",
                "events_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/109/events",
                "html_url": "https://github.com/insongkim/PanelMatch/issues/109",
                "id": 1361500345,
                "node_id": "I_kwDOB2WaS85RJti5",
                "number": 109,
                "title": "Change in the computation of bootstrapped SE?",
                "user": {
                    "login": "augustocerqua",
                    "id": 53040170,
                    "node_id": "MDQ6VXNlcjUzMDQwMTcw",
                    "avatar_url": "https://avatars.githubusercontent.com/u/53040170?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/augustocerqua",
                    "html_url": "https://github.com/augustocerqua",
                    "followers_url": "https://api.github.com/users/augustocerqua/followers",
                    "following_url": "https://api.github.com/users/augustocerqua/following{/other_user}",
                    "gists_url": "https://api.github.com/users/augustocerqua/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/augustocerqua/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/augustocerqua/subscriptions",
                    "organizations_url": "https://api.github.com/users/augustocerqua/orgs",
                    "repos_url": "https://api.github.com/users/augustocerqua/repos",
                    "events_url": "https://api.github.com/users/augustocerqua/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/augustocerqua/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 1,
                "created_at": "2022-09-05T07:10:21Z",
                "updated_at": "2022-09-05T17:32:12Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "Dear Authors,\r\n\r\nI have recently worked on a code I created last year using PanelMatch. After running the estimates, I noticed that the point estimates are the same as they used to be, while I noticed a steep increase in the standard errors (between +20 and +30%). As my code has not changed over the last year (Mahalanobis matching, with bootstrapped SE and 1,000 iterations), this might be due to the use of a novel version of R or, more likely, to some updates to PanelMatch/PanelEstimate. Is it possible you modified the way PanelEstimate computes bootstrapped standard errors over the last few months?\r\n\r\nMany thanks,\r\nAugusto Cerqua",
                "reactions": {
                    "url": "https://api.github.com/repos/insongkim/PanelMatch/issues/109/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/109/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/insongkim/PanelMatch/issues/comments/1237333611",
                "html_url": "https://github.com/insongkim/PanelMatch/issues/109#issuecomment-1237333611",
                "issue_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/109",
                "id": 1237333611,
                "node_id": "IC_kwDOB2WaS85JwDZr",
                "user": {
                    "login": "adamrauh",
                    "id": 990177,
                    "node_id": "MDQ6VXNlcjk5MDE3Nw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/990177?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/adamrauh",
                    "html_url": "https://github.com/adamrauh",
                    "followers_url": "https://api.github.com/users/adamrauh/followers",
                    "following_url": "https://api.github.com/users/adamrauh/following{/other_user}",
                    "gists_url": "https://api.github.com/users/adamrauh/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/adamrauh/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/adamrauh/subscriptions",
                    "organizations_url": "https://api.github.com/users/adamrauh/orgs",
                    "repos_url": "https://api.github.com/users/adamrauh/repos",
                    "events_url": "https://api.github.com/users/adamrauh/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/adamrauh/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2022-09-05T17:32:12Z",
                "updated_at": "2022-09-05T17:32:12Z",
                "author_association": "COLLABORATOR",
                "body": "Hi Augusto, \r\n\r\nYes, we did make some updates to PanelEstimate a little while ago that would have exactly this kind of result. So, this seems like the most likely explanation. We did also add analytical standard errors in recent version of the package, which you may be interested in trying out as well.\r\n\r\nThanks for your continued use of the package. Let us know if you have other questions.\r\n-Adam",
                "reactions": {
                    "url": "https://api.github.com/repos/insongkim/PanelMatch/issues/comments/1237333611/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2022-09-05T17:32:12Z"
    },
    {
        "id": "23695462069",
        "type": "IssuesEvent",
        "actor": {
            "id": 990177,
            "login": "adamrauh",
            "display_login": "adamrauh",
            "gravatar_id": "",
            "url": "https://api.github.com/users/adamrauh",
            "avatar_url": "https://avatars.githubusercontent.com/u/990177?"
        },
        "repo": {
            "id": 124099147,
            "name": "insongkim/PanelMatch",
            "url": "https://api.github.com/repos/insongkim/PanelMatch"
        },
        "payload": {
            "action": "closed",
            "issue": {
                "url": "https://api.github.com/repos/insongkim/PanelMatch/issues/99",
                "repository_url": "https://api.github.com/repos/insongkim/PanelMatch",
                "labels_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/99/labels{/name}",
                "comments_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/99/comments",
                "events_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/99/events",
                "html_url": "https://github.com/insongkim/PanelMatch/issues/99",
                "id": 1170229061,
                "node_id": "I_kwDOB2WaS85FwEdF",
                "number": 99,
                "title": "Estimate the ATT over time ",
                "user": {
                    "login": "avishwanath28",
                    "id": 45737928,
                    "node_id": "MDQ6VXNlcjQ1NzM3OTI4",
                    "avatar_url": "https://avatars.githubusercontent.com/u/45737928?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/avishwanath28",
                    "html_url": "https://github.com/avishwanath28",
                    "followers_url": "https://api.github.com/users/avishwanath28/followers",
                    "following_url": "https://api.github.com/users/avishwanath28/following{/other_user}",
                    "gists_url": "https://api.github.com/users/avishwanath28/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/avishwanath28/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/avishwanath28/subscriptions",
                    "organizations_url": "https://api.github.com/users/avishwanath28/orgs",
                    "repos_url": "https://api.github.com/users/avishwanath28/repos",
                    "events_url": "https://api.github.com/users/avishwanath28/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/avishwanath28/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "closed",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 1,
                "created_at": "2022-03-15T20:41:14Z",
                "updated_at": "2022-08-29T14:19:07Z",
                "closed_at": "2022-08-29T14:19:07Z",
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "Right now, the package produces ATTs by treatment time (e.g., t+1, t+2). Is it possible to return a single estimate of the ATT pooled across treatment time? I imagine this would have to take into account a) differing number of treated units at different treatment times and b) within-unit covariance over time. ",
                "reactions": {
                    "url": "https://api.github.com/repos/insongkim/PanelMatch/issues/99/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/99/timeline",
                "performed_via_github_app": null,
                "state_reason": "completed"
            }
        },
        "public": true,
        "created_at": "2022-08-29T14:19:08Z"
    },
    {
        "id": "23695461898",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 990177,
            "login": "adamrauh",
            "display_login": "adamrauh",
            "gravatar_id": "",
            "url": "https://api.github.com/users/adamrauh",
            "avatar_url": "https://avatars.githubusercontent.com/u/990177?"
        },
        "repo": {
            "id": 124099147,
            "name": "insongkim/PanelMatch",
            "url": "https://api.github.com/repos/insongkim/PanelMatch"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/insongkim/PanelMatch/issues/99",
                "repository_url": "https://api.github.com/repos/insongkim/PanelMatch",
                "labels_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/99/labels{/name}",
                "comments_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/99/comments",
                "events_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/99/events",
                "html_url": "https://github.com/insongkim/PanelMatch/issues/99",
                "id": 1170229061,
                "node_id": "I_kwDOB2WaS85FwEdF",
                "number": 99,
                "title": "Estimate the ATT over time ",
                "user": {
                    "login": "avishwanath28",
                    "id": 45737928,
                    "node_id": "MDQ6VXNlcjQ1NzM3OTI4",
                    "avatar_url": "https://avatars.githubusercontent.com/u/45737928?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/avishwanath28",
                    "html_url": "https://github.com/avishwanath28",
                    "followers_url": "https://api.github.com/users/avishwanath28/followers",
                    "following_url": "https://api.github.com/users/avishwanath28/following{/other_user}",
                    "gists_url": "https://api.github.com/users/avishwanath28/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/avishwanath28/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/avishwanath28/subscriptions",
                    "organizations_url": "https://api.github.com/users/avishwanath28/orgs",
                    "repos_url": "https://api.github.com/users/avishwanath28/repos",
                    "events_url": "https://api.github.com/users/avishwanath28/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/avishwanath28/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "closed",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 1,
                "created_at": "2022-03-15T20:41:14Z",
                "updated_at": "2022-08-29T14:19:07Z",
                "closed_at": "2022-08-29T14:19:07Z",
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "Right now, the package produces ATTs by treatment time (e.g., t+1, t+2). Is it possible to return a single estimate of the ATT pooled across treatment time? I imagine this would have to take into account a) differing number of treated units at different treatment times and b) within-unit covariance over time. ",
                "reactions": {
                    "url": "https://api.github.com/repos/insongkim/PanelMatch/issues/99/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/99/timeline",
                "performed_via_github_app": null,
                "state_reason": "completed"
            },
            "comment": {
                "url": "https://api.github.com/repos/insongkim/PanelMatch/issues/comments/1230377554",
                "html_url": "https://github.com/insongkim/PanelMatch/issues/99#issuecomment-1230377554",
                "issue_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/99",
                "id": 1230377554,
                "node_id": "IC_kwDOB2WaS85JVhJS",
                "user": {
                    "login": "adamrauh",
                    "id": 990177,
                    "node_id": "MDQ6VXNlcjk5MDE3Nw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/990177?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/adamrauh",
                    "html_url": "https://github.com/adamrauh",
                    "followers_url": "https://api.github.com/users/adamrauh/followers",
                    "following_url": "https://api.github.com/users/adamrauh/following{/other_user}",
                    "gists_url": "https://api.github.com/users/adamrauh/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/adamrauh/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/adamrauh/subscriptions",
                    "organizations_url": "https://api.github.com/users/adamrauh/orgs",
                    "repos_url": "https://api.github.com/users/adamrauh/repos",
                    "events_url": "https://api.github.com/users/adamrauh/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/adamrauh/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2022-08-29T14:19:07Z",
                "updated_at": "2022-08-29T14:19:07Z",
                "author_association": "COLLABORATOR",
                "body": "(For future reference)\r\nimplemented in: b0a33710fafdfe3f723871d34b0b7eea25b1c38e",
                "reactions": {
                    "url": "https://api.github.com/repos/insongkim/PanelMatch/issues/comments/1230377554/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2022-08-29T14:19:07Z"
    },
    {
        "id": "23695400725",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 990177,
            "login": "adamrauh",
            "display_login": "adamrauh",
            "gravatar_id": "",
            "url": "https://api.github.com/users/adamrauh",
            "avatar_url": "https://avatars.githubusercontent.com/u/990177?"
        },
        "repo": {
            "id": 124099147,
            "name": "insongkim/PanelMatch",
            "url": "https://api.github.com/repos/insongkim/PanelMatch"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/insongkim/PanelMatch/issues/107",
                "repository_url": "https://api.github.com/repos/insongkim/PanelMatch",
                "labels_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/107/labels{/name}",
                "comments_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/107/comments",
                "events_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/107/events",
                "html_url": "https://github.com/insongkim/PanelMatch/issues/107",
                "id": 1353321865,
                "node_id": "I_kwDOB2WaS85Qqg2J",
                "number": 107,
                "title": "Data/ data frame",
                "user": {
                    "login": "eostrinidad",
                    "id": 67266504,
                    "node_id": "MDQ6VXNlcjY3MjY2NTA0",
                    "avatar_url": "https://avatars.githubusercontent.com/u/67266504?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/eostrinidad",
                    "html_url": "https://github.com/eostrinidad",
                    "followers_url": "https://api.github.com/users/eostrinidad/followers",
                    "following_url": "https://api.github.com/users/eostrinidad/following{/other_user}",
                    "gists_url": "https://api.github.com/users/eostrinidad/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/eostrinidad/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/eostrinidad/subscriptions",
                    "organizations_url": "https://api.github.com/users/eostrinidad/orgs",
                    "repos_url": "https://api.github.com/users/eostrinidad/repos",
                    "events_url": "https://api.github.com/users/eostrinidad/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/eostrinidad/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 1,
                "created_at": "2022-08-28T11:14:09Z",
                "updated_at": "2022-08-29T14:16:34Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "I get this message whenever I use PanelMatch:\r\n\r\nplease convert data to data.frame class\r\nIn addition: Warning message:\r\nIn if (class(data) != \"data.frame\") stop(\"please convert data to data.frame class\") :\r\n  the condition has length > 1 and only the first element will be used\r\n\r\nHowever, my data is already a data frame. Any advice for this? Thanks!",
                "reactions": {
                    "url": "https://api.github.com/repos/insongkim/PanelMatch/issues/107/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/107/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/insongkim/PanelMatch/issues/comments/1230373464",
                "html_url": "https://github.com/insongkim/PanelMatch/issues/107#issuecomment-1230373464",
                "issue_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/107",
                "id": 1230373464,
                "node_id": "IC_kwDOB2WaS85JVgJY",
                "user": {
                    "login": "adamrauh",
                    "id": 990177,
                    "node_id": "MDQ6VXNlcjk5MDE3Nw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/990177?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/adamrauh",
                    "html_url": "https://github.com/adamrauh",
                    "followers_url": "https://api.github.com/users/adamrauh/followers",
                    "following_url": "https://api.github.com/users/adamrauh/following{/other_user}",
                    "gists_url": "https://api.github.com/users/adamrauh/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/adamrauh/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/adamrauh/subscriptions",
                    "organizations_url": "https://api.github.com/users/adamrauh/orgs",
                    "repos_url": "https://api.github.com/users/adamrauh/repos",
                    "events_url": "https://api.github.com/users/adamrauh/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/adamrauh/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2022-08-29T14:16:34Z",
                "updated_at": "2022-08-29T14:16:34Z",
                "author_association": "COLLABORATOR",
                "body": "Hi @eostrinidad , thanks for using the package! \r\n\r\nIt is a bit hard to say, but have you tried explicitly setting the class of the data -- something like `class(data) <- \"data.frame\"`? This error seems to suggest that the data object being passed has more than one class associated with it.",
                "reactions": {
                    "url": "https://api.github.com/repos/insongkim/PanelMatch/issues/comments/1230373464/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2022-08-29T14:16:34Z"
    },
    {
        "id": "23432911224",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 990177,
            "login": "adamrauh",
            "display_login": "adamrauh",
            "gravatar_id": "",
            "url": "https://api.github.com/users/adamrauh",
            "avatar_url": "https://avatars.githubusercontent.com/u/990177?"
        },
        "repo": {
            "id": 124099147,
            "name": "insongkim/PanelMatch",
            "url": "https://api.github.com/repos/insongkim/PanelMatch"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/insongkim/PanelMatch/issues/106",
                "repository_url": "https://api.github.com/repos/insongkim/PanelMatch",
                "labels_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/106/labels{/name}",
                "comments_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/106/comments",
                "events_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/106/events",
                "html_url": "https://github.com/insongkim/PanelMatch/issues/106",
                "id": 1337754808,
                "node_id": "I_kwDOB2WaS85PvIS4",
                "number": 106,
                "title": "Handling different numbers of maximum lags in data",
                "user": {
                    "login": "emcghee73",
                    "id": 34285803,
                    "node_id": "MDQ6VXNlcjM0Mjg1ODAz",
                    "avatar_url": "https://avatars.githubusercontent.com/u/34285803?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/emcghee73",
                    "html_url": "https://github.com/emcghee73",
                    "followers_url": "https://api.github.com/users/emcghee73/followers",
                    "following_url": "https://api.github.com/users/emcghee73/following{/other_user}",
                    "gists_url": "https://api.github.com/users/emcghee73/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/emcghee73/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/emcghee73/subscriptions",
                    "organizations_url": "https://api.github.com/users/emcghee73/orgs",
                    "repos_url": "https://api.github.com/users/emcghee73/repos",
                    "events_url": "https://api.github.com/users/emcghee73/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/emcghee73/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 1,
                "created_at": "2022-08-12T22:31:21Z",
                "updated_at": "2022-08-15T06:10:00Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "What does PanelMatch do if some of the treated units have fewer total lags in the data than lags specified in PanelMatch?  For example, if I set PanelMatch to use 2 lags (both for the initial matched set and for refinement) but treated unit X only has one lag in the data, what does PanelMatch do?  Does it drop X?  Or does it attempt to match on one lag?",
                "reactions": {
                    "url": "https://api.github.com/repos/insongkim/PanelMatch/issues/106/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/106/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/insongkim/PanelMatch/issues/comments/1214652750",
                "html_url": "https://github.com/insongkim/PanelMatch/issues/106#issuecomment-1214652750",
                "issue_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/106",
                "id": 1214652750,
                "node_id": "IC_kwDOB2WaS85IZiFO",
                "user": {
                    "login": "adamrauh",
                    "id": 990177,
                    "node_id": "MDQ6VXNlcjk5MDE3Nw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/990177?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/adamrauh",
                    "html_url": "https://github.com/adamrauh",
                    "followers_url": "https://api.github.com/users/adamrauh/followers",
                    "following_url": "https://api.github.com/users/adamrauh/following{/other_user}",
                    "gists_url": "https://api.github.com/users/adamrauh/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/adamrauh/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/adamrauh/subscriptions",
                    "organizations_url": "https://api.github.com/users/adamrauh/orgs",
                    "repos_url": "https://api.github.com/users/adamrauh/repos",
                    "events_url": "https://api.github.com/users/adamrauh/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/adamrauh/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2022-08-15T06:10:00Z",
                "updated_at": "2022-08-15T06:10:00Z",
                "author_association": "COLLABORATOR",
                "body": "Hi @emcghee73 , thanks for using the package. I have a clarifying question. Are you talking about the case of one or more treated unit missing some treatment data in the lag window? ",
                "reactions": {
                    "url": "https://api.github.com/repos/insongkim/PanelMatch/issues/comments/1214652750/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2022-08-15T06:10:00Z"
    },
    {
        "id": "25017157681",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 990177,
            "login": "adamrauh",
            "display_login": "adamrauh",
            "gravatar_id": "",
            "url": "https://api.github.com/users/adamrauh",
            "avatar_url": "https://avatars.githubusercontent.com/u/990177?"
        },
        "repo": {
            "id": 124099147,
            "name": "insongkim/PanelMatch",
            "url": "https://api.github.com/repos/insongkim/PanelMatch"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/insongkim/PanelMatch/issues/111",
                "repository_url": "https://api.github.com/repos/insongkim/PanelMatch",
                "labels_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/111/labels{/name}",
                "comments_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/111/comments",
                "events_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/111/events",
                "html_url": "https://github.com/insongkim/PanelMatch/issues/111",
                "id": 1411953388,
                "node_id": "I_kwDOB2WaS85UKLLs",
                "number": 111,
                "title": "Issue with R manipulated/ modified datasets vs newly imported",
                "user": {
                    "login": "HanjaNirina",
                    "id": 26062621,
                    "node_id": "MDQ6VXNlcjI2MDYyNjIx",
                    "avatar_url": "https://avatars.githubusercontent.com/u/26062621?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/HanjaNirina",
                    "html_url": "https://github.com/HanjaNirina",
                    "followers_url": "https://api.github.com/users/HanjaNirina/followers",
                    "following_url": "https://api.github.com/users/HanjaNirina/following{/other_user}",
                    "gists_url": "https://api.github.com/users/HanjaNirina/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/HanjaNirina/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/HanjaNirina/subscriptions",
                    "organizations_url": "https://api.github.com/users/HanjaNirina/orgs",
                    "repos_url": "https://api.github.com/users/HanjaNirina/repos",
                    "events_url": "https://api.github.com/users/HanjaNirina/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/HanjaNirina/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 2,
                "created_at": "2022-10-17T17:33:06Z",
                "updated_at": "2022-11-03T19:55:33Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "Hi,\r\nI recently encountered an error that I couldn't understand but found a workaround for it. I constructed a dataset from existing CSV and online downloads through packages on R. It's a country-year panel dataset [all_merged_conflict.csv](https://github.com/insongkim/PanelMatch/files/9790459/all_merged_conflict.csv). \r\n\r\n1. I ran DisplayTreatment and got this error: \r\n```\r\nError in DisplayTreatment(unit.id = \"iso3c_n\", time.id = \"year\", legend.position = \"none\",  : \r\n  please convert time id to consecutive integers\r\n```\r\nI did not understand at all why this would occur as my year variable is set correctly as an integer and consecutive. So at first I gave up and simply used another package for this purpose. \r\n\r\n2. I ran PanelMatch and I got this error: \r\n```\r\nError in panel_match(lag, time.id, unit.id, treatment, refinement.method,  : \r\n  please convert unit id column to integer or numeric\r\n```\r\n\r\nI checked and checked again, and even changed the type from double to integer (just like wbcode2 is the dem data) but the unit id is numeric (Tried with as.integer() too but no luck).\r\n\r\nHowever in the process of creating sample data and code snippets. The functions worked with the same exact data but newly imported from a CSV file. I don't know what's causing this but the code I used to recreate this problem is as below. \r\n\r\nHoping you can figure out the issue for your next release. Thank you for a great package.\r\n\r\n```\r\n#NOTE:\r\n# 1. uncomment Package installation chunk if running for 1st time\r\n# 2. change location accordingly\r\n\r\n# Package Installation\r\ndevtools::install_github(\"insongkim/PanelMatch\", ref = \"development\")\r\n\r\n#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\r\n# Package Loading\r\n\r\n## pacman will apply library() to specified package or install first if needed\r\n\r\nif (!require(\"pacman\")) install.packages(\"pacman\")\r\npacman::p_load(\r\n  reshape, \r\n  dplyr,\r\n  tidyverse,\r\n  countrycode,\r\n  car, \r\n  psData,\r\n  validate\r\n)\r\n\r\nlibrary(PanelMatch)\r\n\r\n# Location of/ folder containing files\r\n# 1. Create your personal path to where folder is located on your machine \r\n# 2. Change currentpath to that personalized path\r\n\r\nnirinapath <- \"~/Dropbox (Princeton)/02Projects/KR - New Paper/\"\r\n#yourpath <- \r\ncurrentpath <- nirinapath\r\n\r\n#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\r\n\r\n# This section will present differents sets of code chunks:\r\n#   \r\n# 1. They will create the same exact dataset (as far as the R user is concerned)\r\n# 2. Set 1 will create the dataset by merging an older dataset with newer variables we would like. Set 1 will output errors.\r\n# 3. Set 2 will export the dataset as it is from set 1 to a csv somewher, then import back. Set 2 will work.\r\n\r\n#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\r\n\r\n# SET 1: Non-functional This set of chunk will NOT work\r\n\r\n## Importing initial dataset: Change to where all_merged_conflict is located\r\n\r\nall_merged_conflict <- read_csv(paste0(currentpath, \"all_merged_conflict.csv\"))\r\n\r\n#Downloading Polity scores and creating democracy indicators\r\n## Downloading and selecting polity scores\r\n\r\npolity <- psData::PolityGet(\"http://www.systemicpeace.org/inscr/p5v2018.sav\", \r\n                            vars = NULL,\r\n                            OutCountryID = \"iso3c\",\r\n                            standardCountryName = FALSE,\r\n                            na.rm = TRUE, \r\n                            duplicates = \"message\") %>% \r\n  dplyr::select(iso3c, p5, year, fragment, democ, autoc, polity, polity2, durable) %>% \r\n  filter(year > 1998)\r\n\r\npolity_dem_indicator <- polity %>% \r\n  filter( polity2 >= -10 & polity2 <= 10) %>% \r\n  mutate(polity_democracy = case_when(polity2 >= 6 ~ 1,\r\n                                      polity2 < 6 ~ 0),\r\n         polity_autocracy = case_when(polity2 <= -6 ~ 1,\r\n                                      polity2 > -6 ~ 0),\r\n         polity_anoncracy = case_when(polity2 < 6 & polity2 > -6 ~ 1,\r\n                                      polity2 >= 6 | polity2 <= -6 ~ 0),\r\n         polity_norm = (polity2 + 10)/20)\r\n\r\n## Merging with all_merged data & creating country codes numeric equivalents\r\n\r\nall_merged_conflict <- all_merged_conflict %>% \r\n  mutate(all_merged_conflict_flag = 1)\r\n\r\nall_merged_polity <- left_join(all_merged_conflict, polity_dem_indicator, by = c(\"iso3c\", \"year\")) %>%\r\n  group_by(iso3c) %>% \r\n  mutate(iso3c_r = cur_group_id()) %>% ## iso3c_r is ID for country in form of an integer (has no real connection to other numeric codes) \r\n  ungroup() %>% \r\n  mutate(iso3c_n = countrycode(iso3c, \"iso3c\", \"iso3n\", warn = TRUE, nomatch = NA),\r\n         year = as.integer(year)) %>% ## iso3c_n is the official iso3 numeric equivalent\r\n  relocate(c(\"iso3c_n\", \"iso3c_r\"), .after = iso3c) \r\n\r\n## Checking for uniqueness by year and country\r\n\r\nrule_polity <- validator(is_unique(iso3c_r, year))\r\nout_polity <- confront(all_merged_polity, rule_polity)\r\nsummary(out_polity)[1:7]\r\nviolating(all_merged_polity, out_polity)\r\n\r\n# Sudan is repeated twice for some unknown reason (almost all column values are equal)\r\n# Fix: randomly drop either Sudan 2011\r\nall_merged_polity$randval <- runif(nrow(all_merged_polity))\r\nall_merged_polity <- arrange(all_merged_polity,iso3c_n, year,randval) #%>% filter(!is.na(polity2))\r\nall_merged_polity <- all_merged_polity %>% \r\n  group_by(iso3c, year) %>% \r\n  top_n(n = 1) %>% \r\n  ungroup() %>% \r\n  filter(!is.na(iso3c_n) & !is.na(year))\r\n\r\n### PanelMatch estimator\r\n#### DisplayTreatment: FAIL\r\nDisplayTreatment(unit.id = \"iso3c_n\",\r\n                 time.id = \"year\", legend.position = \"none\",\r\n                 xlab = \"year\", ylab = \"Country Code\",\r\n                 treatment = \"polity_democracy\", data = all_merged_polity)\r\n\r\n#### PanelMatch: FAIL\r\npoli_dem_match <- all_merged_polity %>% \r\n  PanelMatch::PanelMatch(lag = 3, \r\n                         unit.id = \"iso3c_n\",\r\n                         time.id = \"year\",\r\n                         treatment = \"polity_democracy\",\r\n                         refinement.method = \"ps.match\",\r\n                         match.missing = TRUE, \r\n                         covs.formula = ~GDP_per_capita_current_US_dollar + GDP_per_capita_current_US_dollar2\r\n                         + GDP_per_capita_growth + trade_per_gdp + population_density + military_conflict, \r\n                         size.match = 5, \r\n                         qoi = \"att\", \r\n                         outcome.var = \"tree_cover_loss_value\",\r\n                         lead = 0:10, \r\n                         forbid.treatment.reversal = FALSE)\r\n\r\n#### Confirmation: it is not about the variable type\r\nclass(all_merged_polity$iso3c_n)\r\ntypeof(all_merged_polity$iso3c_n)\r\n\r\n#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\r\n# SET 2: \r\n## Exporting the CSV\r\nwrite_csv(all_merged_polity, paste0(currentpath, \"all_merged_polity_err.csv\"))\r\n\r\n\r\n## Importing the CSV\r\nall_merged_polity_new <- read.csv(paste0(currentpath, \"all_merged_polity_err.csv\"))\r\n\r\n### PanelMatch estimator\r\n#### DisplayTreatment\r\nDisplayTreatment(unit.id = \"iso3c_n\",\r\n                 time.id = \"year\", legend.position = \"none\",\r\n                 xlab = \"year\", ylab = \"Country Code\",\r\n                 treatment = \"polity_democracy\", data = all_merged_polity_new)\r\n\r\n\r\n\r\n#### PanelMatch\r\npoli_dem_match <- all_merged_polity_new %>% \r\n  PanelMatch::PanelMatch(lag = 3, \r\n                         unit.id = \"iso3c_n\",\r\n                         time.id = \"year\",\r\n                         treatment = \"polity_democracy\",\r\n                         refinement.method = \"ps.match\",\r\n                         match.missing = TRUE, \r\n                         covs.formula = ~GDP_per_capita_current_US_dollar + GDP_per_capita_current_US_dollar2\r\n                         + GDP_per_capita_growth + trade_per_gdp + population_density + military_conflict, \r\n                         size.match = 5, \r\n                         qoi = \"att\", \r\n                         outcome.var = \"tree_cover_loss_value\",\r\n                         lead = 0:10, \r\n                         forbid.treatment.reversal = FALSE)\r\n\r\npoli_dem_fe <- PanelEstimate(sets = poli_dem_match, all_merged_polity_new)\r\n\r\nsummary(poli_dem_fe)\r\n\r\nplot(poli_dem_fe)\r\n\r\n```\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/insongkim/PanelMatch/issues/111/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/111/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/insongkim/PanelMatch/issues/comments/1302597269",
                "html_url": "https://github.com/insongkim/PanelMatch/issues/111#issuecomment-1302597269",
                "issue_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/111",
                "id": 1302597269,
                "node_id": "IC_kwDOB2WaS85NpA6V",
                "user": {
                    "login": "adamrauh",
                    "id": 990177,
                    "node_id": "MDQ6VXNlcjk5MDE3Nw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/990177?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/adamrauh",
                    "html_url": "https://github.com/adamrauh",
                    "followers_url": "https://api.github.com/users/adamrauh/followers",
                    "following_url": "https://api.github.com/users/adamrauh/following{/other_user}",
                    "gists_url": "https://api.github.com/users/adamrauh/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/adamrauh/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/adamrauh/subscriptions",
                    "organizations_url": "https://api.github.com/users/adamrauh/orgs",
                    "repos_url": "https://api.github.com/users/adamrauh/repos",
                    "events_url": "https://api.github.com/users/adamrauh/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/adamrauh/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2022-11-03T19:55:33Z",
                "updated_at": "2022-11-03T19:55:33Z",
                "author_association": "COLLABORATOR",
                "body": "> I experienced the same issue. However there is a simpler solution than saving and re-importing. What I have experienced it only accepts base `data.frame` object as input for data, thus if you convert your data with `as.data.frame(mydata)`, then it works.\r\n\r\nThanks for posting this! This should be right. We will add an update to provide better warnings/errors about this.",
                "reactions": {
                    "url": "https://api.github.com/repos/insongkim/PanelMatch/issues/comments/1302597269/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2022-11-03T19:55:33Z"
    },
    {
        "id": "23882991580",
        "type": "IssuesEvent",
        "actor": {
            "id": 990177,
            "login": "adamrauh",
            "display_login": "adamrauh",
            "gravatar_id": "",
            "url": "https://api.github.com/users/adamrauh",
            "avatar_url": "https://avatars.githubusercontent.com/u/990177?"
        },
        "repo": {
            "id": 124099147,
            "name": "insongkim/PanelMatch",
            "url": "https://api.github.com/repos/insongkim/PanelMatch"
        },
        "payload": {
            "action": "closed",
            "issue": {
                "url": "https://api.github.com/repos/insongkim/PanelMatch/issues/109",
                "repository_url": "https://api.github.com/repos/insongkim/PanelMatch",
                "labels_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/109/labels{/name}",
                "comments_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/109/comments",
                "events_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/109/events",
                "html_url": "https://github.com/insongkim/PanelMatch/issues/109",
                "id": 1361500345,
                "node_id": "I_kwDOB2WaS85RJti5",
                "number": 109,
                "title": "Change in the computation of bootstrapped SE?",
                "user": {
                    "login": "augustocerqua",
                    "id": 53040170,
                    "node_id": "MDQ6VXNlcjUzMDQwMTcw",
                    "avatar_url": "https://avatars.githubusercontent.com/u/53040170?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/augustocerqua",
                    "html_url": "https://github.com/augustocerqua",
                    "followers_url": "https://api.github.com/users/augustocerqua/followers",
                    "following_url": "https://api.github.com/users/augustocerqua/following{/other_user}",
                    "gists_url": "https://api.github.com/users/augustocerqua/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/augustocerqua/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/augustocerqua/subscriptions",
                    "organizations_url": "https://api.github.com/users/augustocerqua/orgs",
                    "repos_url": "https://api.github.com/users/augustocerqua/repos",
                    "events_url": "https://api.github.com/users/augustocerqua/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/augustocerqua/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "closed",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 4,
                "created_at": "2022-09-05T07:10:21Z",
                "updated_at": "2022-09-08T04:16:55Z",
                "closed_at": "2022-09-08T04:16:55Z",
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "Dear Authors,\r\n\r\nI have recently worked on a code I created last year using PanelMatch. After running the estimates, I noticed that the point estimates are the same as they used to be, while I noticed a steep increase in the standard errors (between +20 and +30%). As my code has not changed over the last year (Mahalanobis matching, with bootstrapped SE and 1,000 iterations), this might be due to the use of a novel version of R or, more likely, to some updates to PanelMatch/PanelEstimate. Is it possible you modified the way PanelEstimate computes bootstrapped standard errors over the last few months?\r\n\r\nMany thanks,\r\nAugusto Cerqua",
                "reactions": {
                    "url": "https://api.github.com/repos/insongkim/PanelMatch/issues/109/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/109/timeline",
                "performed_via_github_app": null,
                "state_reason": "completed"
            }
        },
        "public": true,
        "created_at": "2022-09-08T04:16:55Z"
    },
    {
        "id": "23853419712",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 990177,
            "login": "adamrauh",
            "display_login": "adamrauh",
            "gravatar_id": "",
            "url": "https://api.github.com/users/adamrauh",
            "avatar_url": "https://avatars.githubusercontent.com/u/990177?"
        },
        "repo": {
            "id": 124099147,
            "name": "insongkim/PanelMatch",
            "url": "https://api.github.com/repos/insongkim/PanelMatch"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/insongkim/PanelMatch/issues/109",
                "repository_url": "https://api.github.com/repos/insongkim/PanelMatch",
                "labels_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/109/labels{/name}",
                "comments_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/109/comments",
                "events_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/109/events",
                "html_url": "https://github.com/insongkim/PanelMatch/issues/109",
                "id": 1361500345,
                "node_id": "I_kwDOB2WaS85RJti5",
                "number": 109,
                "title": "Change in the computation of bootstrapped SE?",
                "user": {
                    "login": "augustocerqua",
                    "id": 53040170,
                    "node_id": "MDQ6VXNlcjUzMDQwMTcw",
                    "avatar_url": "https://avatars.githubusercontent.com/u/53040170?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/augustocerqua",
                    "html_url": "https://github.com/augustocerqua",
                    "followers_url": "https://api.github.com/users/augustocerqua/followers",
                    "following_url": "https://api.github.com/users/augustocerqua/following{/other_user}",
                    "gists_url": "https://api.github.com/users/augustocerqua/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/augustocerqua/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/augustocerqua/subscriptions",
                    "organizations_url": "https://api.github.com/users/augustocerqua/orgs",
                    "repos_url": "https://api.github.com/users/augustocerqua/repos",
                    "events_url": "https://api.github.com/users/augustocerqua/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/augustocerqua/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 2,
                "created_at": "2022-09-05T07:10:21Z",
                "updated_at": "2022-09-06T20:17:07Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "Dear Authors,\r\n\r\nI have recently worked on a code I created last year using PanelMatch. After running the estimates, I noticed that the point estimates are the same as they used to be, while I noticed a steep increase in the standard errors (between +20 and +30%). As my code has not changed over the last year (Mahalanobis matching, with bootstrapped SE and 1,000 iterations), this might be due to the use of a novel version of R or, more likely, to some updates to PanelMatch/PanelEstimate. Is it possible you modified the way PanelEstimate computes bootstrapped standard errors over the last few months?\r\n\r\nMany thanks,\r\nAugusto Cerqua",
                "reactions": {
                    "url": "https://api.github.com/repos/insongkim/PanelMatch/issues/109/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/109/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/insongkim/PanelMatch/issues/comments/1238607977",
                "html_url": "https://github.com/insongkim/PanelMatch/issues/109#issuecomment-1238607977",
                "issue_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/109",
                "id": 1238607977,
                "node_id": "IC_kwDOB2WaS85J06hp",
                "user": {
                    "login": "adamrauh",
                    "id": 990177,
                    "node_id": "MDQ6VXNlcjk5MDE3Nw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/990177?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/adamrauh",
                    "html_url": "https://github.com/adamrauh",
                    "followers_url": "https://api.github.com/users/adamrauh/followers",
                    "following_url": "https://api.github.com/users/adamrauh/following{/other_user}",
                    "gists_url": "https://api.github.com/users/adamrauh/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/adamrauh/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/adamrauh/subscriptions",
                    "organizations_url": "https://api.github.com/users/adamrauh/orgs",
                    "repos_url": "https://api.github.com/users/adamrauh/repos",
                    "events_url": "https://api.github.com/users/adamrauh/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/adamrauh/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2022-09-06T20:17:07Z",
                "updated_at": "2022-09-06T20:17:07Z",
                "author_association": "COLLABORATOR",
                "body": "The [paper](https://imai.fas.harvard.edu/research/files/tscs.pdf) goes over the various assumptions that each type makes (starting on page 11). So, there are no hard and fast rules, but the conditional standard errors will make a few extra assumptions, which may or may not be defensible in your particular application. \r\n\r\nAside from that, the analytical standard errors will be faster to compute. But, there are a few cases where we haven't implemented them yet, so the option is not available. ",
                "reactions": {
                    "url": "https://api.github.com/repos/insongkim/PanelMatch/issues/comments/1238607977/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2022-09-06T20:17:08Z"
    },
    {
        "id": "23829471370",
        "type": "IssuesEvent",
        "actor": {
            "id": 990177,
            "login": "adamrauh",
            "display_login": "adamrauh",
            "gravatar_id": "",
            "url": "https://api.github.com/users/adamrauh",
            "avatar_url": "https://avatars.githubusercontent.com/u/990177?"
        },
        "repo": {
            "id": 124099147,
            "name": "insongkim/PanelMatch",
            "url": "https://api.github.com/repos/insongkim/PanelMatch"
        },
        "payload": {
            "action": "opened",
            "issue": {
                "url": "https://api.github.com/repos/insongkim/PanelMatch/issues/110",
                "repository_url": "https://api.github.com/repos/insongkim/PanelMatch",
                "labels_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/110/labels{/name}",
                "comments_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/110/comments",
                "events_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/110/events",
                "html_url": "https://github.com/insongkim/PanelMatch/issues/110",
                "id": 1362369405,
                "node_id": "I_kwDOB2WaS85RNBt9",
                "number": 110,
                "title": "Possible bug related to placebo tests",
                "user": {
                    "login": "adamrauh",
                    "id": 990177,
                    "node_id": "MDQ6VXNlcjk5MDE3Nw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/990177?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/adamrauh",
                    "html_url": "https://github.com/adamrauh",
                    "followers_url": "https://api.github.com/users/adamrauh/followers",
                    "following_url": "https://api.github.com/users/adamrauh/following{/other_user}",
                    "gists_url": "https://api.github.com/users/adamrauh/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/adamrauh/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/adamrauh/subscriptions",
                    "organizations_url": "https://api.github.com/users/adamrauh/orgs",
                    "repos_url": "https://api.github.com/users/adamrauh/repos",
                    "events_url": "https://api.github.com/users/adamrauh/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/adamrauh/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 0,
                "created_at": "2022-09-05T18:31:45Z",
                "updated_at": "2022-09-05T18:31:45Z",
                "closed_at": null,
                "author_association": "COLLABORATOR",
                "active_lock_reason": null,
                "body": "A user reported a possible bug in that specifying  `plot = FALSE` to the placebo test function did not work properly, only returning point estimates and no standard errors.",
                "reactions": {
                    "url": "https://api.github.com/repos/insongkim/PanelMatch/issues/110/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/110/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            }
        },
        "public": true,
        "created_at": "2022-09-05T18:31:45Z"
    },
    {
        "id": "23828767831",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 990177,
            "login": "adamrauh",
            "display_login": "adamrauh",
            "gravatar_id": "",
            "url": "https://api.github.com/users/adamrauh",
            "avatar_url": "https://avatars.githubusercontent.com/u/990177?"
        },
        "repo": {
            "id": 124099147,
            "name": "insongkim/PanelMatch",
            "url": "https://api.github.com/repos/insongkim/PanelMatch"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/insongkim/PanelMatch/issues/109",
                "repository_url": "https://api.github.com/repos/insongkim/PanelMatch",
                "labels_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/109/labels{/name}",
                "comments_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/109/comments",
                "events_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/109/events",
                "html_url": "https://github.com/insongkim/PanelMatch/issues/109",
                "id": 1361500345,
                "node_id": "I_kwDOB2WaS85RJti5",
                "number": 109,
                "title": "Change in the computation of bootstrapped SE?",
                "user": {
                    "login": "augustocerqua",
                    "id": 53040170,
                    "node_id": "MDQ6VXNlcjUzMDQwMTcw",
                    "avatar_url": "https://avatars.githubusercontent.com/u/53040170?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/augustocerqua",
                    "html_url": "https://github.com/augustocerqua",
                    "followers_url": "https://api.github.com/users/augustocerqua/followers",
                    "following_url": "https://api.github.com/users/augustocerqua/following{/other_user}",
                    "gists_url": "https://api.github.com/users/augustocerqua/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/augustocerqua/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/augustocerqua/subscriptions",
                    "organizations_url": "https://api.github.com/users/augustocerqua/orgs",
                    "repos_url": "https://api.github.com/users/augustocerqua/repos",
                    "events_url": "https://api.github.com/users/augustocerqua/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/augustocerqua/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 1,
                "created_at": "2022-09-05T07:10:21Z",
                "updated_at": "2022-09-05T17:32:12Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "Dear Authors,\r\n\r\nI have recently worked on a code I created last year using PanelMatch. After running the estimates, I noticed that the point estimates are the same as they used to be, while I noticed a steep increase in the standard errors (between +20 and +30%). As my code has not changed over the last year (Mahalanobis matching, with bootstrapped SE and 1,000 iterations), this might be due to the use of a novel version of R or, more likely, to some updates to PanelMatch/PanelEstimate. Is it possible you modified the way PanelEstimate computes bootstrapped standard errors over the last few months?\r\n\r\nMany thanks,\r\nAugusto Cerqua",
                "reactions": {
                    "url": "https://api.github.com/repos/insongkim/PanelMatch/issues/109/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/109/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/insongkim/PanelMatch/issues/comments/1237333611",
                "html_url": "https://github.com/insongkim/PanelMatch/issues/109#issuecomment-1237333611",
                "issue_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/109",
                "id": 1237333611,
                "node_id": "IC_kwDOB2WaS85JwDZr",
                "user": {
                    "login": "adamrauh",
                    "id": 990177,
                    "node_id": "MDQ6VXNlcjk5MDE3Nw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/990177?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/adamrauh",
                    "html_url": "https://github.com/adamrauh",
                    "followers_url": "https://api.github.com/users/adamrauh/followers",
                    "following_url": "https://api.github.com/users/adamrauh/following{/other_user}",
                    "gists_url": "https://api.github.com/users/adamrauh/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/adamrauh/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/adamrauh/subscriptions",
                    "organizations_url": "https://api.github.com/users/adamrauh/orgs",
                    "repos_url": "https://api.github.com/users/adamrauh/repos",
                    "events_url": "https://api.github.com/users/adamrauh/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/adamrauh/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2022-09-05T17:32:12Z",
                "updated_at": "2022-09-05T17:32:12Z",
                "author_association": "COLLABORATOR",
                "body": "Hi Augusto, \r\n\r\nYes, we did make some updates to PanelEstimate a little while ago that would have exactly this kind of result. So, this seems like the most likely explanation. We did also add analytical standard errors in recent version of the package, which you may be interested in trying out as well.\r\n\r\nThanks for your continued use of the package. Let us know if you have other questions.\r\n-Adam",
                "reactions": {
                    "url": "https://api.github.com/repos/insongkim/PanelMatch/issues/comments/1237333611/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2022-09-05T17:32:12Z"
    },
    {
        "id": "23695462069",
        "type": "IssuesEvent",
        "actor": {
            "id": 990177,
            "login": "adamrauh",
            "display_login": "adamrauh",
            "gravatar_id": "",
            "url": "https://api.github.com/users/adamrauh",
            "avatar_url": "https://avatars.githubusercontent.com/u/990177?"
        },
        "repo": {
            "id": 124099147,
            "name": "insongkim/PanelMatch",
            "url": "https://api.github.com/repos/insongkim/PanelMatch"
        },
        "payload": {
            "action": "closed",
            "issue": {
                "url": "https://api.github.com/repos/insongkim/PanelMatch/issues/99",
                "repository_url": "https://api.github.com/repos/insongkim/PanelMatch",
                "labels_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/99/labels{/name}",
                "comments_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/99/comments",
                "events_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/99/events",
                "html_url": "https://github.com/insongkim/PanelMatch/issues/99",
                "id": 1170229061,
                "node_id": "I_kwDOB2WaS85FwEdF",
                "number": 99,
                "title": "Estimate the ATT over time ",
                "user": {
                    "login": "avishwanath28",
                    "id": 45737928,
                    "node_id": "MDQ6VXNlcjQ1NzM3OTI4",
                    "avatar_url": "https://avatars.githubusercontent.com/u/45737928?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/avishwanath28",
                    "html_url": "https://github.com/avishwanath28",
                    "followers_url": "https://api.github.com/users/avishwanath28/followers",
                    "following_url": "https://api.github.com/users/avishwanath28/following{/other_user}",
                    "gists_url": "https://api.github.com/users/avishwanath28/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/avishwanath28/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/avishwanath28/subscriptions",
                    "organizations_url": "https://api.github.com/users/avishwanath28/orgs",
                    "repos_url": "https://api.github.com/users/avishwanath28/repos",
                    "events_url": "https://api.github.com/users/avishwanath28/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/avishwanath28/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "closed",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 1,
                "created_at": "2022-03-15T20:41:14Z",
                "updated_at": "2022-08-29T14:19:07Z",
                "closed_at": "2022-08-29T14:19:07Z",
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "Right now, the package produces ATTs by treatment time (e.g., t+1, t+2). Is it possible to return a single estimate of the ATT pooled across treatment time? I imagine this would have to take into account a) differing number of treated units at different treatment times and b) within-unit covariance over time. ",
                "reactions": {
                    "url": "https://api.github.com/repos/insongkim/PanelMatch/issues/99/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/99/timeline",
                "performed_via_github_app": null,
                "state_reason": "completed"
            }
        },
        "public": true,
        "created_at": "2022-08-29T14:19:08Z"
    },
    {
        "id": "23695461898",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 990177,
            "login": "adamrauh",
            "display_login": "adamrauh",
            "gravatar_id": "",
            "url": "https://api.github.com/users/adamrauh",
            "avatar_url": "https://avatars.githubusercontent.com/u/990177?"
        },
        "repo": {
            "id": 124099147,
            "name": "insongkim/PanelMatch",
            "url": "https://api.github.com/repos/insongkim/PanelMatch"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/insongkim/PanelMatch/issues/99",
                "repository_url": "https://api.github.com/repos/insongkim/PanelMatch",
                "labels_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/99/labels{/name}",
                "comments_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/99/comments",
                "events_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/99/events",
                "html_url": "https://github.com/insongkim/PanelMatch/issues/99",
                "id": 1170229061,
                "node_id": "I_kwDOB2WaS85FwEdF",
                "number": 99,
                "title": "Estimate the ATT over time ",
                "user": {
                    "login": "avishwanath28",
                    "id": 45737928,
                    "node_id": "MDQ6VXNlcjQ1NzM3OTI4",
                    "avatar_url": "https://avatars.githubusercontent.com/u/45737928?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/avishwanath28",
                    "html_url": "https://github.com/avishwanath28",
                    "followers_url": "https://api.github.com/users/avishwanath28/followers",
                    "following_url": "https://api.github.com/users/avishwanath28/following{/other_user}",
                    "gists_url": "https://api.github.com/users/avishwanath28/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/avishwanath28/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/avishwanath28/subscriptions",
                    "organizations_url": "https://api.github.com/users/avishwanath28/orgs",
                    "repos_url": "https://api.github.com/users/avishwanath28/repos",
                    "events_url": "https://api.github.com/users/avishwanath28/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/avishwanath28/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "closed",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 1,
                "created_at": "2022-03-15T20:41:14Z",
                "updated_at": "2022-08-29T14:19:07Z",
                "closed_at": "2022-08-29T14:19:07Z",
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "Right now, the package produces ATTs by treatment time (e.g., t+1, t+2). Is it possible to return a single estimate of the ATT pooled across treatment time? I imagine this would have to take into account a) differing number of treated units at different treatment times and b) within-unit covariance over time. ",
                "reactions": {
                    "url": "https://api.github.com/repos/insongkim/PanelMatch/issues/99/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/99/timeline",
                "performed_via_github_app": null,
                "state_reason": "completed"
            },
            "comment": {
                "url": "https://api.github.com/repos/insongkim/PanelMatch/issues/comments/1230377554",
                "html_url": "https://github.com/insongkim/PanelMatch/issues/99#issuecomment-1230377554",
                "issue_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/99",
                "id": 1230377554,
                "node_id": "IC_kwDOB2WaS85JVhJS",
                "user": {
                    "login": "adamrauh",
                    "id": 990177,
                    "node_id": "MDQ6VXNlcjk5MDE3Nw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/990177?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/adamrauh",
                    "html_url": "https://github.com/adamrauh",
                    "followers_url": "https://api.github.com/users/adamrauh/followers",
                    "following_url": "https://api.github.com/users/adamrauh/following{/other_user}",
                    "gists_url": "https://api.github.com/users/adamrauh/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/adamrauh/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/adamrauh/subscriptions",
                    "organizations_url": "https://api.github.com/users/adamrauh/orgs",
                    "repos_url": "https://api.github.com/users/adamrauh/repos",
                    "events_url": "https://api.github.com/users/adamrauh/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/adamrauh/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2022-08-29T14:19:07Z",
                "updated_at": "2022-08-29T14:19:07Z",
                "author_association": "COLLABORATOR",
                "body": "(For future reference)\r\nimplemented in: b0a33710fafdfe3f723871d34b0b7eea25b1c38e",
                "reactions": {
                    "url": "https://api.github.com/repos/insongkim/PanelMatch/issues/comments/1230377554/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2022-08-29T14:19:07Z"
    },
    {
        "id": "23695400725",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 990177,
            "login": "adamrauh",
            "display_login": "adamrauh",
            "gravatar_id": "",
            "url": "https://api.github.com/users/adamrauh",
            "avatar_url": "https://avatars.githubusercontent.com/u/990177?"
        },
        "repo": {
            "id": 124099147,
            "name": "insongkim/PanelMatch",
            "url": "https://api.github.com/repos/insongkim/PanelMatch"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/insongkim/PanelMatch/issues/107",
                "repository_url": "https://api.github.com/repos/insongkim/PanelMatch",
                "labels_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/107/labels{/name}",
                "comments_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/107/comments",
                "events_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/107/events",
                "html_url": "https://github.com/insongkim/PanelMatch/issues/107",
                "id": 1353321865,
                "node_id": "I_kwDOB2WaS85Qqg2J",
                "number": 107,
                "title": "Data/ data frame",
                "user": {
                    "login": "eostrinidad",
                    "id": 67266504,
                    "node_id": "MDQ6VXNlcjY3MjY2NTA0",
                    "avatar_url": "https://avatars.githubusercontent.com/u/67266504?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/eostrinidad",
                    "html_url": "https://github.com/eostrinidad",
                    "followers_url": "https://api.github.com/users/eostrinidad/followers",
                    "following_url": "https://api.github.com/users/eostrinidad/following{/other_user}",
                    "gists_url": "https://api.github.com/users/eostrinidad/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/eostrinidad/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/eostrinidad/subscriptions",
                    "organizations_url": "https://api.github.com/users/eostrinidad/orgs",
                    "repos_url": "https://api.github.com/users/eostrinidad/repos",
                    "events_url": "https://api.github.com/users/eostrinidad/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/eostrinidad/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 1,
                "created_at": "2022-08-28T11:14:09Z",
                "updated_at": "2022-08-29T14:16:34Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "I get this message whenever I use PanelMatch:\r\n\r\nplease convert data to data.frame class\r\nIn addition: Warning message:\r\nIn if (class(data) != \"data.frame\") stop(\"please convert data to data.frame class\") :\r\n  the condition has length > 1 and only the first element will be used\r\n\r\nHowever, my data is already a data frame. Any advice for this? Thanks!",
                "reactions": {
                    "url": "https://api.github.com/repos/insongkim/PanelMatch/issues/107/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/107/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/insongkim/PanelMatch/issues/comments/1230373464",
                "html_url": "https://github.com/insongkim/PanelMatch/issues/107#issuecomment-1230373464",
                "issue_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/107",
                "id": 1230373464,
                "node_id": "IC_kwDOB2WaS85JVgJY",
                "user": {
                    "login": "adamrauh",
                    "id": 990177,
                    "node_id": "MDQ6VXNlcjk5MDE3Nw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/990177?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/adamrauh",
                    "html_url": "https://github.com/adamrauh",
                    "followers_url": "https://api.github.com/users/adamrauh/followers",
                    "following_url": "https://api.github.com/users/adamrauh/following{/other_user}",
                    "gists_url": "https://api.github.com/users/adamrauh/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/adamrauh/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/adamrauh/subscriptions",
                    "organizations_url": "https://api.github.com/users/adamrauh/orgs",
                    "repos_url": "https://api.github.com/users/adamrauh/repos",
                    "events_url": "https://api.github.com/users/adamrauh/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/adamrauh/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2022-08-29T14:16:34Z",
                "updated_at": "2022-08-29T14:16:34Z",
                "author_association": "COLLABORATOR",
                "body": "Hi @eostrinidad , thanks for using the package! \r\n\r\nIt is a bit hard to say, but have you tried explicitly setting the class of the data -- something like `class(data) <- \"data.frame\"`? This error seems to suggest that the data object being passed has more than one class associated with it.",
                "reactions": {
                    "url": "https://api.github.com/repos/insongkim/PanelMatch/issues/comments/1230373464/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2022-08-29T14:16:34Z"
    },
    {
        "id": "23432911224",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 990177,
            "login": "adamrauh",
            "display_login": "adamrauh",
            "gravatar_id": "",
            "url": "https://api.github.com/users/adamrauh",
            "avatar_url": "https://avatars.githubusercontent.com/u/990177?"
        },
        "repo": {
            "id": 124099147,
            "name": "insongkim/PanelMatch",
            "url": "https://api.github.com/repos/insongkim/PanelMatch"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/insongkim/PanelMatch/issues/106",
                "repository_url": "https://api.github.com/repos/insongkim/PanelMatch",
                "labels_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/106/labels{/name}",
                "comments_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/106/comments",
                "events_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/106/events",
                "html_url": "https://github.com/insongkim/PanelMatch/issues/106",
                "id": 1337754808,
                "node_id": "I_kwDOB2WaS85PvIS4",
                "number": 106,
                "title": "Handling different numbers of maximum lags in data",
                "user": {
                    "login": "emcghee73",
                    "id": 34285803,
                    "node_id": "MDQ6VXNlcjM0Mjg1ODAz",
                    "avatar_url": "https://avatars.githubusercontent.com/u/34285803?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/emcghee73",
                    "html_url": "https://github.com/emcghee73",
                    "followers_url": "https://api.github.com/users/emcghee73/followers",
                    "following_url": "https://api.github.com/users/emcghee73/following{/other_user}",
                    "gists_url": "https://api.github.com/users/emcghee73/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/emcghee73/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/emcghee73/subscriptions",
                    "organizations_url": "https://api.github.com/users/emcghee73/orgs",
                    "repos_url": "https://api.github.com/users/emcghee73/repos",
                    "events_url": "https://api.github.com/users/emcghee73/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/emcghee73/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 1,
                "created_at": "2022-08-12T22:31:21Z",
                "updated_at": "2022-08-15T06:10:00Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "What does PanelMatch do if some of the treated units have fewer total lags in the data than lags specified in PanelMatch?  For example, if I set PanelMatch to use 2 lags (both for the initial matched set and for refinement) but treated unit X only has one lag in the data, what does PanelMatch do?  Does it drop X?  Or does it attempt to match on one lag?",
                "reactions": {
                    "url": "https://api.github.com/repos/insongkim/PanelMatch/issues/106/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/106/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/insongkim/PanelMatch/issues/comments/1214652750",
                "html_url": "https://github.com/insongkim/PanelMatch/issues/106#issuecomment-1214652750",
                "issue_url": "https://api.github.com/repos/insongkim/PanelMatch/issues/106",
                "id": 1214652750,
                "node_id": "IC_kwDOB2WaS85IZiFO",
                "user": {
                    "login": "adamrauh",
                    "id": 990177,
                    "node_id": "MDQ6VXNlcjk5MDE3Nw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/990177?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/adamrauh",
                    "html_url": "https://github.com/adamrauh",
                    "followers_url": "https://api.github.com/users/adamrauh/followers",
                    "following_url": "https://api.github.com/users/adamrauh/following{/other_user}",
                    "gists_url": "https://api.github.com/users/adamrauh/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/adamrauh/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/adamrauh/subscriptions",
                    "organizations_url": "https://api.github.com/users/adamrauh/orgs",
                    "repos_url": "https://api.github.com/users/adamrauh/repos",
                    "events_url": "https://api.github.com/users/adamrauh/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/adamrauh/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2022-08-15T06:10:00Z",
                "updated_at": "2022-08-15T06:10:00Z",
                "author_association": "COLLABORATOR",
                "body": "Hi @emcghee73 , thanks for using the package. I have a clarifying question. Are you talking about the case of one or more treated unit missing some treatment data in the lag window? ",
                "reactions": {
                    "url": "https://api.github.com/repos/insongkim/PanelMatch/issues/comments/1214652750/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2022-08-15T06:10:00Z"
    }
]
[
    {
        "id": "24664081284",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 29628323,
            "login": "AlanSl",
            "display_login": "AlanSl",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AlanSl",
            "avatar_url": "https://avatars.githubusercontent.com/u/29628323?"
        },
        "repo": {
            "id": 109059304,
            "name": "facebook/react-native-website",
            "url": "https://api.github.com/repos/facebook/react-native-website"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/facebook/react-native-website/issues/3215",
                "repository_url": "https://api.github.com/repos/facebook/react-native-website",
                "labels_url": "https://api.github.com/repos/facebook/react-native-website/issues/3215/labels{/name}",
                "comments_url": "https://api.github.com/repos/facebook/react-native-website/issues/3215/comments",
                "events_url": "https://api.github.com/repos/facebook/react-native-website/issues/3215/events",
                "html_url": "https://github.com/facebook/react-native-website/issues/3215",
                "id": 1309336090,
                "node_id": "I_kwDOBoAc6M5OCuIa",
                "number": 3215,
                "title": "Please document correct usage of accessibilityRole \"link\"",
                "user": {
                    "login": "AlanSl",
                    "id": 29628323,
                    "node_id": "MDQ6VXNlcjI5NjI4MzIz",
                    "avatar_url": "https://avatars.githubusercontent.com/u/29628323?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/AlanSl",
                    "html_url": "https://github.com/AlanSl",
                    "followers_url": "https://api.github.com/users/AlanSl/followers",
                    "following_url": "https://api.github.com/users/AlanSl/following{/other_user}",
                    "gists_url": "https://api.github.com/users/AlanSl/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/AlanSl/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/AlanSl/subscriptions",
                    "organizations_url": "https://api.github.com/users/AlanSl/orgs",
                    "repos_url": "https://api.github.com/users/AlanSl/repos",
                    "events_url": "https://api.github.com/users/AlanSl/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/AlanSl/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 2279176779,
                        "node_id": "MDU6TGFiZWwyMjc5MTc2Nzc5",
                        "url": "https://api.github.com/repos/facebook/react-native-website/labels/Stale",
                        "name": "Stale",
                        "color": "dddddd",
                        "default": false,
                        "description": ""
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 1,
                "created_at": "2022-07-19T10:49:06Z",
                "updated_at": "2022-10-18T08:59:03Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "## Description\r\n\r\nHere's the current [documentation for `accessibilityRole=\"link\"`](https://reactnative.dev/docs/accessibility#accessibilityrole):\r\n\r\n> **link** Used when the element should be treated as a link.\r\n\r\nThis... could be more helpful. It's arguably a tautology: it says the link role should be used in those cases where the link role should be used. \r\n\r\nThere are many examples (some given below) of inconsistent and sometimes contradictory ways this has been interpreted.  \r\n\r\n## What is the problem?\r\n\r\nThis is a problem because people fill in their own common-sense opinion on how link roles should be used (possibly  influenced by non-equivalent experience of links on websites).\r\n\r\nFor example, I've encountered three different interpretations on how the link role should be used, all from seemingly authoritative sources:\r\n\r\n 1. **Navigation between screens**: The widely used [react-navigation](https://github.com/react-navigation/react-navigation) project has utilities like [`useLinkProps`](https://github.com/react-navigation/react-navigation/blob/6a19be7dae997fc23ac9475040a17fb2db4ebd52/packages/native/src/useLinkProps.tsx#L123) that apply `accessiblityRole=\"link\"` to any element that navigates between screens - every element using these utilities that would do internal routing in a  web context will get the \"link\" role in Android and iOS.\r\n 2. **All interactive inline text**: The [react-native-accessibility-engine](https://github.com/aryella-lacerda/react-native-accessibility-engine) project has [a test \"link-role-required\"](https://github.com/aryella-lacerda/react-native-accessibility-engine/tree/main/src/rules/link-role-required) that requires any `Text` element with an `onPress` handler to have the role \"link\", regardless of what the press does. This appears to be interpreting \"link\" by presentation (interactive inline text) rather than the nature of the action.\r\n 3. **Opening URLs in device browser**: App accessibility consultants I've worked with in the past have advised that \"link\" should be used _specifically_ for interactive elements that cause the app open and focus a web browser, and that \"button\" should be used for in-app navigation (regardless of element type). Here's an example of [an accessibility consultancy giving this advice in the context of iOS](https://www.deque.com/blog/ios-traits/):\r\n\r\n> Links open a URL in an external browser.  This the important distinction between buttons.  Only apply the trait of link when the users interaction with the control will take them out of your application and into Safari.\r\n\r\n## How can we address it?\r\n\r\nThere _is_ one right answer as to how React Native's link accessibilityRole is intended to be used, based on the appropriate iOS and Android guidance for the underlying properties and traits that React Native applies internally to the native Android and iOS elements it controls. \r\n\r\nThe React Native accessibility docs should state it clearly. For example (assuming this one is correct):\r\n\r\n> **link** Interactive elements that load a web page in a device browser, switching focus away from this app \r\n\r\n## Why is it important?\r\n\r\nThere's clearly already diverging interpretations of how this role should be used, and it's a very commonly used role, so there is almost certainly already a lot of inconsistency on when elements are described as a \"Link\" in React Native apps in production.\r\n\r\n## Who needs this?\r\n\r\nIdeally all React Native developers should be applying this accessibilityRole consistently and correctly.\r\n\r\n## When should this happen (use version numbers if needed)?\r\n\r\nAs soon as there's a clear consensus on what the correct usage is.",
                "reactions": {
                    "url": "https://api.github.com/repos/facebook/react-native-website/issues/3215/reactions",
                    "total_count": 1,
                    "+1": 1,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/facebook/react-native-website/issues/3215/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/facebook/react-native-website/issues/comments/1282048386",
                "html_url": "https://github.com/facebook/react-native-website/issues/3215#issuecomment-1282048386",
                "issue_url": "https://api.github.com/repos/facebook/react-native-website/issues/3215",
                "id": 1282048386,
                "node_id": "IC_kwDOBoAc6M5MaoGC",
                "user": {
                    "login": "AlanSl",
                    "id": 29628323,
                    "node_id": "MDQ6VXNlcjI5NjI4MzIz",
                    "avatar_url": "https://avatars.githubusercontent.com/u/29628323?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/AlanSl",
                    "html_url": "https://github.com/AlanSl",
                    "followers_url": "https://api.github.com/users/AlanSl/followers",
                    "following_url": "https://api.github.com/users/AlanSl/following{/other_user}",
                    "gists_url": "https://api.github.com/users/AlanSl/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/AlanSl/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/AlanSl/subscriptions",
                    "organizations_url": "https://api.github.com/users/AlanSl/orgs",
                    "repos_url": "https://api.github.com/users/AlanSl/repos",
                    "events_url": "https://api.github.com/users/AlanSl/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/AlanSl/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2022-10-18T08:59:03Z",
                "updated_at": "2022-10-18T08:59:03Z",
                "author_association": "NONE",
                "body": "No it's not fixed, stay open please.",
                "reactions": {
                    "url": "https://api.github.com/repos/facebook/react-native-website/issues/comments/1282048386/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2022-10-18T08:59:03Z",
        "org": {
            "id": 69631,
            "login": "facebook",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/facebook",
            "avatar_url": "https://avatars.githubusercontent.com/u/69631?"
        }
    },
    {
        "id": "24648364060",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 29628323,
            "login": "AlanSl",
            "display_login": "AlanSl",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AlanSl",
            "avatar_url": "https://avatars.githubusercontent.com/u/29628323?"
        },
        "repo": {
            "id": 151103020,
            "name": "callstack/react-native-testing-library",
            "url": "https://api.github.com/repos/callstack/react-native-testing-library"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/callstack/react-native-testing-library/issues/786",
                "repository_url": "https://api.github.com/repos/callstack/react-native-testing-library",
                "labels_url": "https://api.github.com/repos/callstack/react-native-testing-library/issues/786/labels{/name}",
                "comments_url": "https://api.github.com/repos/callstack/react-native-testing-library/issues/786/comments",
                "events_url": "https://api.github.com/repos/callstack/react-native-testing-library/issues/786/events",
                "html_url": "https://github.com/callstack/react-native-testing-library/issues/786",
                "id": 949866768,
                "node_id": "MDU6SXNzdWU5NDk4NjY3Njg=",
                "number": 786,
                "title": "How to use `getByTestId` on web?",
                "user": {
                    "login": "conor909",
                    "id": 2417359,
                    "node_id": "MDQ6VXNlcjI0MTczNTk=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/2417359?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/conor909",
                    "html_url": "https://github.com/conor909",
                    "followers_url": "https://api.github.com/users/conor909/followers",
                    "following_url": "https://api.github.com/users/conor909/following{/other_user}",
                    "gists_url": "https://api.github.com/users/conor909/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/conor909/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/conor909/subscriptions",
                    "organizations_url": "https://api.github.com/users/conor909/orgs",
                    "repos_url": "https://api.github.com/users/conor909/repos",
                    "events_url": "https://api.github.com/users/conor909/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/conor909/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 1075506357,
                        "node_id": "MDU6TGFiZWwxMDc1NTA2MzU3",
                        "url": "https://api.github.com/repos/callstack/react-native-testing-library/labels/question",
                        "name": "question",
                        "color": "d876e3",
                        "default": true,
                        "description": "Further information is requested"
                    }
                ],
                "state": "closed",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 4,
                "created_at": "2021-07-21T15:55:02Z",
                "updated_at": "2022-10-17T16:29:12Z",
                "closed_at": "2021-08-13T19:36:26Z",
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "I believe there was recently a merge to make sure `getByTestId` only returns native elements.\r\nhttps://github.com/callstack/react-native-testing-library/pull/324\r\n\r\nDoes this mean we can't use `getByTestId` on web?\r\n\r\nIn my test file in `web` says no element matches the testID, where as in `iOS` it' finds the element and my test passes.  If I switch to use a `queryByText` query, it works fine on both platforms. But I'm targeting a plain react native `<View>` to check the styling on it is expected, so I need to target by `testID`.\r\n\r\n```js\r\n  // Fails to find ID\r\n  if (Platform.OS === 'web') {\r\n    test('StickyHeader should have sticky position prop on web', () => {\r\n      const { getByTestId } = renderRoute(<AuthenticatedApp logOut={jest.fn} user={user} />)\r\n      const stickyHeader = getByTestId('sticky-header')\r\n      expect(stickyHeader).toHaveStyle({ position: 'sticky' })\r\n    })\r\n  } \r\n\r\n  // Passes\r\n  if (Platform.OS === 'ios') {\r\n    test('StickyHeader should have relative position prop on ios ', () => {\r\n      const { getByTestId } = renderRoute(<AuthenticatedApp logOut={jest.fn} user={user} />)\r\n      const stickyHeader = getByTestId('sticky-header')\r\n      expect(stickyHeader).toHaveStyle({ position: 'relative' })\r\n    })\r\n  }\r\n```\r\n\r\ndebug\r\n```js\r\n// prints out the screen structure and I can see an object with `testID='sticky-header'`\r\n// it also includes style object with `position: 'sticky'`, so I can see it does exist\r\nconst { debug } = renderRoute(<AuthenticatedApp logOut={jest.fn} user={user} />)\r\ndebug()\r\n```",
                "reactions": {
                    "url": "https://api.github.com/repos/callstack/react-native-testing-library/issues/786/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/callstack/react-native-testing-library/issues/786/timeline",
                "performed_via_github_app": null,
                "state_reason": "completed"
            },
            "comment": {
                "url": "https://api.github.com/repos/callstack/react-native-testing-library/issues/comments/1281140468",
                "html_url": "https://github.com/callstack/react-native-testing-library/issues/786#issuecomment-1281140468",
                "issue_url": "https://api.github.com/repos/callstack/react-native-testing-library/issues/786",
                "id": 1281140468,
                "node_id": "IC_kwDOCQGmLM5MXKb0",
                "user": {
                    "login": "AlanSl",
                    "id": 29628323,
                    "node_id": "MDQ6VXNlcjI5NjI4MzIz",
                    "avatar_url": "https://avatars.githubusercontent.com/u/29628323?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/AlanSl",
                    "html_url": "https://github.com/AlanSl",
                    "followers_url": "https://api.github.com/users/AlanSl/followers",
                    "following_url": "https://api.github.com/users/AlanSl/following{/other_user}",
                    "gists_url": "https://api.github.com/users/AlanSl/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/AlanSl/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/AlanSl/subscriptions",
                    "organizations_url": "https://api.github.com/users/AlanSl/orgs",
                    "repos_url": "https://api.github.com/users/AlanSl/repos",
                    "events_url": "https://api.github.com/users/AlanSl/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/AlanSl/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2022-10-17T16:29:12Z",
                "updated_at": "2022-10-17T16:29:12Z",
                "author_association": "NONE",
                "body": "I think the original \"lack of understanding\" was misunderstanding the old linked PR \"to make sure getByTestId only returns native elements. https://github.com/callstack/react-native-testing-library/pull/324\" - reading it as web vs native when it was actually nothing to do with web, and by \"native elements\" it meant React Native primitives (View, Text, TextInput) that directly correspond to an underlying iOS or Android element vs custom intermediary components that only exist in JS / React.\r\n\r\nAs for the question of how to use `*ByTestId` in cross-platform tests that include React Native Web, the closest I can find to an answer is this long discussion here - https://github.com/callstack/react-native-testing-library/pull/407",
                "reactions": {
                    "url": "https://api.github.com/repos/callstack/react-native-testing-library/issues/comments/1281140468/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2022-10-17T16:29:13Z",
        "org": {
            "id": 42239399,
            "login": "callstack",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/callstack",
            "avatar_url": "https://avatars.githubusercontent.com/u/42239399?"
        }
    },
    {
        "id": "24221090979",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 29628323,
            "login": "AlanSl",
            "display_login": "AlanSl",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AlanSl",
            "avatar_url": "https://avatars.githubusercontent.com/u/29628323?"
        },
        "repo": {
            "id": 65750241,
            "name": "expo/expo",
            "url": "https://api.github.com/repos/expo/expo"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/expo/expo/issues/16673",
                "repository_url": "https://api.github.com/repos/expo/expo",
                "labels_url": "https://api.github.com/repos/expo/expo/issues/16673/labels{/name}",
                "comments_url": "https://api.github.com/repos/expo/expo/issues/16673/comments",
                "events_url": "https://api.github.com/repos/expo/expo/issues/16673/events",
                "html_url": "https://github.com/expo/expo/issues/16673",
                "id": 1172357887,
                "node_id": "I_kwDOA-tE4c5F4ML_",
                "number": 16673,
                "title": "[babel-expo-preset] Can't pass options to `react-native-web` preset in a multi-platform app",
                "user": {
                    "login": "AlanSl",
                    "id": 29628323,
                    "node_id": "MDQ6VXNlcjI5NjI4MzIz",
                    "avatar_url": "https://avatars.githubusercontent.com/u/29628323?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/AlanSl",
                    "html_url": "https://github.com/AlanSl",
                    "followers_url": "https://api.github.com/users/AlanSl/followers",
                    "following_url": "https://api.github.com/users/AlanSl/following{/other_user}",
                    "gists_url": "https://api.github.com/users/AlanSl/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/AlanSl/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/AlanSl/subscriptions",
                    "organizations_url": "https://api.github.com/users/AlanSl/orgs",
                    "repos_url": "https://api.github.com/users/AlanSl/repos",
                    "events_url": "https://api.github.com/users/AlanSl/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/AlanSl/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 1499152597,
                        "node_id": "MDU6TGFiZWwxNDk5MTUyNTk3",
                        "url": "https://api.github.com/repos/expo/expo/labels/stale",
                        "name": "stale",
                        "color": "f1f1f1",
                        "default": false,
                        "description": ""
                    },
                    {
                        "id": 2125837378,
                        "node_id": "MDU6TGFiZWwyMTI1ODM3Mzc4",
                        "url": "https://api.github.com/repos/expo/expo/labels/needs%20review",
                        "name": "needs review",
                        "color": "92f989",
                        "default": false,
                        "description": "Issue is ready to be reviewed by a maintainer"
                    }
                ],
                "state": "closed",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 9,
                "created_at": "2022-03-16T14:42:56Z",
                "updated_at": "2022-09-26T10:56:26Z",
                "closed_at": "2022-09-25T10:04:26Z",
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "### Summary\r\n\r\nThere seems to be no way to set options for the `react-native-web` babel plugin when using `babel-preset-expo` without causing the plugin to apply in native builds too, which breaks them:\r\n\r\n- Within `babel-preset-expo`, the setup of `babel-plugin-react-native-web` is hardcoded to have no options: https://github.com/expo/expo/blob/main/packages/babel-preset-expo/index.js#L107\r\n- Users can't configure `babel-plugin-react-native-web` in their own babel config without it applying to all builds, breaking native builds\r\n- The logic within `babel-preset-expo` that conditionally applies `babel-plugin-react-native-web` only on web depends on `api.caller()` data that is only passed to `babel-preset-expo`. Knowledge of platform seems to be unavailable anywhere in own `babel.config.js`. There's also nothing about platform in `process.env` when the build is launched through Expo's own interface.\r\n- I've seen some mentions of `web/webpack.config.js` for web-specific webpack config; but `web/babel.config.js` is ignored; I also saw some mention somewhere of defining `web.build.babel` object in `app.json` but this caused the build to fail silently with no log output.\r\n\r\nIf the platform is only available within `babel-preset-expo`, there should be a way to pass config options in; if there isn't a way to pass config options in, there should be a way to conditionally apply the plugin based on the current build's target platform; but there's neither.\r\n\r\n### Managed or bare workflow? If you have `ios/` or `android/` directories in your project, the answer is bare!\r\n\r\nmanaged\r\n\r\n### What platform(s) does this occur on?\r\n\r\nWeb\r\n\r\n### SDK Version (managed workflow only)\r\n\r\n44\r\n\r\n### Environment\r\n\r\n```\r\n  expo-env-info 1.0.2 environment info:\r\n    System:\r\n      OS: macOS 11.6.4\r\n      Shell: 5.8 - /bin/zsh\r\n    Binaries:\r\n      Node: 16.1.0 - ~/.nvm/versions/node/v16.1.0/bin/node\r\n      Yarn: 1.22.17 - ~/.nvm/versions/node/v16.1.0/bin/yarn\r\n      npm: 8.5.3 - ~/.nvm/versions/node/v16.1.0/bin/npm\r\n      Watchman: 2021.06.07.00 - /usr/local/bin/watchman\r\n    Managers:\r\n      CocoaPods: 1.10.1 - /usr/local/bin/pod\r\n    SDKs:\r\n      iOS SDK:\r\n        Platforms: DriverKit 21.2, iOS 15.2, macOS 12.1, tvOS 15.2, watchOS 8.3\r\n      Android SDK:\r\n        API Levels: 29, 30\r\n        Build Tools: 29.0.2, 30.0.3\r\n        System Images: android-29 | Intel x86 Atom_64, android-30 | Google APIs Intel x86 Atom\r\n    IDEs:\r\n      Xcode: 13.2.1/13C100 - /usr/bin/xcodebuild\r\n    npmGlobalPackages:\r\n      expo-cli: 5.3.0\r\n    Expo Workflow: managed\r\n```\r\n\r\n### Reproducible demo\r\n\r\n```js\r\n// babel.config.js in a new Expo app\r\nmodule.exports = function (api) {\r\n  // This always returns undefined: platform is unavailable outside babel-preset-expo internals?\r\n  const platform = api.caller((caller) => caller?.platform)\r\n\r\n  // Adding 'react-native-web' plugin without a platform check breaks native builds; but platform\r\n  // check is not possible? So plugins applied here are either \"all platforms\" or \"no platforms\"?\r\n  const plugins = platform === 'web' ? [['react-native-web', { commonjs: true }]] : []\r\n\r\n  api.cache(true)\r\n  return {\r\n    presets: ['babel-preset-expo'],\r\n    plugins\r\n  }\r\n}\r\n```",
                "reactions": {
                    "url": "https://api.github.com/repos/expo/expo/issues/16673/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/expo/expo/issues/16673/timeline",
                "performed_via_github_app": null,
                "state_reason": "completed"
            },
            "comment": {
                "url": "https://api.github.com/repos/expo/expo/issues/comments/1257853133",
                "html_url": "https://github.com/expo/expo/issues/16673#issuecomment-1257853133",
                "issue_url": "https://api.github.com/repos/expo/expo/issues/16673",
                "id": 1257853133,
                "node_id": "IC_kwDOA-tE4c5K-VDN",
                "user": {
                    "login": "AlanSl",
                    "id": 29628323,
                    "node_id": "MDQ6VXNlcjI5NjI4MzIz",
                    "avatar_url": "https://avatars.githubusercontent.com/u/29628323?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/AlanSl",
                    "html_url": "https://github.com/AlanSl",
                    "followers_url": "https://api.github.com/users/AlanSl/followers",
                    "following_url": "https://api.github.com/users/AlanSl/following{/other_user}",
                    "gists_url": "https://api.github.com/users/AlanSl/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/AlanSl/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/AlanSl/subscriptions",
                    "organizations_url": "https://api.github.com/users/AlanSl/orgs",
                    "repos_url": "https://api.github.com/users/AlanSl/repos",
                    "events_url": "https://api.github.com/users/AlanSl/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/AlanSl/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2022-09-26T10:56:26Z",
                "updated_at": "2022-09-26T10:56:26Z",
                "author_association": "NONE",
                "body": "I think this is still an issue. \r\n\r\n(couldn't respond within the bot's 7 days because I was away last week)",
                "reactions": {
                    "url": "https://api.github.com/repos/expo/expo/issues/comments/1257853133/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2022-09-26T10:56:26Z",
        "org": {
            "id": 12504344,
            "login": "expo",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/expo",
            "avatar_url": "https://avatars.githubusercontent.com/u/12504344?"
        }
    },
    {
        "id": "24005363492",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 29628323,
            "login": "AlanSl",
            "display_login": "AlanSl",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AlanSl",
            "avatar_url": "https://avatars.githubusercontent.com/u/29628323?"
        },
        "repo": {
            "id": 88450703,
            "name": "wclr/yalc",
            "url": "https://api.github.com/repos/wclr/yalc"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/wclr/yalc/issues/203",
                "repository_url": "https://api.github.com/repos/wclr/yalc",
                "labels_url": "https://api.github.com/repos/wclr/yalc/issues/203/labels{/name}",
                "comments_url": "https://api.github.com/repos/wclr/yalc/issues/203/comments",
                "events_url": "https://api.github.com/repos/wclr/yalc/issues/203/events",
                "html_url": "https://github.com/wclr/yalc/issues/203",
                "id": 1347851175,
                "node_id": "I_kwDOBUWmj85QVpOn",
                "number": 203,
                "title": "`yalc add` on Mac can (rarely) fail with ENOTDIR invalid cwd, treating .DS_Store as a version directory.",
                "user": {
                    "login": "AlanSl",
                    "id": 29628323,
                    "node_id": "MDQ6VXNlcjI5NjI4MzIz",
                    "avatar_url": "https://avatars.githubusercontent.com/u/29628323?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/AlanSl",
                    "html_url": "https://github.com/AlanSl",
                    "followers_url": "https://api.github.com/users/AlanSl/followers",
                    "following_url": "https://api.github.com/users/AlanSl/following{/other_user}",
                    "gists_url": "https://api.github.com/users/AlanSl/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/AlanSl/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/AlanSl/subscriptions",
                    "organizations_url": "https://api.github.com/users/AlanSl/orgs",
                    "repos_url": "https://api.github.com/users/AlanSl/repos",
                    "events_url": "https://api.github.com/users/AlanSl/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/AlanSl/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 2,
                "created_at": "2022-08-23T12:13:09Z",
                "updated_at": "2022-09-14T14:27:00Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "I saw this for the first time today on running `yalc add` on several packages in a new repo (MacOS 11.6.8). All the packages worked except one, which gave this error:\r\n\r\n> Error: ENOTDIR invalid cwd /Users/alan/.yalc/packages/{package_name}/.DS_Store\r\n>     at Glob._readdirError (/Users/alan/.npm/_npx/8971ede65c5d814d/node_modules/glob/glob.js:589:21)\r\n>     at /Users/alan/.npm/_npx/8971ede65c5d814d/node_modules/glob/glob.js:550:12\r\n>     at FSReqCallback.oncomplete (node:fs:188:23) {\r\n>   path: '/Users/alan/.yalc/packages/{package_name}/.DS_Store',\r\n>   code: 'ENOTDIR'\r\n> }\r\n\r\nDeleting the Mac OS generated `.DS_Store` file in the Yalc package directory (the one that contains all the yalc-published versions) fixed this.\r\n\r\nIt's strange because:\r\n\r\n - All the other packages worked fine and they all had `.DS_Store` files in their directories of version directories\r\n - All the packages came from the same monorepo, which had `.DS_Store` in its gitignore",
                "reactions": {
                    "url": "https://api.github.com/repos/wclr/yalc/issues/203/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/wclr/yalc/issues/203/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/wclr/yalc/issues/comments/1246848488",
                "html_url": "https://github.com/wclr/yalc/issues/203#issuecomment-1246848488",
                "issue_url": "https://api.github.com/repos/wclr/yalc/issues/203",
                "id": 1246848488,
                "node_id": "IC_kwDOBUWmj85KUWXo",
                "user": {
                    "login": "AlanSl",
                    "id": 29628323,
                    "node_id": "MDQ6VXNlcjI5NjI4MzIz",
                    "avatar_url": "https://avatars.githubusercontent.com/u/29628323?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/AlanSl",
                    "html_url": "https://github.com/AlanSl",
                    "followers_url": "https://api.github.com/users/AlanSl/followers",
                    "following_url": "https://api.github.com/users/AlanSl/following{/other_user}",
                    "gists_url": "https://api.github.com/users/AlanSl/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/AlanSl/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/AlanSl/subscriptions",
                    "organizations_url": "https://api.github.com/users/AlanSl/orgs",
                    "repos_url": "https://api.github.com/users/AlanSl/repos",
                    "events_url": "https://api.github.com/users/AlanSl/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/AlanSl/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2022-09-14T14:27:00Z",
                "updated_at": "2022-09-14T14:27:00Z",
                "author_association": "NONE",
                "body": "Not really. It might be possible to work around by forcing the version folders to have a more recent created date than `.DS_Store`, e.g. by deleting the published versions then `yalc publish` again?",
                "reactions": {
                    "url": "https://api.github.com/repos/wclr/yalc/issues/comments/1246848488/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2022-09-14T14:27:01Z"
    },
    {
        "id": "23917625904",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 29628323,
            "login": "AlanSl",
            "display_login": "AlanSl",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AlanSl",
            "avatar_url": "https://avatars.githubusercontent.com/u/29628323?"
        },
        "repo": {
            "id": 49668250,
            "name": "dear-github/dear-github",
            "url": "https://api.github.com/repos/dear-github/dear-github"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/dear-github/dear-github/issues/332",
                "repository_url": "https://api.github.com/repos/dear-github/dear-github",
                "labels_url": "https://api.github.com/repos/dear-github/dear-github/issues/332/labels{/name}",
                "comments_url": "https://api.github.com/repos/dear-github/dear-github/issues/332/comments",
                "events_url": "https://api.github.com/repos/dear-github/dear-github/issues/332/events",
                "html_url": "https://github.com/dear-github/dear-github/issues/332",
                "id": 377623366,
                "node_id": "MDU6SXNzdWUzNzc2MjMzNjY=",
                "number": 332,
                "title": "Allow pull request author to \"Request Changes\" themselves",
                "user": {
                    "login": "adamdecaf",
                    "id": 120951,
                    "node_id": "MDQ6VXNlcjEyMDk1MQ==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/120951?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/adamdecaf",
                    "html_url": "https://github.com/adamdecaf",
                    "followers_url": "https://api.github.com/users/adamdecaf/followers",
                    "following_url": "https://api.github.com/users/adamdecaf/following{/other_user}",
                    "gists_url": "https://api.github.com/users/adamdecaf/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/adamdecaf/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/adamdecaf/subscriptions",
                    "organizations_url": "https://api.github.com/users/adamdecaf/orgs",
                    "repos_url": "https://api.github.com/users/adamdecaf/repos",
                    "events_url": "https://api.github.com/users/adamdecaf/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/adamdecaf/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 9,
                "created_at": "2018-11-05T23:12:48Z",
                "updated_at": "2022-09-09T14:02:08Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "Often a pull request (PR) author might share a branch in PR form to get feedback from the team or to review at a later point. It would be helpful for the author to be able to \"Request Changes\" on themselves. The original author should be able to signal not to merge if desired. \r\n\r\nThis also applies when a PR changes ownership, if an employee leaves for example.",
                "reactions": {
                    "url": "https://api.github.com/repos/dear-github/dear-github/issues/332/reactions",
                    "total_count": 20,
                    "+1": 20,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/dear-github/dear-github/issues/332/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/dear-github/dear-github/issues/comments/1242014808",
                "html_url": "https://github.com/dear-github/dear-github/issues/332#issuecomment-1242014808",
                "issue_url": "https://api.github.com/repos/dear-github/dear-github/issues/332",
                "id": 1242014808,
                "node_id": "IC_kwDOAvXgms5KB6RY",
                "user": {
                    "login": "AlanSl",
                    "id": 29628323,
                    "node_id": "MDQ6VXNlcjI5NjI4MzIz",
                    "avatar_url": "https://avatars.githubusercontent.com/u/29628323?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/AlanSl",
                    "html_url": "https://github.com/AlanSl",
                    "followers_url": "https://api.github.com/users/AlanSl/followers",
                    "following_url": "https://api.github.com/users/AlanSl/following{/other_user}",
                    "gists_url": "https://api.github.com/users/AlanSl/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/AlanSl/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/AlanSl/subscriptions",
                    "organizations_url": "https://api.github.com/users/AlanSl/orgs",
                    "repos_url": "https://api.github.com/users/AlanSl/repos",
                    "events_url": "https://api.github.com/users/AlanSl/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/AlanSl/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2022-09-09T14:02:08Z",
                "updated_at": "2022-09-09T14:02:08Z",
                "author_association": "NONE",
                "body": "Same request please. In my case:\r\n\r\n- my PR **is** ready for review and I want colleagues to review it, so setting it to \"draft\" isn't appropriate,\r\n- but there is one very localised crucial and non-obvious problem with it that must be fixed before it is merged\r\n- This problem should block merging until it is fixed (and there is a danger that colleagues in a different timezone could miss my comment flagging the issue, approve, and merge during hours I'm not active), but shouldn't deter the rest of the PR from being reviewed\r\n\r\nSo \"request changes\" is exactly the right tool for my scenario, because it flags the problem, blocks merge, but continues to allow and encourage the rest of the PR to be reviewed; but I'm not allowed to use it. ",
                "reactions": {
                    "url": "https://api.github.com/repos/dear-github/dear-github/issues/comments/1242014808/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2022-09-09T14:02:08Z",
        "org": {
            "id": 16708458,
            "login": "dear-github",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/dear-github",
            "avatar_url": "https://avatars.githubusercontent.com/u/16708458?"
        }
    },
    {
        "id": "23659274208",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 29628323,
            "login": "AlanSl",
            "display_login": "AlanSl",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AlanSl",
            "avatar_url": "https://avatars.githubusercontent.com/u/29628323?"
        },
        "repo": {
            "id": 29028775,
            "name": "facebook/react-native",
            "url": "https://api.github.com/repos/facebook/react-native"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/facebook/react-native/issues/34508",
                "repository_url": "https://api.github.com/repos/facebook/react-native",
                "labels_url": "https://api.github.com/repos/facebook/react-native/issues/34508/labels{/name}",
                "comments_url": "https://api.github.com/repos/facebook/react-native/issues/34508/comments",
                "events_url": "https://api.github.com/repos/facebook/react-native/issues/34508/events",
                "html_url": "https://github.com/facebook/react-native/issues/34508",
                "id": 1352143575,
                "node_id": "I_kwDOAbrxp85QmBLX",
                "number": 34508,
                "title": "Returning eventSubscription.remove as useEffect cleanup crashes with \"undefined is not an object (evaluating emitter)\"",
                "user": {
                    "login": "AlanSl",
                    "id": 29628323,
                    "node_id": "MDQ6VXNlcjI5NjI4MzIz",
                    "avatar_url": "https://avatars.githubusercontent.com/u/29628323?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/AlanSl",
                    "html_url": "https://github.com/AlanSl",
                    "followers_url": "https://api.github.com/users/AlanSl/followers",
                    "following_url": "https://api.github.com/users/AlanSl/following{/other_user}",
                    "gists_url": "https://api.github.com/users/AlanSl/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/AlanSl/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/AlanSl/subscriptions",
                    "organizations_url": "https://api.github.com/users/AlanSl/orgs",
                    "repos_url": "https://api.github.com/users/AlanSl/repos",
                    "events_url": "https://api.github.com/users/AlanSl/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/AlanSl/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 1794148347,
                        "node_id": "MDU6TGFiZWwxNzk0MTQ4MzQ3",
                        "url": "https://api.github.com/repos/facebook/react-native/labels/Needs:%20Triage%20:mag:",
                        "name": "Needs: Triage :mag:",
                        "color": "bfd4f2",
                        "default": false,
                        "description": ""
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 1,
                "created_at": "2022-08-26T11:32:08Z",
                "updated_at": "2022-08-26T14:08:28Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "### Description\r\n\r\nThis might be expected behaviour or not worth fixing since there's an easy workaround, but it was tricky to debug and I think it's new behaviour in a recent release (I'm sure I've seen this pattern used since around `0.65` without errors), so I think it's worth having an issue people can find by search.\r\n\r\nConfirmed in Android and iOS (and not in react-native-web).\r\n\r\n---\r\n\r\nIf the `remove` method of an event subscription is returned as the cleanup function for a `useEffect`, on dismount, the removal crashes internally with either:\r\n\r\n> undefined is not an object (reading 'emitter')\r\n>\r\n> Call Stack: EmitterSubscription#remove\r\n\r\n...or...\r\n\r\n> undefined is not an object (evaluating this.emitter)\r\n\r\nDoing something like this crashes on dismount, unable to find the subscription's emitter property:\r\n\r\n```js\r\n  useEffect(() => {\r\n    const subscription = Dimensions.addEventListener('change', () => {})\r\n    return subscription.remove // crashes, `subscription.emitter` is lost before `remove` is called\r\n  }, [])\r\n```\r\n\r\nWrapping it in an outer function doesn't crash and works as expected, presumably because trapping the whole subscription object in the return function's scope stops its emitter property from getting deleted?\r\n\r\n```js\r\n  useEffect(() => {\r\n    const subscription = Dimensions.addEventListener('change', () => {})\r\n    return () => subscription.remove() // doesn't crash, `subscription.emitter` is preserved\r\n  }, [])\r\n```\r\n\r\n### Version\r\n\r\n0.69.4\r\n\r\n### Output of `npx react-native info`\r\n\r\n```\r\nSystem:\r\n    OS: macOS 11.6.8\r\n    CPU: (8) x64 Intel(R) Core(TM) i7-1068NG7 CPU @ 2.30GHz\r\n    Memory: 7.56 GB / 32.00 GB\r\n    Shell: 5.8 - /bin/zsh\r\n  Binaries:\r\n    Node: 16.16.0 - ~/.nvm/versions/node/v16.16.0/bin/node\r\n    Yarn: Not Found\r\n    npm: 8.17.0 - ~/.nvm/versions/node/v16.16.0/bin/npm\r\n    Watchman: 2021.06.07.00 - /usr/local/bin/watchman\r\n  Managers:\r\n    CocoaPods: 1.10.1 - /usr/local/bin/pod\r\n  SDKs:\r\n    iOS SDK:\r\n      Platforms: DriverKit 21.2, iOS 15.2, macOS 12.1, tvOS 15.2, watchOS 8.3\r\n    Android SDK:\r\n      API Levels: 29, 30\r\n      Build Tools: 29.0.2, 30.0.3\r\n      System Images: android-29 | Intel x86 Atom_64, android-30 | Google APIs Intel x86 Atom\r\n      Android NDK: Not Found\r\n  IDEs:\r\n    Android Studio: Not Found\r\n    Xcode: 13.2.1/13C100 - /usr/bin/xcodebuild\r\n  Languages:\r\n    Java: 1.8.0_282 - /usr/bin/javac\r\n  npmPackages:\r\n    @react-native-community/cli: Not Found\r\n    react: ~18.0.0 => 18.0.0 \r\n    react-native: 0.69.4 => 0.69.4 \r\n    react-native-macos: Not Found\r\n  npmGlobalPackages:\r\n    *react-native*: Not Found\r\n```\r\n\r\n### Steps to reproduce\r\n\r\n1. Call `Dimensions.addEventListener` or `AccessibilityInfo.addEventListener` or similar in a `useEffect`\r\n2. Capture the subscription in a variable\r\n3. Return the subscription's remove method as the useEffect's cleanup function\r\n\r\n### Snack, code example, screenshot, or link to a repository\r\n\r\nhttps://snack.expo.dev/@alansl/amused-peanut",
                "reactions": {
                    "url": "https://api.github.com/repos/facebook/react-native/issues/34508/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/facebook/react-native/issues/34508/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/facebook/react-native/issues/comments/1228536844",
                "html_url": "https://github.com/facebook/react-native/issues/34508#issuecomment-1228536844",
                "issue_url": "https://api.github.com/repos/facebook/react-native/issues/34508",
                "id": 1228536844,
                "node_id": "IC_kwDOAbrxp85JOfwM",
                "user": {
                    "login": "AlanSl",
                    "id": 29628323,
                    "node_id": "MDQ6VXNlcjI5NjI4MzIz",
                    "avatar_url": "https://avatars.githubusercontent.com/u/29628323?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/AlanSl",
                    "html_url": "https://github.com/AlanSl",
                    "followers_url": "https://api.github.com/users/AlanSl/followers",
                    "following_url": "https://api.github.com/users/AlanSl/following{/other_user}",
                    "gists_url": "https://api.github.com/users/AlanSl/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/AlanSl/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/AlanSl/subscriptions",
                    "organizations_url": "https://api.github.com/users/AlanSl/orgs",
                    "repos_url": "https://api.github.com/users/AlanSl/repos",
                    "events_url": "https://api.github.com/users/AlanSl/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/AlanSl/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2022-08-26T14:08:28Z",
                "updated_at": "2022-08-26T14:08:28Z",
                "author_association": "NONE",
                "body": "@pablolucas890 Good catch that there is an example in the docs that uses the wrapper function approach. \r\n\r\nYour `return listener.remove()` example is missing the wrapper function: it's creating the subscription then immediately removing it, so it doesn't crash, but it won't work either (if you changed both the `useEffect`s in my example to be like this, the \"width\" text won't update when you rotate the device, because both subscriptions are cancelled immediately after being created).\r\n\r\nIt should be `return () => listener.remove()` instead of `return listener.remove()`, wrapping it in a function so that instead of calling `remove` right away, React keeps the function and calls it on dismount (see the [docs for cleanup functions in `useEffect`](https://reactjs.org/docs/hooks-effect.html#example-using-hooks-1))\r\n\r\n---\r\n\r\nThe point of this issue is that usually, `return someFunction` and `return () => someFunction()` would be equivalent if the function is being called without arguments, but in this case (presumably because of some internal detail relying on `this` or something similar), the first crashes with a non-obvious error, while the second works.\r\n\r\nSo, this issue isn't a big deal, because the workaround is really simple (do `return () => subscription.remove()` instead of `return subscription.remove`), but it's a bit of a gotcha so I thought it's worth at least having an issue posted that someone affected can find.",
                "reactions": {
                    "url": "https://api.github.com/repos/facebook/react-native/issues/comments/1228536844/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2022-08-26T14:08:28Z",
        "org": {
            "id": 69631,
            "login": "facebook",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/facebook",
            "avatar_url": "https://avatars.githubusercontent.com/u/69631?"
        }
    },
    {
        "id": "23656253645",
        "type": "IssuesEvent",
        "actor": {
            "id": 29628323,
            "login": "AlanSl",
            "display_login": "AlanSl",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AlanSl",
            "avatar_url": "https://avatars.githubusercontent.com/u/29628323?"
        },
        "repo": {
            "id": 29028775,
            "name": "facebook/react-native",
            "url": "https://api.github.com/repos/facebook/react-native"
        },
        "payload": {
            "action": "opened",
            "issue": {
                "url": "https://api.github.com/repos/facebook/react-native/issues/34508",
                "repository_url": "https://api.github.com/repos/facebook/react-native",
                "labels_url": "https://api.github.com/repos/facebook/react-native/issues/34508/labels{/name}",
                "comments_url": "https://api.github.com/repos/facebook/react-native/issues/34508/comments",
                "events_url": "https://api.github.com/repos/facebook/react-native/issues/34508/events",
                "html_url": "https://github.com/facebook/react-native/issues/34508",
                "id": 1352143575,
                "node_id": "I_kwDOAbrxp85QmBLX",
                "number": 34508,
                "title": "Returning eventSubscription.remove as useEffect cleanup crashes with \"undefined is not an object (evaluating emitter)\"",
                "user": {
                    "login": "AlanSl",
                    "id": 29628323,
                    "node_id": "MDQ6VXNlcjI5NjI4MzIz",
                    "avatar_url": "https://avatars.githubusercontent.com/u/29628323?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/AlanSl",
                    "html_url": "https://github.com/AlanSl",
                    "followers_url": "https://api.github.com/users/AlanSl/followers",
                    "following_url": "https://api.github.com/users/AlanSl/following{/other_user}",
                    "gists_url": "https://api.github.com/users/AlanSl/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/AlanSl/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/AlanSl/subscriptions",
                    "organizations_url": "https://api.github.com/users/AlanSl/orgs",
                    "repos_url": "https://api.github.com/users/AlanSl/repos",
                    "events_url": "https://api.github.com/users/AlanSl/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/AlanSl/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 1794148347,
                        "node_id": "MDU6TGFiZWwxNzk0MTQ4MzQ3",
                        "url": "https://api.github.com/repos/facebook/react-native/labels/Needs:%20Triage%20:mag:",
                        "name": "Needs: Triage :mag:",
                        "color": "bfd4f2",
                        "default": false,
                        "description": ""
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 0,
                "created_at": "2022-08-26T11:32:08Z",
                "updated_at": "2022-08-26T11:32:08Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "### Description\n\nThis might be expected behaviour or not worth fixing since there's an easy workaround, but it was tricky to debug and I think it's new behaviour in a recent release (I'm sure I've seen this pattern used since around `0.65` without errors), so I think it's worth having an issue people can find by search.\r\n\r\n---\r\n\r\nIf the `remove` method of an event subscription is returned as the cleanup function for a `useEffect`, on dismount, the removal crashes internally with either:\r\n\r\n> undefined is not an object (reading 'emitter')\r\n>\r\n> Call Stack: EmitterSubscription#remove\r\n\r\n...or...\r\n\r\n> undefined is not an object (evaluating this.emitter)\r\n\r\nIt appears that the `.emitter` property of the subscription gets scrubbed, so when the remove method tries to access it, it is gone. Wrapping the remove method in a function and returning that doesn't have this problem.\r\n\r\n---\r\n\r\nSo, doing something like this crashes on dismount, unable to find the subscription's emitter property:\r\n\r\n```js\r\n  useEffect(() => {\r\n    const subscription = Dimensions.addEventListener('change', () => {})\r\n    return subscription.remove // crashes, `subscription`'s other properties are lost before `remove` is called\r\n  }, [])\r\n```\r\n\r\nThis doesn't and works as expected, presumably because trapping the whole subscription object in the return function's scope stops its emitter property from getting deleted?\r\n\r\n```js\r\n  useEffect(() => {\r\n    const subscription = Dimensions.addEventListener('change', () => {})\r\n    return () => subscription.remove() // doesn't crash, `subscription`'s other properties are preserved\r\n  }, [])\r\n```\n\n### Version\n\n0.69.4\n\n### Output of `npx react-native info`\n\n```\r\nSystem:\r\n    OS: macOS 11.6.8\r\n    CPU: (8) x64 Intel(R) Core(TM) i7-1068NG7 CPU @ 2.30GHz\r\n    Memory: 7.56 GB / 32.00 GB\r\n    Shell: 5.8 - /bin/zsh\r\n  Binaries:\r\n    Node: 16.16.0 - ~/.nvm/versions/node/v16.16.0/bin/node\r\n    Yarn: Not Found\r\n    npm: 8.17.0 - ~/.nvm/versions/node/v16.16.0/bin/npm\r\n    Watchman: 2021.06.07.00 - /usr/local/bin/watchman\r\n  Managers:\r\n    CocoaPods: 1.10.1 - /usr/local/bin/pod\r\n  SDKs:\r\n    iOS SDK:\r\n      Platforms: DriverKit 21.2, iOS 15.2, macOS 12.1, tvOS 15.2, watchOS 8.3\r\n    Android SDK:\r\n      API Levels: 29, 30\r\n      Build Tools: 29.0.2, 30.0.3\r\n      System Images: android-29 | Intel x86 Atom_64, android-30 | Google APIs Intel x86 Atom\r\n      Android NDK: Not Found\r\n  IDEs:\r\n    Android Studio: Not Found\r\n    Xcode: 13.2.1/13C100 - /usr/bin/xcodebuild\r\n  Languages:\r\n    Java: 1.8.0_282 - /usr/bin/javac\r\n  npmPackages:\r\n    @react-native-community/cli: Not Found\r\n    react: ~18.0.0 => 18.0.0 \r\n    react-native: 0.69.4 => 0.69.4 \r\n    react-native-macos: Not Found\r\n  npmGlobalPackages:\r\n    *react-native*: Not Found\r\n```\n\n### Steps to reproduce\n\n1. Call `Dimensions.addEventListener` or `AccessibilityInfo.addEventListener` or similar in a `useEffect`\r\n2. Capture the subscription in a variable\r\n3. Return the subscription's remove method as the useEffect's cleanup function\n\n### Snack, code example, screenshot, or link to a repository\n\nhttps://snack.expo.dev/@alansl/amused-peanut",
                "reactions": {
                    "url": "https://api.github.com/repos/facebook/react-native/issues/34508/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/facebook/react-native/issues/34508/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            }
        },
        "public": true,
        "created_at": "2022-08-26T11:32:08Z",
        "org": {
            "id": 69631,
            "login": "facebook",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/facebook",
            "avatar_url": "https://avatars.githubusercontent.com/u/69631?"
        }
    },
    {
        "id": "23639449416",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 29628323,
            "login": "AlanSl",
            "display_login": "AlanSl",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AlanSl",
            "avatar_url": "https://avatars.githubusercontent.com/u/29628323?"
        },
        "repo": {
            "id": 37153337,
            "name": "necolas/react-native-web",
            "url": "https://api.github.com/repos/necolas/react-native-web"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/necolas/react-native-web/issues/2374",
                "repository_url": "https://api.github.com/repos/necolas/react-native-web",
                "labels_url": "https://api.github.com/repos/necolas/react-native-web/issues/2374/labels{/name}",
                "comments_url": "https://api.github.com/repos/necolas/react-native-web/issues/2374/comments",
                "events_url": "https://api.github.com/repos/necolas/react-native-web/issues/2374/events",
                "html_url": "https://github.com/necolas/react-native-web/pull/2374",
                "id": 1350058562,
                "node_id": "PR_kwDOAjbqOc49wG9i",
                "number": 2374,
                "title": "[fix] Allow Pressable to be programmatically focused when disabled",
                "user": {
                    "login": "necolas",
                    "id": 239676,
                    "node_id": "MDQ6VXNlcjIzOTY3Ng==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/239676?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/necolas",
                    "html_url": "https://github.com/necolas",
                    "followers_url": "https://api.github.com/users/necolas/followers",
                    "following_url": "https://api.github.com/users/necolas/following{/other_user}",
                    "gists_url": "https://api.github.com/users/necolas/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/necolas/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/necolas/subscriptions",
                    "organizations_url": "https://api.github.com/users/necolas/orgs",
                    "repos_url": "https://api.github.com/users/necolas/repos",
                    "events_url": "https://api.github.com/users/necolas/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/necolas/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 3,
                "created_at": "2022-08-24T21:48:15Z",
                "updated_at": "2022-08-25T15:44:41Z",
                "closed_at": null,
                "author_association": "OWNER",
                "active_lock_reason": null,
                "draft": false,
                "pull_request": {
                    "url": "https://api.github.com/repos/necolas/react-native-web/pulls/2374",
                    "html_url": "https://github.com/necolas/react-native-web/pull/2374",
                    "diff_url": "https://github.com/necolas/react-native-web/pull/2374.diff",
                    "patch_url": "https://github.com/necolas/react-native-web/pull/2374.patch",
                    "merged_at": null
                },
                "body": "Fix #2357",
                "reactions": {
                    "url": "https://api.github.com/repos/necolas/react-native-web/issues/2374/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/necolas/react-native-web/issues/2374/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/necolas/react-native-web/issues/comments/1227450678",
                "html_url": "https://github.com/necolas/react-native-web/pull/2374#issuecomment-1227450678",
                "issue_url": "https://api.github.com/repos/necolas/react-native-web/issues/2374",
                "id": 1227450678,
                "node_id": "IC_kwDOAjbqOc5JKWk2",
                "user": {
                    "login": "AlanSl",
                    "id": 29628323,
                    "node_id": "MDQ6VXNlcjI5NjI4MzIz",
                    "avatar_url": "https://avatars.githubusercontent.com/u/29628323?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/AlanSl",
                    "html_url": "https://github.com/AlanSl",
                    "followers_url": "https://api.github.com/users/AlanSl/followers",
                    "following_url": "https://api.github.com/users/AlanSl/following{/other_user}",
                    "gists_url": "https://api.github.com/users/AlanSl/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/AlanSl/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/AlanSl/subscriptions",
                    "organizations_url": "https://api.github.com/users/AlanSl/orgs",
                    "repos_url": "https://api.github.com/users/AlanSl/repos",
                    "events_url": "https://api.github.com/users/AlanSl/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/AlanSl/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2022-08-25T15:44:41Z",
                "updated_at": "2022-08-25T15:44:41Z",
                "author_association": "NONE",
                "body": "Great, thanks, I've tried this out locally in my real-world component that had the initial problem, and this fixes it, means I can remove the workaround I'd previously used. And of course it works perfectly in the sandbox reproduction too.\r\n\r\nLGTM and thank you!",
                "reactions": {
                    "url": "https://api.github.com/repos/necolas/react-native-web/issues/comments/1227450678/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2022-08-25T15:44:41Z"
    },
    {
        "id": "23586810111",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 29628323,
            "login": "AlanSl",
            "display_login": "AlanSl",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AlanSl",
            "avatar_url": "https://avatars.githubusercontent.com/u/29628323?"
        },
        "repo": {
            "id": 88450703,
            "name": "wclr/yalc",
            "url": "https://api.github.com/repos/wclr/yalc"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/wclr/yalc/issues/203",
                "repository_url": "https://api.github.com/repos/wclr/yalc",
                "labels_url": "https://api.github.com/repos/wclr/yalc/issues/203/labels{/name}",
                "comments_url": "https://api.github.com/repos/wclr/yalc/issues/203/comments",
                "events_url": "https://api.github.com/repos/wclr/yalc/issues/203/events",
                "html_url": "https://github.com/wclr/yalc/issues/203",
                "id": 1347851175,
                "node_id": "I_kwDOBUWmj85QVpOn",
                "number": 203,
                "title": "`yalc add` on Mac can fail with get ENOTDIR invalid cwd treating .DS_Store as a version directory.",
                "user": {
                    "login": "AlanSl",
                    "id": 29628323,
                    "node_id": "MDQ6VXNlcjI5NjI4MzIz",
                    "avatar_url": "https://avatars.githubusercontent.com/u/29628323?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/AlanSl",
                    "html_url": "https://github.com/AlanSl",
                    "followers_url": "https://api.github.com/users/AlanSl/followers",
                    "following_url": "https://api.github.com/users/AlanSl/following{/other_user}",
                    "gists_url": "https://api.github.com/users/AlanSl/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/AlanSl/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/AlanSl/subscriptions",
                    "organizations_url": "https://api.github.com/users/AlanSl/orgs",
                    "repos_url": "https://api.github.com/users/AlanSl/repos",
                    "events_url": "https://api.github.com/users/AlanSl/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/AlanSl/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 1,
                "created_at": "2022-08-23T12:13:09Z",
                "updated_at": "2022-08-23T12:19:57Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "I saw this for the first time today on running `yalc add` on several packages in a new repo (MacOS 11.6.8). All the packages worked except one, which gave this error:\r\n\r\n> Error: ENOTDIR invalid cwd /Users/alan/.yalc/packages/{package_name}/.DS_Store\r\n>     at Glob._readdirError (/Users/alan/.npm/_npx/8971ede65c5d814d/node_modules/glob/glob.js:589:21)\r\n>     at /Users/alan/.npm/_npx/8971ede65c5d814d/node_modules/glob/glob.js:550:12\r\n>     at FSReqCallback.oncomplete (node:fs:188:23) {\r\n>   path: '/Users/alan/.yalc/packages/{package_name}/.DS_Store',\r\n>   code: 'ENOTDIR'\r\n> }\r\n\r\nDeleting the Mac OS generated `.DS_Store` file in the Yalc package directory (the one that contains all the yalc-published versions) fixed this.\r\n\r\nIt's strange because:\r\n\r\n - All the other packages worked fine and they all had `.DS_Store` files\r\n - All the packages came from the same monorepo, which had `.DS_Store` in its gitignore",
                "reactions": {
                    "url": "https://api.github.com/repos/wclr/yalc/issues/203/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/wclr/yalc/issues/203/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/wclr/yalc/issues/comments/1223991017",
                "html_url": "https://github.com/wclr/yalc/issues/203#issuecomment-1223991017",
                "issue_url": "https://api.github.com/repos/wclr/yalc/issues/203",
                "id": 1223991017,
                "node_id": "IC_kwDOBUWmj85I9J7p",
                "user": {
                    "login": "AlanSl",
                    "id": 29628323,
                    "node_id": "MDQ6VXNlcjI5NjI4MzIz",
                    "avatar_url": "https://avatars.githubusercontent.com/u/29628323?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/AlanSl",
                    "html_url": "https://github.com/AlanSl",
                    "followers_url": "https://api.github.com/users/AlanSl/followers",
                    "following_url": "https://api.github.com/users/AlanSl/following{/other_user}",
                    "gists_url": "https://api.github.com/users/AlanSl/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/AlanSl/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/AlanSl/subscriptions",
                    "organizations_url": "https://api.github.com/users/AlanSl/orgs",
                    "repos_url": "https://api.github.com/users/AlanSl/repos",
                    "events_url": "https://api.github.com/users/AlanSl/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/AlanSl/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2022-08-23T12:19:57Z",
                "updated_at": "2022-08-23T12:19:57Z",
                "author_association": "NONE",
                "body": "I think I've figured it out - I can replicate it by causing a yalc package directory to have a `.DS_Store` file with a creation date more recent than any of the version directories. \r\n\r\nFor example (on a Mac):\r\n\r\n - `yalc add` some package - it works\r\n - Delete the .DS_Store file in that package's directory of version directories\r\n - Regenerate it (for example, Get Info, then tick and untick \"Locked\")\r\n - `yalc add` the same package again - this time, it fails on trying to `cd` into `.DS_store`.\r\n\r\nSo it looks like the problem is, the function `yalc add` uses to find the latest version is just taking all the contents of the directory, getting the most recent, and assuming it's a version directory. 99% of the time this works fine, but if for whatever reason some system file like `.DS_Store` comes to be the most recent item in the directory, this crash happens.\r\n\r\n**Suggested fix**: filter the array of directory contents to be only directories before finding the newest and `cd`ing into it.",
                "reactions": {
                    "url": "https://api.github.com/repos/wclr/yalc/issues/comments/1223991017/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2022-08-23T12:19:57Z"
    },
    {
        "id": "23586663159",
        "type": "IssuesEvent",
        "actor": {
            "id": 29628323,
            "login": "AlanSl",
            "display_login": "AlanSl",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AlanSl",
            "avatar_url": "https://avatars.githubusercontent.com/u/29628323?"
        },
        "repo": {
            "id": 88450703,
            "name": "wclr/yalc",
            "url": "https://api.github.com/repos/wclr/yalc"
        },
        "payload": {
            "action": "opened",
            "issue": {
                "url": "https://api.github.com/repos/wclr/yalc/issues/203",
                "repository_url": "https://api.github.com/repos/wclr/yalc",
                "labels_url": "https://api.github.com/repos/wclr/yalc/issues/203/labels{/name}",
                "comments_url": "https://api.github.com/repos/wclr/yalc/issues/203/comments",
                "events_url": "https://api.github.com/repos/wclr/yalc/issues/203/events",
                "html_url": "https://github.com/wclr/yalc/issues/203",
                "id": 1347851175,
                "node_id": "I_kwDOBUWmj85QVpOn",
                "number": 203,
                "title": "`yalc add` on Mac can fail with get ENOTDIR invalid cwd treating .DS_Store as a version directory.",
                "user": {
                    "login": "AlanSl",
                    "id": 29628323,
                    "node_id": "MDQ6VXNlcjI5NjI4MzIz",
                    "avatar_url": "https://avatars.githubusercontent.com/u/29628323?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/AlanSl",
                    "html_url": "https://github.com/AlanSl",
                    "followers_url": "https://api.github.com/users/AlanSl/followers",
                    "following_url": "https://api.github.com/users/AlanSl/following{/other_user}",
                    "gists_url": "https://api.github.com/users/AlanSl/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/AlanSl/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/AlanSl/subscriptions",
                    "organizations_url": "https://api.github.com/users/AlanSl/orgs",
                    "repos_url": "https://api.github.com/users/AlanSl/repos",
                    "events_url": "https://api.github.com/users/AlanSl/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/AlanSl/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 0,
                "created_at": "2022-08-23T12:13:09Z",
                "updated_at": "2022-08-23T12:13:09Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "I saw this for the first time today on running `yalc add` on several packages in a new repo (MacOS 11.6.8). All the packages worked except one, which gave this error:\r\n\r\n> Error: ENOTDIR invalid cwd /Users/alan/.yalc/packages/{package_name}/.DS_Store\r\n>     at Glob._readdirError (/Users/alan/.npm/_npx/8971ede65c5d814d/node_modules/glob/glob.js:589:21)\r\n>     at /Users/alan/.npm/_npx/8971ede65c5d814d/node_modules/glob/glob.js:550:12\r\n>     at FSReqCallback.oncomplete (node:fs:188:23) {\r\n>   path: '/Users/alan/.yalc/packages/{package_name}/.DS_Store',\r\n>   code: 'ENOTDIR'\r\n> }\r\n\r\nDeleting the Mac OS generated `.DS_Store` file in the Yalc package directory (the one that contains all the yalc-published versions) fixed this.\r\n\r\nIt's strange because:\r\n\r\n - All the other packages worked fine and they all had `.DS_Store` files\r\n - All the packages came from the same monorepo, which had `.DS_Store` in its gitignore",
                "reactions": {
                    "url": "https://api.github.com/repos/wclr/yalc/issues/203/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/wclr/yalc/issues/203/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            }
        },
        "public": true,
        "created_at": "2022-08-23T12:13:10Z"
    },
    {
        "id": "23387079649",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 29628323,
            "login": "AlanSl",
            "display_login": "AlanSl",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AlanSl",
            "avatar_url": "https://avatars.githubusercontent.com/u/29628323?"
        },
        "repo": {
            "id": 37153337,
            "name": "necolas/react-native-web",
            "url": "https://api.github.com/repos/necolas/react-native-web"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/necolas/react-native-web/issues/2357",
                "repository_url": "https://api.github.com/repos/necolas/react-native-web",
                "labels_url": "https://api.github.com/repos/necolas/react-native-web/issues/2357/labels{/name}",
                "comments_url": "https://api.github.com/repos/necolas/react-native-web/issues/2357/comments",
                "events_url": "https://api.github.com/repos/necolas/react-native-web/issues/2357/events",
                "html_url": "https://github.com/necolas/react-native-web/issues/2357",
                "id": 1331640296,
                "node_id": "I_kwDOAjbqOc5PXzfo",
                "number": 2357,
                "title": "Setting a Pressable as \"disabled\" from enter key press locks its internal `focused` state as `true`",
                "user": {
                    "login": "AlanSl",
                    "id": 29628323,
                    "node_id": "MDQ6VXNlcjI5NjI4MzIz",
                    "avatar_url": "https://avatars.githubusercontent.com/u/29628323?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/AlanSl",
                    "html_url": "https://github.com/AlanSl",
                    "followers_url": "https://api.github.com/users/AlanSl/followers",
                    "following_url": "https://api.github.com/users/AlanSl/following{/other_user}",
                    "gists_url": "https://api.github.com/users/AlanSl/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/AlanSl/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/AlanSl/subscriptions",
                    "organizations_url": "https://api.github.com/users/AlanSl/orgs",
                    "repos_url": "https://api.github.com/users/AlanSl/repos",
                    "events_url": "https://api.github.com/users/AlanSl/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/AlanSl/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 222457059,
                        "node_id": "MDU6TGFiZWwyMjI0NTcwNTk=",
                        "url": "https://api.github.com/repos/necolas/react-native-web/labels/bug",
                        "name": "bug",
                        "color": "D21635",
                        "default": true,
                        "description": null
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 3,
                "created_at": "2022-08-08T10:10:38Z",
                "updated_at": "2022-08-11T14:34:38Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "### Is there an existing issue for this?\r\n\r\n- [X] I have searched the existing issues\r\n\r\nMight be a side effect of the fix for https://github.com/necolas/react-native-web/issues/2127\r\n\r\n### Describe the issue\r\n\r\nIf a Pressable's `onPress` function causes it to become `disabled`, and this is triggered by tabbing in with the keyboard and triggering the `onPress` function from the keyboard using the Enter key, then the Pressable's internal `focused` state becomes locked as `true` even after the actual HTML element has blurred.\r\n\r\nFor example, here, the first Pressable was disabled and blurred using the Enter key and the second Pressable is the focused element, but the first Pressable thinks it is focused still.\r\n\r\n<img width=\"335\" alt=\"image\" src=\"https://user-images.githubusercontent.com/29628323/183395646-c2b4192f-5679-4114-9b4e-6851ff1425a1.png\">\r\n\r\n\r\n### Expected behavior\r\n\r\nA Pressable's `focused` state should not be `true` if it is not focused, regardless of how it came to be not focused, and it should never be both disabled and focused.\r\n\r\n### Steps to reproduce\r\n\r\n- Create a `Pressable` that shows its internal `focused` state visibly\r\n- Set its `disabled` state to `true` in an `onPress` handler\r\n- Select it using the keyboard tab key and trigger the onPress handler with the Enter key\r\n\r\n### Test case\r\n\r\nhttps://codesandbox.io/s/quirky-williamson-v3r94g\r\nhttps://snack.expo.dev/@alansl/amused-cheese\r\n\r\n### Additional comments\r\n\r\nThere's also a possibly-related issue described in comments in the linked example, where it's possible to programmatically focus a `disabled` Pressable just before `disabled` is removed, and then when `disabled` is removed, the element is focused but the focused state is stuck as `false`. Which issue occurs depends on whether mouse or keyboard events are used and timing of when the focus switch happens. Suggests the issue hinges on the timing of rerenders triggered by different event types.\r\n\r\nIn the provided example, it's _almost_ possible to work around this issue with careful timing - programmatically blurring the element after setting disabled to `false` in the target but before setting it to `true` in the trigger element. But this creates some strange timing issues when mouse clicks are used. Also, in real-life examples, this may not be an option: for example if the elements' `disabled` state is controlled by one `selected` state, it may not be possible to set a moment when both are enabled.\r\n\r\n### Suggested fix\r\n\r\nIt looks like all focus / blur handling is suppressed as soon as `disabled` is applied, and the timing of this relative to event handler timing varies by event type. Suggestion:\r\n\r\n - When `disabled` flips from false to true, if `focused` is still true, it shouldn't be and the element is losing focus; so call `onBlur` (including setting internal state) while it still can.\r\n - When `disabled` flips from true to false, if the element has become actually focused in the DOM but `focused` is false, it is legitimately gaining focus but the event handlers were skipped due to event / re-render timing; so call `onFocus` (including setting internal state)",
                "reactions": {
                    "url": "https://api.github.com/repos/necolas/react-native-web/issues/2357/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/necolas/react-native-web/issues/2357/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/necolas/react-native-web/issues/comments/1212074268",
                "html_url": "https://github.com/necolas/react-native-web/issues/2357#issuecomment-1212074268",
                "issue_url": "https://api.github.com/repos/necolas/react-native-web/issues/2357",
                "id": 1212074268,
                "node_id": "IC_kwDOAjbqOc5IPskc",
                "user": {
                    "login": "AlanSl",
                    "id": 29628323,
                    "node_id": "MDQ6VXNlcjI5NjI4MzIz",
                    "avatar_url": "https://avatars.githubusercontent.com/u/29628323?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/AlanSl",
                    "html_url": "https://github.com/AlanSl",
                    "followers_url": "https://api.github.com/users/AlanSl/followers",
                    "following_url": "https://api.github.com/users/AlanSl/following{/other_user}",
                    "gists_url": "https://api.github.com/users/AlanSl/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/AlanSl/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/AlanSl/subscriptions",
                    "organizations_url": "https://api.github.com/users/AlanSl/orgs",
                    "repos_url": "https://api.github.com/users/AlanSl/repos",
                    "events_url": "https://api.github.com/users/AlanSl/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/AlanSl/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2022-08-11T14:34:38Z",
                "updated_at": "2022-08-11T14:34:38Z",
                "author_association": "NONE",
                "body": "Done - https://codesandbox.io/s/quirky-williamson-v3r94g\r\n\r\nIf there's a mandatory format and template, may I suggest linking to it in the issue template, and clearly stating that codesandbox specifically is a requirement? Currently there's just a non-accessible input hint text:\r\n\r\n<img width=\"475\" alt=\"image\" src=\"https://user-images.githubusercontent.com/29628323/184158107-7404fdbc-f71e-424a-8568-332107fa6626.png\">\r\n\r\nI'm sure the old comment-based template clearly stated the required template, and linked to it.",
                "reactions": {
                    "url": "https://api.github.com/repos/necolas/react-native-web/issues/comments/1212074268/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2022-08-11T14:34:38Z"
    },
    {
        "id": "23314198259",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 29628323,
            "login": "AlanSl",
            "display_login": "AlanSl",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AlanSl",
            "avatar_url": "https://avatars.githubusercontent.com/u/29628323?"
        },
        "repo": {
            "id": 37153337,
            "name": "necolas/react-native-web",
            "url": "https://api.github.com/repos/necolas/react-native-web"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/necolas/react-native-web/issues/2357",
                "repository_url": "https://api.github.com/repos/necolas/react-native-web",
                "labels_url": "https://api.github.com/repos/necolas/react-native-web/issues/2357/labels{/name}",
                "comments_url": "https://api.github.com/repos/necolas/react-native-web/issues/2357/comments",
                "events_url": "https://api.github.com/repos/necolas/react-native-web/issues/2357/events",
                "html_url": "https://github.com/necolas/react-native-web/issues/2357",
                "id": 1331640296,
                "node_id": "I_kwDOAjbqOc5PXzfo",
                "number": 2357,
                "title": "Setting a Pressable as \"disabled\" from enter key press locks its internal `focused` state as `true`",
                "user": {
                    "login": "AlanSl",
                    "id": 29628323,
                    "node_id": "MDQ6VXNlcjI5NjI4MzIz",
                    "avatar_url": "https://avatars.githubusercontent.com/u/29628323?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/AlanSl",
                    "html_url": "https://github.com/AlanSl",
                    "followers_url": "https://api.github.com/users/AlanSl/followers",
                    "following_url": "https://api.github.com/users/AlanSl/following{/other_user}",
                    "gists_url": "https://api.github.com/users/AlanSl/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/AlanSl/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/AlanSl/subscriptions",
                    "organizations_url": "https://api.github.com/users/AlanSl/orgs",
                    "repos_url": "https://api.github.com/users/AlanSl/repos",
                    "events_url": "https://api.github.com/users/AlanSl/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/AlanSl/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 222457059,
                        "node_id": "MDU6TGFiZWwyMjI0NTcwNTk=",
                        "url": "https://api.github.com/repos/necolas/react-native-web/labels/bug",
                        "name": "bug",
                        "color": "D21635",
                        "default": true,
                        "description": null
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 0,
                "created_at": "2022-08-08T10:10:38Z",
                "updated_at": "2022-08-08T11:00:14Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "### Is there an existing issue for this?\r\n\r\n- [X] I have searched the existing issues\r\n\r\n### Describe the issue\r\n\r\nIf a Pressable's `onPress` function causes it to become `disabled`, and this is triggered by tabbing in with the keyboard and triggering the `onPress` function from the keyboard using the Enter key, then the Pressable's internal `focused` state becomes locked as `true` even after the actual HTML element has blurred.\r\n\r\nFor example, here, the first Pressable was disabled and blurred using the Enter key and the second Pressable is the focused element, but the first Pressable thinks it is focused still.\r\n\r\n<img width=\"335\" alt=\"image\" src=\"https://user-images.githubusercontent.com/29628323/183395646-c2b4192f-5679-4114-9b4e-6851ff1425a1.png\">\r\n\r\n\r\n### Expected behavior\r\n\r\nA Pressable's `focused` state should not be `true` if it is not focused, regardless of how it came to be not focused, and it should never be both disabled and focused.\r\n\r\n### Steps to reproduce\r\n\r\n- Create a `Pressable` that shows its internal `focused` state visibly\r\n- Set its `disabled` state to `true` in an `onPress` handler\r\n- Select it using the keyboard tab key and trigger the onPress handler with the Enter key\r\n\r\n### Test case\r\n\r\nhttps://snack.expo.dev/@alansl/amused-cheese\r\n\r\n### Additional comments\r\n\r\nThere's also a possibly-related issue described in comments in the linked example, where it's possible to programmatically focus a `disabled` Pressable just before `disabled` is removed and then when `disabled` is removed, the element is focused but the focused state is still `false`.\r\n\r\nIn the provided example, it's _almost_ possible to work around this issue with careful timing - programmatically blurring the element after setting disabled to `false` in the target but before setting it to `true` in the trigger element. But this creates some strange timing issues when mouse clicks are used. Also, in real-life examples, this may not be an option: for example if the elements' `disabled` state is controlled by one `selected` state, it may not be possible to set a moment when both are enabled.\r\n\r\n### Suggested fix\r\n\r\nIt looks like all focus / blur handling is suppressed as soon as `disabled` is applied. Suggestion:\r\n\r\n - When `disabled` flips from false to true, if `focused` is still true, it shouldn't be: call `onBlur` (including setting internal state).\r\n - When `disabled` flips from true to false, if element is actually focused in the DOM but `focused` is false, call `onFocus` (including setting internal state)",
                "reactions": {
                    "url": "https://api.github.com/repos/necolas/react-native-web/issues/2357/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/necolas/react-native-web/issues/2357/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/necolas/react-native-web/issues/comments/1207975166",
                "html_url": "https://github.com/necolas/react-native-web/issues/2357#issuecomment-1207975166",
                "issue_url": "https://api.github.com/repos/necolas/react-native-web/issues/2357",
                "id": 1207975166,
                "node_id": "IC_kwDOAjbqOc5IADz-",
                "user": {
                    "login": "AlanSl",
                    "id": 29628323,
                    "node_id": "MDQ6VXNlcjI5NjI4MzIz",
                    "avatar_url": "https://avatars.githubusercontent.com/u/29628323?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/AlanSl",
                    "html_url": "https://github.com/AlanSl",
                    "followers_url": "https://api.github.com/users/AlanSl/followers",
                    "following_url": "https://api.github.com/users/AlanSl/following{/other_user}",
                    "gists_url": "https://api.github.com/users/AlanSl/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/AlanSl/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/AlanSl/subscriptions",
                    "organizations_url": "https://api.github.com/users/AlanSl/orgs",
                    "repos_url": "https://api.github.com/users/AlanSl/repos",
                    "events_url": "https://api.github.com/users/AlanSl/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/AlanSl/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2022-08-08T11:00:14Z",
                "updated_at": "2022-08-08T11:00:14Z",
                "author_association": "NONE",
                "body": "Best workaround for my particular case so far seems to be to control an `isFocused` state in the Pressable's parent using `onBlur` / `onFocus` and not allow disabled to be `true` if `isFocused` is true; so, regardless of the timing around the triggering event, if an action causes the parent's disabled prop to be `true` on next render and moves focus away, it will not apply disabled as true until the re-render caused by the onBlur handler setting `isFocused` to `false`.",
                "reactions": {
                    "url": "https://api.github.com/repos/necolas/react-native-web/issues/comments/1207975166/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2022-08-08T11:00:14Z"
    },
    {
        "id": "23313283097",
        "type": "IssuesEvent",
        "actor": {
            "id": 29628323,
            "login": "AlanSl",
            "display_login": "AlanSl",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AlanSl",
            "avatar_url": "https://avatars.githubusercontent.com/u/29628323?"
        },
        "repo": {
            "id": 37153337,
            "name": "necolas/react-native-web",
            "url": "https://api.github.com/repos/necolas/react-native-web"
        },
        "payload": {
            "action": "opened",
            "issue": {
                "url": "https://api.github.com/repos/necolas/react-native-web/issues/2357",
                "repository_url": "https://api.github.com/repos/necolas/react-native-web",
                "labels_url": "https://api.github.com/repos/necolas/react-native-web/issues/2357/labels{/name}",
                "comments_url": "https://api.github.com/repos/necolas/react-native-web/issues/2357/comments",
                "events_url": "https://api.github.com/repos/necolas/react-native-web/issues/2357/events",
                "html_url": "https://github.com/necolas/react-native-web/issues/2357",
                "id": 1331640296,
                "node_id": "I_kwDOAjbqOc5PXzfo",
                "number": 2357,
                "title": "Setting a Pressable as \"disabled\" from enter key press locks its internal `focused` state as `true`",
                "user": {
                    "login": "AlanSl",
                    "id": 29628323,
                    "node_id": "MDQ6VXNlcjI5NjI4MzIz",
                    "avatar_url": "https://avatars.githubusercontent.com/u/29628323?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/AlanSl",
                    "html_url": "https://github.com/AlanSl",
                    "followers_url": "https://api.github.com/users/AlanSl/followers",
                    "following_url": "https://api.github.com/users/AlanSl/following{/other_user}",
                    "gists_url": "https://api.github.com/users/AlanSl/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/AlanSl/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/AlanSl/subscriptions",
                    "organizations_url": "https://api.github.com/users/AlanSl/orgs",
                    "repos_url": "https://api.github.com/users/AlanSl/repos",
                    "events_url": "https://api.github.com/users/AlanSl/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/AlanSl/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 222457059,
                        "node_id": "MDU6TGFiZWwyMjI0NTcwNTk=",
                        "url": "https://api.github.com/repos/necolas/react-native-web/labels/bug",
                        "name": "bug",
                        "color": "D21635",
                        "default": true,
                        "description": null
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 0,
                "created_at": "2022-08-08T10:10:38Z",
                "updated_at": "2022-08-08T10:10:38Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Describe the issue\n\nIf a Pressable's `onPress` function causes it to become `disabled`, and this is triggered by tabbing in with the keyboard and triggering the `onPress` function from the keyboard using the Enter key, then the Pressable's internal `focused` state becomes locked as `true` even after the actual HTML element has blurred.\r\n\r\nFor example, here, the first Pressable was disabled and blurred using the Enter key and the second Pressable is the focused element, but the first Pressable thinks it is focused still.\r\n\r\n<img width=\"325\" alt=\"image\" src=\"https://user-images.githubusercontent.com/29628323/183392367-52cf9a4c-a4cc-41f4-b5b4-ad630f0f7d38.png\">\r\n\n\n### Expected behavior\n\nA Pressable's `focused` state should not be `true` if it is not focused, regardless of how it came to be not focused, and it should never be both disabled and focused.\n\n### Steps to reproduce\n\n- Create a `Pressable` that shows its internal `focused` state visibly\r\n- Set its `disabled` state to `true` in an `onPress` handler\r\n- Select it using the keyboard tab key and trigger the onPress handler with the Enter key\n\n### Test case\n\nhttps://snack.expo.dev/@alansl/amused-cheese\n\n### Additional comments\n\nThere's also a possibly-related issue described in comments in the linked example, where it's possible to programmatically focus a `disabled` Pressable just before `disabled` is removed and then when `disabled` is removed, the element is focused but the focused state is still `false`.\r\n\r\nIt seems to be possible to work around this issue with careful timing - programmatically blurring the element before setting the `disabled` state - but it's odd that this is necessary for keyboard navigation but not mouse clicks.",
                "reactions": {
                    "url": "https://api.github.com/repos/necolas/react-native-web/issues/2357/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/necolas/react-native-web/issues/2357/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            }
        },
        "public": true,
        "created_at": "2022-08-08T10:10:38Z"
    },
    {
        "id": "24664081284",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 29628323,
            "login": "AlanSl",
            "display_login": "AlanSl",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AlanSl",
            "avatar_url": "https://avatars.githubusercontent.com/u/29628323?"
        },
        "repo": {
            "id": 109059304,
            "name": "facebook/react-native-website",
            "url": "https://api.github.com/repos/facebook/react-native-website"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/facebook/react-native-website/issues/3215",
                "repository_url": "https://api.github.com/repos/facebook/react-native-website",
                "labels_url": "https://api.github.com/repos/facebook/react-native-website/issues/3215/labels{/name}",
                "comments_url": "https://api.github.com/repos/facebook/react-native-website/issues/3215/comments",
                "events_url": "https://api.github.com/repos/facebook/react-native-website/issues/3215/events",
                "html_url": "https://github.com/facebook/react-native-website/issues/3215",
                "id": 1309336090,
                "node_id": "I_kwDOBoAc6M5OCuIa",
                "number": 3215,
                "title": "Please document correct usage of accessibilityRole \"link\"",
                "user": {
                    "login": "AlanSl",
                    "id": 29628323,
                    "node_id": "MDQ6VXNlcjI5NjI4MzIz",
                    "avatar_url": "https://avatars.githubusercontent.com/u/29628323?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/AlanSl",
                    "html_url": "https://github.com/AlanSl",
                    "followers_url": "https://api.github.com/users/AlanSl/followers",
                    "following_url": "https://api.github.com/users/AlanSl/following{/other_user}",
                    "gists_url": "https://api.github.com/users/AlanSl/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/AlanSl/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/AlanSl/subscriptions",
                    "organizations_url": "https://api.github.com/users/AlanSl/orgs",
                    "repos_url": "https://api.github.com/users/AlanSl/repos",
                    "events_url": "https://api.github.com/users/AlanSl/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/AlanSl/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 2279176779,
                        "node_id": "MDU6TGFiZWwyMjc5MTc2Nzc5",
                        "url": "https://api.github.com/repos/facebook/react-native-website/labels/Stale",
                        "name": "Stale",
                        "color": "dddddd",
                        "default": false,
                        "description": ""
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 1,
                "created_at": "2022-07-19T10:49:06Z",
                "updated_at": "2022-10-18T08:59:03Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "## Description\r\n\r\nHere's the current [documentation for `accessibilityRole=\"link\"`](https://reactnative.dev/docs/accessibility#accessibilityrole):\r\n\r\n> **link** Used when the element should be treated as a link.\r\n\r\nThis... could be more helpful. It's arguably a tautology: it says the link role should be used in those cases where the link role should be used. \r\n\r\nThere are many examples (some given below) of inconsistent and sometimes contradictory ways this has been interpreted.  \r\n\r\n## What is the problem?\r\n\r\nThis is a problem because people fill in their own common-sense opinion on how link roles should be used (possibly  influenced by non-equivalent experience of links on websites).\r\n\r\nFor example, I've encountered three different interpretations on how the link role should be used, all from seemingly authoritative sources:\r\n\r\n 1. **Navigation between screens**: The widely used [react-navigation](https://github.com/react-navigation/react-navigation) project has utilities like [`useLinkProps`](https://github.com/react-navigation/react-navigation/blob/6a19be7dae997fc23ac9475040a17fb2db4ebd52/packages/native/src/useLinkProps.tsx#L123) that apply `accessiblityRole=\"link\"` to any element that navigates between screens - every element using these utilities that would do internal routing in a  web context will get the \"link\" role in Android and iOS.\r\n 2. **All interactive inline text**: The [react-native-accessibility-engine](https://github.com/aryella-lacerda/react-native-accessibility-engine) project has [a test \"link-role-required\"](https://github.com/aryella-lacerda/react-native-accessibility-engine/tree/main/src/rules/link-role-required) that requires any `Text` element with an `onPress` handler to have the role \"link\", regardless of what the press does. This appears to be interpreting \"link\" by presentation (interactive inline text) rather than the nature of the action.\r\n 3. **Opening URLs in device browser**: App accessibility consultants I've worked with in the past have advised that \"link\" should be used _specifically_ for interactive elements that cause the app open and focus a web browser, and that \"button\" should be used for in-app navigation (regardless of element type). Here's an example of [an accessibility consultancy giving this advice in the context of iOS](https://www.deque.com/blog/ios-traits/):\r\n\r\n> Links open a URL in an external browser.  This the important distinction between buttons.  Only apply the trait of link when the users interaction with the control will take them out of your application and into Safari.\r\n\r\n## How can we address it?\r\n\r\nThere _is_ one right answer as to how React Native's link accessibilityRole is intended to be used, based on the appropriate iOS and Android guidance for the underlying properties and traits that React Native applies internally to the native Android and iOS elements it controls. \r\n\r\nThe React Native accessibility docs should state it clearly. For example (assuming this one is correct):\r\n\r\n> **link** Interactive elements that load a web page in a device browser, switching focus away from this app \r\n\r\n## Why is it important?\r\n\r\nThere's clearly already diverging interpretations of how this role should be used, and it's a very commonly used role, so there is almost certainly already a lot of inconsistency on when elements are described as a \"Link\" in React Native apps in production.\r\n\r\n## Who needs this?\r\n\r\nIdeally all React Native developers should be applying this accessibilityRole consistently and correctly.\r\n\r\n## When should this happen (use version numbers if needed)?\r\n\r\nAs soon as there's a clear consensus on what the correct usage is.",
                "reactions": {
                    "url": "https://api.github.com/repos/facebook/react-native-website/issues/3215/reactions",
                    "total_count": 1,
                    "+1": 1,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/facebook/react-native-website/issues/3215/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/facebook/react-native-website/issues/comments/1282048386",
                "html_url": "https://github.com/facebook/react-native-website/issues/3215#issuecomment-1282048386",
                "issue_url": "https://api.github.com/repos/facebook/react-native-website/issues/3215",
                "id": 1282048386,
                "node_id": "IC_kwDOBoAc6M5MaoGC",
                "user": {
                    "login": "AlanSl",
                    "id": 29628323,
                    "node_id": "MDQ6VXNlcjI5NjI4MzIz",
                    "avatar_url": "https://avatars.githubusercontent.com/u/29628323?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/AlanSl",
                    "html_url": "https://github.com/AlanSl",
                    "followers_url": "https://api.github.com/users/AlanSl/followers",
                    "following_url": "https://api.github.com/users/AlanSl/following{/other_user}",
                    "gists_url": "https://api.github.com/users/AlanSl/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/AlanSl/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/AlanSl/subscriptions",
                    "organizations_url": "https://api.github.com/users/AlanSl/orgs",
                    "repos_url": "https://api.github.com/users/AlanSl/repos",
                    "events_url": "https://api.github.com/users/AlanSl/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/AlanSl/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2022-10-18T08:59:03Z",
                "updated_at": "2022-10-18T08:59:03Z",
                "author_association": "NONE",
                "body": "No it's not fixed, stay open please.",
                "reactions": {
                    "url": "https://api.github.com/repos/facebook/react-native-website/issues/comments/1282048386/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2022-10-18T08:59:03Z",
        "org": {
            "id": 69631,
            "login": "facebook",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/facebook",
            "avatar_url": "https://avatars.githubusercontent.com/u/69631?"
        }
    },
    {
        "id": "24648364060",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 29628323,
            "login": "AlanSl",
            "display_login": "AlanSl",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AlanSl",
            "avatar_url": "https://avatars.githubusercontent.com/u/29628323?"
        },
        "repo": {
            "id": 151103020,
            "name": "callstack/react-native-testing-library",
            "url": "https://api.github.com/repos/callstack/react-native-testing-library"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/callstack/react-native-testing-library/issues/786",
                "repository_url": "https://api.github.com/repos/callstack/react-native-testing-library",
                "labels_url": "https://api.github.com/repos/callstack/react-native-testing-library/issues/786/labels{/name}",
                "comments_url": "https://api.github.com/repos/callstack/react-native-testing-library/issues/786/comments",
                "events_url": "https://api.github.com/repos/callstack/react-native-testing-library/issues/786/events",
                "html_url": "https://github.com/callstack/react-native-testing-library/issues/786",
                "id": 949866768,
                "node_id": "MDU6SXNzdWU5NDk4NjY3Njg=",
                "number": 786,
                "title": "How to use `getByTestId` on web?",
                "user": {
                    "login": "conor909",
                    "id": 2417359,
                    "node_id": "MDQ6VXNlcjI0MTczNTk=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/2417359?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/conor909",
                    "html_url": "https://github.com/conor909",
                    "followers_url": "https://api.github.com/users/conor909/followers",
                    "following_url": "https://api.github.com/users/conor909/following{/other_user}",
                    "gists_url": "https://api.github.com/users/conor909/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/conor909/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/conor909/subscriptions",
                    "organizations_url": "https://api.github.com/users/conor909/orgs",
                    "repos_url": "https://api.github.com/users/conor909/repos",
                    "events_url": "https://api.github.com/users/conor909/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/conor909/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 1075506357,
                        "node_id": "MDU6TGFiZWwxMDc1NTA2MzU3",
                        "url": "https://api.github.com/repos/callstack/react-native-testing-library/labels/question",
                        "name": "question",
                        "color": "d876e3",
                        "default": true,
                        "description": "Further information is requested"
                    }
                ],
                "state": "closed",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 4,
                "created_at": "2021-07-21T15:55:02Z",
                "updated_at": "2022-10-17T16:29:12Z",
                "closed_at": "2021-08-13T19:36:26Z",
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "I believe there was recently a merge to make sure `getByTestId` only returns native elements.\r\nhttps://github.com/callstack/react-native-testing-library/pull/324\r\n\r\nDoes this mean we can't use `getByTestId` on web?\r\n\r\nIn my test file in `web` says no element matches the testID, where as in `iOS` it' finds the element and my test passes.  If I switch to use a `queryByText` query, it works fine on both platforms. But I'm targeting a plain react native `<View>` to check the styling on it is expected, so I need to target by `testID`.\r\n\r\n```js\r\n  // Fails to find ID\r\n  if (Platform.OS === 'web') {\r\n    test('StickyHeader should have sticky position prop on web', () => {\r\n      const { getByTestId } = renderRoute(<AuthenticatedApp logOut={jest.fn} user={user} />)\r\n      const stickyHeader = getByTestId('sticky-header')\r\n      expect(stickyHeader).toHaveStyle({ position: 'sticky' })\r\n    })\r\n  } \r\n\r\n  // Passes\r\n  if (Platform.OS === 'ios') {\r\n    test('StickyHeader should have relative position prop on ios ', () => {\r\n      const { getByTestId } = renderRoute(<AuthenticatedApp logOut={jest.fn} user={user} />)\r\n      const stickyHeader = getByTestId('sticky-header')\r\n      expect(stickyHeader).toHaveStyle({ position: 'relative' })\r\n    })\r\n  }\r\n```\r\n\r\ndebug\r\n```js\r\n// prints out the screen structure and I can see an object with `testID='sticky-header'`\r\n// it also includes style object with `position: 'sticky'`, so I can see it does exist\r\nconst { debug } = renderRoute(<AuthenticatedApp logOut={jest.fn} user={user} />)\r\ndebug()\r\n```",
                "reactions": {
                    "url": "https://api.github.com/repos/callstack/react-native-testing-library/issues/786/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/callstack/react-native-testing-library/issues/786/timeline",
                "performed_via_github_app": null,
                "state_reason": "completed"
            },
            "comment": {
                "url": "https://api.github.com/repos/callstack/react-native-testing-library/issues/comments/1281140468",
                "html_url": "https://github.com/callstack/react-native-testing-library/issues/786#issuecomment-1281140468",
                "issue_url": "https://api.github.com/repos/callstack/react-native-testing-library/issues/786",
                "id": 1281140468,
                "node_id": "IC_kwDOCQGmLM5MXKb0",
                "user": {
                    "login": "AlanSl",
                    "id": 29628323,
                    "node_id": "MDQ6VXNlcjI5NjI4MzIz",
                    "avatar_url": "https://avatars.githubusercontent.com/u/29628323?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/AlanSl",
                    "html_url": "https://github.com/AlanSl",
                    "followers_url": "https://api.github.com/users/AlanSl/followers",
                    "following_url": "https://api.github.com/users/AlanSl/following{/other_user}",
                    "gists_url": "https://api.github.com/users/AlanSl/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/AlanSl/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/AlanSl/subscriptions",
                    "organizations_url": "https://api.github.com/users/AlanSl/orgs",
                    "repos_url": "https://api.github.com/users/AlanSl/repos",
                    "events_url": "https://api.github.com/users/AlanSl/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/AlanSl/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2022-10-17T16:29:12Z",
                "updated_at": "2022-10-17T16:29:12Z",
                "author_association": "NONE",
                "body": "I think the original \"lack of understanding\" was misunderstanding the old linked PR \"to make sure getByTestId only returns native elements. https://github.com/callstack/react-native-testing-library/pull/324\" - reading it as web vs native when it was actually nothing to do with web, and by \"native elements\" it meant React Native primitives (View, Text, TextInput) that directly correspond to an underlying iOS or Android element vs custom intermediary components that only exist in JS / React.\r\n\r\nAs for the question of how to use `*ByTestId` in cross-platform tests that include React Native Web, the closest I can find to an answer is this long discussion here - https://github.com/callstack/react-native-testing-library/pull/407",
                "reactions": {
                    "url": "https://api.github.com/repos/callstack/react-native-testing-library/issues/comments/1281140468/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2022-10-17T16:29:13Z",
        "org": {
            "id": 42239399,
            "login": "callstack",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/callstack",
            "avatar_url": "https://avatars.githubusercontent.com/u/42239399?"
        }
    },
    {
        "id": "24221090979",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 29628323,
            "login": "AlanSl",
            "display_login": "AlanSl",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AlanSl",
            "avatar_url": "https://avatars.githubusercontent.com/u/29628323?"
        },
        "repo": {
            "id": 65750241,
            "name": "expo/expo",
            "url": "https://api.github.com/repos/expo/expo"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/expo/expo/issues/16673",
                "repository_url": "https://api.github.com/repos/expo/expo",
                "labels_url": "https://api.github.com/repos/expo/expo/issues/16673/labels{/name}",
                "comments_url": "https://api.github.com/repos/expo/expo/issues/16673/comments",
                "events_url": "https://api.github.com/repos/expo/expo/issues/16673/events",
                "html_url": "https://github.com/expo/expo/issues/16673",
                "id": 1172357887,
                "node_id": "I_kwDOA-tE4c5F4ML_",
                "number": 16673,
                "title": "[babel-expo-preset] Can't pass options to `react-native-web` preset in a multi-platform app",
                "user": {
                    "login": "AlanSl",
                    "id": 29628323,
                    "node_id": "MDQ6VXNlcjI5NjI4MzIz",
                    "avatar_url": "https://avatars.githubusercontent.com/u/29628323?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/AlanSl",
                    "html_url": "https://github.com/AlanSl",
                    "followers_url": "https://api.github.com/users/AlanSl/followers",
                    "following_url": "https://api.github.com/users/AlanSl/following{/other_user}",
                    "gists_url": "https://api.github.com/users/AlanSl/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/AlanSl/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/AlanSl/subscriptions",
                    "organizations_url": "https://api.github.com/users/AlanSl/orgs",
                    "repos_url": "https://api.github.com/users/AlanSl/repos",
                    "events_url": "https://api.github.com/users/AlanSl/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/AlanSl/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 1499152597,
                        "node_id": "MDU6TGFiZWwxNDk5MTUyNTk3",
                        "url": "https://api.github.com/repos/expo/expo/labels/stale",
                        "name": "stale",
                        "color": "f1f1f1",
                        "default": false,
                        "description": ""
                    },
                    {
                        "id": 2125837378,
                        "node_id": "MDU6TGFiZWwyMTI1ODM3Mzc4",
                        "url": "https://api.github.com/repos/expo/expo/labels/needs%20review",
                        "name": "needs review",
                        "color": "92f989",
                        "default": false,
                        "description": "Issue is ready to be reviewed by a maintainer"
                    }
                ],
                "state": "closed",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 9,
                "created_at": "2022-03-16T14:42:56Z",
                "updated_at": "2022-09-26T10:56:26Z",
                "closed_at": "2022-09-25T10:04:26Z",
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "### Summary\r\n\r\nThere seems to be no way to set options for the `react-native-web` babel plugin when using `babel-preset-expo` without causing the plugin to apply in native builds too, which breaks them:\r\n\r\n- Within `babel-preset-expo`, the setup of `babel-plugin-react-native-web` is hardcoded to have no options: https://github.com/expo/expo/blob/main/packages/babel-preset-expo/index.js#L107\r\n- Users can't configure `babel-plugin-react-native-web` in their own babel config without it applying to all builds, breaking native builds\r\n- The logic within `babel-preset-expo` that conditionally applies `babel-plugin-react-native-web` only on web depends on `api.caller()` data that is only passed to `babel-preset-expo`. Knowledge of platform seems to be unavailable anywhere in own `babel.config.js`. There's also nothing about platform in `process.env` when the build is launched through Expo's own interface.\r\n- I've seen some mentions of `web/webpack.config.js` for web-specific webpack config; but `web/babel.config.js` is ignored; I also saw some mention somewhere of defining `web.build.babel` object in `app.json` but this caused the build to fail silently with no log output.\r\n\r\nIf the platform is only available within `babel-preset-expo`, there should be a way to pass config options in; if there isn't a way to pass config options in, there should be a way to conditionally apply the plugin based on the current build's target platform; but there's neither.\r\n\r\n### Managed or bare workflow? If you have `ios/` or `android/` directories in your project, the answer is bare!\r\n\r\nmanaged\r\n\r\n### What platform(s) does this occur on?\r\n\r\nWeb\r\n\r\n### SDK Version (managed workflow only)\r\n\r\n44\r\n\r\n### Environment\r\n\r\n```\r\n  expo-env-info 1.0.2 environment info:\r\n    System:\r\n      OS: macOS 11.6.4\r\n      Shell: 5.8 - /bin/zsh\r\n    Binaries:\r\n      Node: 16.1.0 - ~/.nvm/versions/node/v16.1.0/bin/node\r\n      Yarn: 1.22.17 - ~/.nvm/versions/node/v16.1.0/bin/yarn\r\n      npm: 8.5.3 - ~/.nvm/versions/node/v16.1.0/bin/npm\r\n      Watchman: 2021.06.07.00 - /usr/local/bin/watchman\r\n    Managers:\r\n      CocoaPods: 1.10.1 - /usr/local/bin/pod\r\n    SDKs:\r\n      iOS SDK:\r\n        Platforms: DriverKit 21.2, iOS 15.2, macOS 12.1, tvOS 15.2, watchOS 8.3\r\n      Android SDK:\r\n        API Levels: 29, 30\r\n        Build Tools: 29.0.2, 30.0.3\r\n        System Images: android-29 | Intel x86 Atom_64, android-30 | Google APIs Intel x86 Atom\r\n    IDEs:\r\n      Xcode: 13.2.1/13C100 - /usr/bin/xcodebuild\r\n    npmGlobalPackages:\r\n      expo-cli: 5.3.0\r\n    Expo Workflow: managed\r\n```\r\n\r\n### Reproducible demo\r\n\r\n```js\r\n// babel.config.js in a new Expo app\r\nmodule.exports = function (api) {\r\n  // This always returns undefined: platform is unavailable outside babel-preset-expo internals?\r\n  const platform = api.caller((caller) => caller?.platform)\r\n\r\n  // Adding 'react-native-web' plugin without a platform check breaks native builds; but platform\r\n  // check is not possible? So plugins applied here are either \"all platforms\" or \"no platforms\"?\r\n  const plugins = platform === 'web' ? [['react-native-web', { commonjs: true }]] : []\r\n\r\n  api.cache(true)\r\n  return {\r\n    presets: ['babel-preset-expo'],\r\n    plugins\r\n  }\r\n}\r\n```",
                "reactions": {
                    "url": "https://api.github.com/repos/expo/expo/issues/16673/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/expo/expo/issues/16673/timeline",
                "performed_via_github_app": null,
                "state_reason": "completed"
            },
            "comment": {
                "url": "https://api.github.com/repos/expo/expo/issues/comments/1257853133",
                "html_url": "https://github.com/expo/expo/issues/16673#issuecomment-1257853133",
                "issue_url": "https://api.github.com/repos/expo/expo/issues/16673",
                "id": 1257853133,
                "node_id": "IC_kwDOA-tE4c5K-VDN",
                "user": {
                    "login": "AlanSl",
                    "id": 29628323,
                    "node_id": "MDQ6VXNlcjI5NjI4MzIz",
                    "avatar_url": "https://avatars.githubusercontent.com/u/29628323?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/AlanSl",
                    "html_url": "https://github.com/AlanSl",
                    "followers_url": "https://api.github.com/users/AlanSl/followers",
                    "following_url": "https://api.github.com/users/AlanSl/following{/other_user}",
                    "gists_url": "https://api.github.com/users/AlanSl/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/AlanSl/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/AlanSl/subscriptions",
                    "organizations_url": "https://api.github.com/users/AlanSl/orgs",
                    "repos_url": "https://api.github.com/users/AlanSl/repos",
                    "events_url": "https://api.github.com/users/AlanSl/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/AlanSl/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2022-09-26T10:56:26Z",
                "updated_at": "2022-09-26T10:56:26Z",
                "author_association": "NONE",
                "body": "I think this is still an issue. \r\n\r\n(couldn't respond within the bot's 7 days because I was away last week)",
                "reactions": {
                    "url": "https://api.github.com/repos/expo/expo/issues/comments/1257853133/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2022-09-26T10:56:26Z",
        "org": {
            "id": 12504344,
            "login": "expo",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/expo",
            "avatar_url": "https://avatars.githubusercontent.com/u/12504344?"
        }
    },
    {
        "id": "24005363492",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 29628323,
            "login": "AlanSl",
            "display_login": "AlanSl",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AlanSl",
            "avatar_url": "https://avatars.githubusercontent.com/u/29628323?"
        },
        "repo": {
            "id": 88450703,
            "name": "wclr/yalc",
            "url": "https://api.github.com/repos/wclr/yalc"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/wclr/yalc/issues/203",
                "repository_url": "https://api.github.com/repos/wclr/yalc",
                "labels_url": "https://api.github.com/repos/wclr/yalc/issues/203/labels{/name}",
                "comments_url": "https://api.github.com/repos/wclr/yalc/issues/203/comments",
                "events_url": "https://api.github.com/repos/wclr/yalc/issues/203/events",
                "html_url": "https://github.com/wclr/yalc/issues/203",
                "id": 1347851175,
                "node_id": "I_kwDOBUWmj85QVpOn",
                "number": 203,
                "title": "`yalc add` on Mac can (rarely) fail with ENOTDIR invalid cwd, treating .DS_Store as a version directory.",
                "user": {
                    "login": "AlanSl",
                    "id": 29628323,
                    "node_id": "MDQ6VXNlcjI5NjI4MzIz",
                    "avatar_url": "https://avatars.githubusercontent.com/u/29628323?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/AlanSl",
                    "html_url": "https://github.com/AlanSl",
                    "followers_url": "https://api.github.com/users/AlanSl/followers",
                    "following_url": "https://api.github.com/users/AlanSl/following{/other_user}",
                    "gists_url": "https://api.github.com/users/AlanSl/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/AlanSl/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/AlanSl/subscriptions",
                    "organizations_url": "https://api.github.com/users/AlanSl/orgs",
                    "repos_url": "https://api.github.com/users/AlanSl/repos",
                    "events_url": "https://api.github.com/users/AlanSl/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/AlanSl/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 2,
                "created_at": "2022-08-23T12:13:09Z",
                "updated_at": "2022-09-14T14:27:00Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "I saw this for the first time today on running `yalc add` on several packages in a new repo (MacOS 11.6.8). All the packages worked except one, which gave this error:\r\n\r\n> Error: ENOTDIR invalid cwd /Users/alan/.yalc/packages/{package_name}/.DS_Store\r\n>     at Glob._readdirError (/Users/alan/.npm/_npx/8971ede65c5d814d/node_modules/glob/glob.js:589:21)\r\n>     at /Users/alan/.npm/_npx/8971ede65c5d814d/node_modules/glob/glob.js:550:12\r\n>     at FSReqCallback.oncomplete (node:fs:188:23) {\r\n>   path: '/Users/alan/.yalc/packages/{package_name}/.DS_Store',\r\n>   code: 'ENOTDIR'\r\n> }\r\n\r\nDeleting the Mac OS generated `.DS_Store` file in the Yalc package directory (the one that contains all the yalc-published versions) fixed this.\r\n\r\nIt's strange because:\r\n\r\n - All the other packages worked fine and they all had `.DS_Store` files in their directories of version directories\r\n - All the packages came from the same monorepo, which had `.DS_Store` in its gitignore",
                "reactions": {
                    "url": "https://api.github.com/repos/wclr/yalc/issues/203/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/wclr/yalc/issues/203/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/wclr/yalc/issues/comments/1246848488",
                "html_url": "https://github.com/wclr/yalc/issues/203#issuecomment-1246848488",
                "issue_url": "https://api.github.com/repos/wclr/yalc/issues/203",
                "id": 1246848488,
                "node_id": "IC_kwDOBUWmj85KUWXo",
                "user": {
                    "login": "AlanSl",
                    "id": 29628323,
                    "node_id": "MDQ6VXNlcjI5NjI4MzIz",
                    "avatar_url": "https://avatars.githubusercontent.com/u/29628323?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/AlanSl",
                    "html_url": "https://github.com/AlanSl",
                    "followers_url": "https://api.github.com/users/AlanSl/followers",
                    "following_url": "https://api.github.com/users/AlanSl/following{/other_user}",
                    "gists_url": "https://api.github.com/users/AlanSl/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/AlanSl/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/AlanSl/subscriptions",
                    "organizations_url": "https://api.github.com/users/AlanSl/orgs",
                    "repos_url": "https://api.github.com/users/AlanSl/repos",
                    "events_url": "https://api.github.com/users/AlanSl/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/AlanSl/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2022-09-14T14:27:00Z",
                "updated_at": "2022-09-14T14:27:00Z",
                "author_association": "NONE",
                "body": "Not really. It might be possible to work around by forcing the version folders to have a more recent created date than `.DS_Store`, e.g. by deleting the published versions then `yalc publish` again?",
                "reactions": {
                    "url": "https://api.github.com/repos/wclr/yalc/issues/comments/1246848488/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2022-09-14T14:27:01Z"
    },
    {
        "id": "23917625904",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 29628323,
            "login": "AlanSl",
            "display_login": "AlanSl",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AlanSl",
            "avatar_url": "https://avatars.githubusercontent.com/u/29628323?"
        },
        "repo": {
            "id": 49668250,
            "name": "dear-github/dear-github",
            "url": "https://api.github.com/repos/dear-github/dear-github"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/dear-github/dear-github/issues/332",
                "repository_url": "https://api.github.com/repos/dear-github/dear-github",
                "labels_url": "https://api.github.com/repos/dear-github/dear-github/issues/332/labels{/name}",
                "comments_url": "https://api.github.com/repos/dear-github/dear-github/issues/332/comments",
                "events_url": "https://api.github.com/repos/dear-github/dear-github/issues/332/events",
                "html_url": "https://github.com/dear-github/dear-github/issues/332",
                "id": 377623366,
                "node_id": "MDU6SXNzdWUzNzc2MjMzNjY=",
                "number": 332,
                "title": "Allow pull request author to \"Request Changes\" themselves",
                "user": {
                    "login": "adamdecaf",
                    "id": 120951,
                    "node_id": "MDQ6VXNlcjEyMDk1MQ==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/120951?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/adamdecaf",
                    "html_url": "https://github.com/adamdecaf",
                    "followers_url": "https://api.github.com/users/adamdecaf/followers",
                    "following_url": "https://api.github.com/users/adamdecaf/following{/other_user}",
                    "gists_url": "https://api.github.com/users/adamdecaf/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/adamdecaf/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/adamdecaf/subscriptions",
                    "organizations_url": "https://api.github.com/users/adamdecaf/orgs",
                    "repos_url": "https://api.github.com/users/adamdecaf/repos",
                    "events_url": "https://api.github.com/users/adamdecaf/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/adamdecaf/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 9,
                "created_at": "2018-11-05T23:12:48Z",
                "updated_at": "2022-09-09T14:02:08Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "Often a pull request (PR) author might share a branch in PR form to get feedback from the team or to review at a later point. It would be helpful for the author to be able to \"Request Changes\" on themselves. The original author should be able to signal not to merge if desired. \r\n\r\nThis also applies when a PR changes ownership, if an employee leaves for example.",
                "reactions": {
                    "url": "https://api.github.com/repos/dear-github/dear-github/issues/332/reactions",
                    "total_count": 20,
                    "+1": 20,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/dear-github/dear-github/issues/332/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/dear-github/dear-github/issues/comments/1242014808",
                "html_url": "https://github.com/dear-github/dear-github/issues/332#issuecomment-1242014808",
                "issue_url": "https://api.github.com/repos/dear-github/dear-github/issues/332",
                "id": 1242014808,
                "node_id": "IC_kwDOAvXgms5KB6RY",
                "user": {
                    "login": "AlanSl",
                    "id": 29628323,
                    "node_id": "MDQ6VXNlcjI5NjI4MzIz",
                    "avatar_url": "https://avatars.githubusercontent.com/u/29628323?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/AlanSl",
                    "html_url": "https://github.com/AlanSl",
                    "followers_url": "https://api.github.com/users/AlanSl/followers",
                    "following_url": "https://api.github.com/users/AlanSl/following{/other_user}",
                    "gists_url": "https://api.github.com/users/AlanSl/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/AlanSl/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/AlanSl/subscriptions",
                    "organizations_url": "https://api.github.com/users/AlanSl/orgs",
                    "repos_url": "https://api.github.com/users/AlanSl/repos",
                    "events_url": "https://api.github.com/users/AlanSl/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/AlanSl/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2022-09-09T14:02:08Z",
                "updated_at": "2022-09-09T14:02:08Z",
                "author_association": "NONE",
                "body": "Same request please. In my case:\r\n\r\n- my PR **is** ready for review and I want colleagues to review it, so setting it to \"draft\" isn't appropriate,\r\n- but there is one very localised crucial and non-obvious problem with it that must be fixed before it is merged\r\n- This problem should block merging until it is fixed (and there is a danger that colleagues in a different timezone could miss my comment flagging the issue, approve, and merge during hours I'm not active), but shouldn't deter the rest of the PR from being reviewed\r\n\r\nSo \"request changes\" is exactly the right tool for my scenario, because it flags the problem, blocks merge, but continues to allow and encourage the rest of the PR to be reviewed; but I'm not allowed to use it. ",
                "reactions": {
                    "url": "https://api.github.com/repos/dear-github/dear-github/issues/comments/1242014808/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2022-09-09T14:02:08Z",
        "org": {
            "id": 16708458,
            "login": "dear-github",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/dear-github",
            "avatar_url": "https://avatars.githubusercontent.com/u/16708458?"
        }
    },
    {
        "id": "23659274208",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 29628323,
            "login": "AlanSl",
            "display_login": "AlanSl",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AlanSl",
            "avatar_url": "https://avatars.githubusercontent.com/u/29628323?"
        },
        "repo": {
            "id": 29028775,
            "name": "facebook/react-native",
            "url": "https://api.github.com/repos/facebook/react-native"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/facebook/react-native/issues/34508",
                "repository_url": "https://api.github.com/repos/facebook/react-native",
                "labels_url": "https://api.github.com/repos/facebook/react-native/issues/34508/labels{/name}",
                "comments_url": "https://api.github.com/repos/facebook/react-native/issues/34508/comments",
                "events_url": "https://api.github.com/repos/facebook/react-native/issues/34508/events",
                "html_url": "https://github.com/facebook/react-native/issues/34508",
                "id": 1352143575,
                "node_id": "I_kwDOAbrxp85QmBLX",
                "number": 34508,
                "title": "Returning eventSubscription.remove as useEffect cleanup crashes with \"undefined is not an object (evaluating emitter)\"",
                "user": {
                    "login": "AlanSl",
                    "id": 29628323,
                    "node_id": "MDQ6VXNlcjI5NjI4MzIz",
                    "avatar_url": "https://avatars.githubusercontent.com/u/29628323?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/AlanSl",
                    "html_url": "https://github.com/AlanSl",
                    "followers_url": "https://api.github.com/users/AlanSl/followers",
                    "following_url": "https://api.github.com/users/AlanSl/following{/other_user}",
                    "gists_url": "https://api.github.com/users/AlanSl/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/AlanSl/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/AlanSl/subscriptions",
                    "organizations_url": "https://api.github.com/users/AlanSl/orgs",
                    "repos_url": "https://api.github.com/users/AlanSl/repos",
                    "events_url": "https://api.github.com/users/AlanSl/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/AlanSl/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 1794148347,
                        "node_id": "MDU6TGFiZWwxNzk0MTQ4MzQ3",
                        "url": "https://api.github.com/repos/facebook/react-native/labels/Needs:%20Triage%20:mag:",
                        "name": "Needs: Triage :mag:",
                        "color": "bfd4f2",
                        "default": false,
                        "description": ""
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 1,
                "created_at": "2022-08-26T11:32:08Z",
                "updated_at": "2022-08-26T14:08:28Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "### Description\r\n\r\nThis might be expected behaviour or not worth fixing since there's an easy workaround, but it was tricky to debug and I think it's new behaviour in a recent release (I'm sure I've seen this pattern used since around `0.65` without errors), so I think it's worth having an issue people can find by search.\r\n\r\nConfirmed in Android and iOS (and not in react-native-web).\r\n\r\n---\r\n\r\nIf the `remove` method of an event subscription is returned as the cleanup function for a `useEffect`, on dismount, the removal crashes internally with either:\r\n\r\n> undefined is not an object (reading 'emitter')\r\n>\r\n> Call Stack: EmitterSubscription#remove\r\n\r\n...or...\r\n\r\n> undefined is not an object (evaluating this.emitter)\r\n\r\nDoing something like this crashes on dismount, unable to find the subscription's emitter property:\r\n\r\n```js\r\n  useEffect(() => {\r\n    const subscription = Dimensions.addEventListener('change', () => {})\r\n    return subscription.remove // crashes, `subscription.emitter` is lost before `remove` is called\r\n  }, [])\r\n```\r\n\r\nWrapping it in an outer function doesn't crash and works as expected, presumably because trapping the whole subscription object in the return function's scope stops its emitter property from getting deleted?\r\n\r\n```js\r\n  useEffect(() => {\r\n    const subscription = Dimensions.addEventListener('change', () => {})\r\n    return () => subscription.remove() // doesn't crash, `subscription.emitter` is preserved\r\n  }, [])\r\n```\r\n\r\n### Version\r\n\r\n0.69.4\r\n\r\n### Output of `npx react-native info`\r\n\r\n```\r\nSystem:\r\n    OS: macOS 11.6.8\r\n    CPU: (8) x64 Intel(R) Core(TM) i7-1068NG7 CPU @ 2.30GHz\r\n    Memory: 7.56 GB / 32.00 GB\r\n    Shell: 5.8 - /bin/zsh\r\n  Binaries:\r\n    Node: 16.16.0 - ~/.nvm/versions/node/v16.16.0/bin/node\r\n    Yarn: Not Found\r\n    npm: 8.17.0 - ~/.nvm/versions/node/v16.16.0/bin/npm\r\n    Watchman: 2021.06.07.00 - /usr/local/bin/watchman\r\n  Managers:\r\n    CocoaPods: 1.10.1 - /usr/local/bin/pod\r\n  SDKs:\r\n    iOS SDK:\r\n      Platforms: DriverKit 21.2, iOS 15.2, macOS 12.1, tvOS 15.2, watchOS 8.3\r\n    Android SDK:\r\n      API Levels: 29, 30\r\n      Build Tools: 29.0.2, 30.0.3\r\n      System Images: android-29 | Intel x86 Atom_64, android-30 | Google APIs Intel x86 Atom\r\n      Android NDK: Not Found\r\n  IDEs:\r\n    Android Studio: Not Found\r\n    Xcode: 13.2.1/13C100 - /usr/bin/xcodebuild\r\n  Languages:\r\n    Java: 1.8.0_282 - /usr/bin/javac\r\n  npmPackages:\r\n    @react-native-community/cli: Not Found\r\n    react: ~18.0.0 => 18.0.0 \r\n    react-native: 0.69.4 => 0.69.4 \r\n    react-native-macos: Not Found\r\n  npmGlobalPackages:\r\n    *react-native*: Not Found\r\n```\r\n\r\n### Steps to reproduce\r\n\r\n1. Call `Dimensions.addEventListener` or `AccessibilityInfo.addEventListener` or similar in a `useEffect`\r\n2. Capture the subscription in a variable\r\n3. Return the subscription's remove method as the useEffect's cleanup function\r\n\r\n### Snack, code example, screenshot, or link to a repository\r\n\r\nhttps://snack.expo.dev/@alansl/amused-peanut",
                "reactions": {
                    "url": "https://api.github.com/repos/facebook/react-native/issues/34508/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/facebook/react-native/issues/34508/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/facebook/react-native/issues/comments/1228536844",
                "html_url": "https://github.com/facebook/react-native/issues/34508#issuecomment-1228536844",
                "issue_url": "https://api.github.com/repos/facebook/react-native/issues/34508",
                "id": 1228536844,
                "node_id": "IC_kwDOAbrxp85JOfwM",
                "user": {
                    "login": "AlanSl",
                    "id": 29628323,
                    "node_id": "MDQ6VXNlcjI5NjI4MzIz",
                    "avatar_url": "https://avatars.githubusercontent.com/u/29628323?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/AlanSl",
                    "html_url": "https://github.com/AlanSl",
                    "followers_url": "https://api.github.com/users/AlanSl/followers",
                    "following_url": "https://api.github.com/users/AlanSl/following{/other_user}",
                    "gists_url": "https://api.github.com/users/AlanSl/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/AlanSl/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/AlanSl/subscriptions",
                    "organizations_url": "https://api.github.com/users/AlanSl/orgs",
                    "repos_url": "https://api.github.com/users/AlanSl/repos",
                    "events_url": "https://api.github.com/users/AlanSl/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/AlanSl/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2022-08-26T14:08:28Z",
                "updated_at": "2022-08-26T14:08:28Z",
                "author_association": "NONE",
                "body": "@pablolucas890 Good catch that there is an example in the docs that uses the wrapper function approach. \r\n\r\nYour `return listener.remove()` example is missing the wrapper function: it's creating the subscription then immediately removing it, so it doesn't crash, but it won't work either (if you changed both the `useEffect`s in my example to be like this, the \"width\" text won't update when you rotate the device, because both subscriptions are cancelled immediately after being created).\r\n\r\nIt should be `return () => listener.remove()` instead of `return listener.remove()`, wrapping it in a function so that instead of calling `remove` right away, React keeps the function and calls it on dismount (see the [docs for cleanup functions in `useEffect`](https://reactjs.org/docs/hooks-effect.html#example-using-hooks-1))\r\n\r\n---\r\n\r\nThe point of this issue is that usually, `return someFunction` and `return () => someFunction()` would be equivalent if the function is being called without arguments, but in this case (presumably because of some internal detail relying on `this` or something similar), the first crashes with a non-obvious error, while the second works.\r\n\r\nSo, this issue isn't a big deal, because the workaround is really simple (do `return () => subscription.remove()` instead of `return subscription.remove`), but it's a bit of a gotcha so I thought it's worth at least having an issue posted that someone affected can find.",
                "reactions": {
                    "url": "https://api.github.com/repos/facebook/react-native/issues/comments/1228536844/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2022-08-26T14:08:28Z",
        "org": {
            "id": 69631,
            "login": "facebook",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/facebook",
            "avatar_url": "https://avatars.githubusercontent.com/u/69631?"
        }
    },
    {
        "id": "23656253645",
        "type": "IssuesEvent",
        "actor": {
            "id": 29628323,
            "login": "AlanSl",
            "display_login": "AlanSl",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AlanSl",
            "avatar_url": "https://avatars.githubusercontent.com/u/29628323?"
        },
        "repo": {
            "id": 29028775,
            "name": "facebook/react-native",
            "url": "https://api.github.com/repos/facebook/react-native"
        },
        "payload": {
            "action": "opened",
            "issue": {
                "url": "https://api.github.com/repos/facebook/react-native/issues/34508",
                "repository_url": "https://api.github.com/repos/facebook/react-native",
                "labels_url": "https://api.github.com/repos/facebook/react-native/issues/34508/labels{/name}",
                "comments_url": "https://api.github.com/repos/facebook/react-native/issues/34508/comments",
                "events_url": "https://api.github.com/repos/facebook/react-native/issues/34508/events",
                "html_url": "https://github.com/facebook/react-native/issues/34508",
                "id": 1352143575,
                "node_id": "I_kwDOAbrxp85QmBLX",
                "number": 34508,
                "title": "Returning eventSubscription.remove as useEffect cleanup crashes with \"undefined is not an object (evaluating emitter)\"",
                "user": {
                    "login": "AlanSl",
                    "id": 29628323,
                    "node_id": "MDQ6VXNlcjI5NjI4MzIz",
                    "avatar_url": "https://avatars.githubusercontent.com/u/29628323?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/AlanSl",
                    "html_url": "https://github.com/AlanSl",
                    "followers_url": "https://api.github.com/users/AlanSl/followers",
                    "following_url": "https://api.github.com/users/AlanSl/following{/other_user}",
                    "gists_url": "https://api.github.com/users/AlanSl/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/AlanSl/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/AlanSl/subscriptions",
                    "organizations_url": "https://api.github.com/users/AlanSl/orgs",
                    "repos_url": "https://api.github.com/users/AlanSl/repos",
                    "events_url": "https://api.github.com/users/AlanSl/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/AlanSl/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 1794148347,
                        "node_id": "MDU6TGFiZWwxNzk0MTQ4MzQ3",
                        "url": "https://api.github.com/repos/facebook/react-native/labels/Needs:%20Triage%20:mag:",
                        "name": "Needs: Triage :mag:",
                        "color": "bfd4f2",
                        "default": false,
                        "description": ""
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 0,
                "created_at": "2022-08-26T11:32:08Z",
                "updated_at": "2022-08-26T11:32:08Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "### Description\n\nThis might be expected behaviour or not worth fixing since there's an easy workaround, but it was tricky to debug and I think it's new behaviour in a recent release (I'm sure I've seen this pattern used since around `0.65` without errors), so I think it's worth having an issue people can find by search.\r\n\r\n---\r\n\r\nIf the `remove` method of an event subscription is returned as the cleanup function for a `useEffect`, on dismount, the removal crashes internally with either:\r\n\r\n> undefined is not an object (reading 'emitter')\r\n>\r\n> Call Stack: EmitterSubscription#remove\r\n\r\n...or...\r\n\r\n> undefined is not an object (evaluating this.emitter)\r\n\r\nIt appears that the `.emitter` property of the subscription gets scrubbed, so when the remove method tries to access it, it is gone. Wrapping the remove method in a function and returning that doesn't have this problem.\r\n\r\n---\r\n\r\nSo, doing something like this crashes on dismount, unable to find the subscription's emitter property:\r\n\r\n```js\r\n  useEffect(() => {\r\n    const subscription = Dimensions.addEventListener('change', () => {})\r\n    return subscription.remove // crashes, `subscription`'s other properties are lost before `remove` is called\r\n  }, [])\r\n```\r\n\r\nThis doesn't and works as expected, presumably because trapping the whole subscription object in the return function's scope stops its emitter property from getting deleted?\r\n\r\n```js\r\n  useEffect(() => {\r\n    const subscription = Dimensions.addEventListener('change', () => {})\r\n    return () => subscription.remove() // doesn't crash, `subscription`'s other properties are preserved\r\n  }, [])\r\n```\n\n### Version\n\n0.69.4\n\n### Output of `npx react-native info`\n\n```\r\nSystem:\r\n    OS: macOS 11.6.8\r\n    CPU: (8) x64 Intel(R) Core(TM) i7-1068NG7 CPU @ 2.30GHz\r\n    Memory: 7.56 GB / 32.00 GB\r\n    Shell: 5.8 - /bin/zsh\r\n  Binaries:\r\n    Node: 16.16.0 - ~/.nvm/versions/node/v16.16.0/bin/node\r\n    Yarn: Not Found\r\n    npm: 8.17.0 - ~/.nvm/versions/node/v16.16.0/bin/npm\r\n    Watchman: 2021.06.07.00 - /usr/local/bin/watchman\r\n  Managers:\r\n    CocoaPods: 1.10.1 - /usr/local/bin/pod\r\n  SDKs:\r\n    iOS SDK:\r\n      Platforms: DriverKit 21.2, iOS 15.2, macOS 12.1, tvOS 15.2, watchOS 8.3\r\n    Android SDK:\r\n      API Levels: 29, 30\r\n      Build Tools: 29.0.2, 30.0.3\r\n      System Images: android-29 | Intel x86 Atom_64, android-30 | Google APIs Intel x86 Atom\r\n      Android NDK: Not Found\r\n  IDEs:\r\n    Android Studio: Not Found\r\n    Xcode: 13.2.1/13C100 - /usr/bin/xcodebuild\r\n  Languages:\r\n    Java: 1.8.0_282 - /usr/bin/javac\r\n  npmPackages:\r\n    @react-native-community/cli: Not Found\r\n    react: ~18.0.0 => 18.0.0 \r\n    react-native: 0.69.4 => 0.69.4 \r\n    react-native-macos: Not Found\r\n  npmGlobalPackages:\r\n    *react-native*: Not Found\r\n```\n\n### Steps to reproduce\n\n1. Call `Dimensions.addEventListener` or `AccessibilityInfo.addEventListener` or similar in a `useEffect`\r\n2. Capture the subscription in a variable\r\n3. Return the subscription's remove method as the useEffect's cleanup function\n\n### Snack, code example, screenshot, or link to a repository\n\nhttps://snack.expo.dev/@alansl/amused-peanut",
                "reactions": {
                    "url": "https://api.github.com/repos/facebook/react-native/issues/34508/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/facebook/react-native/issues/34508/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            }
        },
        "public": true,
        "created_at": "2022-08-26T11:32:08Z",
        "org": {
            "id": 69631,
            "login": "facebook",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/facebook",
            "avatar_url": "https://avatars.githubusercontent.com/u/69631?"
        }
    },
    {
        "id": "23639449416",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 29628323,
            "login": "AlanSl",
            "display_login": "AlanSl",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AlanSl",
            "avatar_url": "https://avatars.githubusercontent.com/u/29628323?"
        },
        "repo": {
            "id": 37153337,
            "name": "necolas/react-native-web",
            "url": "https://api.github.com/repos/necolas/react-native-web"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/necolas/react-native-web/issues/2374",
                "repository_url": "https://api.github.com/repos/necolas/react-native-web",
                "labels_url": "https://api.github.com/repos/necolas/react-native-web/issues/2374/labels{/name}",
                "comments_url": "https://api.github.com/repos/necolas/react-native-web/issues/2374/comments",
                "events_url": "https://api.github.com/repos/necolas/react-native-web/issues/2374/events",
                "html_url": "https://github.com/necolas/react-native-web/pull/2374",
                "id": 1350058562,
                "node_id": "PR_kwDOAjbqOc49wG9i",
                "number": 2374,
                "title": "[fix] Allow Pressable to be programmatically focused when disabled",
                "user": {
                    "login": "necolas",
                    "id": 239676,
                    "node_id": "MDQ6VXNlcjIzOTY3Ng==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/239676?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/necolas",
                    "html_url": "https://github.com/necolas",
                    "followers_url": "https://api.github.com/users/necolas/followers",
                    "following_url": "https://api.github.com/users/necolas/following{/other_user}",
                    "gists_url": "https://api.github.com/users/necolas/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/necolas/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/necolas/subscriptions",
                    "organizations_url": "https://api.github.com/users/necolas/orgs",
                    "repos_url": "https://api.github.com/users/necolas/repos",
                    "events_url": "https://api.github.com/users/necolas/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/necolas/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 3,
                "created_at": "2022-08-24T21:48:15Z",
                "updated_at": "2022-08-25T15:44:41Z",
                "closed_at": null,
                "author_association": "OWNER",
                "active_lock_reason": null,
                "draft": false,
                "pull_request": {
                    "url": "https://api.github.com/repos/necolas/react-native-web/pulls/2374",
                    "html_url": "https://github.com/necolas/react-native-web/pull/2374",
                    "diff_url": "https://github.com/necolas/react-native-web/pull/2374.diff",
                    "patch_url": "https://github.com/necolas/react-native-web/pull/2374.patch",
                    "merged_at": null
                },
                "body": "Fix #2357",
                "reactions": {
                    "url": "https://api.github.com/repos/necolas/react-native-web/issues/2374/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/necolas/react-native-web/issues/2374/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/necolas/react-native-web/issues/comments/1227450678",
                "html_url": "https://github.com/necolas/react-native-web/pull/2374#issuecomment-1227450678",
                "issue_url": "https://api.github.com/repos/necolas/react-native-web/issues/2374",
                "id": 1227450678,
                "node_id": "IC_kwDOAjbqOc5JKWk2",
                "user": {
                    "login": "AlanSl",
                    "id": 29628323,
                    "node_id": "MDQ6VXNlcjI5NjI4MzIz",
                    "avatar_url": "https://avatars.githubusercontent.com/u/29628323?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/AlanSl",
                    "html_url": "https://github.com/AlanSl",
                    "followers_url": "https://api.github.com/users/AlanSl/followers",
                    "following_url": "https://api.github.com/users/AlanSl/following{/other_user}",
                    "gists_url": "https://api.github.com/users/AlanSl/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/AlanSl/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/AlanSl/subscriptions",
                    "organizations_url": "https://api.github.com/users/AlanSl/orgs",
                    "repos_url": "https://api.github.com/users/AlanSl/repos",
                    "events_url": "https://api.github.com/users/AlanSl/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/AlanSl/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2022-08-25T15:44:41Z",
                "updated_at": "2022-08-25T15:44:41Z",
                "author_association": "NONE",
                "body": "Great, thanks, I've tried this out locally in my real-world component that had the initial problem, and this fixes it, means I can remove the workaround I'd previously used. And of course it works perfectly in the sandbox reproduction too.\r\n\r\nLGTM and thank you!",
                "reactions": {
                    "url": "https://api.github.com/repos/necolas/react-native-web/issues/comments/1227450678/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2022-08-25T15:44:41Z"
    },
    {
        "id": "23586810111",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 29628323,
            "login": "AlanSl",
            "display_login": "AlanSl",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AlanSl",
            "avatar_url": "https://avatars.githubusercontent.com/u/29628323?"
        },
        "repo": {
            "id": 88450703,
            "name": "wclr/yalc",
            "url": "https://api.github.com/repos/wclr/yalc"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/wclr/yalc/issues/203",
                "repository_url": "https://api.github.com/repos/wclr/yalc",
                "labels_url": "https://api.github.com/repos/wclr/yalc/issues/203/labels{/name}",
                "comments_url": "https://api.github.com/repos/wclr/yalc/issues/203/comments",
                "events_url": "https://api.github.com/repos/wclr/yalc/issues/203/events",
                "html_url": "https://github.com/wclr/yalc/issues/203",
                "id": 1347851175,
                "node_id": "I_kwDOBUWmj85QVpOn",
                "number": 203,
                "title": "`yalc add` on Mac can fail with get ENOTDIR invalid cwd treating .DS_Store as a version directory.",
                "user": {
                    "login": "AlanSl",
                    "id": 29628323,
                    "node_id": "MDQ6VXNlcjI5NjI4MzIz",
                    "avatar_url": "https://avatars.githubusercontent.com/u/29628323?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/AlanSl",
                    "html_url": "https://github.com/AlanSl",
                    "followers_url": "https://api.github.com/users/AlanSl/followers",
                    "following_url": "https://api.github.com/users/AlanSl/following{/other_user}",
                    "gists_url": "https://api.github.com/users/AlanSl/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/AlanSl/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/AlanSl/subscriptions",
                    "organizations_url": "https://api.github.com/users/AlanSl/orgs",
                    "repos_url": "https://api.github.com/users/AlanSl/repos",
                    "events_url": "https://api.github.com/users/AlanSl/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/AlanSl/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 1,
                "created_at": "2022-08-23T12:13:09Z",
                "updated_at": "2022-08-23T12:19:57Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "I saw this for the first time today on running `yalc add` on several packages in a new repo (MacOS 11.6.8). All the packages worked except one, which gave this error:\r\n\r\n> Error: ENOTDIR invalid cwd /Users/alan/.yalc/packages/{package_name}/.DS_Store\r\n>     at Glob._readdirError (/Users/alan/.npm/_npx/8971ede65c5d814d/node_modules/glob/glob.js:589:21)\r\n>     at /Users/alan/.npm/_npx/8971ede65c5d814d/node_modules/glob/glob.js:550:12\r\n>     at FSReqCallback.oncomplete (node:fs:188:23) {\r\n>   path: '/Users/alan/.yalc/packages/{package_name}/.DS_Store',\r\n>   code: 'ENOTDIR'\r\n> }\r\n\r\nDeleting the Mac OS generated `.DS_Store` file in the Yalc package directory (the one that contains all the yalc-published versions) fixed this.\r\n\r\nIt's strange because:\r\n\r\n - All the other packages worked fine and they all had `.DS_Store` files\r\n - All the packages came from the same monorepo, which had `.DS_Store` in its gitignore",
                "reactions": {
                    "url": "https://api.github.com/repos/wclr/yalc/issues/203/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/wclr/yalc/issues/203/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/wclr/yalc/issues/comments/1223991017",
                "html_url": "https://github.com/wclr/yalc/issues/203#issuecomment-1223991017",
                "issue_url": "https://api.github.com/repos/wclr/yalc/issues/203",
                "id": 1223991017,
                "node_id": "IC_kwDOBUWmj85I9J7p",
                "user": {
                    "login": "AlanSl",
                    "id": 29628323,
                    "node_id": "MDQ6VXNlcjI5NjI4MzIz",
                    "avatar_url": "https://avatars.githubusercontent.com/u/29628323?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/AlanSl",
                    "html_url": "https://github.com/AlanSl",
                    "followers_url": "https://api.github.com/users/AlanSl/followers",
                    "following_url": "https://api.github.com/users/AlanSl/following{/other_user}",
                    "gists_url": "https://api.github.com/users/AlanSl/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/AlanSl/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/AlanSl/subscriptions",
                    "organizations_url": "https://api.github.com/users/AlanSl/orgs",
                    "repos_url": "https://api.github.com/users/AlanSl/repos",
                    "events_url": "https://api.github.com/users/AlanSl/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/AlanSl/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2022-08-23T12:19:57Z",
                "updated_at": "2022-08-23T12:19:57Z",
                "author_association": "NONE",
                "body": "I think I've figured it out - I can replicate it by causing a yalc package directory to have a `.DS_Store` file with a creation date more recent than any of the version directories. \r\n\r\nFor example (on a Mac):\r\n\r\n - `yalc add` some package - it works\r\n - Delete the .DS_Store file in that package's directory of version directories\r\n - Regenerate it (for example, Get Info, then tick and untick \"Locked\")\r\n - `yalc add` the same package again - this time, it fails on trying to `cd` into `.DS_store`.\r\n\r\nSo it looks like the problem is, the function `yalc add` uses to find the latest version is just taking all the contents of the directory, getting the most recent, and assuming it's a version directory. 99% of the time this works fine, but if for whatever reason some system file like `.DS_Store` comes to be the most recent item in the directory, this crash happens.\r\n\r\n**Suggested fix**: filter the array of directory contents to be only directories before finding the newest and `cd`ing into it.",
                "reactions": {
                    "url": "https://api.github.com/repos/wclr/yalc/issues/comments/1223991017/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2022-08-23T12:19:57Z"
    },
    {
        "id": "23586663159",
        "type": "IssuesEvent",
        "actor": {
            "id": 29628323,
            "login": "AlanSl",
            "display_login": "AlanSl",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AlanSl",
            "avatar_url": "https://avatars.githubusercontent.com/u/29628323?"
        },
        "repo": {
            "id": 88450703,
            "name": "wclr/yalc",
            "url": "https://api.github.com/repos/wclr/yalc"
        },
        "payload": {
            "action": "opened",
            "issue": {
                "url": "https://api.github.com/repos/wclr/yalc/issues/203",
                "repository_url": "https://api.github.com/repos/wclr/yalc",
                "labels_url": "https://api.github.com/repos/wclr/yalc/issues/203/labels{/name}",
                "comments_url": "https://api.github.com/repos/wclr/yalc/issues/203/comments",
                "events_url": "https://api.github.com/repos/wclr/yalc/issues/203/events",
                "html_url": "https://github.com/wclr/yalc/issues/203",
                "id": 1347851175,
                "node_id": "I_kwDOBUWmj85QVpOn",
                "number": 203,
                "title": "`yalc add` on Mac can fail with get ENOTDIR invalid cwd treating .DS_Store as a version directory.",
                "user": {
                    "login": "AlanSl",
                    "id": 29628323,
                    "node_id": "MDQ6VXNlcjI5NjI4MzIz",
                    "avatar_url": "https://avatars.githubusercontent.com/u/29628323?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/AlanSl",
                    "html_url": "https://github.com/AlanSl",
                    "followers_url": "https://api.github.com/users/AlanSl/followers",
                    "following_url": "https://api.github.com/users/AlanSl/following{/other_user}",
                    "gists_url": "https://api.github.com/users/AlanSl/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/AlanSl/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/AlanSl/subscriptions",
                    "organizations_url": "https://api.github.com/users/AlanSl/orgs",
                    "repos_url": "https://api.github.com/users/AlanSl/repos",
                    "events_url": "https://api.github.com/users/AlanSl/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/AlanSl/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 0,
                "created_at": "2022-08-23T12:13:09Z",
                "updated_at": "2022-08-23T12:13:09Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "I saw this for the first time today on running `yalc add` on several packages in a new repo (MacOS 11.6.8). All the packages worked except one, which gave this error:\r\n\r\n> Error: ENOTDIR invalid cwd /Users/alan/.yalc/packages/{package_name}/.DS_Store\r\n>     at Glob._readdirError (/Users/alan/.npm/_npx/8971ede65c5d814d/node_modules/glob/glob.js:589:21)\r\n>     at /Users/alan/.npm/_npx/8971ede65c5d814d/node_modules/glob/glob.js:550:12\r\n>     at FSReqCallback.oncomplete (node:fs:188:23) {\r\n>   path: '/Users/alan/.yalc/packages/{package_name}/.DS_Store',\r\n>   code: 'ENOTDIR'\r\n> }\r\n\r\nDeleting the Mac OS generated `.DS_Store` file in the Yalc package directory (the one that contains all the yalc-published versions) fixed this.\r\n\r\nIt's strange because:\r\n\r\n - All the other packages worked fine and they all had `.DS_Store` files\r\n - All the packages came from the same monorepo, which had `.DS_Store` in its gitignore",
                "reactions": {
                    "url": "https://api.github.com/repos/wclr/yalc/issues/203/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/wclr/yalc/issues/203/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            }
        },
        "public": true,
        "created_at": "2022-08-23T12:13:10Z"
    },
    {
        "id": "23387079649",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 29628323,
            "login": "AlanSl",
            "display_login": "AlanSl",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AlanSl",
            "avatar_url": "https://avatars.githubusercontent.com/u/29628323?"
        },
        "repo": {
            "id": 37153337,
            "name": "necolas/react-native-web",
            "url": "https://api.github.com/repos/necolas/react-native-web"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/necolas/react-native-web/issues/2357",
                "repository_url": "https://api.github.com/repos/necolas/react-native-web",
                "labels_url": "https://api.github.com/repos/necolas/react-native-web/issues/2357/labels{/name}",
                "comments_url": "https://api.github.com/repos/necolas/react-native-web/issues/2357/comments",
                "events_url": "https://api.github.com/repos/necolas/react-native-web/issues/2357/events",
                "html_url": "https://github.com/necolas/react-native-web/issues/2357",
                "id": 1331640296,
                "node_id": "I_kwDOAjbqOc5PXzfo",
                "number": 2357,
                "title": "Setting a Pressable as \"disabled\" from enter key press locks its internal `focused` state as `true`",
                "user": {
                    "login": "AlanSl",
                    "id": 29628323,
                    "node_id": "MDQ6VXNlcjI5NjI4MzIz",
                    "avatar_url": "https://avatars.githubusercontent.com/u/29628323?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/AlanSl",
                    "html_url": "https://github.com/AlanSl",
                    "followers_url": "https://api.github.com/users/AlanSl/followers",
                    "following_url": "https://api.github.com/users/AlanSl/following{/other_user}",
                    "gists_url": "https://api.github.com/users/AlanSl/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/AlanSl/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/AlanSl/subscriptions",
                    "organizations_url": "https://api.github.com/users/AlanSl/orgs",
                    "repos_url": "https://api.github.com/users/AlanSl/repos",
                    "events_url": "https://api.github.com/users/AlanSl/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/AlanSl/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 222457059,
                        "node_id": "MDU6TGFiZWwyMjI0NTcwNTk=",
                        "url": "https://api.github.com/repos/necolas/react-native-web/labels/bug",
                        "name": "bug",
                        "color": "D21635",
                        "default": true,
                        "description": null
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 3,
                "created_at": "2022-08-08T10:10:38Z",
                "updated_at": "2022-08-11T14:34:38Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "### Is there an existing issue for this?\r\n\r\n- [X] I have searched the existing issues\r\n\r\nMight be a side effect of the fix for https://github.com/necolas/react-native-web/issues/2127\r\n\r\n### Describe the issue\r\n\r\nIf a Pressable's `onPress` function causes it to become `disabled`, and this is triggered by tabbing in with the keyboard and triggering the `onPress` function from the keyboard using the Enter key, then the Pressable's internal `focused` state becomes locked as `true` even after the actual HTML element has blurred.\r\n\r\nFor example, here, the first Pressable was disabled and blurred using the Enter key and the second Pressable is the focused element, but the first Pressable thinks it is focused still.\r\n\r\n<img width=\"335\" alt=\"image\" src=\"https://user-images.githubusercontent.com/29628323/183395646-c2b4192f-5679-4114-9b4e-6851ff1425a1.png\">\r\n\r\n\r\n### Expected behavior\r\n\r\nA Pressable's `focused` state should not be `true` if it is not focused, regardless of how it came to be not focused, and it should never be both disabled and focused.\r\n\r\n### Steps to reproduce\r\n\r\n- Create a `Pressable` that shows its internal `focused` state visibly\r\n- Set its `disabled` state to `true` in an `onPress` handler\r\n- Select it using the keyboard tab key and trigger the onPress handler with the Enter key\r\n\r\n### Test case\r\n\r\nhttps://codesandbox.io/s/quirky-williamson-v3r94g\r\nhttps://snack.expo.dev/@alansl/amused-cheese\r\n\r\n### Additional comments\r\n\r\nThere's also a possibly-related issue described in comments in the linked example, where it's possible to programmatically focus a `disabled` Pressable just before `disabled` is removed, and then when `disabled` is removed, the element is focused but the focused state is stuck as `false`. Which issue occurs depends on whether mouse or keyboard events are used and timing of when the focus switch happens. Suggests the issue hinges on the timing of rerenders triggered by different event types.\r\n\r\nIn the provided example, it's _almost_ possible to work around this issue with careful timing - programmatically blurring the element after setting disabled to `false` in the target but before setting it to `true` in the trigger element. But this creates some strange timing issues when mouse clicks are used. Also, in real-life examples, this may not be an option: for example if the elements' `disabled` state is controlled by one `selected` state, it may not be possible to set a moment when both are enabled.\r\n\r\n### Suggested fix\r\n\r\nIt looks like all focus / blur handling is suppressed as soon as `disabled` is applied, and the timing of this relative to event handler timing varies by event type. Suggestion:\r\n\r\n - When `disabled` flips from false to true, if `focused` is still true, it shouldn't be and the element is losing focus; so call `onBlur` (including setting internal state) while it still can.\r\n - When `disabled` flips from true to false, if the element has become actually focused in the DOM but `focused` is false, it is legitimately gaining focus but the event handlers were skipped due to event / re-render timing; so call `onFocus` (including setting internal state)",
                "reactions": {
                    "url": "https://api.github.com/repos/necolas/react-native-web/issues/2357/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/necolas/react-native-web/issues/2357/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/necolas/react-native-web/issues/comments/1212074268",
                "html_url": "https://github.com/necolas/react-native-web/issues/2357#issuecomment-1212074268",
                "issue_url": "https://api.github.com/repos/necolas/react-native-web/issues/2357",
                "id": 1212074268,
                "node_id": "IC_kwDOAjbqOc5IPskc",
                "user": {
                    "login": "AlanSl",
                    "id": 29628323,
                    "node_id": "MDQ6VXNlcjI5NjI4MzIz",
                    "avatar_url": "https://avatars.githubusercontent.com/u/29628323?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/AlanSl",
                    "html_url": "https://github.com/AlanSl",
                    "followers_url": "https://api.github.com/users/AlanSl/followers",
                    "following_url": "https://api.github.com/users/AlanSl/following{/other_user}",
                    "gists_url": "https://api.github.com/users/AlanSl/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/AlanSl/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/AlanSl/subscriptions",
                    "organizations_url": "https://api.github.com/users/AlanSl/orgs",
                    "repos_url": "https://api.github.com/users/AlanSl/repos",
                    "events_url": "https://api.github.com/users/AlanSl/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/AlanSl/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2022-08-11T14:34:38Z",
                "updated_at": "2022-08-11T14:34:38Z",
                "author_association": "NONE",
                "body": "Done - https://codesandbox.io/s/quirky-williamson-v3r94g\r\n\r\nIf there's a mandatory format and template, may I suggest linking to it in the issue template, and clearly stating that codesandbox specifically is a requirement? Currently there's just a non-accessible input hint text:\r\n\r\n<img width=\"475\" alt=\"image\" src=\"https://user-images.githubusercontent.com/29628323/184158107-7404fdbc-f71e-424a-8568-332107fa6626.png\">\r\n\r\nI'm sure the old comment-based template clearly stated the required template, and linked to it.",
                "reactions": {
                    "url": "https://api.github.com/repos/necolas/react-native-web/issues/comments/1212074268/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2022-08-11T14:34:38Z"
    },
    {
        "id": "23314198259",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 29628323,
            "login": "AlanSl",
            "display_login": "AlanSl",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AlanSl",
            "avatar_url": "https://avatars.githubusercontent.com/u/29628323?"
        },
        "repo": {
            "id": 37153337,
            "name": "necolas/react-native-web",
            "url": "https://api.github.com/repos/necolas/react-native-web"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/necolas/react-native-web/issues/2357",
                "repository_url": "https://api.github.com/repos/necolas/react-native-web",
                "labels_url": "https://api.github.com/repos/necolas/react-native-web/issues/2357/labels{/name}",
                "comments_url": "https://api.github.com/repos/necolas/react-native-web/issues/2357/comments",
                "events_url": "https://api.github.com/repos/necolas/react-native-web/issues/2357/events",
                "html_url": "https://github.com/necolas/react-native-web/issues/2357",
                "id": 1331640296,
                "node_id": "I_kwDOAjbqOc5PXzfo",
                "number": 2357,
                "title": "Setting a Pressable as \"disabled\" from enter key press locks its internal `focused` state as `true`",
                "user": {
                    "login": "AlanSl",
                    "id": 29628323,
                    "node_id": "MDQ6VXNlcjI5NjI4MzIz",
                    "avatar_url": "https://avatars.githubusercontent.com/u/29628323?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/AlanSl",
                    "html_url": "https://github.com/AlanSl",
                    "followers_url": "https://api.github.com/users/AlanSl/followers",
                    "following_url": "https://api.github.com/users/AlanSl/following{/other_user}",
                    "gists_url": "https://api.github.com/users/AlanSl/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/AlanSl/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/AlanSl/subscriptions",
                    "organizations_url": "https://api.github.com/users/AlanSl/orgs",
                    "repos_url": "https://api.github.com/users/AlanSl/repos",
                    "events_url": "https://api.github.com/users/AlanSl/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/AlanSl/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 222457059,
                        "node_id": "MDU6TGFiZWwyMjI0NTcwNTk=",
                        "url": "https://api.github.com/repos/necolas/react-native-web/labels/bug",
                        "name": "bug",
                        "color": "D21635",
                        "default": true,
                        "description": null
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 0,
                "created_at": "2022-08-08T10:10:38Z",
                "updated_at": "2022-08-08T11:00:14Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "### Is there an existing issue for this?\r\n\r\n- [X] I have searched the existing issues\r\n\r\n### Describe the issue\r\n\r\nIf a Pressable's `onPress` function causes it to become `disabled`, and this is triggered by tabbing in with the keyboard and triggering the `onPress` function from the keyboard using the Enter key, then the Pressable's internal `focused` state becomes locked as `true` even after the actual HTML element has blurred.\r\n\r\nFor example, here, the first Pressable was disabled and blurred using the Enter key and the second Pressable is the focused element, but the first Pressable thinks it is focused still.\r\n\r\n<img width=\"335\" alt=\"image\" src=\"https://user-images.githubusercontent.com/29628323/183395646-c2b4192f-5679-4114-9b4e-6851ff1425a1.png\">\r\n\r\n\r\n### Expected behavior\r\n\r\nA Pressable's `focused` state should not be `true` if it is not focused, regardless of how it came to be not focused, and it should never be both disabled and focused.\r\n\r\n### Steps to reproduce\r\n\r\n- Create a `Pressable` that shows its internal `focused` state visibly\r\n- Set its `disabled` state to `true` in an `onPress` handler\r\n- Select it using the keyboard tab key and trigger the onPress handler with the Enter key\r\n\r\n### Test case\r\n\r\nhttps://snack.expo.dev/@alansl/amused-cheese\r\n\r\n### Additional comments\r\n\r\nThere's also a possibly-related issue described in comments in the linked example, where it's possible to programmatically focus a `disabled` Pressable just before `disabled` is removed and then when `disabled` is removed, the element is focused but the focused state is still `false`.\r\n\r\nIn the provided example, it's _almost_ possible to work around this issue with careful timing - programmatically blurring the element after setting disabled to `false` in the target but before setting it to `true` in the trigger element. But this creates some strange timing issues when mouse clicks are used. Also, in real-life examples, this may not be an option: for example if the elements' `disabled` state is controlled by one `selected` state, it may not be possible to set a moment when both are enabled.\r\n\r\n### Suggested fix\r\n\r\nIt looks like all focus / blur handling is suppressed as soon as `disabled` is applied. Suggestion:\r\n\r\n - When `disabled` flips from false to true, if `focused` is still true, it shouldn't be: call `onBlur` (including setting internal state).\r\n - When `disabled` flips from true to false, if element is actually focused in the DOM but `focused` is false, call `onFocus` (including setting internal state)",
                "reactions": {
                    "url": "https://api.github.com/repos/necolas/react-native-web/issues/2357/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/necolas/react-native-web/issues/2357/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/necolas/react-native-web/issues/comments/1207975166",
                "html_url": "https://github.com/necolas/react-native-web/issues/2357#issuecomment-1207975166",
                "issue_url": "https://api.github.com/repos/necolas/react-native-web/issues/2357",
                "id": 1207975166,
                "node_id": "IC_kwDOAjbqOc5IADz-",
                "user": {
                    "login": "AlanSl",
                    "id": 29628323,
                    "node_id": "MDQ6VXNlcjI5NjI4MzIz",
                    "avatar_url": "https://avatars.githubusercontent.com/u/29628323?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/AlanSl",
                    "html_url": "https://github.com/AlanSl",
                    "followers_url": "https://api.github.com/users/AlanSl/followers",
                    "following_url": "https://api.github.com/users/AlanSl/following{/other_user}",
                    "gists_url": "https://api.github.com/users/AlanSl/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/AlanSl/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/AlanSl/subscriptions",
                    "organizations_url": "https://api.github.com/users/AlanSl/orgs",
                    "repos_url": "https://api.github.com/users/AlanSl/repos",
                    "events_url": "https://api.github.com/users/AlanSl/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/AlanSl/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2022-08-08T11:00:14Z",
                "updated_at": "2022-08-08T11:00:14Z",
                "author_association": "NONE",
                "body": "Best workaround for my particular case so far seems to be to control an `isFocused` state in the Pressable's parent using `onBlur` / `onFocus` and not allow disabled to be `true` if `isFocused` is true; so, regardless of the timing around the triggering event, if an action causes the parent's disabled prop to be `true` on next render and moves focus away, it will not apply disabled as true until the re-render caused by the onBlur handler setting `isFocused` to `false`.",
                "reactions": {
                    "url": "https://api.github.com/repos/necolas/react-native-web/issues/comments/1207975166/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2022-08-08T11:00:14Z"
    },
    {
        "id": "23313283097",
        "type": "IssuesEvent",
        "actor": {
            "id": 29628323,
            "login": "AlanSl",
            "display_login": "AlanSl",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AlanSl",
            "avatar_url": "https://avatars.githubusercontent.com/u/29628323?"
        },
        "repo": {
            "id": 37153337,
            "name": "necolas/react-native-web",
            "url": "https://api.github.com/repos/necolas/react-native-web"
        },
        "payload": {
            "action": "opened",
            "issue": {
                "url": "https://api.github.com/repos/necolas/react-native-web/issues/2357",
                "repository_url": "https://api.github.com/repos/necolas/react-native-web",
                "labels_url": "https://api.github.com/repos/necolas/react-native-web/issues/2357/labels{/name}",
                "comments_url": "https://api.github.com/repos/necolas/react-native-web/issues/2357/comments",
                "events_url": "https://api.github.com/repos/necolas/react-native-web/issues/2357/events",
                "html_url": "https://github.com/necolas/react-native-web/issues/2357",
                "id": 1331640296,
                "node_id": "I_kwDOAjbqOc5PXzfo",
                "number": 2357,
                "title": "Setting a Pressable as \"disabled\" from enter key press locks its internal `focused` state as `true`",
                "user": {
                    "login": "AlanSl",
                    "id": 29628323,
                    "node_id": "MDQ6VXNlcjI5NjI4MzIz",
                    "avatar_url": "https://avatars.githubusercontent.com/u/29628323?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/AlanSl",
                    "html_url": "https://github.com/AlanSl",
                    "followers_url": "https://api.github.com/users/AlanSl/followers",
                    "following_url": "https://api.github.com/users/AlanSl/following{/other_user}",
                    "gists_url": "https://api.github.com/users/AlanSl/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/AlanSl/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/AlanSl/subscriptions",
                    "organizations_url": "https://api.github.com/users/AlanSl/orgs",
                    "repos_url": "https://api.github.com/users/AlanSl/repos",
                    "events_url": "https://api.github.com/users/AlanSl/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/AlanSl/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 222457059,
                        "node_id": "MDU6TGFiZWwyMjI0NTcwNTk=",
                        "url": "https://api.github.com/repos/necolas/react-native-web/labels/bug",
                        "name": "bug",
                        "color": "D21635",
                        "default": true,
                        "description": null
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 0,
                "created_at": "2022-08-08T10:10:38Z",
                "updated_at": "2022-08-08T10:10:38Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Describe the issue\n\nIf a Pressable's `onPress` function causes it to become `disabled`, and this is triggered by tabbing in with the keyboard and triggering the `onPress` function from the keyboard using the Enter key, then the Pressable's internal `focused` state becomes locked as `true` even after the actual HTML element has blurred.\r\n\r\nFor example, here, the first Pressable was disabled and blurred using the Enter key and the second Pressable is the focused element, but the first Pressable thinks it is focused still.\r\n\r\n<img width=\"325\" alt=\"image\" src=\"https://user-images.githubusercontent.com/29628323/183392367-52cf9a4c-a4cc-41f4-b5b4-ad630f0f7d38.png\">\r\n\n\n### Expected behavior\n\nA Pressable's `focused` state should not be `true` if it is not focused, regardless of how it came to be not focused, and it should never be both disabled and focused.\n\n### Steps to reproduce\n\n- Create a `Pressable` that shows its internal `focused` state visibly\r\n- Set its `disabled` state to `true` in an `onPress` handler\r\n- Select it using the keyboard tab key and trigger the onPress handler with the Enter key\n\n### Test case\n\nhttps://snack.expo.dev/@alansl/amused-cheese\n\n### Additional comments\n\nThere's also a possibly-related issue described in comments in the linked example, where it's possible to programmatically focus a `disabled` Pressable just before `disabled` is removed and then when `disabled` is removed, the element is focused but the focused state is still `false`.\r\n\r\nIt seems to be possible to work around this issue with careful timing - programmatically blurring the element before setting the `disabled` state - but it's odd that this is necessary for keyboard navigation but not mouse clicks.",
                "reactions": {
                    "url": "https://api.github.com/repos/necolas/react-native-web/issues/2357/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/necolas/react-native-web/issues/2357/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            }
        },
        "public": true,
        "created_at": "2022-08-08T10:10:38Z"
    },
    {
        "id": "24664081284",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 29628323,
            "login": "AlanSl",
            "display_login": "AlanSl",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AlanSl",
            "avatar_url": "https://avatars.githubusercontent.com/u/29628323?"
        },
        "repo": {
            "id": 109059304,
            "name": "facebook/react-native-website",
            "url": "https://api.github.com/repos/facebook/react-native-website"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/facebook/react-native-website/issues/3215",
                "repository_url": "https://api.github.com/repos/facebook/react-native-website",
                "labels_url": "https://api.github.com/repos/facebook/react-native-website/issues/3215/labels{/name}",
                "comments_url": "https://api.github.com/repos/facebook/react-native-website/issues/3215/comments",
                "events_url": "https://api.github.com/repos/facebook/react-native-website/issues/3215/events",
                "html_url": "https://github.com/facebook/react-native-website/issues/3215",
                "id": 1309336090,
                "node_id": "I_kwDOBoAc6M5OCuIa",
                "number": 3215,
                "title": "Please document correct usage of accessibilityRole \"link\"",
                "user": {
                    "login": "AlanSl",
                    "id": 29628323,
                    "node_id": "MDQ6VXNlcjI5NjI4MzIz",
                    "avatar_url": "https://avatars.githubusercontent.com/u/29628323?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/AlanSl",
                    "html_url": "https://github.com/AlanSl",
                    "followers_url": "https://api.github.com/users/AlanSl/followers",
                    "following_url": "https://api.github.com/users/AlanSl/following{/other_user}",
                    "gists_url": "https://api.github.com/users/AlanSl/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/AlanSl/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/AlanSl/subscriptions",
                    "organizations_url": "https://api.github.com/users/AlanSl/orgs",
                    "repos_url": "https://api.github.com/users/AlanSl/repos",
                    "events_url": "https://api.github.com/users/AlanSl/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/AlanSl/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 2279176779,
                        "node_id": "MDU6TGFiZWwyMjc5MTc2Nzc5",
                        "url": "https://api.github.com/repos/facebook/react-native-website/labels/Stale",
                        "name": "Stale",
                        "color": "dddddd",
                        "default": false,
                        "description": ""
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 1,
                "created_at": "2022-07-19T10:49:06Z",
                "updated_at": "2022-10-18T08:59:03Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "## Description\r\n\r\nHere's the current [documentation for `accessibilityRole=\"link\"`](https://reactnative.dev/docs/accessibility#accessibilityrole):\r\n\r\n> **link** Used when the element should be treated as a link.\r\n\r\nThis... could be more helpful. It's arguably a tautology: it says the link role should be used in those cases where the link role should be used. \r\n\r\nThere are many examples (some given below) of inconsistent and sometimes contradictory ways this has been interpreted.  \r\n\r\n## What is the problem?\r\n\r\nThis is a problem because people fill in their own common-sense opinion on how link roles should be used (possibly  influenced by non-equivalent experience of links on websites).\r\n\r\nFor example, I've encountered three different interpretations on how the link role should be used, all from seemingly authoritative sources:\r\n\r\n 1. **Navigation between screens**: The widely used [react-navigation](https://github.com/react-navigation/react-navigation) project has utilities like [`useLinkProps`](https://github.com/react-navigation/react-navigation/blob/6a19be7dae997fc23ac9475040a17fb2db4ebd52/packages/native/src/useLinkProps.tsx#L123) that apply `accessiblityRole=\"link\"` to any element that navigates between screens - every element using these utilities that would do internal routing in a  web context will get the \"link\" role in Android and iOS.\r\n 2. **All interactive inline text**: The [react-native-accessibility-engine](https://github.com/aryella-lacerda/react-native-accessibility-engine) project has [a test \"link-role-required\"](https://github.com/aryella-lacerda/react-native-accessibility-engine/tree/main/src/rules/link-role-required) that requires any `Text` element with an `onPress` handler to have the role \"link\", regardless of what the press does. This appears to be interpreting \"link\" by presentation (interactive inline text) rather than the nature of the action.\r\n 3. **Opening URLs in device browser**: App accessibility consultants I've worked with in the past have advised that \"link\" should be used _specifically_ for interactive elements that cause the app open and focus a web browser, and that \"button\" should be used for in-app navigation (regardless of element type). Here's an example of [an accessibility consultancy giving this advice in the context of iOS](https://www.deque.com/blog/ios-traits/):\r\n\r\n> Links open a URL in an external browser.  This the important distinction between buttons.  Only apply the trait of link when the users interaction with the control will take them out of your application and into Safari.\r\n\r\n## How can we address it?\r\n\r\nThere _is_ one right answer as to how React Native's link accessibilityRole is intended to be used, based on the appropriate iOS and Android guidance for the underlying properties and traits that React Native applies internally to the native Android and iOS elements it controls. \r\n\r\nThe React Native accessibility docs should state it clearly. For example (assuming this one is correct):\r\n\r\n> **link** Interactive elements that load a web page in a device browser, switching focus away from this app \r\n\r\n## Why is it important?\r\n\r\nThere's clearly already diverging interpretations of how this role should be used, and it's a very commonly used role, so there is almost certainly already a lot of inconsistency on when elements are described as a \"Link\" in React Native apps in production.\r\n\r\n## Who needs this?\r\n\r\nIdeally all React Native developers should be applying this accessibilityRole consistently and correctly.\r\n\r\n## When should this happen (use version numbers if needed)?\r\n\r\nAs soon as there's a clear consensus on what the correct usage is.",
                "reactions": {
                    "url": "https://api.github.com/repos/facebook/react-native-website/issues/3215/reactions",
                    "total_count": 1,
                    "+1": 1,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/facebook/react-native-website/issues/3215/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/facebook/react-native-website/issues/comments/1282048386",
                "html_url": "https://github.com/facebook/react-native-website/issues/3215#issuecomment-1282048386",
                "issue_url": "https://api.github.com/repos/facebook/react-native-website/issues/3215",
                "id": 1282048386,
                "node_id": "IC_kwDOBoAc6M5MaoGC",
                "user": {
                    "login": "AlanSl",
                    "id": 29628323,
                    "node_id": "MDQ6VXNlcjI5NjI4MzIz",
                    "avatar_url": "https://avatars.githubusercontent.com/u/29628323?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/AlanSl",
                    "html_url": "https://github.com/AlanSl",
                    "followers_url": "https://api.github.com/users/AlanSl/followers",
                    "following_url": "https://api.github.com/users/AlanSl/following{/other_user}",
                    "gists_url": "https://api.github.com/users/AlanSl/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/AlanSl/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/AlanSl/subscriptions",
                    "organizations_url": "https://api.github.com/users/AlanSl/orgs",
                    "repos_url": "https://api.github.com/users/AlanSl/repos",
                    "events_url": "https://api.github.com/users/AlanSl/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/AlanSl/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2022-10-18T08:59:03Z",
                "updated_at": "2022-10-18T08:59:03Z",
                "author_association": "NONE",
                "body": "No it's not fixed, stay open please.",
                "reactions": {
                    "url": "https://api.github.com/repos/facebook/react-native-website/issues/comments/1282048386/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2022-10-18T08:59:03Z",
        "org": {
            "id": 69631,
            "login": "facebook",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/facebook",
            "avatar_url": "https://avatars.githubusercontent.com/u/69631?"
        }
    },
    {
        "id": "24648364060",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 29628323,
            "login": "AlanSl",
            "display_login": "AlanSl",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AlanSl",
            "avatar_url": "https://avatars.githubusercontent.com/u/29628323?"
        },
        "repo": {
            "id": 151103020,
            "name": "callstack/react-native-testing-library",
            "url": "https://api.github.com/repos/callstack/react-native-testing-library"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/callstack/react-native-testing-library/issues/786",
                "repository_url": "https://api.github.com/repos/callstack/react-native-testing-library",
                "labels_url": "https://api.github.com/repos/callstack/react-native-testing-library/issues/786/labels{/name}",
                "comments_url": "https://api.github.com/repos/callstack/react-native-testing-library/issues/786/comments",
                "events_url": "https://api.github.com/repos/callstack/react-native-testing-library/issues/786/events",
                "html_url": "https://github.com/callstack/react-native-testing-library/issues/786",
                "id": 949866768,
                "node_id": "MDU6SXNzdWU5NDk4NjY3Njg=",
                "number": 786,
                "title": "How to use `getByTestId` on web?",
                "user": {
                    "login": "conor909",
                    "id": 2417359,
                    "node_id": "MDQ6VXNlcjI0MTczNTk=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/2417359?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/conor909",
                    "html_url": "https://github.com/conor909",
                    "followers_url": "https://api.github.com/users/conor909/followers",
                    "following_url": "https://api.github.com/users/conor909/following{/other_user}",
                    "gists_url": "https://api.github.com/users/conor909/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/conor909/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/conor909/subscriptions",
                    "organizations_url": "https://api.github.com/users/conor909/orgs",
                    "repos_url": "https://api.github.com/users/conor909/repos",
                    "events_url": "https://api.github.com/users/conor909/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/conor909/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 1075506357,
                        "node_id": "MDU6TGFiZWwxMDc1NTA2MzU3",
                        "url": "https://api.github.com/repos/callstack/react-native-testing-library/labels/question",
                        "name": "question",
                        "color": "d876e3",
                        "default": true,
                        "description": "Further information is requested"
                    }
                ],
                "state": "closed",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 4,
                "created_at": "2021-07-21T15:55:02Z",
                "updated_at": "2022-10-17T16:29:12Z",
                "closed_at": "2021-08-13T19:36:26Z",
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "I believe there was recently a merge to make sure `getByTestId` only returns native elements.\r\nhttps://github.com/callstack/react-native-testing-library/pull/324\r\n\r\nDoes this mean we can't use `getByTestId` on web?\r\n\r\nIn my test file in `web` says no element matches the testID, where as in `iOS` it' finds the element and my test passes.  If I switch to use a `queryByText` query, it works fine on both platforms. But I'm targeting a plain react native `<View>` to check the styling on it is expected, so I need to target by `testID`.\r\n\r\n```js\r\n  // Fails to find ID\r\n  if (Platform.OS === 'web') {\r\n    test('StickyHeader should have sticky position prop on web', () => {\r\n      const { getByTestId } = renderRoute(<AuthenticatedApp logOut={jest.fn} user={user} />)\r\n      const stickyHeader = getByTestId('sticky-header')\r\n      expect(stickyHeader).toHaveStyle({ position: 'sticky' })\r\n    })\r\n  } \r\n\r\n  // Passes\r\n  if (Platform.OS === 'ios') {\r\n    test('StickyHeader should have relative position prop on ios ', () => {\r\n      const { getByTestId } = renderRoute(<AuthenticatedApp logOut={jest.fn} user={user} />)\r\n      const stickyHeader = getByTestId('sticky-header')\r\n      expect(stickyHeader).toHaveStyle({ position: 'relative' })\r\n    })\r\n  }\r\n```\r\n\r\ndebug\r\n```js\r\n// prints out the screen structure and I can see an object with `testID='sticky-header'`\r\n// it also includes style object with `position: 'sticky'`, so I can see it does exist\r\nconst { debug } = renderRoute(<AuthenticatedApp logOut={jest.fn} user={user} />)\r\ndebug()\r\n```",
                "reactions": {
                    "url": "https://api.github.com/repos/callstack/react-native-testing-library/issues/786/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/callstack/react-native-testing-library/issues/786/timeline",
                "performed_via_github_app": null,
                "state_reason": "completed"
            },
            "comment": {
                "url": "https://api.github.com/repos/callstack/react-native-testing-library/issues/comments/1281140468",
                "html_url": "https://github.com/callstack/react-native-testing-library/issues/786#issuecomment-1281140468",
                "issue_url": "https://api.github.com/repos/callstack/react-native-testing-library/issues/786",
                "id": 1281140468,
                "node_id": "IC_kwDOCQGmLM5MXKb0",
                "user": {
                    "login": "AlanSl",
                    "id": 29628323,
                    "node_id": "MDQ6VXNlcjI5NjI4MzIz",
                    "avatar_url": "https://avatars.githubusercontent.com/u/29628323?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/AlanSl",
                    "html_url": "https://github.com/AlanSl",
                    "followers_url": "https://api.github.com/users/AlanSl/followers",
                    "following_url": "https://api.github.com/users/AlanSl/following{/other_user}",
                    "gists_url": "https://api.github.com/users/AlanSl/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/AlanSl/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/AlanSl/subscriptions",
                    "organizations_url": "https://api.github.com/users/AlanSl/orgs",
                    "repos_url": "https://api.github.com/users/AlanSl/repos",
                    "events_url": "https://api.github.com/users/AlanSl/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/AlanSl/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2022-10-17T16:29:12Z",
                "updated_at": "2022-10-17T16:29:12Z",
                "author_association": "NONE",
                "body": "I think the original \"lack of understanding\" was misunderstanding the old linked PR \"to make sure getByTestId only returns native elements. https://github.com/callstack/react-native-testing-library/pull/324\" - reading it as web vs native when it was actually nothing to do with web, and by \"native elements\" it meant React Native primitives (View, Text, TextInput) that directly correspond to an underlying iOS or Android element vs custom intermediary components that only exist in JS / React.\r\n\r\nAs for the question of how to use `*ByTestId` in cross-platform tests that include React Native Web, the closest I can find to an answer is this long discussion here - https://github.com/callstack/react-native-testing-library/pull/407",
                "reactions": {
                    "url": "https://api.github.com/repos/callstack/react-native-testing-library/issues/comments/1281140468/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2022-10-17T16:29:13Z",
        "org": {
            "id": 42239399,
            "login": "callstack",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/callstack",
            "avatar_url": "https://avatars.githubusercontent.com/u/42239399?"
        }
    },
    {
        "id": "24221090979",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 29628323,
            "login": "AlanSl",
            "display_login": "AlanSl",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AlanSl",
            "avatar_url": "https://avatars.githubusercontent.com/u/29628323?"
        },
        "repo": {
            "id": 65750241,
            "name": "expo/expo",
            "url": "https://api.github.com/repos/expo/expo"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/expo/expo/issues/16673",
                "repository_url": "https://api.github.com/repos/expo/expo",
                "labels_url": "https://api.github.com/repos/expo/expo/issues/16673/labels{/name}",
                "comments_url": "https://api.github.com/repos/expo/expo/issues/16673/comments",
                "events_url": "https://api.github.com/repos/expo/expo/issues/16673/events",
                "html_url": "https://github.com/expo/expo/issues/16673",
                "id": 1172357887,
                "node_id": "I_kwDOA-tE4c5F4ML_",
                "number": 16673,
                "title": "[babel-expo-preset] Can't pass options to `react-native-web` preset in a multi-platform app",
                "user": {
                    "login": "AlanSl",
                    "id": 29628323,
                    "node_id": "MDQ6VXNlcjI5NjI4MzIz",
                    "avatar_url": "https://avatars.githubusercontent.com/u/29628323?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/AlanSl",
                    "html_url": "https://github.com/AlanSl",
                    "followers_url": "https://api.github.com/users/AlanSl/followers",
                    "following_url": "https://api.github.com/users/AlanSl/following{/other_user}",
                    "gists_url": "https://api.github.com/users/AlanSl/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/AlanSl/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/AlanSl/subscriptions",
                    "organizations_url": "https://api.github.com/users/AlanSl/orgs",
                    "repos_url": "https://api.github.com/users/AlanSl/repos",
                    "events_url": "https://api.github.com/users/AlanSl/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/AlanSl/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 1499152597,
                        "node_id": "MDU6TGFiZWwxNDk5MTUyNTk3",
                        "url": "https://api.github.com/repos/expo/expo/labels/stale",
                        "name": "stale",
                        "color": "f1f1f1",
                        "default": false,
                        "description": ""
                    },
                    {
                        "id": 2125837378,
                        "node_id": "MDU6TGFiZWwyMTI1ODM3Mzc4",
                        "url": "https://api.github.com/repos/expo/expo/labels/needs%20review",
                        "name": "needs review",
                        "color": "92f989",
                        "default": false,
                        "description": "Issue is ready to be reviewed by a maintainer"
                    }
                ],
                "state": "closed",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 9,
                "created_at": "2022-03-16T14:42:56Z",
                "updated_at": "2022-09-26T10:56:26Z",
                "closed_at": "2022-09-25T10:04:26Z",
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "### Summary\r\n\r\nThere seems to be no way to set options for the `react-native-web` babel plugin when using `babel-preset-expo` without causing the plugin to apply in native builds too, which breaks them:\r\n\r\n- Within `babel-preset-expo`, the setup of `babel-plugin-react-native-web` is hardcoded to have no options: https://github.com/expo/expo/blob/main/packages/babel-preset-expo/index.js#L107\r\n- Users can't configure `babel-plugin-react-native-web` in their own babel config without it applying to all builds, breaking native builds\r\n- The logic within `babel-preset-expo` that conditionally applies `babel-plugin-react-native-web` only on web depends on `api.caller()` data that is only passed to `babel-preset-expo`. Knowledge of platform seems to be unavailable anywhere in own `babel.config.js`. There's also nothing about platform in `process.env` when the build is launched through Expo's own interface.\r\n- I've seen some mentions of `web/webpack.config.js` for web-specific webpack config; but `web/babel.config.js` is ignored; I also saw some mention somewhere of defining `web.build.babel` object in `app.json` but this caused the build to fail silently with no log output.\r\n\r\nIf the platform is only available within `babel-preset-expo`, there should be a way to pass config options in; if there isn't a way to pass config options in, there should be a way to conditionally apply the plugin based on the current build's target platform; but there's neither.\r\n\r\n### Managed or bare workflow? If you have `ios/` or `android/` directories in your project, the answer is bare!\r\n\r\nmanaged\r\n\r\n### What platform(s) does this occur on?\r\n\r\nWeb\r\n\r\n### SDK Version (managed workflow only)\r\n\r\n44\r\n\r\n### Environment\r\n\r\n```\r\n  expo-env-info 1.0.2 environment info:\r\n    System:\r\n      OS: macOS 11.6.4\r\n      Shell: 5.8 - /bin/zsh\r\n    Binaries:\r\n      Node: 16.1.0 - ~/.nvm/versions/node/v16.1.0/bin/node\r\n      Yarn: 1.22.17 - ~/.nvm/versions/node/v16.1.0/bin/yarn\r\n      npm: 8.5.3 - ~/.nvm/versions/node/v16.1.0/bin/npm\r\n      Watchman: 2021.06.07.00 - /usr/local/bin/watchman\r\n    Managers:\r\n      CocoaPods: 1.10.1 - /usr/local/bin/pod\r\n    SDKs:\r\n      iOS SDK:\r\n        Platforms: DriverKit 21.2, iOS 15.2, macOS 12.1, tvOS 15.2, watchOS 8.3\r\n      Android SDK:\r\n        API Levels: 29, 30\r\n        Build Tools: 29.0.2, 30.0.3\r\n        System Images: android-29 | Intel x86 Atom_64, android-30 | Google APIs Intel x86 Atom\r\n    IDEs:\r\n      Xcode: 13.2.1/13C100 - /usr/bin/xcodebuild\r\n    npmGlobalPackages:\r\n      expo-cli: 5.3.0\r\n    Expo Workflow: managed\r\n```\r\n\r\n### Reproducible demo\r\n\r\n```js\r\n// babel.config.js in a new Expo app\r\nmodule.exports = function (api) {\r\n  // This always returns undefined: platform is unavailable outside babel-preset-expo internals?\r\n  const platform = api.caller((caller) => caller?.platform)\r\n\r\n  // Adding 'react-native-web' plugin without a platform check breaks native builds; but platform\r\n  // check is not possible? So plugins applied here are either \"all platforms\" or \"no platforms\"?\r\n  const plugins = platform === 'web' ? [['react-native-web', { commonjs: true }]] : []\r\n\r\n  api.cache(true)\r\n  return {\r\n    presets: ['babel-preset-expo'],\r\n    plugins\r\n  }\r\n}\r\n```",
                "reactions": {
                    "url": "https://api.github.com/repos/expo/expo/issues/16673/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/expo/expo/issues/16673/timeline",
                "performed_via_github_app": null,
                "state_reason": "completed"
            },
            "comment": {
                "url": "https://api.github.com/repos/expo/expo/issues/comments/1257853133",
                "html_url": "https://github.com/expo/expo/issues/16673#issuecomment-1257853133",
                "issue_url": "https://api.github.com/repos/expo/expo/issues/16673",
                "id": 1257853133,
                "node_id": "IC_kwDOA-tE4c5K-VDN",
                "user": {
                    "login": "AlanSl",
                    "id": 29628323,
                    "node_id": "MDQ6VXNlcjI5NjI4MzIz",
                    "avatar_url": "https://avatars.githubusercontent.com/u/29628323?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/AlanSl",
                    "html_url": "https://github.com/AlanSl",
                    "followers_url": "https://api.github.com/users/AlanSl/followers",
                    "following_url": "https://api.github.com/users/AlanSl/following{/other_user}",
                    "gists_url": "https://api.github.com/users/AlanSl/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/AlanSl/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/AlanSl/subscriptions",
                    "organizations_url": "https://api.github.com/users/AlanSl/orgs",
                    "repos_url": "https://api.github.com/users/AlanSl/repos",
                    "events_url": "https://api.github.com/users/AlanSl/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/AlanSl/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2022-09-26T10:56:26Z",
                "updated_at": "2022-09-26T10:56:26Z",
                "author_association": "NONE",
                "body": "I think this is still an issue. \r\n\r\n(couldn't respond within the bot's 7 days because I was away last week)",
                "reactions": {
                    "url": "https://api.github.com/repos/expo/expo/issues/comments/1257853133/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2022-09-26T10:56:26Z",
        "org": {
            "id": 12504344,
            "login": "expo",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/expo",
            "avatar_url": "https://avatars.githubusercontent.com/u/12504344?"
        }
    },
    {
        "id": "24005363492",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 29628323,
            "login": "AlanSl",
            "display_login": "AlanSl",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AlanSl",
            "avatar_url": "https://avatars.githubusercontent.com/u/29628323?"
        },
        "repo": {
            "id": 88450703,
            "name": "wclr/yalc",
            "url": "https://api.github.com/repos/wclr/yalc"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/wclr/yalc/issues/203",
                "repository_url": "https://api.github.com/repos/wclr/yalc",
                "labels_url": "https://api.github.com/repos/wclr/yalc/issues/203/labels{/name}",
                "comments_url": "https://api.github.com/repos/wclr/yalc/issues/203/comments",
                "events_url": "https://api.github.com/repos/wclr/yalc/issues/203/events",
                "html_url": "https://github.com/wclr/yalc/issues/203",
                "id": 1347851175,
                "node_id": "I_kwDOBUWmj85QVpOn",
                "number": 203,
                "title": "`yalc add` on Mac can (rarely) fail with ENOTDIR invalid cwd, treating .DS_Store as a version directory.",
                "user": {
                    "login": "AlanSl",
                    "id": 29628323,
                    "node_id": "MDQ6VXNlcjI5NjI4MzIz",
                    "avatar_url": "https://avatars.githubusercontent.com/u/29628323?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/AlanSl",
                    "html_url": "https://github.com/AlanSl",
                    "followers_url": "https://api.github.com/users/AlanSl/followers",
                    "following_url": "https://api.github.com/users/AlanSl/following{/other_user}",
                    "gists_url": "https://api.github.com/users/AlanSl/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/AlanSl/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/AlanSl/subscriptions",
                    "organizations_url": "https://api.github.com/users/AlanSl/orgs",
                    "repos_url": "https://api.github.com/users/AlanSl/repos",
                    "events_url": "https://api.github.com/users/AlanSl/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/AlanSl/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 2,
                "created_at": "2022-08-23T12:13:09Z",
                "updated_at": "2022-09-14T14:27:00Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "I saw this for the first time today on running `yalc add` on several packages in a new repo (MacOS 11.6.8). All the packages worked except one, which gave this error:\r\n\r\n> Error: ENOTDIR invalid cwd /Users/alan/.yalc/packages/{package_name}/.DS_Store\r\n>     at Glob._readdirError (/Users/alan/.npm/_npx/8971ede65c5d814d/node_modules/glob/glob.js:589:21)\r\n>     at /Users/alan/.npm/_npx/8971ede65c5d814d/node_modules/glob/glob.js:550:12\r\n>     at FSReqCallback.oncomplete (node:fs:188:23) {\r\n>   path: '/Users/alan/.yalc/packages/{package_name}/.DS_Store',\r\n>   code: 'ENOTDIR'\r\n> }\r\n\r\nDeleting the Mac OS generated `.DS_Store` file in the Yalc package directory (the one that contains all the yalc-published versions) fixed this.\r\n\r\nIt's strange because:\r\n\r\n - All the other packages worked fine and they all had `.DS_Store` files in their directories of version directories\r\n - All the packages came from the same monorepo, which had `.DS_Store` in its gitignore",
                "reactions": {
                    "url": "https://api.github.com/repos/wclr/yalc/issues/203/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/wclr/yalc/issues/203/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/wclr/yalc/issues/comments/1246848488",
                "html_url": "https://github.com/wclr/yalc/issues/203#issuecomment-1246848488",
                "issue_url": "https://api.github.com/repos/wclr/yalc/issues/203",
                "id": 1246848488,
                "node_id": "IC_kwDOBUWmj85KUWXo",
                "user": {
                    "login": "AlanSl",
                    "id": 29628323,
                    "node_id": "MDQ6VXNlcjI5NjI4MzIz",
                    "avatar_url": "https://avatars.githubusercontent.com/u/29628323?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/AlanSl",
                    "html_url": "https://github.com/AlanSl",
                    "followers_url": "https://api.github.com/users/AlanSl/followers",
                    "following_url": "https://api.github.com/users/AlanSl/following{/other_user}",
                    "gists_url": "https://api.github.com/users/AlanSl/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/AlanSl/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/AlanSl/subscriptions",
                    "organizations_url": "https://api.github.com/users/AlanSl/orgs",
                    "repos_url": "https://api.github.com/users/AlanSl/repos",
                    "events_url": "https://api.github.com/users/AlanSl/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/AlanSl/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2022-09-14T14:27:00Z",
                "updated_at": "2022-09-14T14:27:00Z",
                "author_association": "NONE",
                "body": "Not really. It might be possible to work around by forcing the version folders to have a more recent created date than `.DS_Store`, e.g. by deleting the published versions then `yalc publish` again?",
                "reactions": {
                    "url": "https://api.github.com/repos/wclr/yalc/issues/comments/1246848488/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2022-09-14T14:27:01Z"
    },
    {
        "id": "23917625904",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 29628323,
            "login": "AlanSl",
            "display_login": "AlanSl",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AlanSl",
            "avatar_url": "https://avatars.githubusercontent.com/u/29628323?"
        },
        "repo": {
            "id": 49668250,
            "name": "dear-github/dear-github",
            "url": "https://api.github.com/repos/dear-github/dear-github"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/dear-github/dear-github/issues/332",
                "repository_url": "https://api.github.com/repos/dear-github/dear-github",
                "labels_url": "https://api.github.com/repos/dear-github/dear-github/issues/332/labels{/name}",
                "comments_url": "https://api.github.com/repos/dear-github/dear-github/issues/332/comments",
                "events_url": "https://api.github.com/repos/dear-github/dear-github/issues/332/events",
                "html_url": "https://github.com/dear-github/dear-github/issues/332",
                "id": 377623366,
                "node_id": "MDU6SXNzdWUzNzc2MjMzNjY=",
                "number": 332,
                "title": "Allow pull request author to \"Request Changes\" themselves",
                "user": {
                    "login": "adamdecaf",
                    "id": 120951,
                    "node_id": "MDQ6VXNlcjEyMDk1MQ==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/120951?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/adamdecaf",
                    "html_url": "https://github.com/adamdecaf",
                    "followers_url": "https://api.github.com/users/adamdecaf/followers",
                    "following_url": "https://api.github.com/users/adamdecaf/following{/other_user}",
                    "gists_url": "https://api.github.com/users/adamdecaf/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/adamdecaf/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/adamdecaf/subscriptions",
                    "organizations_url": "https://api.github.com/users/adamdecaf/orgs",
                    "repos_url": "https://api.github.com/users/adamdecaf/repos",
                    "events_url": "https://api.github.com/users/adamdecaf/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/adamdecaf/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 9,
                "created_at": "2018-11-05T23:12:48Z",
                "updated_at": "2022-09-09T14:02:08Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "Often a pull request (PR) author might share a branch in PR form to get feedback from the team or to review at a later point. It would be helpful for the author to be able to \"Request Changes\" on themselves. The original author should be able to signal not to merge if desired. \r\n\r\nThis also applies when a PR changes ownership, if an employee leaves for example.",
                "reactions": {
                    "url": "https://api.github.com/repos/dear-github/dear-github/issues/332/reactions",
                    "total_count": 20,
                    "+1": 20,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/dear-github/dear-github/issues/332/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/dear-github/dear-github/issues/comments/1242014808",
                "html_url": "https://github.com/dear-github/dear-github/issues/332#issuecomment-1242014808",
                "issue_url": "https://api.github.com/repos/dear-github/dear-github/issues/332",
                "id": 1242014808,
                "node_id": "IC_kwDOAvXgms5KB6RY",
                "user": {
                    "login": "AlanSl",
                    "id": 29628323,
                    "node_id": "MDQ6VXNlcjI5NjI4MzIz",
                    "avatar_url": "https://avatars.githubusercontent.com/u/29628323?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/AlanSl",
                    "html_url": "https://github.com/AlanSl",
                    "followers_url": "https://api.github.com/users/AlanSl/followers",
                    "following_url": "https://api.github.com/users/AlanSl/following{/other_user}",
                    "gists_url": "https://api.github.com/users/AlanSl/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/AlanSl/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/AlanSl/subscriptions",
                    "organizations_url": "https://api.github.com/users/AlanSl/orgs",
                    "repos_url": "https://api.github.com/users/AlanSl/repos",
                    "events_url": "https://api.github.com/users/AlanSl/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/AlanSl/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2022-09-09T14:02:08Z",
                "updated_at": "2022-09-09T14:02:08Z",
                "author_association": "NONE",
                "body": "Same request please. In my case:\r\n\r\n- my PR **is** ready for review and I want colleagues to review it, so setting it to \"draft\" isn't appropriate,\r\n- but there is one very localised crucial and non-obvious problem with it that must be fixed before it is merged\r\n- This problem should block merging until it is fixed (and there is a danger that colleagues in a different timezone could miss my comment flagging the issue, approve, and merge during hours I'm not active), but shouldn't deter the rest of the PR from being reviewed\r\n\r\nSo \"request changes\" is exactly the right tool for my scenario, because it flags the problem, blocks merge, but continues to allow and encourage the rest of the PR to be reviewed; but I'm not allowed to use it. ",
                "reactions": {
                    "url": "https://api.github.com/repos/dear-github/dear-github/issues/comments/1242014808/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2022-09-09T14:02:08Z",
        "org": {
            "id": 16708458,
            "login": "dear-github",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/dear-github",
            "avatar_url": "https://avatars.githubusercontent.com/u/16708458?"
        }
    },
    {
        "id": "23659274208",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 29628323,
            "login": "AlanSl",
            "display_login": "AlanSl",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AlanSl",
            "avatar_url": "https://avatars.githubusercontent.com/u/29628323?"
        },
        "repo": {
            "id": 29028775,
            "name": "facebook/react-native",
            "url": "https://api.github.com/repos/facebook/react-native"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/facebook/react-native/issues/34508",
                "repository_url": "https://api.github.com/repos/facebook/react-native",
                "labels_url": "https://api.github.com/repos/facebook/react-native/issues/34508/labels{/name}",
                "comments_url": "https://api.github.com/repos/facebook/react-native/issues/34508/comments",
                "events_url": "https://api.github.com/repos/facebook/react-native/issues/34508/events",
                "html_url": "https://github.com/facebook/react-native/issues/34508",
                "id": 1352143575,
                "node_id": "I_kwDOAbrxp85QmBLX",
                "number": 34508,
                "title": "Returning eventSubscription.remove as useEffect cleanup crashes with \"undefined is not an object (evaluating emitter)\"",
                "user": {
                    "login": "AlanSl",
                    "id": 29628323,
                    "node_id": "MDQ6VXNlcjI5NjI4MzIz",
                    "avatar_url": "https://avatars.githubusercontent.com/u/29628323?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/AlanSl",
                    "html_url": "https://github.com/AlanSl",
                    "followers_url": "https://api.github.com/users/AlanSl/followers",
                    "following_url": "https://api.github.com/users/AlanSl/following{/other_user}",
                    "gists_url": "https://api.github.com/users/AlanSl/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/AlanSl/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/AlanSl/subscriptions",
                    "organizations_url": "https://api.github.com/users/AlanSl/orgs",
                    "repos_url": "https://api.github.com/users/AlanSl/repos",
                    "events_url": "https://api.github.com/users/AlanSl/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/AlanSl/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 1794148347,
                        "node_id": "MDU6TGFiZWwxNzk0MTQ4MzQ3",
                        "url": "https://api.github.com/repos/facebook/react-native/labels/Needs:%20Triage%20:mag:",
                        "name": "Needs: Triage :mag:",
                        "color": "bfd4f2",
                        "default": false,
                        "description": ""
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 1,
                "created_at": "2022-08-26T11:32:08Z",
                "updated_at": "2022-08-26T14:08:28Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "### Description\r\n\r\nThis might be expected behaviour or not worth fixing since there's an easy workaround, but it was tricky to debug and I think it's new behaviour in a recent release (I'm sure I've seen this pattern used since around `0.65` without errors), so I think it's worth having an issue people can find by search.\r\n\r\nConfirmed in Android and iOS (and not in react-native-web).\r\n\r\n---\r\n\r\nIf the `remove` method of an event subscription is returned as the cleanup function for a `useEffect`, on dismount, the removal crashes internally with either:\r\n\r\n> undefined is not an object (reading 'emitter')\r\n>\r\n> Call Stack: EmitterSubscription#remove\r\n\r\n...or...\r\n\r\n> undefined is not an object (evaluating this.emitter)\r\n\r\nDoing something like this crashes on dismount, unable to find the subscription's emitter property:\r\n\r\n```js\r\n  useEffect(() => {\r\n    const subscription = Dimensions.addEventListener('change', () => {})\r\n    return subscription.remove // crashes, `subscription.emitter` is lost before `remove` is called\r\n  }, [])\r\n```\r\n\r\nWrapping it in an outer function doesn't crash and works as expected, presumably because trapping the whole subscription object in the return function's scope stops its emitter property from getting deleted?\r\n\r\n```js\r\n  useEffect(() => {\r\n    const subscription = Dimensions.addEventListener('change', () => {})\r\n    return () => subscription.remove() // doesn't crash, `subscription.emitter` is preserved\r\n  }, [])\r\n```\r\n\r\n### Version\r\n\r\n0.69.4\r\n\r\n### Output of `npx react-native info`\r\n\r\n```\r\nSystem:\r\n    OS: macOS 11.6.8\r\n    CPU: (8) x64 Intel(R) Core(TM) i7-1068NG7 CPU @ 2.30GHz\r\n    Memory: 7.56 GB / 32.00 GB\r\n    Shell: 5.8 - /bin/zsh\r\n  Binaries:\r\n    Node: 16.16.0 - ~/.nvm/versions/node/v16.16.0/bin/node\r\n    Yarn: Not Found\r\n    npm: 8.17.0 - ~/.nvm/versions/node/v16.16.0/bin/npm\r\n    Watchman: 2021.06.07.00 - /usr/local/bin/watchman\r\n  Managers:\r\n    CocoaPods: 1.10.1 - /usr/local/bin/pod\r\n  SDKs:\r\n    iOS SDK:\r\n      Platforms: DriverKit 21.2, iOS 15.2, macOS 12.1, tvOS 15.2, watchOS 8.3\r\n    Android SDK:\r\n      API Levels: 29, 30\r\n      Build Tools: 29.0.2, 30.0.3\r\n      System Images: android-29 | Intel x86 Atom_64, android-30 | Google APIs Intel x86 Atom\r\n      Android NDK: Not Found\r\n  IDEs:\r\n    Android Studio: Not Found\r\n    Xcode: 13.2.1/13C100 - /usr/bin/xcodebuild\r\n  Languages:\r\n    Java: 1.8.0_282 - /usr/bin/javac\r\n  npmPackages:\r\n    @react-native-community/cli: Not Found\r\n    react: ~18.0.0 => 18.0.0 \r\n    react-native: 0.69.4 => 0.69.4 \r\n    react-native-macos: Not Found\r\n  npmGlobalPackages:\r\n    *react-native*: Not Found\r\n```\r\n\r\n### Steps to reproduce\r\n\r\n1. Call `Dimensions.addEventListener` or `AccessibilityInfo.addEventListener` or similar in a `useEffect`\r\n2. Capture the subscription in a variable\r\n3. Return the subscription's remove method as the useEffect's cleanup function\r\n\r\n### Snack, code example, screenshot, or link to a repository\r\n\r\nhttps://snack.expo.dev/@alansl/amused-peanut",
                "reactions": {
                    "url": "https://api.github.com/repos/facebook/react-native/issues/34508/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/facebook/react-native/issues/34508/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/facebook/react-native/issues/comments/1228536844",
                "html_url": "https://github.com/facebook/react-native/issues/34508#issuecomment-1228536844",
                "issue_url": "https://api.github.com/repos/facebook/react-native/issues/34508",
                "id": 1228536844,
                "node_id": "IC_kwDOAbrxp85JOfwM",
                "user": {
                    "login": "AlanSl",
                    "id": 29628323,
                    "node_id": "MDQ6VXNlcjI5NjI4MzIz",
                    "avatar_url": "https://avatars.githubusercontent.com/u/29628323?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/AlanSl",
                    "html_url": "https://github.com/AlanSl",
                    "followers_url": "https://api.github.com/users/AlanSl/followers",
                    "following_url": "https://api.github.com/users/AlanSl/following{/other_user}",
                    "gists_url": "https://api.github.com/users/AlanSl/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/AlanSl/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/AlanSl/subscriptions",
                    "organizations_url": "https://api.github.com/users/AlanSl/orgs",
                    "repos_url": "https://api.github.com/users/AlanSl/repos",
                    "events_url": "https://api.github.com/users/AlanSl/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/AlanSl/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2022-08-26T14:08:28Z",
                "updated_at": "2022-08-26T14:08:28Z",
                "author_association": "NONE",
                "body": "@pablolucas890 Good catch that there is an example in the docs that uses the wrapper function approach. \r\n\r\nYour `return listener.remove()` example is missing the wrapper function: it's creating the subscription then immediately removing it, so it doesn't crash, but it won't work either (if you changed both the `useEffect`s in my example to be like this, the \"width\" text won't update when you rotate the device, because both subscriptions are cancelled immediately after being created).\r\n\r\nIt should be `return () => listener.remove()` instead of `return listener.remove()`, wrapping it in a function so that instead of calling `remove` right away, React keeps the function and calls it on dismount (see the [docs for cleanup functions in `useEffect`](https://reactjs.org/docs/hooks-effect.html#example-using-hooks-1))\r\n\r\n---\r\n\r\nThe point of this issue is that usually, `return someFunction` and `return () => someFunction()` would be equivalent if the function is being called without arguments, but in this case (presumably because of some internal detail relying on `this` or something similar), the first crashes with a non-obvious error, while the second works.\r\n\r\nSo, this issue isn't a big deal, because the workaround is really simple (do `return () => subscription.remove()` instead of `return subscription.remove`), but it's a bit of a gotcha so I thought it's worth at least having an issue posted that someone affected can find.",
                "reactions": {
                    "url": "https://api.github.com/repos/facebook/react-native/issues/comments/1228536844/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2022-08-26T14:08:28Z",
        "org": {
            "id": 69631,
            "login": "facebook",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/facebook",
            "avatar_url": "https://avatars.githubusercontent.com/u/69631?"
        }
    },
    {
        "id": "23656253645",
        "type": "IssuesEvent",
        "actor": {
            "id": 29628323,
            "login": "AlanSl",
            "display_login": "AlanSl",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AlanSl",
            "avatar_url": "https://avatars.githubusercontent.com/u/29628323?"
        },
        "repo": {
            "id": 29028775,
            "name": "facebook/react-native",
            "url": "https://api.github.com/repos/facebook/react-native"
        },
        "payload": {
            "action": "opened",
            "issue": {
                "url": "https://api.github.com/repos/facebook/react-native/issues/34508",
                "repository_url": "https://api.github.com/repos/facebook/react-native",
                "labels_url": "https://api.github.com/repos/facebook/react-native/issues/34508/labels{/name}",
                "comments_url": "https://api.github.com/repos/facebook/react-native/issues/34508/comments",
                "events_url": "https://api.github.com/repos/facebook/react-native/issues/34508/events",
                "html_url": "https://github.com/facebook/react-native/issues/34508",
                "id": 1352143575,
                "node_id": "I_kwDOAbrxp85QmBLX",
                "number": 34508,
                "title": "Returning eventSubscription.remove as useEffect cleanup crashes with \"undefined is not an object (evaluating emitter)\"",
                "user": {
                    "login": "AlanSl",
                    "id": 29628323,
                    "node_id": "MDQ6VXNlcjI5NjI4MzIz",
                    "avatar_url": "https://avatars.githubusercontent.com/u/29628323?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/AlanSl",
                    "html_url": "https://github.com/AlanSl",
                    "followers_url": "https://api.github.com/users/AlanSl/followers",
                    "following_url": "https://api.github.com/users/AlanSl/following{/other_user}",
                    "gists_url": "https://api.github.com/users/AlanSl/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/AlanSl/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/AlanSl/subscriptions",
                    "organizations_url": "https://api.github.com/users/AlanSl/orgs",
                    "repos_url": "https://api.github.com/users/AlanSl/repos",
                    "events_url": "https://api.github.com/users/AlanSl/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/AlanSl/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 1794148347,
                        "node_id": "MDU6TGFiZWwxNzk0MTQ4MzQ3",
                        "url": "https://api.github.com/repos/facebook/react-native/labels/Needs:%20Triage%20:mag:",
                        "name": "Needs: Triage :mag:",
                        "color": "bfd4f2",
                        "default": false,
                        "description": ""
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 0,
                "created_at": "2022-08-26T11:32:08Z",
                "updated_at": "2022-08-26T11:32:08Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "### Description\n\nThis might be expected behaviour or not worth fixing since there's an easy workaround, but it was tricky to debug and I think it's new behaviour in a recent release (I'm sure I've seen this pattern used since around `0.65` without errors), so I think it's worth having an issue people can find by search.\r\n\r\n---\r\n\r\nIf the `remove` method of an event subscription is returned as the cleanup function for a `useEffect`, on dismount, the removal crashes internally with either:\r\n\r\n> undefined is not an object (reading 'emitter')\r\n>\r\n> Call Stack: EmitterSubscription#remove\r\n\r\n...or...\r\n\r\n> undefined is not an object (evaluating this.emitter)\r\n\r\nIt appears that the `.emitter` property of the subscription gets scrubbed, so when the remove method tries to access it, it is gone. Wrapping the remove method in a function and returning that doesn't have this problem.\r\n\r\n---\r\n\r\nSo, doing something like this crashes on dismount, unable to find the subscription's emitter property:\r\n\r\n```js\r\n  useEffect(() => {\r\n    const subscription = Dimensions.addEventListener('change', () => {})\r\n    return subscription.remove // crashes, `subscription`'s other properties are lost before `remove` is called\r\n  }, [])\r\n```\r\n\r\nThis doesn't and works as expected, presumably because trapping the whole subscription object in the return function's scope stops its emitter property from getting deleted?\r\n\r\n```js\r\n  useEffect(() => {\r\n    const subscription = Dimensions.addEventListener('change', () => {})\r\n    return () => subscription.remove() // doesn't crash, `subscription`'s other properties are preserved\r\n  }, [])\r\n```\n\n### Version\n\n0.69.4\n\n### Output of `npx react-native info`\n\n```\r\nSystem:\r\n    OS: macOS 11.6.8\r\n    CPU: (8) x64 Intel(R) Core(TM) i7-1068NG7 CPU @ 2.30GHz\r\n    Memory: 7.56 GB / 32.00 GB\r\n    Shell: 5.8 - /bin/zsh\r\n  Binaries:\r\n    Node: 16.16.0 - ~/.nvm/versions/node/v16.16.0/bin/node\r\n    Yarn: Not Found\r\n    npm: 8.17.0 - ~/.nvm/versions/node/v16.16.0/bin/npm\r\n    Watchman: 2021.06.07.00 - /usr/local/bin/watchman\r\n  Managers:\r\n    CocoaPods: 1.10.1 - /usr/local/bin/pod\r\n  SDKs:\r\n    iOS SDK:\r\n      Platforms: DriverKit 21.2, iOS 15.2, macOS 12.1, tvOS 15.2, watchOS 8.3\r\n    Android SDK:\r\n      API Levels: 29, 30\r\n      Build Tools: 29.0.2, 30.0.3\r\n      System Images: android-29 | Intel x86 Atom_64, android-30 | Google APIs Intel x86 Atom\r\n      Android NDK: Not Found\r\n  IDEs:\r\n    Android Studio: Not Found\r\n    Xcode: 13.2.1/13C100 - /usr/bin/xcodebuild\r\n  Languages:\r\n    Java: 1.8.0_282 - /usr/bin/javac\r\n  npmPackages:\r\n    @react-native-community/cli: Not Found\r\n    react: ~18.0.0 => 18.0.0 \r\n    react-native: 0.69.4 => 0.69.4 \r\n    react-native-macos: Not Found\r\n  npmGlobalPackages:\r\n    *react-native*: Not Found\r\n```\n\n### Steps to reproduce\n\n1. Call `Dimensions.addEventListener` or `AccessibilityInfo.addEventListener` or similar in a `useEffect`\r\n2. Capture the subscription in a variable\r\n3. Return the subscription's remove method as the useEffect's cleanup function\n\n### Snack, code example, screenshot, or link to a repository\n\nhttps://snack.expo.dev/@alansl/amused-peanut",
                "reactions": {
                    "url": "https://api.github.com/repos/facebook/react-native/issues/34508/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/facebook/react-native/issues/34508/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            }
        },
        "public": true,
        "created_at": "2022-08-26T11:32:08Z",
        "org": {
            "id": 69631,
            "login": "facebook",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/facebook",
            "avatar_url": "https://avatars.githubusercontent.com/u/69631?"
        }
    },
    {
        "id": "23639449416",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 29628323,
            "login": "AlanSl",
            "display_login": "AlanSl",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AlanSl",
            "avatar_url": "https://avatars.githubusercontent.com/u/29628323?"
        },
        "repo": {
            "id": 37153337,
            "name": "necolas/react-native-web",
            "url": "https://api.github.com/repos/necolas/react-native-web"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/necolas/react-native-web/issues/2374",
                "repository_url": "https://api.github.com/repos/necolas/react-native-web",
                "labels_url": "https://api.github.com/repos/necolas/react-native-web/issues/2374/labels{/name}",
                "comments_url": "https://api.github.com/repos/necolas/react-native-web/issues/2374/comments",
                "events_url": "https://api.github.com/repos/necolas/react-native-web/issues/2374/events",
                "html_url": "https://github.com/necolas/react-native-web/pull/2374",
                "id": 1350058562,
                "node_id": "PR_kwDOAjbqOc49wG9i",
                "number": 2374,
                "title": "[fix] Allow Pressable to be programmatically focused when disabled",
                "user": {
                    "login": "necolas",
                    "id": 239676,
                    "node_id": "MDQ6VXNlcjIzOTY3Ng==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/239676?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/necolas",
                    "html_url": "https://github.com/necolas",
                    "followers_url": "https://api.github.com/users/necolas/followers",
                    "following_url": "https://api.github.com/users/necolas/following{/other_user}",
                    "gists_url": "https://api.github.com/users/necolas/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/necolas/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/necolas/subscriptions",
                    "organizations_url": "https://api.github.com/users/necolas/orgs",
                    "repos_url": "https://api.github.com/users/necolas/repos",
                    "events_url": "https://api.github.com/users/necolas/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/necolas/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 3,
                "created_at": "2022-08-24T21:48:15Z",
                "updated_at": "2022-08-25T15:44:41Z",
                "closed_at": null,
                "author_association": "OWNER",
                "active_lock_reason": null,
                "draft": false,
                "pull_request": {
                    "url": "https://api.github.com/repos/necolas/react-native-web/pulls/2374",
                    "html_url": "https://github.com/necolas/react-native-web/pull/2374",
                    "diff_url": "https://github.com/necolas/react-native-web/pull/2374.diff",
                    "patch_url": "https://github.com/necolas/react-native-web/pull/2374.patch",
                    "merged_at": null
                },
                "body": "Fix #2357",
                "reactions": {
                    "url": "https://api.github.com/repos/necolas/react-native-web/issues/2374/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/necolas/react-native-web/issues/2374/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/necolas/react-native-web/issues/comments/1227450678",
                "html_url": "https://github.com/necolas/react-native-web/pull/2374#issuecomment-1227450678",
                "issue_url": "https://api.github.com/repos/necolas/react-native-web/issues/2374",
                "id": 1227450678,
                "node_id": "IC_kwDOAjbqOc5JKWk2",
                "user": {
                    "login": "AlanSl",
                    "id": 29628323,
                    "node_id": "MDQ6VXNlcjI5NjI4MzIz",
                    "avatar_url": "https://avatars.githubusercontent.com/u/29628323?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/AlanSl",
                    "html_url": "https://github.com/AlanSl",
                    "followers_url": "https://api.github.com/users/AlanSl/followers",
                    "following_url": "https://api.github.com/users/AlanSl/following{/other_user}",
                    "gists_url": "https://api.github.com/users/AlanSl/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/AlanSl/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/AlanSl/subscriptions",
                    "organizations_url": "https://api.github.com/users/AlanSl/orgs",
                    "repos_url": "https://api.github.com/users/AlanSl/repos",
                    "events_url": "https://api.github.com/users/AlanSl/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/AlanSl/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2022-08-25T15:44:41Z",
                "updated_at": "2022-08-25T15:44:41Z",
                "author_association": "NONE",
                "body": "Great, thanks, I've tried this out locally in my real-world component that had the initial problem, and this fixes it, means I can remove the workaround I'd previously used. And of course it works perfectly in the sandbox reproduction too.\r\n\r\nLGTM and thank you!",
                "reactions": {
                    "url": "https://api.github.com/repos/necolas/react-native-web/issues/comments/1227450678/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2022-08-25T15:44:41Z"
    },
    {
        "id": "23586810111",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 29628323,
            "login": "AlanSl",
            "display_login": "AlanSl",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AlanSl",
            "avatar_url": "https://avatars.githubusercontent.com/u/29628323?"
        },
        "repo": {
            "id": 88450703,
            "name": "wclr/yalc",
            "url": "https://api.github.com/repos/wclr/yalc"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/wclr/yalc/issues/203",
                "repository_url": "https://api.github.com/repos/wclr/yalc",
                "labels_url": "https://api.github.com/repos/wclr/yalc/issues/203/labels{/name}",
                "comments_url": "https://api.github.com/repos/wclr/yalc/issues/203/comments",
                "events_url": "https://api.github.com/repos/wclr/yalc/issues/203/events",
                "html_url": "https://github.com/wclr/yalc/issues/203",
                "id": 1347851175,
                "node_id": "I_kwDOBUWmj85QVpOn",
                "number": 203,
                "title": "`yalc add` on Mac can fail with get ENOTDIR invalid cwd treating .DS_Store as a version directory.",
                "user": {
                    "login": "AlanSl",
                    "id": 29628323,
                    "node_id": "MDQ6VXNlcjI5NjI4MzIz",
                    "avatar_url": "https://avatars.githubusercontent.com/u/29628323?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/AlanSl",
                    "html_url": "https://github.com/AlanSl",
                    "followers_url": "https://api.github.com/users/AlanSl/followers",
                    "following_url": "https://api.github.com/users/AlanSl/following{/other_user}",
                    "gists_url": "https://api.github.com/users/AlanSl/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/AlanSl/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/AlanSl/subscriptions",
                    "organizations_url": "https://api.github.com/users/AlanSl/orgs",
                    "repos_url": "https://api.github.com/users/AlanSl/repos",
                    "events_url": "https://api.github.com/users/AlanSl/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/AlanSl/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 1,
                "created_at": "2022-08-23T12:13:09Z",
                "updated_at": "2022-08-23T12:19:57Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "I saw this for the first time today on running `yalc add` on several packages in a new repo (MacOS 11.6.8). All the packages worked except one, which gave this error:\r\n\r\n> Error: ENOTDIR invalid cwd /Users/alan/.yalc/packages/{package_name}/.DS_Store\r\n>     at Glob._readdirError (/Users/alan/.npm/_npx/8971ede65c5d814d/node_modules/glob/glob.js:589:21)\r\n>     at /Users/alan/.npm/_npx/8971ede65c5d814d/node_modules/glob/glob.js:550:12\r\n>     at FSReqCallback.oncomplete (node:fs:188:23) {\r\n>   path: '/Users/alan/.yalc/packages/{package_name}/.DS_Store',\r\n>   code: 'ENOTDIR'\r\n> }\r\n\r\nDeleting the Mac OS generated `.DS_Store` file in the Yalc package directory (the one that contains all the yalc-published versions) fixed this.\r\n\r\nIt's strange because:\r\n\r\n - All the other packages worked fine and they all had `.DS_Store` files\r\n - All the packages came from the same monorepo, which had `.DS_Store` in its gitignore",
                "reactions": {
                    "url": "https://api.github.com/repos/wclr/yalc/issues/203/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/wclr/yalc/issues/203/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/wclr/yalc/issues/comments/1223991017",
                "html_url": "https://github.com/wclr/yalc/issues/203#issuecomment-1223991017",
                "issue_url": "https://api.github.com/repos/wclr/yalc/issues/203",
                "id": 1223991017,
                "node_id": "IC_kwDOBUWmj85I9J7p",
                "user": {
                    "login": "AlanSl",
                    "id": 29628323,
                    "node_id": "MDQ6VXNlcjI5NjI4MzIz",
                    "avatar_url": "https://avatars.githubusercontent.com/u/29628323?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/AlanSl",
                    "html_url": "https://github.com/AlanSl",
                    "followers_url": "https://api.github.com/users/AlanSl/followers",
                    "following_url": "https://api.github.com/users/AlanSl/following{/other_user}",
                    "gists_url": "https://api.github.com/users/AlanSl/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/AlanSl/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/AlanSl/subscriptions",
                    "organizations_url": "https://api.github.com/users/AlanSl/orgs",
                    "repos_url": "https://api.github.com/users/AlanSl/repos",
                    "events_url": "https://api.github.com/users/AlanSl/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/AlanSl/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2022-08-23T12:19:57Z",
                "updated_at": "2022-08-23T12:19:57Z",
                "author_association": "NONE",
                "body": "I think I've figured it out - I can replicate it by causing a yalc package directory to have a `.DS_Store` file with a creation date more recent than any of the version directories. \r\n\r\nFor example (on a Mac):\r\n\r\n - `yalc add` some package - it works\r\n - Delete the .DS_Store file in that package's directory of version directories\r\n - Regenerate it (for example, Get Info, then tick and untick \"Locked\")\r\n - `yalc add` the same package again - this time, it fails on trying to `cd` into `.DS_store`.\r\n\r\nSo it looks like the problem is, the function `yalc add` uses to find the latest version is just taking all the contents of the directory, getting the most recent, and assuming it's a version directory. 99% of the time this works fine, but if for whatever reason some system file like `.DS_Store` comes to be the most recent item in the directory, this crash happens.\r\n\r\n**Suggested fix**: filter the array of directory contents to be only directories before finding the newest and `cd`ing into it.",
                "reactions": {
                    "url": "https://api.github.com/repos/wclr/yalc/issues/comments/1223991017/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2022-08-23T12:19:57Z"
    },
    {
        "id": "23586663159",
        "type": "IssuesEvent",
        "actor": {
            "id": 29628323,
            "login": "AlanSl",
            "display_login": "AlanSl",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AlanSl",
            "avatar_url": "https://avatars.githubusercontent.com/u/29628323?"
        },
        "repo": {
            "id": 88450703,
            "name": "wclr/yalc",
            "url": "https://api.github.com/repos/wclr/yalc"
        },
        "payload": {
            "action": "opened",
            "issue": {
                "url": "https://api.github.com/repos/wclr/yalc/issues/203",
                "repository_url": "https://api.github.com/repos/wclr/yalc",
                "labels_url": "https://api.github.com/repos/wclr/yalc/issues/203/labels{/name}",
                "comments_url": "https://api.github.com/repos/wclr/yalc/issues/203/comments",
                "events_url": "https://api.github.com/repos/wclr/yalc/issues/203/events",
                "html_url": "https://github.com/wclr/yalc/issues/203",
                "id": 1347851175,
                "node_id": "I_kwDOBUWmj85QVpOn",
                "number": 203,
                "title": "`yalc add` on Mac can fail with get ENOTDIR invalid cwd treating .DS_Store as a version directory.",
                "user": {
                    "login": "AlanSl",
                    "id": 29628323,
                    "node_id": "MDQ6VXNlcjI5NjI4MzIz",
                    "avatar_url": "https://avatars.githubusercontent.com/u/29628323?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/AlanSl",
                    "html_url": "https://github.com/AlanSl",
                    "followers_url": "https://api.github.com/users/AlanSl/followers",
                    "following_url": "https://api.github.com/users/AlanSl/following{/other_user}",
                    "gists_url": "https://api.github.com/users/AlanSl/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/AlanSl/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/AlanSl/subscriptions",
                    "organizations_url": "https://api.github.com/users/AlanSl/orgs",
                    "repos_url": "https://api.github.com/users/AlanSl/repos",
                    "events_url": "https://api.github.com/users/AlanSl/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/AlanSl/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 0,
                "created_at": "2022-08-23T12:13:09Z",
                "updated_at": "2022-08-23T12:13:09Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "I saw this for the first time today on running `yalc add` on several packages in a new repo (MacOS 11.6.8). All the packages worked except one, which gave this error:\r\n\r\n> Error: ENOTDIR invalid cwd /Users/alan/.yalc/packages/{package_name}/.DS_Store\r\n>     at Glob._readdirError (/Users/alan/.npm/_npx/8971ede65c5d814d/node_modules/glob/glob.js:589:21)\r\n>     at /Users/alan/.npm/_npx/8971ede65c5d814d/node_modules/glob/glob.js:550:12\r\n>     at FSReqCallback.oncomplete (node:fs:188:23) {\r\n>   path: '/Users/alan/.yalc/packages/{package_name}/.DS_Store',\r\n>   code: 'ENOTDIR'\r\n> }\r\n\r\nDeleting the Mac OS generated `.DS_Store` file in the Yalc package directory (the one that contains all the yalc-published versions) fixed this.\r\n\r\nIt's strange because:\r\n\r\n - All the other packages worked fine and they all had `.DS_Store` files\r\n - All the packages came from the same monorepo, which had `.DS_Store` in its gitignore",
                "reactions": {
                    "url": "https://api.github.com/repos/wclr/yalc/issues/203/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/wclr/yalc/issues/203/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            }
        },
        "public": true,
        "created_at": "2022-08-23T12:13:10Z"
    },
    {
        "id": "23387079649",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 29628323,
            "login": "AlanSl",
            "display_login": "AlanSl",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AlanSl",
            "avatar_url": "https://avatars.githubusercontent.com/u/29628323?"
        },
        "repo": {
            "id": 37153337,
            "name": "necolas/react-native-web",
            "url": "https://api.github.com/repos/necolas/react-native-web"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/necolas/react-native-web/issues/2357",
                "repository_url": "https://api.github.com/repos/necolas/react-native-web",
                "labels_url": "https://api.github.com/repos/necolas/react-native-web/issues/2357/labels{/name}",
                "comments_url": "https://api.github.com/repos/necolas/react-native-web/issues/2357/comments",
                "events_url": "https://api.github.com/repos/necolas/react-native-web/issues/2357/events",
                "html_url": "https://github.com/necolas/react-native-web/issues/2357",
                "id": 1331640296,
                "node_id": "I_kwDOAjbqOc5PXzfo",
                "number": 2357,
                "title": "Setting a Pressable as \"disabled\" from enter key press locks its internal `focused` state as `true`",
                "user": {
                    "login": "AlanSl",
                    "id": 29628323,
                    "node_id": "MDQ6VXNlcjI5NjI4MzIz",
                    "avatar_url": "https://avatars.githubusercontent.com/u/29628323?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/AlanSl",
                    "html_url": "https://github.com/AlanSl",
                    "followers_url": "https://api.github.com/users/AlanSl/followers",
                    "following_url": "https://api.github.com/users/AlanSl/following{/other_user}",
                    "gists_url": "https://api.github.com/users/AlanSl/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/AlanSl/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/AlanSl/subscriptions",
                    "organizations_url": "https://api.github.com/users/AlanSl/orgs",
                    "repos_url": "https://api.github.com/users/AlanSl/repos",
                    "events_url": "https://api.github.com/users/AlanSl/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/AlanSl/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 222457059,
                        "node_id": "MDU6TGFiZWwyMjI0NTcwNTk=",
                        "url": "https://api.github.com/repos/necolas/react-native-web/labels/bug",
                        "name": "bug",
                        "color": "D21635",
                        "default": true,
                        "description": null
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 3,
                "created_at": "2022-08-08T10:10:38Z",
                "updated_at": "2022-08-11T14:34:38Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "### Is there an existing issue for this?\r\n\r\n- [X] I have searched the existing issues\r\n\r\nMight be a side effect of the fix for https://github.com/necolas/react-native-web/issues/2127\r\n\r\n### Describe the issue\r\n\r\nIf a Pressable's `onPress` function causes it to become `disabled`, and this is triggered by tabbing in with the keyboard and triggering the `onPress` function from the keyboard using the Enter key, then the Pressable's internal `focused` state becomes locked as `true` even after the actual HTML element has blurred.\r\n\r\nFor example, here, the first Pressable was disabled and blurred using the Enter key and the second Pressable is the focused element, but the first Pressable thinks it is focused still.\r\n\r\n<img width=\"335\" alt=\"image\" src=\"https://user-images.githubusercontent.com/29628323/183395646-c2b4192f-5679-4114-9b4e-6851ff1425a1.png\">\r\n\r\n\r\n### Expected behavior\r\n\r\nA Pressable's `focused` state should not be `true` if it is not focused, regardless of how it came to be not focused, and it should never be both disabled and focused.\r\n\r\n### Steps to reproduce\r\n\r\n- Create a `Pressable` that shows its internal `focused` state visibly\r\n- Set its `disabled` state to `true` in an `onPress` handler\r\n- Select it using the keyboard tab key and trigger the onPress handler with the Enter key\r\n\r\n### Test case\r\n\r\nhttps://codesandbox.io/s/quirky-williamson-v3r94g\r\nhttps://snack.expo.dev/@alansl/amused-cheese\r\n\r\n### Additional comments\r\n\r\nThere's also a possibly-related issue described in comments in the linked example, where it's possible to programmatically focus a `disabled` Pressable just before `disabled` is removed, and then when `disabled` is removed, the element is focused but the focused state is stuck as `false`. Which issue occurs depends on whether mouse or keyboard events are used and timing of when the focus switch happens. Suggests the issue hinges on the timing of rerenders triggered by different event types.\r\n\r\nIn the provided example, it's _almost_ possible to work around this issue with careful timing - programmatically blurring the element after setting disabled to `false` in the target but before setting it to `true` in the trigger element. But this creates some strange timing issues when mouse clicks are used. Also, in real-life examples, this may not be an option: for example if the elements' `disabled` state is controlled by one `selected` state, it may not be possible to set a moment when both are enabled.\r\n\r\n### Suggested fix\r\n\r\nIt looks like all focus / blur handling is suppressed as soon as `disabled` is applied, and the timing of this relative to event handler timing varies by event type. Suggestion:\r\n\r\n - When `disabled` flips from false to true, if `focused` is still true, it shouldn't be and the element is losing focus; so call `onBlur` (including setting internal state) while it still can.\r\n - When `disabled` flips from true to false, if the element has become actually focused in the DOM but `focused` is false, it is legitimately gaining focus but the event handlers were skipped due to event / re-render timing; so call `onFocus` (including setting internal state)",
                "reactions": {
                    "url": "https://api.github.com/repos/necolas/react-native-web/issues/2357/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/necolas/react-native-web/issues/2357/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/necolas/react-native-web/issues/comments/1212074268",
                "html_url": "https://github.com/necolas/react-native-web/issues/2357#issuecomment-1212074268",
                "issue_url": "https://api.github.com/repos/necolas/react-native-web/issues/2357",
                "id": 1212074268,
                "node_id": "IC_kwDOAjbqOc5IPskc",
                "user": {
                    "login": "AlanSl",
                    "id": 29628323,
                    "node_id": "MDQ6VXNlcjI5NjI4MzIz",
                    "avatar_url": "https://avatars.githubusercontent.com/u/29628323?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/AlanSl",
                    "html_url": "https://github.com/AlanSl",
                    "followers_url": "https://api.github.com/users/AlanSl/followers",
                    "following_url": "https://api.github.com/users/AlanSl/following{/other_user}",
                    "gists_url": "https://api.github.com/users/AlanSl/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/AlanSl/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/AlanSl/subscriptions",
                    "organizations_url": "https://api.github.com/users/AlanSl/orgs",
                    "repos_url": "https://api.github.com/users/AlanSl/repos",
                    "events_url": "https://api.github.com/users/AlanSl/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/AlanSl/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2022-08-11T14:34:38Z",
                "updated_at": "2022-08-11T14:34:38Z",
                "author_association": "NONE",
                "body": "Done - https://codesandbox.io/s/quirky-williamson-v3r94g\r\n\r\nIf there's a mandatory format and template, may I suggest linking to it in the issue template, and clearly stating that codesandbox specifically is a requirement? Currently there's just a non-accessible input hint text:\r\n\r\n<img width=\"475\" alt=\"image\" src=\"https://user-images.githubusercontent.com/29628323/184158107-7404fdbc-f71e-424a-8568-332107fa6626.png\">\r\n\r\nI'm sure the old comment-based template clearly stated the required template, and linked to it.",
                "reactions": {
                    "url": "https://api.github.com/repos/necolas/react-native-web/issues/comments/1212074268/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2022-08-11T14:34:38Z"
    },
    {
        "id": "23314198259",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 29628323,
            "login": "AlanSl",
            "display_login": "AlanSl",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AlanSl",
            "avatar_url": "https://avatars.githubusercontent.com/u/29628323?"
        },
        "repo": {
            "id": 37153337,
            "name": "necolas/react-native-web",
            "url": "https://api.github.com/repos/necolas/react-native-web"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/necolas/react-native-web/issues/2357",
                "repository_url": "https://api.github.com/repos/necolas/react-native-web",
                "labels_url": "https://api.github.com/repos/necolas/react-native-web/issues/2357/labels{/name}",
                "comments_url": "https://api.github.com/repos/necolas/react-native-web/issues/2357/comments",
                "events_url": "https://api.github.com/repos/necolas/react-native-web/issues/2357/events",
                "html_url": "https://github.com/necolas/react-native-web/issues/2357",
                "id": 1331640296,
                "node_id": "I_kwDOAjbqOc5PXzfo",
                "number": 2357,
                "title": "Setting a Pressable as \"disabled\" from enter key press locks its internal `focused` state as `true`",
                "user": {
                    "login": "AlanSl",
                    "id": 29628323,
                    "node_id": "MDQ6VXNlcjI5NjI4MzIz",
                    "avatar_url": "https://avatars.githubusercontent.com/u/29628323?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/AlanSl",
                    "html_url": "https://github.com/AlanSl",
                    "followers_url": "https://api.github.com/users/AlanSl/followers",
                    "following_url": "https://api.github.com/users/AlanSl/following{/other_user}",
                    "gists_url": "https://api.github.com/users/AlanSl/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/AlanSl/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/AlanSl/subscriptions",
                    "organizations_url": "https://api.github.com/users/AlanSl/orgs",
                    "repos_url": "https://api.github.com/users/AlanSl/repos",
                    "events_url": "https://api.github.com/users/AlanSl/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/AlanSl/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 222457059,
                        "node_id": "MDU6TGFiZWwyMjI0NTcwNTk=",
                        "url": "https://api.github.com/repos/necolas/react-native-web/labels/bug",
                        "name": "bug",
                        "color": "D21635",
                        "default": true,
                        "description": null
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 0,
                "created_at": "2022-08-08T10:10:38Z",
                "updated_at": "2022-08-08T11:00:14Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "### Is there an existing issue for this?\r\n\r\n- [X] I have searched the existing issues\r\n\r\n### Describe the issue\r\n\r\nIf a Pressable's `onPress` function causes it to become `disabled`, and this is triggered by tabbing in with the keyboard and triggering the `onPress` function from the keyboard using the Enter key, then the Pressable's internal `focused` state becomes locked as `true` even after the actual HTML element has blurred.\r\n\r\nFor example, here, the first Pressable was disabled and blurred using the Enter key and the second Pressable is the focused element, but the first Pressable thinks it is focused still.\r\n\r\n<img width=\"335\" alt=\"image\" src=\"https://user-images.githubusercontent.com/29628323/183395646-c2b4192f-5679-4114-9b4e-6851ff1425a1.png\">\r\n\r\n\r\n### Expected behavior\r\n\r\nA Pressable's `focused` state should not be `true` if it is not focused, regardless of how it came to be not focused, and it should never be both disabled and focused.\r\n\r\n### Steps to reproduce\r\n\r\n- Create a `Pressable` that shows its internal `focused` state visibly\r\n- Set its `disabled` state to `true` in an `onPress` handler\r\n- Select it using the keyboard tab key and trigger the onPress handler with the Enter key\r\n\r\n### Test case\r\n\r\nhttps://snack.expo.dev/@alansl/amused-cheese\r\n\r\n### Additional comments\r\n\r\nThere's also a possibly-related issue described in comments in the linked example, where it's possible to programmatically focus a `disabled` Pressable just before `disabled` is removed and then when `disabled` is removed, the element is focused but the focused state is still `false`.\r\n\r\nIn the provided example, it's _almost_ possible to work around this issue with careful timing - programmatically blurring the element after setting disabled to `false` in the target but before setting it to `true` in the trigger element. But this creates some strange timing issues when mouse clicks are used. Also, in real-life examples, this may not be an option: for example if the elements' `disabled` state is controlled by one `selected` state, it may not be possible to set a moment when both are enabled.\r\n\r\n### Suggested fix\r\n\r\nIt looks like all focus / blur handling is suppressed as soon as `disabled` is applied. Suggestion:\r\n\r\n - When `disabled` flips from false to true, if `focused` is still true, it shouldn't be: call `onBlur` (including setting internal state).\r\n - When `disabled` flips from true to false, if element is actually focused in the DOM but `focused` is false, call `onFocus` (including setting internal state)",
                "reactions": {
                    "url": "https://api.github.com/repos/necolas/react-native-web/issues/2357/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/necolas/react-native-web/issues/2357/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/necolas/react-native-web/issues/comments/1207975166",
                "html_url": "https://github.com/necolas/react-native-web/issues/2357#issuecomment-1207975166",
                "issue_url": "https://api.github.com/repos/necolas/react-native-web/issues/2357",
                "id": 1207975166,
                "node_id": "IC_kwDOAjbqOc5IADz-",
                "user": {
                    "login": "AlanSl",
                    "id": 29628323,
                    "node_id": "MDQ6VXNlcjI5NjI4MzIz",
                    "avatar_url": "https://avatars.githubusercontent.com/u/29628323?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/AlanSl",
                    "html_url": "https://github.com/AlanSl",
                    "followers_url": "https://api.github.com/users/AlanSl/followers",
                    "following_url": "https://api.github.com/users/AlanSl/following{/other_user}",
                    "gists_url": "https://api.github.com/users/AlanSl/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/AlanSl/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/AlanSl/subscriptions",
                    "organizations_url": "https://api.github.com/users/AlanSl/orgs",
                    "repos_url": "https://api.github.com/users/AlanSl/repos",
                    "events_url": "https://api.github.com/users/AlanSl/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/AlanSl/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2022-08-08T11:00:14Z",
                "updated_at": "2022-08-08T11:00:14Z",
                "author_association": "NONE",
                "body": "Best workaround for my particular case so far seems to be to control an `isFocused` state in the Pressable's parent using `onBlur` / `onFocus` and not allow disabled to be `true` if `isFocused` is true; so, regardless of the timing around the triggering event, if an action causes the parent's disabled prop to be `true` on next render and moves focus away, it will not apply disabled as true until the re-render caused by the onBlur handler setting `isFocused` to `false`.",
                "reactions": {
                    "url": "https://api.github.com/repos/necolas/react-native-web/issues/comments/1207975166/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2022-08-08T11:00:14Z"
    },
    {
        "id": "23313283097",
        "type": "IssuesEvent",
        "actor": {
            "id": 29628323,
            "login": "AlanSl",
            "display_login": "AlanSl",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AlanSl",
            "avatar_url": "https://avatars.githubusercontent.com/u/29628323?"
        },
        "repo": {
            "id": 37153337,
            "name": "necolas/react-native-web",
            "url": "https://api.github.com/repos/necolas/react-native-web"
        },
        "payload": {
            "action": "opened",
            "issue": {
                "url": "https://api.github.com/repos/necolas/react-native-web/issues/2357",
                "repository_url": "https://api.github.com/repos/necolas/react-native-web",
                "labels_url": "https://api.github.com/repos/necolas/react-native-web/issues/2357/labels{/name}",
                "comments_url": "https://api.github.com/repos/necolas/react-native-web/issues/2357/comments",
                "events_url": "https://api.github.com/repos/necolas/react-native-web/issues/2357/events",
                "html_url": "https://github.com/necolas/react-native-web/issues/2357",
                "id": 1331640296,
                "node_id": "I_kwDOAjbqOc5PXzfo",
                "number": 2357,
                "title": "Setting a Pressable as \"disabled\" from enter key press locks its internal `focused` state as `true`",
                "user": {
                    "login": "AlanSl",
                    "id": 29628323,
                    "node_id": "MDQ6VXNlcjI5NjI4MzIz",
                    "avatar_url": "https://avatars.githubusercontent.com/u/29628323?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/AlanSl",
                    "html_url": "https://github.com/AlanSl",
                    "followers_url": "https://api.github.com/users/AlanSl/followers",
                    "following_url": "https://api.github.com/users/AlanSl/following{/other_user}",
                    "gists_url": "https://api.github.com/users/AlanSl/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/AlanSl/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/AlanSl/subscriptions",
                    "organizations_url": "https://api.github.com/users/AlanSl/orgs",
                    "repos_url": "https://api.github.com/users/AlanSl/repos",
                    "events_url": "https://api.github.com/users/AlanSl/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/AlanSl/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 222457059,
                        "node_id": "MDU6TGFiZWwyMjI0NTcwNTk=",
                        "url": "https://api.github.com/repos/necolas/react-native-web/labels/bug",
                        "name": "bug",
                        "color": "D21635",
                        "default": true,
                        "description": null
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 0,
                "created_at": "2022-08-08T10:10:38Z",
                "updated_at": "2022-08-08T10:10:38Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Describe the issue\n\nIf a Pressable's `onPress` function causes it to become `disabled`, and this is triggered by tabbing in with the keyboard and triggering the `onPress` function from the keyboard using the Enter key, then the Pressable's internal `focused` state becomes locked as `true` even after the actual HTML element has blurred.\r\n\r\nFor example, here, the first Pressable was disabled and blurred using the Enter key and the second Pressable is the focused element, but the first Pressable thinks it is focused still.\r\n\r\n<img width=\"325\" alt=\"image\" src=\"https://user-images.githubusercontent.com/29628323/183392367-52cf9a4c-a4cc-41f4-b5b4-ad630f0f7d38.png\">\r\n\n\n### Expected behavior\n\nA Pressable's `focused` state should not be `true` if it is not focused, regardless of how it came to be not focused, and it should never be both disabled and focused.\n\n### Steps to reproduce\n\n- Create a `Pressable` that shows its internal `focused` state visibly\r\n- Set its `disabled` state to `true` in an `onPress` handler\r\n- Select it using the keyboard tab key and trigger the onPress handler with the Enter key\n\n### Test case\n\nhttps://snack.expo.dev/@alansl/amused-cheese\n\n### Additional comments\n\nThere's also a possibly-related issue described in comments in the linked example, where it's possible to programmatically focus a `disabled` Pressable just before `disabled` is removed and then when `disabled` is removed, the element is focused but the focused state is still `false`.\r\n\r\nIt seems to be possible to work around this issue with careful timing - programmatically blurring the element before setting the `disabled` state - but it's odd that this is necessary for keyboard navigation but not mouse clicks.",
                "reactions": {
                    "url": "https://api.github.com/repos/necolas/react-native-web/issues/2357/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/necolas/react-native-web/issues/2357/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            }
        },
        "public": true,
        "created_at": "2022-08-08T10:10:38Z"
    }
]
[
    {
        "id": "23902948309",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 26688751,
            "login": "einavk",
            "display_login": "einavk",
            "gravatar_id": "",
            "url": "https://api.github.com/users/einavk",
            "avatar_url": "https://avatars.githubusercontent.com/u/26688751?"
        },
        "repo": {
            "id": 137078487,
            "name": "vuejs/core",
            "url": "https://api.github.com/repos/vuejs/core"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/vuejs/core/issues/6309",
                "repository_url": "https://api.github.com/repos/vuejs/core",
                "labels_url": "https://api.github.com/repos/vuejs/core/issues/6309/labels{/name}",
                "comments_url": "https://api.github.com/repos/vuejs/core/issues/6309/comments",
                "events_url": "https://api.github.com/repos/vuejs/core/issues/6309/events",
                "html_url": "https://github.com/vuejs/core/issues/6309",
                "id": 1309583487,
                "node_id": "I_kwDOCCum185ODqh_",
                "number": 6309,
                "title": "Custom elements sometimes not rendered correctly inside a v-for loop",
                "user": {
                    "login": "simonvizzini",
                    "id": 10862380,
                    "node_id": "MDQ6VXNlcjEwODYyMzgw",
                    "avatar_url": "https://avatars.githubusercontent.com/u/10862380?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/simonvizzini",
                    "html_url": "https://github.com/simonvizzini",
                    "followers_url": "https://api.github.com/users/simonvizzini/followers",
                    "following_url": "https://api.github.com/users/simonvizzini/following{/other_user}",
                    "gists_url": "https://api.github.com/users/simonvizzini/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/simonvizzini/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/simonvizzini/subscriptions",
                    "organizations_url": "https://api.github.com/users/simonvizzini/orgs",
                    "repos_url": "https://api.github.com/users/simonvizzini/repos",
                    "events_url": "https://api.github.com/users/simonvizzini/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/simonvizzini/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 6,
                "created_at": "2022-07-19T14:10:33Z",
                "updated_at": "2022-09-08T20:38:47Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "### Vue version\n\n3.2.26\n\n### Link to minimal reproduction\n\nhttps://really-sorry-but-no-repro-available.com\n\n### Steps to reproduce\n\nUnfortunately we're not able to reproduce this issue in a minimal reproduction example, but I'll try to explain our findings as detailed as possible and maybe some other users who encountered the same issue will be able to provide additional details. I'll also add more details if we encounter any new findings.\r\n\r\nWe've recently migrated our Vue2 application to Vue3. Our app relies heavily on 3rd party web components and we encountered a major issue related to rendering of custom elements inside `v-for` loops. Sometimes, but not always, the first custom element is rendered correctly while all subsequent custom elements are rendered in a \"broken\" state. What's super strange is that this issue seems to be somehow triggered at build time, because some builds are working totally fine while other builds, which may contain only minor, unrelated code changes, suddenly exhibit this problem. We couldn't find a pattern how to trigger this issue, but the issue appears maybe 1 out of 4 times when we build & deploy our application. For local builds in development mode this issue never happened, so it seems only production builds are affected. My uneducated guess is that maybe cosmic rays are affecting the Vue template compiler at build time... :)\r\n\r\nWe've encountered this issue in two of our templates so far that render custom elements in a `v-for` loop:\r\n\r\n1. In the first instance we're rendering a simple icon component as custom element, like this: `<wb-icon name=\"checkbox\"></wb-icon>`. Nothing fancy, no slots, just a name attribute to specify which icon should be rendered. But when the issue happens only the very first icon rendered in the v-for loop (`index === 0`) will have the `name` attribute rendered, while all other `wb-icon` elements have it missing. We were able to workaround this issue by using the new explicit `attr` modifier of the `v-bind` directive, like so: `<wb-icon :name.attr=\"'checkbox'\"><wb-icon>`\r\n2. The second instance is a bit more complicated and interesting. The web component in question is a web component developed with Stencil *without* shadow DOM (due to legacy reasons). This component provides a couple of child components, some with default slots. Just to illustrate the template structure, it looks similar to this:\r\n````\r\n<div v-for=\"item in items\" :key=\"item.id\" class=\"item-wrapper\">\r\n  <ce-component> <!-- provides default slot -->\r\n     <div class=\"container\">\r\n       <ce-component-child-one> <!-- provides default slot -->\r\n         <div>.....</div>\r\n       </ce-component-child-one>\r\n       <ce-component-child-two /> <!-- standalone component, no slot -->\r\n     </div>\r\n  </ce-component>\r\n</div>\r\n````\r\nAgain the first time the elements are rendered in the `v-for` loop everything is fine, but all subsequent iterations are broken. The DOM elements provided via default slots are rendered correctly, but the DOM elements rendered by the web component itself are *completely* missing. It seems like Vue's template engine is somehow falsely tampering with the DOM tree rendered by the custom element itself, removing nodes that it is not aware of. And again this issue only happens sometimes for production builds! Super weird and unexpected... We never encountered these kind of issues with Vue 2.\r\n\r\nThis is a really baffling issue and I'm not sure what other kind of information to provide to help identify the root cause. Please let me know if I can provide any other details. We're still investigating and trying to find a trigger for this issue and will post updates here if we find anything new.\n\n### What is expected?\n\nCustom elements rendered in `v-for` loops are always rendered correctly.\n\n### What is actually happening?\n\nRandomly, some production builds will not render custom elements correctly.\n\n### System Info\n\n_No response_\n\n### Any additional comments?\n\n_No response_",
                "reactions": {
                    "url": "https://api.github.com/repos/vuejs/core/issues/6309/reactions",
                    "total_count": 1,
                    "+1": 1,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/vuejs/core/issues/6309/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/vuejs/core/issues/comments/1241209840",
                "html_url": "https://github.com/vuejs/core/issues/6309#issuecomment-1241209840",
                "issue_url": "https://api.github.com/repos/vuejs/core/issues/6309",
                "id": 1241209840,
                "node_id": "IC_kwDOCCum185J-1vw",
                "user": {
                    "login": "einavk",
                    "id": 26688751,
                    "node_id": "MDQ6VXNlcjI2Njg4NzUx",
                    "avatar_url": "https://avatars.githubusercontent.com/u/26688751?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/einavk",
                    "html_url": "https://github.com/einavk",
                    "followers_url": "https://api.github.com/users/einavk/followers",
                    "following_url": "https://api.github.com/users/einavk/following{/other_user}",
                    "gists_url": "https://api.github.com/users/einavk/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/einavk/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/einavk/subscriptions",
                    "organizations_url": "https://api.github.com/users/einavk/orgs",
                    "repos_url": "https://api.github.com/users/einavk/repos",
                    "events_url": "https://api.github.com/users/einavk/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/einavk/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2022-09-08T20:38:47Z",
                "updated_at": "2022-09-08T20:38:47Z",
                "author_association": "NONE",
                "body": "@micheal-parks this is very similar to what we've done, except we bind some randomly generated string to data-id.",
                "reactions": {
                    "url": "https://api.github.com/repos/vuejs/core/issues/comments/1241209840/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2022-09-08T20:38:48Z",
        "org": {
            "id": 6128107,
            "login": "vuejs",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/vuejs",
            "avatar_url": "https://avatars.githubusercontent.com/u/6128107?"
        }
    },
    {
        "id": "23872552775",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 26688751,
            "login": "einavk",
            "display_login": "einavk",
            "gravatar_id": "",
            "url": "https://api.github.com/users/einavk",
            "avatar_url": "https://avatars.githubusercontent.com/u/26688751?"
        },
        "repo": {
            "id": 137078487,
            "name": "vuejs/core",
            "url": "https://api.github.com/repos/vuejs/core"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/vuejs/core/issues/6309",
                "repository_url": "https://api.github.com/repos/vuejs/core",
                "labels_url": "https://api.github.com/repos/vuejs/core/issues/6309/labels{/name}",
                "comments_url": "https://api.github.com/repos/vuejs/core/issues/6309/comments",
                "events_url": "https://api.github.com/repos/vuejs/core/issues/6309/events",
                "html_url": "https://github.com/vuejs/core/issues/6309",
                "id": 1309583487,
                "node_id": "I_kwDOCCum185ODqh_",
                "number": 6309,
                "title": "Custom elements sometimes not rendered correctly inside a v-for loop",
                "user": {
                    "login": "simonvizzini",
                    "id": 10862380,
                    "node_id": "MDQ6VXNlcjEwODYyMzgw",
                    "avatar_url": "https://avatars.githubusercontent.com/u/10862380?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/simonvizzini",
                    "html_url": "https://github.com/simonvizzini",
                    "followers_url": "https://api.github.com/users/simonvizzini/followers",
                    "following_url": "https://api.github.com/users/simonvizzini/following{/other_user}",
                    "gists_url": "https://api.github.com/users/simonvizzini/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/simonvizzini/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/simonvizzini/subscriptions",
                    "organizations_url": "https://api.github.com/users/simonvizzini/orgs",
                    "repos_url": "https://api.github.com/users/simonvizzini/repos",
                    "events_url": "https://api.github.com/users/simonvizzini/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/simonvizzini/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 2,
                "created_at": "2022-07-19T14:10:33Z",
                "updated_at": "2022-09-07T15:56:59Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "### Vue version\n\n3.2.26\n\n### Link to minimal reproduction\n\nhttps://really-sorry-but-no-repro-available.com\n\n### Steps to reproduce\n\nUnfortunately we're not able to reproduce this issue in a minimal reproduction example, but I'll try to explain our findings as detailed as possible and maybe some other users who encountered the same issue will be able to provide additional details. I'll also add more details if we encounter any new findings.\r\n\r\nWe've recently migrated our Vue2 application to Vue3. Our app relies heavily on 3rd party web components and we encountered a major issue related to rendering of custom elements inside `v-for` loops. Sometimes, but not always, the first custom element is rendered correctly while all subsequent custom elements are rendered in a \"broken\" state. What's super strange is that this issue seems to be somehow triggered at build time, because some builds are working totally fine while other builds, which may contain only minor, unrelated code changes, suddenly exhibit this problem. We couldn't find a pattern how to trigger this issue, but the issue appears maybe 1 out of 4 times when we build & deploy our application. For local builds in development mode this issue never happened, so it seems only production builds are affected. My uneducated guess is that maybe cosmic rays are affecting the Vue template compiler at build time... :)\r\n\r\nWe've encountered this issue in two of our templates so far that render custom elements in a `v-for` loop:\r\n\r\n1. In the first instance we're rendering a simple icon component as custom element, like this: `<wb-icon name=\"checkbox\"></wb-icon>`. Nothing fancy, no slots, just a name attribute to specify which icon should be rendered. But when the issue happens only the very first icon rendered in the v-for loop (`index === 0`) will have the `name` attribute rendered, while all other `wb-icon` elements have it missing. We were able to workaround this issue by using the new explicit `attr` modifier of the `v-bind` directive, like so: `<wb-icon :name.attr=\"'checkbox'\"><wb-icon>`\r\n2. The second instance is a bit more complicated and interesting. The web component in question is a web component developed with Stencil *without* shadow DOM (due to legacy reasons). This component provides a couple of child components, some with default slots. Just to illustrate the template structure, it looks similar to this:\r\n````\r\n<div v-for=\"item in items\" :key=\"item.id\" class=\"item-wrapper\">\r\n  <ce-component> <!-- provides default slot -->\r\n     <div class=\"container\">\r\n       <ce-component-child-one> <!-- provides default slot -->\r\n         <div>.....</div>\r\n       </ce-component-child-one>\r\n       <ce-component-child-two /> <!-- standalone component, no slot -->\r\n     </div>\r\n  </ce-component>\r\n</div>\r\n````\r\nAgain the first time the elements are rendered in the `v-for` loop everything is fine, but all subsequent iterations are broken. The DOM elements provided via default slots are rendered correctly, but the DOM elements rendered by the web component itself are *completely* missing. It seems like Vue's template engine is somehow falsely tampering with the DOM tree rendered by the custom element itself, removing nodes that it is not aware of. And again this issue only happens sometimes for production builds! Super weird and unexpected... We never encountered these kind of issues with Vue 2.\r\n\r\nThis is a really baffling issue and I'm not sure what other kind of information to provide to help identify the root cause. Please let me know if I can provide any other details. We're still investigating and trying to find a trigger for this issue and will post updates here if we find anything new.\n\n### What is expected?\n\nCustom elements rendered in `v-for` loops are always rendered correctly.\n\n### What is actually happening?\n\nRandomly, some production builds will not render custom elements correctly.\n\n### System Info\n\n_No response_\n\n### Any additional comments?\n\n_No response_",
                "reactions": {
                    "url": "https://api.github.com/repos/vuejs/core/issues/6309/reactions",
                    "total_count": 1,
                    "+1": 1,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/vuejs/core/issues/6309/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/vuejs/core/issues/comments/1239583251",
                "html_url": "https://github.com/vuejs/core/issues/6309#issuecomment-1239583251",
                "issue_url": "https://api.github.com/repos/vuejs/core/issues/6309",
                "id": 1239583251,
                "node_id": "IC_kwDOCCum185J4ooT",
                "user": {
                    "login": "einavk",
                    "id": 26688751,
                    "node_id": "MDQ6VXNlcjI2Njg4NzUx",
                    "avatar_url": "https://avatars.githubusercontent.com/u/26688751?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/einavk",
                    "html_url": "https://github.com/einavk",
                    "followers_url": "https://api.github.com/users/einavk/followers",
                    "following_url": "https://api.github.com/users/einavk/following{/other_user}",
                    "gists_url": "https://api.github.com/users/einavk/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/einavk/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/einavk/subscriptions",
                    "organizations_url": "https://api.github.com/users/einavk/orgs",
                    "repos_url": "https://api.github.com/users/einavk/repos",
                    "events_url": "https://api.github.com/users/einavk/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/einavk/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2022-09-07T15:56:59Z",
                "updated_at": "2022-09-07T15:56:59Z",
                "author_association": "NONE",
                "body": "@micheal-parks I agree that it seems the props are not passed to custom element. Does this happen with custom elements that have vue binded props as well? ",
                "reactions": {
                    "url": "https://api.github.com/repos/vuejs/core/issues/comments/1239583251/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2022-09-07T15:56:59Z",
        "org": {
            "id": 6128107,
            "login": "vuejs",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/vuejs",
            "avatar_url": "https://avatars.githubusercontent.com/u/6128107?"
        }
    },
    {
        "id": "23609506469",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 26688751,
            "login": "einavk",
            "display_login": "einavk",
            "gravatar_id": "",
            "url": "https://api.github.com/users/einavk",
            "avatar_url": "https://avatars.githubusercontent.com/u/26688751?"
        },
        "repo": {
            "id": 137078487,
            "name": "vuejs/core",
            "url": "https://api.github.com/repos/vuejs/core"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/vuejs/core/issues/6309",
                "repository_url": "https://api.github.com/repos/vuejs/core",
                "labels_url": "https://api.github.com/repos/vuejs/core/issues/6309/labels{/name}",
                "comments_url": "https://api.github.com/repos/vuejs/core/issues/6309/comments",
                "events_url": "https://api.github.com/repos/vuejs/core/issues/6309/events",
                "html_url": "https://github.com/vuejs/core/issues/6309",
                "id": 1309583487,
                "node_id": "I_kwDOCCum185ODqh_",
                "number": 6309,
                "title": "Custom elements sometimes not rendered correctly inside a v-for loop",
                "user": {
                    "login": "simonvizzini",
                    "id": 10862380,
                    "node_id": "MDQ6VXNlcjEwODYyMzgw",
                    "avatar_url": "https://avatars.githubusercontent.com/u/10862380?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/simonvizzini",
                    "html_url": "https://github.com/simonvizzini",
                    "followers_url": "https://api.github.com/users/simonvizzini/followers",
                    "following_url": "https://api.github.com/users/simonvizzini/following{/other_user}",
                    "gists_url": "https://api.github.com/users/simonvizzini/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/simonvizzini/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/simonvizzini/subscriptions",
                    "organizations_url": "https://api.github.com/users/simonvizzini/orgs",
                    "repos_url": "https://api.github.com/users/simonvizzini/repos",
                    "events_url": "https://api.github.com/users/simonvizzini/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/simonvizzini/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 1,
                "created_at": "2022-07-19T14:10:33Z",
                "updated_at": "2022-08-24T11:09:45Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "### Vue version\n\n3.2.26\n\n### Link to minimal reproduction\n\nhttps://really-sorry-but-no-repro-available.com\n\n### Steps to reproduce\n\nUnfortunately we're not able to reproduce this issue in a minimal reproduction example, but I'll try to explain our findings as detailed as possible and maybe some other users who encountered the same issue will be able to provide additional details. I'll also add more details if we encounter any new findings.\r\n\r\nWe've recently migrated our Vue2 application to Vue3. Our app relies heavily on 3rd party web components and we encountered a major issue related to rendering of custom elements inside `v-for` loops. Sometimes, but not always, the first custom element is rendered correctly while all subsequent custom elements are rendered in a \"broken\" state. What's super strange is that this issue seems to be somehow triggered at build time, because some builds are working totally fine while other builds, which may contain only minor, unrelated code changes, suddenly exhibit this problem. We couldn't find a pattern how to trigger this issue, but the issue appears maybe 1 out of 4 times when we build & deploy our application. For local builds in development mode this issue never happened, so it seems only production builds are affected. My uneducated guess is that maybe cosmic rays are affecting the Vue template compiler at build time... :)\r\n\r\nWe've encountered this issue in two of our templates so far that render custom elements in a `v-for` loop:\r\n\r\n1. In the first instance we're rendering a simple icon component as custom element, like this: `<wb-icon name=\"checkbox\"></wb-icon>`. Nothing fancy, no slots, just a name attribute to specify which icon should be rendered. But when the issue happens only the very first icon rendered in the v-for loop (`index === 0`) will have the `name` attribute rendered, while all other `wb-icon` elements have it missing. We were able to workaround this issue by using the new explicit `attr` modifier of the `v-bind` directive, like so: `<wb-icon :name.attr=\"'checkbox'\"><wb-icon>`\r\n2. The second instance is a bit more complicated and interesting. The web component in question is a web component developed with Stencil *without* shadow DOM (due to legacy reasons). This component provides a couple of child components, some with default slots. Just to illustrate the template structure, it looks similar to this:\r\n````\r\n<div v-for=\"item in items\" :key=\"item.id\" class=\"item-wrapper\">\r\n  <ce-component> <!-- provides default slot -->\r\n     <div class=\"container\">\r\n       <ce-component-child-one> <!-- provides default slot -->\r\n         <div>.....</div>\r\n       </ce-component-child-one>\r\n       <ce-component-child-two /> <!-- standalone component, no slot -->\r\n     </div>\r\n  </ce-component>\r\n</div>\r\n````\r\nAgain the first time the elements are rendered in the `v-for` loop everything is fine, but all subsequent iterations are broken. The DOM elements provided via default slots are rendered correctly, but the DOM elements rendered by the web component itself are *completely* missing. It seems like Vue's template engine is somehow falsely tampering with the DOM tree rendered by the custom element itself, removing nodes that it is not aware of. And again this issue only happens sometimes for production builds! Super weird and unexpected... We never encountered these kind of issues with Vue 2.\r\n\r\nThis is a really baffling issue and I'm not sure what other kind of information to provide to help identify the root cause. Please let me know if I can provide any other details. We're still investigating and trying to find a trigger for this issue and will post updates here if we find anything new.\n\n### What is expected?\n\nCustom elements rendered in `v-for` loops are always rendered correctly.\n\n### What is actually happening?\n\nRandomly, some production builds will not render custom elements correctly.\n\n### System Info\n\n_No response_\n\n### Any additional comments?\n\n_No response_",
                "reactions": {
                    "url": "https://api.github.com/repos/vuejs/core/issues/6309/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/vuejs/core/issues/6309/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/vuejs/core/issues/comments/1225574283",
                "html_url": "https://github.com/vuejs/core/issues/6309#issuecomment-1225574283",
                "issue_url": "https://api.github.com/repos/vuejs/core/issues/6309",
                "id": 1225574283,
                "node_id": "IC_kwDOCCum185JDMeL",
                "user": {
                    "login": "einavk",
                    "id": 26688751,
                    "node_id": "MDQ6VXNlcjI2Njg4NzUx",
                    "avatar_url": "https://avatars.githubusercontent.com/u/26688751?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/einavk",
                    "html_url": "https://github.com/einavk",
                    "followers_url": "https://api.github.com/users/einavk/followers",
                    "following_url": "https://api.github.com/users/einavk/following{/other_user}",
                    "gists_url": "https://api.github.com/users/einavk/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/einavk/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/einavk/subscriptions",
                    "organizations_url": "https://api.github.com/users/einavk/orgs",
                    "repos_url": "https://api.github.com/users/einavk/repos",
                    "events_url": "https://api.github.com/users/einavk/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/einavk/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2022-08-24T11:09:45Z",
                "updated_at": "2022-08-24T11:09:45Z",
                "author_association": "NONE",
                "body": "Hi,\r\nI'm having similar issue - custom elements who repeat themselves - the first one is ok and rest are broken. Also - only happens on global.prod.min and not on dev env.\r\nHowever, in my case, it is not related to v-for at all.\r\nI noticed that the \"broken\" custom elements are my \"static\" elements, and not those who have some vue binding.\r\nfor example, I have this one which gets broken:\r\n```\r\n<my-button\r\n                    class=\"magic-button\"\r\n                    type=\"secondary\"\r\n                    size=\"small\"\r\n                    icon=\"more-actions\"\r\n                ></my-button> \r\n```\r\nIt is a simple button, with an icon, created using latest lit element and based on a native <button>\r\nIf I add to the template an identifier, such as:\r\n```\r\n<my-button\r\n                    class=\"magic-button\"\r\n                    type=\"secondary\"\r\n                    size=\"small\"\r\n                    icon=\"more-actions\"\r\n                    :data-id=\"`btn_${id}`\"\r\n                ></my-button> \r\n```\r\nThe web component rendered in the browser is not broken anymore.\r\n@simonvizzini - have you tried something like that? ",
                "reactions": {
                    "url": "https://api.github.com/repos/vuejs/core/issues/comments/1225574283/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2022-08-24T11:09:45Z",
        "org": {
            "id": 6128107,
            "login": "vuejs",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/vuejs",
            "avatar_url": "https://avatars.githubusercontent.com/u/6128107?"
        }
    },
    {
        "id": "23902948309",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 26688751,
            "login": "einavk",
            "display_login": "einavk",
            "gravatar_id": "",
            "url": "https://api.github.com/users/einavk",
            "avatar_url": "https://avatars.githubusercontent.com/u/26688751?"
        },
        "repo": {
            "id": 137078487,
            "name": "vuejs/core",
            "url": "https://api.github.com/repos/vuejs/core"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/vuejs/core/issues/6309",
                "repository_url": "https://api.github.com/repos/vuejs/core",
                "labels_url": "https://api.github.com/repos/vuejs/core/issues/6309/labels{/name}",
                "comments_url": "https://api.github.com/repos/vuejs/core/issues/6309/comments",
                "events_url": "https://api.github.com/repos/vuejs/core/issues/6309/events",
                "html_url": "https://github.com/vuejs/core/issues/6309",
                "id": 1309583487,
                "node_id": "I_kwDOCCum185ODqh_",
                "number": 6309,
                "title": "Custom elements sometimes not rendered correctly inside a v-for loop",
                "user": {
                    "login": "simonvizzini",
                    "id": 10862380,
                    "node_id": "MDQ6VXNlcjEwODYyMzgw",
                    "avatar_url": "https://avatars.githubusercontent.com/u/10862380?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/simonvizzini",
                    "html_url": "https://github.com/simonvizzini",
                    "followers_url": "https://api.github.com/users/simonvizzini/followers",
                    "following_url": "https://api.github.com/users/simonvizzini/following{/other_user}",
                    "gists_url": "https://api.github.com/users/simonvizzini/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/simonvizzini/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/simonvizzini/subscriptions",
                    "organizations_url": "https://api.github.com/users/simonvizzini/orgs",
                    "repos_url": "https://api.github.com/users/simonvizzini/repos",
                    "events_url": "https://api.github.com/users/simonvizzini/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/simonvizzini/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 6,
                "created_at": "2022-07-19T14:10:33Z",
                "updated_at": "2022-09-08T20:38:47Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "### Vue version\n\n3.2.26\n\n### Link to minimal reproduction\n\nhttps://really-sorry-but-no-repro-available.com\n\n### Steps to reproduce\n\nUnfortunately we're not able to reproduce this issue in a minimal reproduction example, but I'll try to explain our findings as detailed as possible and maybe some other users who encountered the same issue will be able to provide additional details. I'll also add more details if we encounter any new findings.\r\n\r\nWe've recently migrated our Vue2 application to Vue3. Our app relies heavily on 3rd party web components and we encountered a major issue related to rendering of custom elements inside `v-for` loops. Sometimes, but not always, the first custom element is rendered correctly while all subsequent custom elements are rendered in a \"broken\" state. What's super strange is that this issue seems to be somehow triggered at build time, because some builds are working totally fine while other builds, which may contain only minor, unrelated code changes, suddenly exhibit this problem. We couldn't find a pattern how to trigger this issue, but the issue appears maybe 1 out of 4 times when we build & deploy our application. For local builds in development mode this issue never happened, so it seems only production builds are affected. My uneducated guess is that maybe cosmic rays are affecting the Vue template compiler at build time... :)\r\n\r\nWe've encountered this issue in two of our templates so far that render custom elements in a `v-for` loop:\r\n\r\n1. In the first instance we're rendering a simple icon component as custom element, like this: `<wb-icon name=\"checkbox\"></wb-icon>`. Nothing fancy, no slots, just a name attribute to specify which icon should be rendered. But when the issue happens only the very first icon rendered in the v-for loop (`index === 0`) will have the `name` attribute rendered, while all other `wb-icon` elements have it missing. We were able to workaround this issue by using the new explicit `attr` modifier of the `v-bind` directive, like so: `<wb-icon :name.attr=\"'checkbox'\"><wb-icon>`\r\n2. The second instance is a bit more complicated and interesting. The web component in question is a web component developed with Stencil *without* shadow DOM (due to legacy reasons). This component provides a couple of child components, some with default slots. Just to illustrate the template structure, it looks similar to this:\r\n````\r\n<div v-for=\"item in items\" :key=\"item.id\" class=\"item-wrapper\">\r\n  <ce-component> <!-- provides default slot -->\r\n     <div class=\"container\">\r\n       <ce-component-child-one> <!-- provides default slot -->\r\n         <div>.....</div>\r\n       </ce-component-child-one>\r\n       <ce-component-child-two /> <!-- standalone component, no slot -->\r\n     </div>\r\n  </ce-component>\r\n</div>\r\n````\r\nAgain the first time the elements are rendered in the `v-for` loop everything is fine, but all subsequent iterations are broken. The DOM elements provided via default slots are rendered correctly, but the DOM elements rendered by the web component itself are *completely* missing. It seems like Vue's template engine is somehow falsely tampering with the DOM tree rendered by the custom element itself, removing nodes that it is not aware of. And again this issue only happens sometimes for production builds! Super weird and unexpected... We never encountered these kind of issues with Vue 2.\r\n\r\nThis is a really baffling issue and I'm not sure what other kind of information to provide to help identify the root cause. Please let me know if I can provide any other details. We're still investigating and trying to find a trigger for this issue and will post updates here if we find anything new.\n\n### What is expected?\n\nCustom elements rendered in `v-for` loops are always rendered correctly.\n\n### What is actually happening?\n\nRandomly, some production builds will not render custom elements correctly.\n\n### System Info\n\n_No response_\n\n### Any additional comments?\n\n_No response_",
                "reactions": {
                    "url": "https://api.github.com/repos/vuejs/core/issues/6309/reactions",
                    "total_count": 1,
                    "+1": 1,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/vuejs/core/issues/6309/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/vuejs/core/issues/comments/1241209840",
                "html_url": "https://github.com/vuejs/core/issues/6309#issuecomment-1241209840",
                "issue_url": "https://api.github.com/repos/vuejs/core/issues/6309",
                "id": 1241209840,
                "node_id": "IC_kwDOCCum185J-1vw",
                "user": {
                    "login": "einavk",
                    "id": 26688751,
                    "node_id": "MDQ6VXNlcjI2Njg4NzUx",
                    "avatar_url": "https://avatars.githubusercontent.com/u/26688751?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/einavk",
                    "html_url": "https://github.com/einavk",
                    "followers_url": "https://api.github.com/users/einavk/followers",
                    "following_url": "https://api.github.com/users/einavk/following{/other_user}",
                    "gists_url": "https://api.github.com/users/einavk/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/einavk/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/einavk/subscriptions",
                    "organizations_url": "https://api.github.com/users/einavk/orgs",
                    "repos_url": "https://api.github.com/users/einavk/repos",
                    "events_url": "https://api.github.com/users/einavk/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/einavk/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2022-09-08T20:38:47Z",
                "updated_at": "2022-09-08T20:38:47Z",
                "author_association": "NONE",
                "body": "@micheal-parks this is very similar to what we've done, except we bind some randomly generated string to data-id.",
                "reactions": {
                    "url": "https://api.github.com/repos/vuejs/core/issues/comments/1241209840/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2022-09-08T20:38:48Z",
        "org": {
            "id": 6128107,
            "login": "vuejs",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/vuejs",
            "avatar_url": "https://avatars.githubusercontent.com/u/6128107?"
        }
    },
    {
        "id": "23872552775",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 26688751,
            "login": "einavk",
            "display_login": "einavk",
            "gravatar_id": "",
            "url": "https://api.github.com/users/einavk",
            "avatar_url": "https://avatars.githubusercontent.com/u/26688751?"
        },
        "repo": {
            "id": 137078487,
            "name": "vuejs/core",
            "url": "https://api.github.com/repos/vuejs/core"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/vuejs/core/issues/6309",
                "repository_url": "https://api.github.com/repos/vuejs/core",
                "labels_url": "https://api.github.com/repos/vuejs/core/issues/6309/labels{/name}",
                "comments_url": "https://api.github.com/repos/vuejs/core/issues/6309/comments",
                "events_url": "https://api.github.com/repos/vuejs/core/issues/6309/events",
                "html_url": "https://github.com/vuejs/core/issues/6309",
                "id": 1309583487,
                "node_id": "I_kwDOCCum185ODqh_",
                "number": 6309,
                "title": "Custom elements sometimes not rendered correctly inside a v-for loop",
                "user": {
                    "login": "simonvizzini",
                    "id": 10862380,
                    "node_id": "MDQ6VXNlcjEwODYyMzgw",
                    "avatar_url": "https://avatars.githubusercontent.com/u/10862380?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/simonvizzini",
                    "html_url": "https://github.com/simonvizzini",
                    "followers_url": "https://api.github.com/users/simonvizzini/followers",
                    "following_url": "https://api.github.com/users/simonvizzini/following{/other_user}",
                    "gists_url": "https://api.github.com/users/simonvizzini/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/simonvizzini/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/simonvizzini/subscriptions",
                    "organizations_url": "https://api.github.com/users/simonvizzini/orgs",
                    "repos_url": "https://api.github.com/users/simonvizzini/repos",
                    "events_url": "https://api.github.com/users/simonvizzini/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/simonvizzini/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 2,
                "created_at": "2022-07-19T14:10:33Z",
                "updated_at": "2022-09-07T15:56:59Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "### Vue version\n\n3.2.26\n\n### Link to minimal reproduction\n\nhttps://really-sorry-but-no-repro-available.com\n\n### Steps to reproduce\n\nUnfortunately we're not able to reproduce this issue in a minimal reproduction example, but I'll try to explain our findings as detailed as possible and maybe some other users who encountered the same issue will be able to provide additional details. I'll also add more details if we encounter any new findings.\r\n\r\nWe've recently migrated our Vue2 application to Vue3. Our app relies heavily on 3rd party web components and we encountered a major issue related to rendering of custom elements inside `v-for` loops. Sometimes, but not always, the first custom element is rendered correctly while all subsequent custom elements are rendered in a \"broken\" state. What's super strange is that this issue seems to be somehow triggered at build time, because some builds are working totally fine while other builds, which may contain only minor, unrelated code changes, suddenly exhibit this problem. We couldn't find a pattern how to trigger this issue, but the issue appears maybe 1 out of 4 times when we build & deploy our application. For local builds in development mode this issue never happened, so it seems only production builds are affected. My uneducated guess is that maybe cosmic rays are affecting the Vue template compiler at build time... :)\r\n\r\nWe've encountered this issue in two of our templates so far that render custom elements in a `v-for` loop:\r\n\r\n1. In the first instance we're rendering a simple icon component as custom element, like this: `<wb-icon name=\"checkbox\"></wb-icon>`. Nothing fancy, no slots, just a name attribute to specify which icon should be rendered. But when the issue happens only the very first icon rendered in the v-for loop (`index === 0`) will have the `name` attribute rendered, while all other `wb-icon` elements have it missing. We were able to workaround this issue by using the new explicit `attr` modifier of the `v-bind` directive, like so: `<wb-icon :name.attr=\"'checkbox'\"><wb-icon>`\r\n2. The second instance is a bit more complicated and interesting. The web component in question is a web component developed with Stencil *without* shadow DOM (due to legacy reasons). This component provides a couple of child components, some with default slots. Just to illustrate the template structure, it looks similar to this:\r\n````\r\n<div v-for=\"item in items\" :key=\"item.id\" class=\"item-wrapper\">\r\n  <ce-component> <!-- provides default slot -->\r\n     <div class=\"container\">\r\n       <ce-component-child-one> <!-- provides default slot -->\r\n         <div>.....</div>\r\n       </ce-component-child-one>\r\n       <ce-component-child-two /> <!-- standalone component, no slot -->\r\n     </div>\r\n  </ce-component>\r\n</div>\r\n````\r\nAgain the first time the elements are rendered in the `v-for` loop everything is fine, but all subsequent iterations are broken. The DOM elements provided via default slots are rendered correctly, but the DOM elements rendered by the web component itself are *completely* missing. It seems like Vue's template engine is somehow falsely tampering with the DOM tree rendered by the custom element itself, removing nodes that it is not aware of. And again this issue only happens sometimes for production builds! Super weird and unexpected... We never encountered these kind of issues with Vue 2.\r\n\r\nThis is a really baffling issue and I'm not sure what other kind of information to provide to help identify the root cause. Please let me know if I can provide any other details. We're still investigating and trying to find a trigger for this issue and will post updates here if we find anything new.\n\n### What is expected?\n\nCustom elements rendered in `v-for` loops are always rendered correctly.\n\n### What is actually happening?\n\nRandomly, some production builds will not render custom elements correctly.\n\n### System Info\n\n_No response_\n\n### Any additional comments?\n\n_No response_",
                "reactions": {
                    "url": "https://api.github.com/repos/vuejs/core/issues/6309/reactions",
                    "total_count": 1,
                    "+1": 1,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/vuejs/core/issues/6309/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/vuejs/core/issues/comments/1239583251",
                "html_url": "https://github.com/vuejs/core/issues/6309#issuecomment-1239583251",
                "issue_url": "https://api.github.com/repos/vuejs/core/issues/6309",
                "id": 1239583251,
                "node_id": "IC_kwDOCCum185J4ooT",
                "user": {
                    "login": "einavk",
                    "id": 26688751,
                    "node_id": "MDQ6VXNlcjI2Njg4NzUx",
                    "avatar_url": "https://avatars.githubusercontent.com/u/26688751?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/einavk",
                    "html_url": "https://github.com/einavk",
                    "followers_url": "https://api.github.com/users/einavk/followers",
                    "following_url": "https://api.github.com/users/einavk/following{/other_user}",
                    "gists_url": "https://api.github.com/users/einavk/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/einavk/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/einavk/subscriptions",
                    "organizations_url": "https://api.github.com/users/einavk/orgs",
                    "repos_url": "https://api.github.com/users/einavk/repos",
                    "events_url": "https://api.github.com/users/einavk/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/einavk/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2022-09-07T15:56:59Z",
                "updated_at": "2022-09-07T15:56:59Z",
                "author_association": "NONE",
                "body": "@micheal-parks I agree that it seems the props are not passed to custom element. Does this happen with custom elements that have vue binded props as well? ",
                "reactions": {
                    "url": "https://api.github.com/repos/vuejs/core/issues/comments/1239583251/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2022-09-07T15:56:59Z",
        "org": {
            "id": 6128107,
            "login": "vuejs",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/vuejs",
            "avatar_url": "https://avatars.githubusercontent.com/u/6128107?"
        }
    },
    {
        "id": "23609506469",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 26688751,
            "login": "einavk",
            "display_login": "einavk",
            "gravatar_id": "",
            "url": "https://api.github.com/users/einavk",
            "avatar_url": "https://avatars.githubusercontent.com/u/26688751?"
        },
        "repo": {
            "id": 137078487,
            "name": "vuejs/core",
            "url": "https://api.github.com/repos/vuejs/core"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/vuejs/core/issues/6309",
                "repository_url": "https://api.github.com/repos/vuejs/core",
                "labels_url": "https://api.github.com/repos/vuejs/core/issues/6309/labels{/name}",
                "comments_url": "https://api.github.com/repos/vuejs/core/issues/6309/comments",
                "events_url": "https://api.github.com/repos/vuejs/core/issues/6309/events",
                "html_url": "https://github.com/vuejs/core/issues/6309",
                "id": 1309583487,
                "node_id": "I_kwDOCCum185ODqh_",
                "number": 6309,
                "title": "Custom elements sometimes not rendered correctly inside a v-for loop",
                "user": {
                    "login": "simonvizzini",
                    "id": 10862380,
                    "node_id": "MDQ6VXNlcjEwODYyMzgw",
                    "avatar_url": "https://avatars.githubusercontent.com/u/10862380?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/simonvizzini",
                    "html_url": "https://github.com/simonvizzini",
                    "followers_url": "https://api.github.com/users/simonvizzini/followers",
                    "following_url": "https://api.github.com/users/simonvizzini/following{/other_user}",
                    "gists_url": "https://api.github.com/users/simonvizzini/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/simonvizzini/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/simonvizzini/subscriptions",
                    "organizations_url": "https://api.github.com/users/simonvizzini/orgs",
                    "repos_url": "https://api.github.com/users/simonvizzini/repos",
                    "events_url": "https://api.github.com/users/simonvizzini/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/simonvizzini/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 1,
                "created_at": "2022-07-19T14:10:33Z",
                "updated_at": "2022-08-24T11:09:45Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "### Vue version\n\n3.2.26\n\n### Link to minimal reproduction\n\nhttps://really-sorry-but-no-repro-available.com\n\n### Steps to reproduce\n\nUnfortunately we're not able to reproduce this issue in a minimal reproduction example, but I'll try to explain our findings as detailed as possible and maybe some other users who encountered the same issue will be able to provide additional details. I'll also add more details if we encounter any new findings.\r\n\r\nWe've recently migrated our Vue2 application to Vue3. Our app relies heavily on 3rd party web components and we encountered a major issue related to rendering of custom elements inside `v-for` loops. Sometimes, but not always, the first custom element is rendered correctly while all subsequent custom elements are rendered in a \"broken\" state. What's super strange is that this issue seems to be somehow triggered at build time, because some builds are working totally fine while other builds, which may contain only minor, unrelated code changes, suddenly exhibit this problem. We couldn't find a pattern how to trigger this issue, but the issue appears maybe 1 out of 4 times when we build & deploy our application. For local builds in development mode this issue never happened, so it seems only production builds are affected. My uneducated guess is that maybe cosmic rays are affecting the Vue template compiler at build time... :)\r\n\r\nWe've encountered this issue in two of our templates so far that render custom elements in a `v-for` loop:\r\n\r\n1. In the first instance we're rendering a simple icon component as custom element, like this: `<wb-icon name=\"checkbox\"></wb-icon>`. Nothing fancy, no slots, just a name attribute to specify which icon should be rendered. But when the issue happens only the very first icon rendered in the v-for loop (`index === 0`) will have the `name` attribute rendered, while all other `wb-icon` elements have it missing. We were able to workaround this issue by using the new explicit `attr` modifier of the `v-bind` directive, like so: `<wb-icon :name.attr=\"'checkbox'\"><wb-icon>`\r\n2. The second instance is a bit more complicated and interesting. The web component in question is a web component developed with Stencil *without* shadow DOM (due to legacy reasons). This component provides a couple of child components, some with default slots. Just to illustrate the template structure, it looks similar to this:\r\n````\r\n<div v-for=\"item in items\" :key=\"item.id\" class=\"item-wrapper\">\r\n  <ce-component> <!-- provides default slot -->\r\n     <div class=\"container\">\r\n       <ce-component-child-one> <!-- provides default slot -->\r\n         <div>.....</div>\r\n       </ce-component-child-one>\r\n       <ce-component-child-two /> <!-- standalone component, no slot -->\r\n     </div>\r\n  </ce-component>\r\n</div>\r\n````\r\nAgain the first time the elements are rendered in the `v-for` loop everything is fine, but all subsequent iterations are broken. The DOM elements provided via default slots are rendered correctly, but the DOM elements rendered by the web component itself are *completely* missing. It seems like Vue's template engine is somehow falsely tampering with the DOM tree rendered by the custom element itself, removing nodes that it is not aware of. And again this issue only happens sometimes for production builds! Super weird and unexpected... We never encountered these kind of issues with Vue 2.\r\n\r\nThis is a really baffling issue and I'm not sure what other kind of information to provide to help identify the root cause. Please let me know if I can provide any other details. We're still investigating and trying to find a trigger for this issue and will post updates here if we find anything new.\n\n### What is expected?\n\nCustom elements rendered in `v-for` loops are always rendered correctly.\n\n### What is actually happening?\n\nRandomly, some production builds will not render custom elements correctly.\n\n### System Info\n\n_No response_\n\n### Any additional comments?\n\n_No response_",
                "reactions": {
                    "url": "https://api.github.com/repos/vuejs/core/issues/6309/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/vuejs/core/issues/6309/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/vuejs/core/issues/comments/1225574283",
                "html_url": "https://github.com/vuejs/core/issues/6309#issuecomment-1225574283",
                "issue_url": "https://api.github.com/repos/vuejs/core/issues/6309",
                "id": 1225574283,
                "node_id": "IC_kwDOCCum185JDMeL",
                "user": {
                    "login": "einavk",
                    "id": 26688751,
                    "node_id": "MDQ6VXNlcjI2Njg4NzUx",
                    "avatar_url": "https://avatars.githubusercontent.com/u/26688751?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/einavk",
                    "html_url": "https://github.com/einavk",
                    "followers_url": "https://api.github.com/users/einavk/followers",
                    "following_url": "https://api.github.com/users/einavk/following{/other_user}",
                    "gists_url": "https://api.github.com/users/einavk/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/einavk/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/einavk/subscriptions",
                    "organizations_url": "https://api.github.com/users/einavk/orgs",
                    "repos_url": "https://api.github.com/users/einavk/repos",
                    "events_url": "https://api.github.com/users/einavk/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/einavk/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2022-08-24T11:09:45Z",
                "updated_at": "2022-08-24T11:09:45Z",
                "author_association": "NONE",
                "body": "Hi,\r\nI'm having similar issue - custom elements who repeat themselves - the first one is ok and rest are broken. Also - only happens on global.prod.min and not on dev env.\r\nHowever, in my case, it is not related to v-for at all.\r\nI noticed that the \"broken\" custom elements are my \"static\" elements, and not those who have some vue binding.\r\nfor example, I have this one which gets broken:\r\n```\r\n<my-button\r\n                    class=\"magic-button\"\r\n                    type=\"secondary\"\r\n                    size=\"small\"\r\n                    icon=\"more-actions\"\r\n                ></my-button> \r\n```\r\nIt is a simple button, with an icon, created using latest lit element and based on a native <button>\r\nIf I add to the template an identifier, such as:\r\n```\r\n<my-button\r\n                    class=\"magic-button\"\r\n                    type=\"secondary\"\r\n                    size=\"small\"\r\n                    icon=\"more-actions\"\r\n                    :data-id=\"`btn_${id}`\"\r\n                ></my-button> \r\n```\r\nThe web component rendered in the browser is not broken anymore.\r\n@simonvizzini - have you tried something like that? ",
                "reactions": {
                    "url": "https://api.github.com/repos/vuejs/core/issues/comments/1225574283/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2022-08-24T11:09:45Z",
        "org": {
            "id": 6128107,
            "login": "vuejs",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/vuejs",
            "avatar_url": "https://avatars.githubusercontent.com/u/6128107?"
        }
    },
    {
        "id": "23902948309",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 26688751,
            "login": "einavk",
            "display_login": "einavk",
            "gravatar_id": "",
            "url": "https://api.github.com/users/einavk",
            "avatar_url": "https://avatars.githubusercontent.com/u/26688751?"
        },
        "repo": {
            "id": 137078487,
            "name": "vuejs/core",
            "url": "https://api.github.com/repos/vuejs/core"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/vuejs/core/issues/6309",
                "repository_url": "https://api.github.com/repos/vuejs/core",
                "labels_url": "https://api.github.com/repos/vuejs/core/issues/6309/labels{/name}",
                "comments_url": "https://api.github.com/repos/vuejs/core/issues/6309/comments",
                "events_url": "https://api.github.com/repos/vuejs/core/issues/6309/events",
                "html_url": "https://github.com/vuejs/core/issues/6309",
                "id": 1309583487,
                "node_id": "I_kwDOCCum185ODqh_",
                "number": 6309,
                "title": "Custom elements sometimes not rendered correctly inside a v-for loop",
                "user": {
                    "login": "simonvizzini",
                    "id": 10862380,
                    "node_id": "MDQ6VXNlcjEwODYyMzgw",
                    "avatar_url": "https://avatars.githubusercontent.com/u/10862380?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/simonvizzini",
                    "html_url": "https://github.com/simonvizzini",
                    "followers_url": "https://api.github.com/users/simonvizzini/followers",
                    "following_url": "https://api.github.com/users/simonvizzini/following{/other_user}",
                    "gists_url": "https://api.github.com/users/simonvizzini/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/simonvizzini/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/simonvizzini/subscriptions",
                    "organizations_url": "https://api.github.com/users/simonvizzini/orgs",
                    "repos_url": "https://api.github.com/users/simonvizzini/repos",
                    "events_url": "https://api.github.com/users/simonvizzini/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/simonvizzini/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 6,
                "created_at": "2022-07-19T14:10:33Z",
                "updated_at": "2022-09-08T20:38:47Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "### Vue version\n\n3.2.26\n\n### Link to minimal reproduction\n\nhttps://really-sorry-but-no-repro-available.com\n\n### Steps to reproduce\n\nUnfortunately we're not able to reproduce this issue in a minimal reproduction example, but I'll try to explain our findings as detailed as possible and maybe some other users who encountered the same issue will be able to provide additional details. I'll also add more details if we encounter any new findings.\r\n\r\nWe've recently migrated our Vue2 application to Vue3. Our app relies heavily on 3rd party web components and we encountered a major issue related to rendering of custom elements inside `v-for` loops. Sometimes, but not always, the first custom element is rendered correctly while all subsequent custom elements are rendered in a \"broken\" state. What's super strange is that this issue seems to be somehow triggered at build time, because some builds are working totally fine while other builds, which may contain only minor, unrelated code changes, suddenly exhibit this problem. We couldn't find a pattern how to trigger this issue, but the issue appears maybe 1 out of 4 times when we build & deploy our application. For local builds in development mode this issue never happened, so it seems only production builds are affected. My uneducated guess is that maybe cosmic rays are affecting the Vue template compiler at build time... :)\r\n\r\nWe've encountered this issue in two of our templates so far that render custom elements in a `v-for` loop:\r\n\r\n1. In the first instance we're rendering a simple icon component as custom element, like this: `<wb-icon name=\"checkbox\"></wb-icon>`. Nothing fancy, no slots, just a name attribute to specify which icon should be rendered. But when the issue happens only the very first icon rendered in the v-for loop (`index === 0`) will have the `name` attribute rendered, while all other `wb-icon` elements have it missing. We were able to workaround this issue by using the new explicit `attr` modifier of the `v-bind` directive, like so: `<wb-icon :name.attr=\"'checkbox'\"><wb-icon>`\r\n2. The second instance is a bit more complicated and interesting. The web component in question is a web component developed with Stencil *without* shadow DOM (due to legacy reasons). This component provides a couple of child components, some with default slots. Just to illustrate the template structure, it looks similar to this:\r\n````\r\n<div v-for=\"item in items\" :key=\"item.id\" class=\"item-wrapper\">\r\n  <ce-component> <!-- provides default slot -->\r\n     <div class=\"container\">\r\n       <ce-component-child-one> <!-- provides default slot -->\r\n         <div>.....</div>\r\n       </ce-component-child-one>\r\n       <ce-component-child-two /> <!-- standalone component, no slot -->\r\n     </div>\r\n  </ce-component>\r\n</div>\r\n````\r\nAgain the first time the elements are rendered in the `v-for` loop everything is fine, but all subsequent iterations are broken. The DOM elements provided via default slots are rendered correctly, but the DOM elements rendered by the web component itself are *completely* missing. It seems like Vue's template engine is somehow falsely tampering with the DOM tree rendered by the custom element itself, removing nodes that it is not aware of. And again this issue only happens sometimes for production builds! Super weird and unexpected... We never encountered these kind of issues with Vue 2.\r\n\r\nThis is a really baffling issue and I'm not sure what other kind of information to provide to help identify the root cause. Please let me know if I can provide any other details. We're still investigating and trying to find a trigger for this issue and will post updates here if we find anything new.\n\n### What is expected?\n\nCustom elements rendered in `v-for` loops are always rendered correctly.\n\n### What is actually happening?\n\nRandomly, some production builds will not render custom elements correctly.\n\n### System Info\n\n_No response_\n\n### Any additional comments?\n\n_No response_",
                "reactions": {
                    "url": "https://api.github.com/repos/vuejs/core/issues/6309/reactions",
                    "total_count": 1,
                    "+1": 1,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/vuejs/core/issues/6309/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/vuejs/core/issues/comments/1241209840",
                "html_url": "https://github.com/vuejs/core/issues/6309#issuecomment-1241209840",
                "issue_url": "https://api.github.com/repos/vuejs/core/issues/6309",
                "id": 1241209840,
                "node_id": "IC_kwDOCCum185J-1vw",
                "user": {
                    "login": "einavk",
                    "id": 26688751,
                    "node_id": "MDQ6VXNlcjI2Njg4NzUx",
                    "avatar_url": "https://avatars.githubusercontent.com/u/26688751?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/einavk",
                    "html_url": "https://github.com/einavk",
                    "followers_url": "https://api.github.com/users/einavk/followers",
                    "following_url": "https://api.github.com/users/einavk/following{/other_user}",
                    "gists_url": "https://api.github.com/users/einavk/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/einavk/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/einavk/subscriptions",
                    "organizations_url": "https://api.github.com/users/einavk/orgs",
                    "repos_url": "https://api.github.com/users/einavk/repos",
                    "events_url": "https://api.github.com/users/einavk/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/einavk/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2022-09-08T20:38:47Z",
                "updated_at": "2022-09-08T20:38:47Z",
                "author_association": "NONE",
                "body": "@micheal-parks this is very similar to what we've done, except we bind some randomly generated string to data-id.",
                "reactions": {
                    "url": "https://api.github.com/repos/vuejs/core/issues/comments/1241209840/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2022-09-08T20:38:48Z",
        "org": {
            "id": 6128107,
            "login": "vuejs",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/vuejs",
            "avatar_url": "https://avatars.githubusercontent.com/u/6128107?"
        }
    },
    {
        "id": "23872552775",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 26688751,
            "login": "einavk",
            "display_login": "einavk",
            "gravatar_id": "",
            "url": "https://api.github.com/users/einavk",
            "avatar_url": "https://avatars.githubusercontent.com/u/26688751?"
        },
        "repo": {
            "id": 137078487,
            "name": "vuejs/core",
            "url": "https://api.github.com/repos/vuejs/core"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/vuejs/core/issues/6309",
                "repository_url": "https://api.github.com/repos/vuejs/core",
                "labels_url": "https://api.github.com/repos/vuejs/core/issues/6309/labels{/name}",
                "comments_url": "https://api.github.com/repos/vuejs/core/issues/6309/comments",
                "events_url": "https://api.github.com/repos/vuejs/core/issues/6309/events",
                "html_url": "https://github.com/vuejs/core/issues/6309",
                "id": 1309583487,
                "node_id": "I_kwDOCCum185ODqh_",
                "number": 6309,
                "title": "Custom elements sometimes not rendered correctly inside a v-for loop",
                "user": {
                    "login": "simonvizzini",
                    "id": 10862380,
                    "node_id": "MDQ6VXNlcjEwODYyMzgw",
                    "avatar_url": "https://avatars.githubusercontent.com/u/10862380?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/simonvizzini",
                    "html_url": "https://github.com/simonvizzini",
                    "followers_url": "https://api.github.com/users/simonvizzini/followers",
                    "following_url": "https://api.github.com/users/simonvizzini/following{/other_user}",
                    "gists_url": "https://api.github.com/users/simonvizzini/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/simonvizzini/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/simonvizzini/subscriptions",
                    "organizations_url": "https://api.github.com/users/simonvizzini/orgs",
                    "repos_url": "https://api.github.com/users/simonvizzini/repos",
                    "events_url": "https://api.github.com/users/simonvizzini/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/simonvizzini/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 2,
                "created_at": "2022-07-19T14:10:33Z",
                "updated_at": "2022-09-07T15:56:59Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "### Vue version\n\n3.2.26\n\n### Link to minimal reproduction\n\nhttps://really-sorry-but-no-repro-available.com\n\n### Steps to reproduce\n\nUnfortunately we're not able to reproduce this issue in a minimal reproduction example, but I'll try to explain our findings as detailed as possible and maybe some other users who encountered the same issue will be able to provide additional details. I'll also add more details if we encounter any new findings.\r\n\r\nWe've recently migrated our Vue2 application to Vue3. Our app relies heavily on 3rd party web components and we encountered a major issue related to rendering of custom elements inside `v-for` loops. Sometimes, but not always, the first custom element is rendered correctly while all subsequent custom elements are rendered in a \"broken\" state. What's super strange is that this issue seems to be somehow triggered at build time, because some builds are working totally fine while other builds, which may contain only minor, unrelated code changes, suddenly exhibit this problem. We couldn't find a pattern how to trigger this issue, but the issue appears maybe 1 out of 4 times when we build & deploy our application. For local builds in development mode this issue never happened, so it seems only production builds are affected. My uneducated guess is that maybe cosmic rays are affecting the Vue template compiler at build time... :)\r\n\r\nWe've encountered this issue in two of our templates so far that render custom elements in a `v-for` loop:\r\n\r\n1. In the first instance we're rendering a simple icon component as custom element, like this: `<wb-icon name=\"checkbox\"></wb-icon>`. Nothing fancy, no slots, just a name attribute to specify which icon should be rendered. But when the issue happens only the very first icon rendered in the v-for loop (`index === 0`) will have the `name` attribute rendered, while all other `wb-icon` elements have it missing. We were able to workaround this issue by using the new explicit `attr` modifier of the `v-bind` directive, like so: `<wb-icon :name.attr=\"'checkbox'\"><wb-icon>`\r\n2. The second instance is a bit more complicated and interesting. The web component in question is a web component developed with Stencil *without* shadow DOM (due to legacy reasons). This component provides a couple of child components, some with default slots. Just to illustrate the template structure, it looks similar to this:\r\n````\r\n<div v-for=\"item in items\" :key=\"item.id\" class=\"item-wrapper\">\r\n  <ce-component> <!-- provides default slot -->\r\n     <div class=\"container\">\r\n       <ce-component-child-one> <!-- provides default slot -->\r\n         <div>.....</div>\r\n       </ce-component-child-one>\r\n       <ce-component-child-two /> <!-- standalone component, no slot -->\r\n     </div>\r\n  </ce-component>\r\n</div>\r\n````\r\nAgain the first time the elements are rendered in the `v-for` loop everything is fine, but all subsequent iterations are broken. The DOM elements provided via default slots are rendered correctly, but the DOM elements rendered by the web component itself are *completely* missing. It seems like Vue's template engine is somehow falsely tampering with the DOM tree rendered by the custom element itself, removing nodes that it is not aware of. And again this issue only happens sometimes for production builds! Super weird and unexpected... We never encountered these kind of issues with Vue 2.\r\n\r\nThis is a really baffling issue and I'm not sure what other kind of information to provide to help identify the root cause. Please let me know if I can provide any other details. We're still investigating and trying to find a trigger for this issue and will post updates here if we find anything new.\n\n### What is expected?\n\nCustom elements rendered in `v-for` loops are always rendered correctly.\n\n### What is actually happening?\n\nRandomly, some production builds will not render custom elements correctly.\n\n### System Info\n\n_No response_\n\n### Any additional comments?\n\n_No response_",
                "reactions": {
                    "url": "https://api.github.com/repos/vuejs/core/issues/6309/reactions",
                    "total_count": 1,
                    "+1": 1,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/vuejs/core/issues/6309/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/vuejs/core/issues/comments/1239583251",
                "html_url": "https://github.com/vuejs/core/issues/6309#issuecomment-1239583251",
                "issue_url": "https://api.github.com/repos/vuejs/core/issues/6309",
                "id": 1239583251,
                "node_id": "IC_kwDOCCum185J4ooT",
                "user": {
                    "login": "einavk",
                    "id": 26688751,
                    "node_id": "MDQ6VXNlcjI2Njg4NzUx",
                    "avatar_url": "https://avatars.githubusercontent.com/u/26688751?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/einavk",
                    "html_url": "https://github.com/einavk",
                    "followers_url": "https://api.github.com/users/einavk/followers",
                    "following_url": "https://api.github.com/users/einavk/following{/other_user}",
                    "gists_url": "https://api.github.com/users/einavk/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/einavk/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/einavk/subscriptions",
                    "organizations_url": "https://api.github.com/users/einavk/orgs",
                    "repos_url": "https://api.github.com/users/einavk/repos",
                    "events_url": "https://api.github.com/users/einavk/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/einavk/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2022-09-07T15:56:59Z",
                "updated_at": "2022-09-07T15:56:59Z",
                "author_association": "NONE",
                "body": "@micheal-parks I agree that it seems the props are not passed to custom element. Does this happen with custom elements that have vue binded props as well? ",
                "reactions": {
                    "url": "https://api.github.com/repos/vuejs/core/issues/comments/1239583251/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2022-09-07T15:56:59Z",
        "org": {
            "id": 6128107,
            "login": "vuejs",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/vuejs",
            "avatar_url": "https://avatars.githubusercontent.com/u/6128107?"
        }
    },
    {
        "id": "23609506469",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 26688751,
            "login": "einavk",
            "display_login": "einavk",
            "gravatar_id": "",
            "url": "https://api.github.com/users/einavk",
            "avatar_url": "https://avatars.githubusercontent.com/u/26688751?"
        },
        "repo": {
            "id": 137078487,
            "name": "vuejs/core",
            "url": "https://api.github.com/repos/vuejs/core"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/vuejs/core/issues/6309",
                "repository_url": "https://api.github.com/repos/vuejs/core",
                "labels_url": "https://api.github.com/repos/vuejs/core/issues/6309/labels{/name}",
                "comments_url": "https://api.github.com/repos/vuejs/core/issues/6309/comments",
                "events_url": "https://api.github.com/repos/vuejs/core/issues/6309/events",
                "html_url": "https://github.com/vuejs/core/issues/6309",
                "id": 1309583487,
                "node_id": "I_kwDOCCum185ODqh_",
                "number": 6309,
                "title": "Custom elements sometimes not rendered correctly inside a v-for loop",
                "user": {
                    "login": "simonvizzini",
                    "id": 10862380,
                    "node_id": "MDQ6VXNlcjEwODYyMzgw",
                    "avatar_url": "https://avatars.githubusercontent.com/u/10862380?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/simonvizzini",
                    "html_url": "https://github.com/simonvizzini",
                    "followers_url": "https://api.github.com/users/simonvizzini/followers",
                    "following_url": "https://api.github.com/users/simonvizzini/following{/other_user}",
                    "gists_url": "https://api.github.com/users/simonvizzini/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/simonvizzini/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/simonvizzini/subscriptions",
                    "organizations_url": "https://api.github.com/users/simonvizzini/orgs",
                    "repos_url": "https://api.github.com/users/simonvizzini/repos",
                    "events_url": "https://api.github.com/users/simonvizzini/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/simonvizzini/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 1,
                "created_at": "2022-07-19T14:10:33Z",
                "updated_at": "2022-08-24T11:09:45Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "### Vue version\n\n3.2.26\n\n### Link to minimal reproduction\n\nhttps://really-sorry-but-no-repro-available.com\n\n### Steps to reproduce\n\nUnfortunately we're not able to reproduce this issue in a minimal reproduction example, but I'll try to explain our findings as detailed as possible and maybe some other users who encountered the same issue will be able to provide additional details. I'll also add more details if we encounter any new findings.\r\n\r\nWe've recently migrated our Vue2 application to Vue3. Our app relies heavily on 3rd party web components and we encountered a major issue related to rendering of custom elements inside `v-for` loops. Sometimes, but not always, the first custom element is rendered correctly while all subsequent custom elements are rendered in a \"broken\" state. What's super strange is that this issue seems to be somehow triggered at build time, because some builds are working totally fine while other builds, which may contain only minor, unrelated code changes, suddenly exhibit this problem. We couldn't find a pattern how to trigger this issue, but the issue appears maybe 1 out of 4 times when we build & deploy our application. For local builds in development mode this issue never happened, so it seems only production builds are affected. My uneducated guess is that maybe cosmic rays are affecting the Vue template compiler at build time... :)\r\n\r\nWe've encountered this issue in two of our templates so far that render custom elements in a `v-for` loop:\r\n\r\n1. In the first instance we're rendering a simple icon component as custom element, like this: `<wb-icon name=\"checkbox\"></wb-icon>`. Nothing fancy, no slots, just a name attribute to specify which icon should be rendered. But when the issue happens only the very first icon rendered in the v-for loop (`index === 0`) will have the `name` attribute rendered, while all other `wb-icon` elements have it missing. We were able to workaround this issue by using the new explicit `attr` modifier of the `v-bind` directive, like so: `<wb-icon :name.attr=\"'checkbox'\"><wb-icon>`\r\n2. The second instance is a bit more complicated and interesting. The web component in question is a web component developed with Stencil *without* shadow DOM (due to legacy reasons). This component provides a couple of child components, some with default slots. Just to illustrate the template structure, it looks similar to this:\r\n````\r\n<div v-for=\"item in items\" :key=\"item.id\" class=\"item-wrapper\">\r\n  <ce-component> <!-- provides default slot -->\r\n     <div class=\"container\">\r\n       <ce-component-child-one> <!-- provides default slot -->\r\n         <div>.....</div>\r\n       </ce-component-child-one>\r\n       <ce-component-child-two /> <!-- standalone component, no slot -->\r\n     </div>\r\n  </ce-component>\r\n</div>\r\n````\r\nAgain the first time the elements are rendered in the `v-for` loop everything is fine, but all subsequent iterations are broken. The DOM elements provided via default slots are rendered correctly, but the DOM elements rendered by the web component itself are *completely* missing. It seems like Vue's template engine is somehow falsely tampering with the DOM tree rendered by the custom element itself, removing nodes that it is not aware of. And again this issue only happens sometimes for production builds! Super weird and unexpected... We never encountered these kind of issues with Vue 2.\r\n\r\nThis is a really baffling issue and I'm not sure what other kind of information to provide to help identify the root cause. Please let me know if I can provide any other details. We're still investigating and trying to find a trigger for this issue and will post updates here if we find anything new.\n\n### What is expected?\n\nCustom elements rendered in `v-for` loops are always rendered correctly.\n\n### What is actually happening?\n\nRandomly, some production builds will not render custom elements correctly.\n\n### System Info\n\n_No response_\n\n### Any additional comments?\n\n_No response_",
                "reactions": {
                    "url": "https://api.github.com/repos/vuejs/core/issues/6309/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/vuejs/core/issues/6309/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/vuejs/core/issues/comments/1225574283",
                "html_url": "https://github.com/vuejs/core/issues/6309#issuecomment-1225574283",
                "issue_url": "https://api.github.com/repos/vuejs/core/issues/6309",
                "id": 1225574283,
                "node_id": "IC_kwDOCCum185JDMeL",
                "user": {
                    "login": "einavk",
                    "id": 26688751,
                    "node_id": "MDQ6VXNlcjI2Njg4NzUx",
                    "avatar_url": "https://avatars.githubusercontent.com/u/26688751?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/einavk",
                    "html_url": "https://github.com/einavk",
                    "followers_url": "https://api.github.com/users/einavk/followers",
                    "following_url": "https://api.github.com/users/einavk/following{/other_user}",
                    "gists_url": "https://api.github.com/users/einavk/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/einavk/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/einavk/subscriptions",
                    "organizations_url": "https://api.github.com/users/einavk/orgs",
                    "repos_url": "https://api.github.com/users/einavk/repos",
                    "events_url": "https://api.github.com/users/einavk/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/einavk/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2022-08-24T11:09:45Z",
                "updated_at": "2022-08-24T11:09:45Z",
                "author_association": "NONE",
                "body": "Hi,\r\nI'm having similar issue - custom elements who repeat themselves - the first one is ok and rest are broken. Also - only happens on global.prod.min and not on dev env.\r\nHowever, in my case, it is not related to v-for at all.\r\nI noticed that the \"broken\" custom elements are my \"static\" elements, and not those who have some vue binding.\r\nfor example, I have this one which gets broken:\r\n```\r\n<my-button\r\n                    class=\"magic-button\"\r\n                    type=\"secondary\"\r\n                    size=\"small\"\r\n                    icon=\"more-actions\"\r\n                ></my-button> \r\n```\r\nIt is a simple button, with an icon, created using latest lit element and based on a native <button>\r\nIf I add to the template an identifier, such as:\r\n```\r\n<my-button\r\n                    class=\"magic-button\"\r\n                    type=\"secondary\"\r\n                    size=\"small\"\r\n                    icon=\"more-actions\"\r\n                    :data-id=\"`btn_${id}`\"\r\n                ></my-button> \r\n```\r\nThe web component rendered in the browser is not broken anymore.\r\n@simonvizzini - have you tried something like that? ",
                "reactions": {
                    "url": "https://api.github.com/repos/vuejs/core/issues/comments/1225574283/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2022-08-24T11:09:45Z",
        "org": {
            "id": 6128107,
            "login": "vuejs",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/vuejs",
            "avatar_url": "https://avatars.githubusercontent.com/u/6128107?"
        }
    }
]
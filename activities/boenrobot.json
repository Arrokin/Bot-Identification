[
    {
        "id": "25748351694",
        "type": "IssuesEvent",
        "actor": {
            "id": 1029536,
            "login": "boenrobot",
            "display_login": "boenrobot",
            "gravatar_id": "",
            "url": "https://api.github.com/users/boenrobot",
            "avatar_url": "https://avatars.githubusercontent.com/u/1029536?"
        },
        "repo": {
            "id": 173702772,
            "name": "pest-parser/intellij-pest",
            "url": "https://api.github.com/repos/pest-parser/intellij-pest"
        },
        "payload": {
            "action": "opened",
            "issue": {
                "url": "https://api.github.com/repos/pest-parser/intellij-pest/issues/261",
                "repository_url": "https://api.github.com/repos/pest-parser/intellij-pest",
                "labels_url": "https://api.github.com/repos/pest-parser/intellij-pest/issues/261/labels{/name}",
                "comments_url": "https://api.github.com/repos/pest-parser/intellij-pest/issues/261/comments",
                "events_url": "https://api.github.com/repos/pest-parser/intellij-pest/issues/261/events",
                "html_url": "https://github.com/pest-parser/intellij-pest/issues/261",
                "id": 1484415510,
                "node_id": "I_kwDOClp-dM5YemIW",
                "number": 261,
                "title": "Include output in live preview",
                "user": {
                    "login": "boenrobot",
                    "id": 1029536,
                    "node_id": "MDQ6VXNlcjEwMjk1MzY=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/1029536?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/boenrobot",
                    "html_url": "https://github.com/boenrobot",
                    "followers_url": "https://api.github.com/users/boenrobot/followers",
                    "following_url": "https://api.github.com/users/boenrobot/following{/other_user}",
                    "gists_url": "https://api.github.com/users/boenrobot/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/boenrobot/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/boenrobot/subscriptions",
                    "organizations_url": "https://api.github.com/users/boenrobot/orgs",
                    "repos_url": "https://api.github.com/users/boenrobot/repos",
                    "events_url": "https://api.github.com/users/boenrobot/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/boenrobot/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 0,
                "created_at": "2022-12-08T11:23:08Z",
                "updated_at": "2022-12-08T11:23:08Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "The pest.rs website has a feature where if you have the grammar successfully evaluate an input, you get the output AST.\r\n\r\nThis is very useful when iterating on new parsers. The live preview in the IDE instead does nothing on a successful parsing of the input, other than not complain, to show that parsing is successful.",
                "reactions": {
                    "url": "https://api.github.com/repos/pest-parser/intellij-pest/issues/261/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/pest-parser/intellij-pest/issues/261/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            }
        },
        "public": true,
        "created_at": "2022-12-08T11:23:09Z",
        "org": {
            "id": 26044607,
            "login": "pest-parser",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/pest-parser",
            "avatar_url": "https://avatars.githubusercontent.com/u/26044607?"
        }
    },
    {
        "id": "25685591150",
        "type": "PullRequestEvent",
        "actor": {
            "id": 1029536,
            "login": "boenrobot",
            "display_login": "boenrobot",
            "gravatar_id": "",
            "url": "https://api.github.com/users/boenrobot",
            "avatar_url": "https://avatars.githubusercontent.com/u/1029536?"
        },
        "repo": {
            "id": 141724413,
            "name": "Shardj/zf1-future",
            "url": "https://api.github.com/repos/Shardj/zf1-future"
        },
        "payload": {
            "action": "opened",
            "number": 292,
            "pull_request": {
                "url": "https://api.github.com/repos/Shardj/zf1-future/pulls/292",
                "id": 1148576806,
                "node_id": "PR_kwDOCHKK_c5EdeQm",
                "html_url": "https://github.com/Shardj/zf1-future/pull/292",
                "diff_url": "https://github.com/Shardj/zf1-future/pull/292.diff",
                "patch_url": "https://github.com/Shardj/zf1-future/pull/292.patch",
                "issue_url": "https://api.github.com/repos/Shardj/zf1-future/issues/292",
                "number": 292,
                "state": "open",
                "locked": false,
                "title": "Compatibility with PHPUnit 9",
                "user": {
                    "login": "boenrobot",
                    "id": 1029536,
                    "node_id": "MDQ6VXNlcjEwMjk1MzY=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/1029536?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/boenrobot",
                    "html_url": "https://github.com/boenrobot",
                    "followers_url": "https://api.github.com/users/boenrobot/followers",
                    "following_url": "https://api.github.com/users/boenrobot/following{/other_user}",
                    "gists_url": "https://api.github.com/users/boenrobot/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/boenrobot/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/boenrobot/subscriptions",
                    "organizations_url": "https://api.github.com/users/boenrobot/orgs",
                    "repos_url": "https://api.github.com/users/boenrobot/repos",
                    "events_url": "https://api.github.com/users/boenrobot/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/boenrobot/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "I found out #44 , and followed the advice of adding shims for the missing classes, including also adding\r\n\r\n```php\r\nuse PHPUnit\\Runner\\Version;\r\n\r\nfinal class PHPUnit_Runner_Version {\r\n    public static function id(): string\r\n    {\r\n        return Version::id();\r\n    }\r\n\r\n    public static function series(): string\r\n    {\r\n        return Version::series();\r\n    }\r\n\r\n    public static function getVersionString(): string\r\n    {\r\n        return Version::getVersionString();\r\n    }\r\n}\r\n```\r\n\r\nFor the sake of PHPUnit\\Runner\\Version that is otherwise final, so can't simply be extended, and PHPUnit_Framework_ExpectationFailedException is only referenced in doc comments, so it's not required for the tests to actually run.\r\n\r\nEven after all that, I got\r\n```\r\nFatal error: Declaration of Zend_Test_PHPUnit_ControllerTestCase::setUp() must be compatible with PHPUnit\\Framework\\TestCase::setUp(): void in C:\\...\\vendor\\shardj\\zf1-future\\library\\Zend\\Test\\PHPUnit\\ControllerTestCase.php on line 123\r\n```\r\n\r\nAfter explicitly adding `: void` to the return type, it works, so this is a PR to fix this. bootstrap()... I thought I might as well... It's a final method already.",
                "created_at": "2022-12-06T10:01:24Z",
                "updated_at": "2022-12-06T10:01:24Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": null,
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/Shardj/zf1-future/pulls/292/commits",
                "review_comments_url": "https://api.github.com/repos/Shardj/zf1-future/pulls/292/comments",
                "review_comment_url": "https://api.github.com/repos/Shardj/zf1-future/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/Shardj/zf1-future/issues/292/comments",
                "statuses_url": "https://api.github.com/repos/Shardj/zf1-future/statuses/86fd28fbdf4aa13dbefac47197dc2d326e0b5a2e",
                "head": {
                    "label": "boenrobot:phpunit-forward-compat",
                    "ref": "phpunit-forward-compat",
                    "sha": "86fd28fbdf4aa13dbefac47197dc2d326e0b5a2e",
                    "user": {
                        "login": "boenrobot",
                        "id": 1029536,
                        "node_id": "MDQ6VXNlcjEwMjk1MzY=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/1029536?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/boenrobot",
                        "html_url": "https://github.com/boenrobot",
                        "followers_url": "https://api.github.com/users/boenrobot/followers",
                        "following_url": "https://api.github.com/users/boenrobot/following{/other_user}",
                        "gists_url": "https://api.github.com/users/boenrobot/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/boenrobot/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/boenrobot/subscriptions",
                        "organizations_url": "https://api.github.com/users/boenrobot/orgs",
                        "repos_url": "https://api.github.com/users/boenrobot/repos",
                        "events_url": "https://api.github.com/users/boenrobot/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/boenrobot/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 574890254,
                        "node_id": "R_kgDOIkQhDg",
                        "name": "zf1-future",
                        "full_name": "boenrobot/zf1-future",
                        "private": false,
                        "owner": {
                            "login": "boenrobot",
                            "id": 1029536,
                            "node_id": "MDQ6VXNlcjEwMjk1MzY=",
                            "avatar_url": "https://avatars.githubusercontent.com/u/1029536?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/boenrobot",
                            "html_url": "https://github.com/boenrobot",
                            "followers_url": "https://api.github.com/users/boenrobot/followers",
                            "following_url": "https://api.github.com/users/boenrobot/following{/other_user}",
                            "gists_url": "https://api.github.com/users/boenrobot/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/boenrobot/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/boenrobot/subscriptions",
                            "organizations_url": "https://api.github.com/users/boenrobot/orgs",
                            "repos_url": "https://api.github.com/users/boenrobot/repos",
                            "events_url": "https://api.github.com/users/boenrobot/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/boenrobot/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/boenrobot/zf1-future",
                        "description": "PHP 8.0 compatible version of ZF1",
                        "fork": true,
                        "url": "https://api.github.com/repos/boenrobot/zf1-future",
                        "forks_url": "https://api.github.com/repos/boenrobot/zf1-future/forks",
                        "keys_url": "https://api.github.com/repos/boenrobot/zf1-future/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/boenrobot/zf1-future/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/boenrobot/zf1-future/teams",
                        "hooks_url": "https://api.github.com/repos/boenrobot/zf1-future/hooks",
                        "issue_events_url": "https://api.github.com/repos/boenrobot/zf1-future/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/boenrobot/zf1-future/events",
                        "assignees_url": "https://api.github.com/repos/boenrobot/zf1-future/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/boenrobot/zf1-future/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/boenrobot/zf1-future/tags",
                        "blobs_url": "https://api.github.com/repos/boenrobot/zf1-future/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/boenrobot/zf1-future/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/boenrobot/zf1-future/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/boenrobot/zf1-future/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/boenrobot/zf1-future/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/boenrobot/zf1-future/languages",
                        "stargazers_url": "https://api.github.com/repos/boenrobot/zf1-future/stargazers",
                        "contributors_url": "https://api.github.com/repos/boenrobot/zf1-future/contributors",
                        "subscribers_url": "https://api.github.com/repos/boenrobot/zf1-future/subscribers",
                        "subscription_url": "https://api.github.com/repos/boenrobot/zf1-future/subscription",
                        "commits_url": "https://api.github.com/repos/boenrobot/zf1-future/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/boenrobot/zf1-future/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/boenrobot/zf1-future/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/boenrobot/zf1-future/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/boenrobot/zf1-future/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/boenrobot/zf1-future/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/boenrobot/zf1-future/merges",
                        "archive_url": "https://api.github.com/repos/boenrobot/zf1-future/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/boenrobot/zf1-future/downloads",
                        "issues_url": "https://api.github.com/repos/boenrobot/zf1-future/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/boenrobot/zf1-future/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/boenrobot/zf1-future/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/boenrobot/zf1-future/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/boenrobot/zf1-future/labels{/name}",
                        "releases_url": "https://api.github.com/repos/boenrobot/zf1-future/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/boenrobot/zf1-future/deployments",
                        "created_at": "2022-12-06T09:52:49Z",
                        "updated_at": "2022-12-02T13:42:32Z",
                        "pushed_at": "2022-12-06T09:54:48Z",
                        "git_url": "git://github.com/boenrobot/zf1-future.git",
                        "ssh_url": "git@github.com:boenrobot/zf1-future.git",
                        "clone_url": "https://github.com/boenrobot/zf1-future.git",
                        "svn_url": "https://github.com/boenrobot/zf1-future",
                        "homepage": "",
                        "size": 86409,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": null,
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "bsd-3-clause",
                            "name": "BSD 3-Clause \"New\" or \"Revised\" License",
                            "spdx_id": "BSD-3-Clause",
                            "url": "https://api.github.com/licenses/bsd-3-clause",
                            "node_id": "MDc6TGljZW5zZTU="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "master"
                    }
                },
                "base": {
                    "label": "Shardj:master",
                    "ref": "master",
                    "sha": "66f96b4d55d24850f002156c9b447abf9b154ad7",
                    "user": {
                        "login": "Shardj",
                        "id": 5624120,
                        "node_id": "MDQ6VXNlcjU2MjQxMjA=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/5624120?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/Shardj",
                        "html_url": "https://github.com/Shardj",
                        "followers_url": "https://api.github.com/users/Shardj/followers",
                        "following_url": "https://api.github.com/users/Shardj/following{/other_user}",
                        "gists_url": "https://api.github.com/users/Shardj/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/Shardj/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/Shardj/subscriptions",
                        "organizations_url": "https://api.github.com/users/Shardj/orgs",
                        "repos_url": "https://api.github.com/users/Shardj/repos",
                        "events_url": "https://api.github.com/users/Shardj/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/Shardj/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 141724413,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNDE3MjQ0MTM=",
                        "name": "zf1-future",
                        "full_name": "Shardj/zf1-future",
                        "private": false,
                        "owner": {
                            "login": "Shardj",
                            "id": 5624120,
                            "node_id": "MDQ6VXNlcjU2MjQxMjA=",
                            "avatar_url": "https://avatars.githubusercontent.com/u/5624120?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/Shardj",
                            "html_url": "https://github.com/Shardj",
                            "followers_url": "https://api.github.com/users/Shardj/followers",
                            "following_url": "https://api.github.com/users/Shardj/following{/other_user}",
                            "gists_url": "https://api.github.com/users/Shardj/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/Shardj/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/Shardj/subscriptions",
                            "organizations_url": "https://api.github.com/users/Shardj/orgs",
                            "repos_url": "https://api.github.com/users/Shardj/repos",
                            "events_url": "https://api.github.com/users/Shardj/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/Shardj/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/Shardj/zf1-future",
                        "description": "PHP 8.0 compatible version of ZF1",
                        "fork": true,
                        "url": "https://api.github.com/repos/Shardj/zf1-future",
                        "forks_url": "https://api.github.com/repos/Shardj/zf1-future/forks",
                        "keys_url": "https://api.github.com/repos/Shardj/zf1-future/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/Shardj/zf1-future/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/Shardj/zf1-future/teams",
                        "hooks_url": "https://api.github.com/repos/Shardj/zf1-future/hooks",
                        "issue_events_url": "https://api.github.com/repos/Shardj/zf1-future/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/Shardj/zf1-future/events",
                        "assignees_url": "https://api.github.com/repos/Shardj/zf1-future/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/Shardj/zf1-future/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/Shardj/zf1-future/tags",
                        "blobs_url": "https://api.github.com/repos/Shardj/zf1-future/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/Shardj/zf1-future/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/Shardj/zf1-future/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/Shardj/zf1-future/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/Shardj/zf1-future/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/Shardj/zf1-future/languages",
                        "stargazers_url": "https://api.github.com/repos/Shardj/zf1-future/stargazers",
                        "contributors_url": "https://api.github.com/repos/Shardj/zf1-future/contributors",
                        "subscribers_url": "https://api.github.com/repos/Shardj/zf1-future/subscribers",
                        "subscription_url": "https://api.github.com/repos/Shardj/zf1-future/subscription",
                        "commits_url": "https://api.github.com/repos/Shardj/zf1-future/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/Shardj/zf1-future/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/Shardj/zf1-future/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/Shardj/zf1-future/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/Shardj/zf1-future/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/Shardj/zf1-future/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/Shardj/zf1-future/merges",
                        "archive_url": "https://api.github.com/repos/Shardj/zf1-future/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/Shardj/zf1-future/downloads",
                        "issues_url": "https://api.github.com/repos/Shardj/zf1-future/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/Shardj/zf1-future/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/Shardj/zf1-future/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/Shardj/zf1-future/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/Shardj/zf1-future/labels{/name}",
                        "releases_url": "https://api.github.com/repos/Shardj/zf1-future/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/Shardj/zf1-future/deployments",
                        "created_at": "2018-07-20T14:49:06Z",
                        "updated_at": "2022-12-02T13:42:32Z",
                        "pushed_at": "2022-12-06T10:01:24Z",
                        "git_url": "git://github.com/Shardj/zf1-future.git",
                        "ssh_url": "git@github.com:Shardj/zf1-future.git",
                        "clone_url": "https://github.com/Shardj/zf1-future.git",
                        "svn_url": "https://github.com/Shardj/zf1-future",
                        "homepage": "",
                        "size": 86409,
                        "stargazers_count": 351,
                        "watchers_count": 351,
                        "language": "PHP",
                        "has_issues": true,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 152,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 12,
                        "license": {
                            "key": "bsd-3-clause",
                            "name": "BSD 3-Clause \"New\" or \"Revised\" License",
                            "spdx_id": "BSD-3-Clause",
                            "url": "https://api.github.com/licenses/bsd-3-clause",
                            "node_id": "MDc6TGljZW5zZTU="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 152,
                        "open_issues": 12,
                        "watchers": 351,
                        "default_branch": "master"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/Shardj/zf1-future/pulls/292"
                    },
                    "html": {
                        "href": "https://github.com/Shardj/zf1-future/pull/292"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/Shardj/zf1-future/issues/292"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/Shardj/zf1-future/issues/292/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/Shardj/zf1-future/pulls/292/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/Shardj/zf1-future/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/Shardj/zf1-future/pulls/292/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/Shardj/zf1-future/statuses/86fd28fbdf4aa13dbefac47197dc2d326e0b5a2e"
                    }
                },
                "author_association": "NONE",
                "auto_merge": null,
                "active_lock_reason": null,
                "merged": false,
                "mergeable": null,
                "rebaseable": null,
                "mergeable_state": "unknown",
                "merged_by": null,
                "comments": 0,
                "review_comments": 0,
                "maintainer_can_modify": true,
                "commits": 1,
                "additions": 2,
                "deletions": 2,
                "changed_files": 1
            }
        },
        "public": true,
        "created_at": "2022-12-06T10:01:25Z"
    },
    {
        "id": "25685429461",
        "type": "CreateEvent",
        "actor": {
            "id": 1029536,
            "login": "boenrobot",
            "display_login": "boenrobot",
            "gravatar_id": "",
            "url": "https://api.github.com/users/boenrobot",
            "avatar_url": "https://avatars.githubusercontent.com/u/1029536?"
        },
        "repo": {
            "id": 574890254,
            "name": "boenrobot/zf1-future",
            "url": "https://api.github.com/repos/boenrobot/zf1-future"
        },
        "payload": {
            "ref": "phpunit-forward-compat",
            "ref_type": "branch",
            "master_branch": "master",
            "description": "PHP 8.0 compatible version of ZF1",
            "pusher_type": "user"
        },
        "public": true,
        "created_at": "2022-12-06T09:54:49Z"
    },
    {
        "id": "25685381328",
        "type": "ForkEvent",
        "actor": {
            "id": 1029536,
            "login": "boenrobot",
            "display_login": "boenrobot",
            "gravatar_id": "",
            "url": "https://api.github.com/users/boenrobot",
            "avatar_url": "https://avatars.githubusercontent.com/u/1029536?"
        },
        "repo": {
            "id": 141724413,
            "name": "Shardj/zf1-future",
            "url": "https://api.github.com/repos/Shardj/zf1-future"
        },
        "payload": {
            "forkee": {
                "id": 574890254,
                "node_id": "R_kgDOIkQhDg",
                "name": "zf1-future",
                "full_name": "boenrobot/zf1-future",
                "private": false,
                "owner": {
                    "login": "boenrobot",
                    "id": 1029536,
                    "node_id": "MDQ6VXNlcjEwMjk1MzY=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/1029536?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/boenrobot",
                    "html_url": "https://github.com/boenrobot",
                    "followers_url": "https://api.github.com/users/boenrobot/followers",
                    "following_url": "https://api.github.com/users/boenrobot/following{/other_user}",
                    "gists_url": "https://api.github.com/users/boenrobot/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/boenrobot/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/boenrobot/subscriptions",
                    "organizations_url": "https://api.github.com/users/boenrobot/orgs",
                    "repos_url": "https://api.github.com/users/boenrobot/repos",
                    "events_url": "https://api.github.com/users/boenrobot/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/boenrobot/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "html_url": "https://github.com/boenrobot/zf1-future",
                "description": "PHP 8.0 compatible version of ZF1",
                "fork": true,
                "url": "https://api.github.com/repos/boenrobot/zf1-future",
                "forks_url": "https://api.github.com/repos/boenrobot/zf1-future/forks",
                "keys_url": "https://api.github.com/repos/boenrobot/zf1-future/keys{/key_id}",
                "collaborators_url": "https://api.github.com/repos/boenrobot/zf1-future/collaborators{/collaborator}",
                "teams_url": "https://api.github.com/repos/boenrobot/zf1-future/teams",
                "hooks_url": "https://api.github.com/repos/boenrobot/zf1-future/hooks",
                "issue_events_url": "https://api.github.com/repos/boenrobot/zf1-future/issues/events{/number}",
                "events_url": "https://api.github.com/repos/boenrobot/zf1-future/events",
                "assignees_url": "https://api.github.com/repos/boenrobot/zf1-future/assignees{/user}",
                "branches_url": "https://api.github.com/repos/boenrobot/zf1-future/branches{/branch}",
                "tags_url": "https://api.github.com/repos/boenrobot/zf1-future/tags",
                "blobs_url": "https://api.github.com/repos/boenrobot/zf1-future/git/blobs{/sha}",
                "git_tags_url": "https://api.github.com/repos/boenrobot/zf1-future/git/tags{/sha}",
                "git_refs_url": "https://api.github.com/repos/boenrobot/zf1-future/git/refs{/sha}",
                "trees_url": "https://api.github.com/repos/boenrobot/zf1-future/git/trees{/sha}",
                "statuses_url": "https://api.github.com/repos/boenrobot/zf1-future/statuses/{sha}",
                "languages_url": "https://api.github.com/repos/boenrobot/zf1-future/languages",
                "stargazers_url": "https://api.github.com/repos/boenrobot/zf1-future/stargazers",
                "contributors_url": "https://api.github.com/repos/boenrobot/zf1-future/contributors",
                "subscribers_url": "https://api.github.com/repos/boenrobot/zf1-future/subscribers",
                "subscription_url": "https://api.github.com/repos/boenrobot/zf1-future/subscription",
                "commits_url": "https://api.github.com/repos/boenrobot/zf1-future/commits{/sha}",
                "git_commits_url": "https://api.github.com/repos/boenrobot/zf1-future/git/commits{/sha}",
                "comments_url": "https://api.github.com/repos/boenrobot/zf1-future/comments{/number}",
                "issue_comment_url": "https://api.github.com/repos/boenrobot/zf1-future/issues/comments{/number}",
                "contents_url": "https://api.github.com/repos/boenrobot/zf1-future/contents/{+path}",
                "compare_url": "https://api.github.com/repos/boenrobot/zf1-future/compare/{base}...{head}",
                "merges_url": "https://api.github.com/repos/boenrobot/zf1-future/merges",
                "archive_url": "https://api.github.com/repos/boenrobot/zf1-future/{archive_format}{/ref}",
                "downloads_url": "https://api.github.com/repos/boenrobot/zf1-future/downloads",
                "issues_url": "https://api.github.com/repos/boenrobot/zf1-future/issues{/number}",
                "pulls_url": "https://api.github.com/repos/boenrobot/zf1-future/pulls{/number}",
                "milestones_url": "https://api.github.com/repos/boenrobot/zf1-future/milestones{/number}",
                "notifications_url": "https://api.github.com/repos/boenrobot/zf1-future/notifications{?since,all,participating}",
                "labels_url": "https://api.github.com/repos/boenrobot/zf1-future/labels{/name}",
                "releases_url": "https://api.github.com/repos/boenrobot/zf1-future/releases{/id}",
                "deployments_url": "https://api.github.com/repos/boenrobot/zf1-future/deployments",
                "created_at": "2022-12-06T09:52:49Z",
                "updated_at": "2022-12-02T13:42:32Z",
                "pushed_at": "2022-11-29T17:42:01Z",
                "git_url": "git://github.com/boenrobot/zf1-future.git",
                "ssh_url": "git@github.com:boenrobot/zf1-future.git",
                "clone_url": "https://github.com/boenrobot/zf1-future.git",
                "svn_url": "https://github.com/boenrobot/zf1-future",
                "homepage": "",
                "size": 86409,
                "stargazers_count": 0,
                "watchers_count": 0,
                "language": null,
                "has_issues": false,
                "has_projects": true,
                "has_downloads": true,
                "has_wiki": true,
                "has_pages": false,
                "has_discussions": false,
                "forks_count": 0,
                "mirror_url": null,
                "archived": false,
                "disabled": false,
                "open_issues_count": 0,
                "license": {
                    "key": "bsd-3-clause",
                    "name": "BSD 3-Clause \"New\" or \"Revised\" License",
                    "spdx_id": "BSD-3-Clause",
                    "url": "https://api.github.com/licenses/bsd-3-clause",
                    "node_id": "MDc6TGljZW5zZTU="
                },
                "allow_forking": true,
                "is_template": false,
                "web_commit_signoff_required": false,
                "topics": [],
                "visibility": "public",
                "forks": 0,
                "open_issues": 0,
                "watchers": 0,
                "default_branch": "master",
                "public": true
            }
        },
        "public": true,
        "created_at": "2022-12-06T09:52:50Z"
    },
    {
        "id": "25610410534",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 1029536,
            "login": "boenrobot",
            "display_login": "boenrobot",
            "gravatar_id": "",
            "url": "https://api.github.com/users/boenrobot",
            "avatar_url": "https://avatars.githubusercontent.com/u/1029536?"
        },
        "repo": {
            "id": 327282114,
            "name": "mxinden/asynchronous-codec",
            "url": "https://api.github.com/repos/mxinden/asynchronous-codec"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/mxinden/asynchronous-codec/issues/4",
                "repository_url": "https://api.github.com/repos/mxinden/asynchronous-codec",
                "labels_url": "https://api.github.com/repos/mxinden/asynchronous-codec/issues/4/labels{/name}",
                "comments_url": "https://api.github.com/repos/mxinden/asynchronous-codec/issues/4/comments",
                "events_url": "https://api.github.com/repos/mxinden/asynchronous-codec/issues/4/events",
                "html_url": "https://github.com/mxinden/asynchronous-codec/pull/4",
                "id": 1465495315,
                "node_id": "PR_kwDOE4Htws5DwTA_",
                "number": 4,
                "title": "[WIP] no_std traits",
                "user": {
                    "login": "boenrobot",
                    "id": 1029536,
                    "node_id": "MDQ6VXNlcjEwMjk1MzY=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/1029536?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/boenrobot",
                    "html_url": "https://github.com/boenrobot",
                    "followers_url": "https://api.github.com/users/boenrobot/followers",
                    "following_url": "https://api.github.com/users/boenrobot/following{/other_user}",
                    "gists_url": "https://api.github.com/users/boenrobot/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/boenrobot/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/boenrobot/subscriptions",
                    "organizations_url": "https://api.github.com/users/boenrobot/orgs",
                    "repos_url": "https://api.github.com/users/boenrobot/repos",
                    "events_url": "https://api.github.com/users/boenrobot/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/boenrobot/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 1,
                "created_at": "2022-11-27T16:28:08Z",
                "updated_at": "2022-12-02T07:59:34Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "draft": false,
                "pull_request": {
                    "url": "https://api.github.com/repos/mxinden/asynchronous-codec/pulls/4",
                    "html_url": "https://github.com/mxinden/asynchronous-codec/pull/4",
                    "diff_url": "https://github.com/mxinden/asynchronous-codec/pull/4.diff",
                    "patch_url": "https://github.com/mxinden/asynchronous-codec/pull/4.patch",
                    "merged_at": null
                },
                "body": "Hello.\r\n\r\nI am trying to use this crate to write a library around a custom TCP based protocol. Said protocol will likely be useful on both web servers and embedded devices (as long as said devices provide some sort of networking and a TCP stream implementation; think embassy-net), so I want to make it as portable as possible.\r\n\r\nWhile I understand it might not be possible for it to be fully portable (e.g. Framed(Read/Write) are not embassy-net compatible, due to embassy-net's TCP stream not being AsyncRead/AsyncWrite compatible), it would still help a great deal if I can at least reuse the encoder and decoder, and just swap out a stream handler.\r\n\r\nThis PR is my attempt to do this (by getting rid of std::io::Error in encoder and decoder, and following the compiler warnings from there), but I am new to Rust, so I ended up with some errors related to Fuse, and yet occurring in FramedRead/FramedWrite, and I'm not sure how to deal with those yet.\r\n\r\nI thought I share the progress so far, to ensure it's even worth pursuing this to its end, or if I should perhaps try to instead refactor async-codec to be splittable (which is the reason I ended here... Because I _also_ need a reader/writer split).",
                "reactions": {
                    "url": "https://api.github.com/repos/mxinden/asynchronous-codec/issues/4/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/mxinden/asynchronous-codec/issues/4/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/mxinden/asynchronous-codec/issues/comments/1334877419",
                "html_url": "https://github.com/mxinden/asynchronous-codec/pull/4#issuecomment-1334877419",
                "issue_url": "https://api.github.com/repos/mxinden/asynchronous-codec/issues/4",
                "id": 1334877419,
                "node_id": "IC_kwDOE4Htws5PkJzr",
                "user": {
                    "login": "boenrobot",
                    "id": 1029536,
                    "node_id": "MDQ6VXNlcjEwMjk1MzY=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/1029536?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/boenrobot",
                    "html_url": "https://github.com/boenrobot",
                    "followers_url": "https://api.github.com/users/boenrobot/followers",
                    "following_url": "https://api.github.com/users/boenrobot/following{/other_user}",
                    "gists_url": "https://api.github.com/users/boenrobot/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/boenrobot/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/boenrobot/subscriptions",
                    "organizations_url": "https://api.github.com/users/boenrobot/orgs",
                    "repos_url": "https://api.github.com/users/boenrobot/repos",
                    "events_url": "https://api.github.com/users/boenrobot/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/boenrobot/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2022-12-02T07:59:34Z",
                "updated_at": "2022-12-02T07:59:34Z",
                "author_association": "NONE",
                "body": "> Thanks for upstreaming this. In general I am not opposed to being no-std compliant, unless it adds significant overhead to the crate.\r\n\r\nGood to know \ud83d\udc4d \r\n\r\n> Do you think it makes sense to port parts of async-codec to this crate?\r\n\r\nNot sure... I kind of like this crate's API better, in that it is simpler to make codecs with it.\r\n\r\nAt the same time, it seems async-codec allows for the codec to be more directly demanding of the stream handler (i.e. it can tell it \"don't invoke me again until you have N more bytes ready in the buffer\"), which... maybe... would improve performance. I say maybe, because the bytes still need to be checked anyway... It's just that they are checked by the stream handler, not by the codec... and the codec still should be defensively checking the length anyway, so... I guess the point is lost, maybe.\r\n\r\nI have not tried to implement a no_std compatible framed reader/writer, so maybe async-codec's API is the only way to potentially do it in alloc-free environments (potentially being a keyword, because even async-codec's reader is not no_std compatible; only its codec API is).\r\n\r\n\r\nI am thinking that instead of porting async-codec, maybe just eliminate Fuse and instead refactor the hierarchy a bit, so that we have reader/writer traits with default implementations that include get_reader()/get_writer() methods, respectively. FramedReader/FramedWriter would only implement the respective trait, and Framed would implement both. In all cases, get_reader()/get_writer() would return \"self\"... It's just \"self\" would be different based on the struct.\r\n\r\nI do similar gymnastics in my lib, but I'm not sure if that's a good pattern.",
                "reactions": {
                    "url": "https://api.github.com/repos/mxinden/asynchronous-codec/issues/comments/1334877419/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2022-12-02T07:59:34Z"
    },
    {
        "id": "25495553388",
        "type": "PullRequestEvent",
        "actor": {
            "id": 1029536,
            "login": "boenrobot",
            "display_login": "boenrobot",
            "gravatar_id": "",
            "url": "https://api.github.com/users/boenrobot",
            "avatar_url": "https://avatars.githubusercontent.com/u/1029536?"
        },
        "repo": {
            "id": 327282114,
            "name": "mxinden/asynchronous-codec",
            "url": "https://api.github.com/repos/mxinden/asynchronous-codec"
        },
        "payload": {
            "action": "opened",
            "number": 4,
            "pull_request": {
                "url": "https://api.github.com/repos/mxinden/asynchronous-codec/pulls/4",
                "id": 1136734271,
                "node_id": "PR_kwDOE4Htws5DwTA_",
                "html_url": "https://github.com/mxinden/asynchronous-codec/pull/4",
                "diff_url": "https://github.com/mxinden/asynchronous-codec/pull/4.diff",
                "patch_url": "https://github.com/mxinden/asynchronous-codec/pull/4.patch",
                "issue_url": "https://api.github.com/repos/mxinden/asynchronous-codec/issues/4",
                "number": 4,
                "state": "open",
                "locked": false,
                "title": "[WIP] no_std traits",
                "user": {
                    "login": "boenrobot",
                    "id": 1029536,
                    "node_id": "MDQ6VXNlcjEwMjk1MzY=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/1029536?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/boenrobot",
                    "html_url": "https://github.com/boenrobot",
                    "followers_url": "https://api.github.com/users/boenrobot/followers",
                    "following_url": "https://api.github.com/users/boenrobot/following{/other_user}",
                    "gists_url": "https://api.github.com/users/boenrobot/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/boenrobot/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/boenrobot/subscriptions",
                    "organizations_url": "https://api.github.com/users/boenrobot/orgs",
                    "repos_url": "https://api.github.com/users/boenrobot/repos",
                    "events_url": "https://api.github.com/users/boenrobot/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/boenrobot/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "Hello.\r\n\r\nI am trying to use this crate to write a library around a custom TCP protocol. Said protocol will likely be useful on both web servers and embedded devices (as long as said devices provide some sort of networking and a TCP stream implementation; think embassy-net), so I want to make it as portable as possible.\r\n\r\nWhile I understand it might not be possible for it to be fully portable (e.g. Framed(Read/Write) are not embassy-net compatible, due to embassy-net not being AsyncRead/AsyncWrite compatible), it would still help a great deal if I can at least reuse the encoder and decoder, and just swap out a stream handler.\r\n\r\nThis PR is my attempt to do this (by getting rid of std::io::Error in encoder and decoder, and following the compiler warnings from there), but I am new to Rust, so I ended up with some errors related to Fuse, and yet occurring in FramedRead/FramedWrite, and I'm not sure how to deal with those yet.\r\n\r\nI thought I share the progress so far, to ensure it's even worth pursuing this to its end, or if I should perhaps try to instead refactor async-codec to be splittable (which is the reason I ended here... Because I _also_ need a reader/writer split).",
                "created_at": "2022-11-27T16:28:08Z",
                "updated_at": "2022-11-27T16:28:08Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": null,
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/mxinden/asynchronous-codec/pulls/4/commits",
                "review_comments_url": "https://api.github.com/repos/mxinden/asynchronous-codec/pulls/4/comments",
                "review_comment_url": "https://api.github.com/repos/mxinden/asynchronous-codec/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/mxinden/asynchronous-codec/issues/4/comments",
                "statuses_url": "https://api.github.com/repos/mxinden/asynchronous-codec/statuses/964e568f9756b9ef304871305bf7429e63e38eef",
                "head": {
                    "label": "boenrobot:custom-error-enum",
                    "ref": "custom-error-enum",
                    "sha": "964e568f9756b9ef304871305bf7429e63e38eef",
                    "user": {
                        "login": "boenrobot",
                        "id": 1029536,
                        "node_id": "MDQ6VXNlcjEwMjk1MzY=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/1029536?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/boenrobot",
                        "html_url": "https://github.com/boenrobot",
                        "followers_url": "https://api.github.com/users/boenrobot/followers",
                        "following_url": "https://api.github.com/users/boenrobot/following{/other_user}",
                        "gists_url": "https://api.github.com/users/boenrobot/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/boenrobot/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/boenrobot/subscriptions",
                        "organizations_url": "https://api.github.com/users/boenrobot/orgs",
                        "repos_url": "https://api.github.com/users/boenrobot/repos",
                        "events_url": "https://api.github.com/users/boenrobot/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/boenrobot/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 570935558,
                        "node_id": "R_kgDOIgfJBg",
                        "name": "asynchronous-codec",
                        "full_name": "boenrobot/asynchronous-codec",
                        "private": false,
                        "owner": {
                            "login": "boenrobot",
                            "id": 1029536,
                            "node_id": "MDQ6VXNlcjEwMjk1MzY=",
                            "avatar_url": "https://avatars.githubusercontent.com/u/1029536?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/boenrobot",
                            "html_url": "https://github.com/boenrobot",
                            "followers_url": "https://api.github.com/users/boenrobot/followers",
                            "following_url": "https://api.github.com/users/boenrobot/following{/other_user}",
                            "gists_url": "https://api.github.com/users/boenrobot/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/boenrobot/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/boenrobot/subscriptions",
                            "organizations_url": "https://api.github.com/users/boenrobot/orgs",
                            "repos_url": "https://api.github.com/users/boenrobot/repos",
                            "events_url": "https://api.github.com/users/boenrobot/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/boenrobot/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/boenrobot/asynchronous-codec",
                        "description": "Utilities for encoding and decoding frames using `async/await`.",
                        "fork": true,
                        "url": "https://api.github.com/repos/boenrobot/asynchronous-codec",
                        "forks_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/forks",
                        "keys_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/teams",
                        "hooks_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/hooks",
                        "issue_events_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/events",
                        "assignees_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/tags",
                        "blobs_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/languages",
                        "stargazers_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/stargazers",
                        "contributors_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/contributors",
                        "subscribers_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/subscribers",
                        "subscription_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/subscription",
                        "commits_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/merges",
                        "archive_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/downloads",
                        "issues_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/labels{/name}",
                        "releases_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/deployments",
                        "created_at": "2022-11-26T16:01:12Z",
                        "updated_at": "2022-11-08T11:14:14Z",
                        "pushed_at": "2022-11-27T16:07:58Z",
                        "git_url": "git://github.com/boenrobot/asynchronous-codec.git",
                        "ssh_url": "git@github.com:boenrobot/asynchronous-codec.git",
                        "clone_url": "https://github.com/boenrobot/asynchronous-codec.git",
                        "svn_url": "https://github.com/boenrobot/asynchronous-codec",
                        "homepage": "",
                        "size": 153,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": null,
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "mit",
                            "name": "MIT License",
                            "spdx_id": "MIT",
                            "url": "https://api.github.com/licenses/mit",
                            "node_id": "MDc6TGljZW5zZTEz"
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "master"
                    }
                },
                "base": {
                    "label": "mxinden:master",
                    "ref": "master",
                    "sha": "43338f656f7a50a3c77b8e8ebd58bd9a1416cbd2",
                    "user": {
                        "login": "mxinden",
                        "id": 7047859,
                        "node_id": "MDQ6VXNlcjcwNDc4NTk=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/7047859?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/mxinden",
                        "html_url": "https://github.com/mxinden",
                        "followers_url": "https://api.github.com/users/mxinden/followers",
                        "following_url": "https://api.github.com/users/mxinden/following{/other_user}",
                        "gists_url": "https://api.github.com/users/mxinden/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/mxinden/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/mxinden/subscriptions",
                        "organizations_url": "https://api.github.com/users/mxinden/orgs",
                        "repos_url": "https://api.github.com/users/mxinden/repos",
                        "events_url": "https://api.github.com/users/mxinden/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/mxinden/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 327282114,
                        "node_id": "MDEwOlJlcG9zaXRvcnkzMjcyODIxMTQ=",
                        "name": "asynchronous-codec",
                        "full_name": "mxinden/asynchronous-codec",
                        "private": false,
                        "owner": {
                            "login": "mxinden",
                            "id": 7047859,
                            "node_id": "MDQ6VXNlcjcwNDc4NTk=",
                            "avatar_url": "https://avatars.githubusercontent.com/u/7047859?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/mxinden",
                            "html_url": "https://github.com/mxinden",
                            "followers_url": "https://api.github.com/users/mxinden/followers",
                            "following_url": "https://api.github.com/users/mxinden/following{/other_user}",
                            "gists_url": "https://api.github.com/users/mxinden/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/mxinden/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/mxinden/subscriptions",
                            "organizations_url": "https://api.github.com/users/mxinden/orgs",
                            "repos_url": "https://api.github.com/users/mxinden/repos",
                            "events_url": "https://api.github.com/users/mxinden/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/mxinden/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/mxinden/asynchronous-codec",
                        "description": "Utilities for encoding and decoding frames using `async/await`.",
                        "fork": false,
                        "url": "https://api.github.com/repos/mxinden/asynchronous-codec",
                        "forks_url": "https://api.github.com/repos/mxinden/asynchronous-codec/forks",
                        "keys_url": "https://api.github.com/repos/mxinden/asynchronous-codec/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/mxinden/asynchronous-codec/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/mxinden/asynchronous-codec/teams",
                        "hooks_url": "https://api.github.com/repos/mxinden/asynchronous-codec/hooks",
                        "issue_events_url": "https://api.github.com/repos/mxinden/asynchronous-codec/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/mxinden/asynchronous-codec/events",
                        "assignees_url": "https://api.github.com/repos/mxinden/asynchronous-codec/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/mxinden/asynchronous-codec/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/mxinden/asynchronous-codec/tags",
                        "blobs_url": "https://api.github.com/repos/mxinden/asynchronous-codec/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/mxinden/asynchronous-codec/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/mxinden/asynchronous-codec/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/mxinden/asynchronous-codec/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/mxinden/asynchronous-codec/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/mxinden/asynchronous-codec/languages",
                        "stargazers_url": "https://api.github.com/repos/mxinden/asynchronous-codec/stargazers",
                        "contributors_url": "https://api.github.com/repos/mxinden/asynchronous-codec/contributors",
                        "subscribers_url": "https://api.github.com/repos/mxinden/asynchronous-codec/subscribers",
                        "subscription_url": "https://api.github.com/repos/mxinden/asynchronous-codec/subscription",
                        "commits_url": "https://api.github.com/repos/mxinden/asynchronous-codec/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/mxinden/asynchronous-codec/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/mxinden/asynchronous-codec/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/mxinden/asynchronous-codec/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/mxinden/asynchronous-codec/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/mxinden/asynchronous-codec/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/mxinden/asynchronous-codec/merges",
                        "archive_url": "https://api.github.com/repos/mxinden/asynchronous-codec/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/mxinden/asynchronous-codec/downloads",
                        "issues_url": "https://api.github.com/repos/mxinden/asynchronous-codec/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/mxinden/asynchronous-codec/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/mxinden/asynchronous-codec/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/mxinden/asynchronous-codec/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/mxinden/asynchronous-codec/labels{/name}",
                        "releases_url": "https://api.github.com/repos/mxinden/asynchronous-codec/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/mxinden/asynchronous-codec/deployments",
                        "created_at": "2021-01-06T10:50:59Z",
                        "updated_at": "2022-11-08T11:14:14Z",
                        "pushed_at": "2022-11-08T10:14:22Z",
                        "git_url": "git://github.com/mxinden/asynchronous-codec.git",
                        "ssh_url": "git@github.com:mxinden/asynchronous-codec.git",
                        "clone_url": "https://github.com/mxinden/asynchronous-codec.git",
                        "svn_url": "https://github.com/mxinden/asynchronous-codec",
                        "homepage": "",
                        "size": 146,
                        "stargazers_count": 11,
                        "watchers_count": 11,
                        "language": "Rust",
                        "has_issues": true,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 4,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 1,
                        "license": {
                            "key": "mit",
                            "name": "MIT License",
                            "spdx_id": "MIT",
                            "url": "https://api.github.com/licenses/mit",
                            "node_id": "MDc6TGljZW5zZTEz"
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "async-await",
                            "encoding",
                            "networking"
                        ],
                        "visibility": "public",
                        "forks": 4,
                        "open_issues": 1,
                        "watchers": 11,
                        "default_branch": "master"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/mxinden/asynchronous-codec/pulls/4"
                    },
                    "html": {
                        "href": "https://github.com/mxinden/asynchronous-codec/pull/4"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/mxinden/asynchronous-codec/issues/4"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/mxinden/asynchronous-codec/issues/4/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/mxinden/asynchronous-codec/pulls/4/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/mxinden/asynchronous-codec/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/mxinden/asynchronous-codec/pulls/4/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/mxinden/asynchronous-codec/statuses/964e568f9756b9ef304871305bf7429e63e38eef"
                    }
                },
                "author_association": "NONE",
                "auto_merge": null,
                "active_lock_reason": null,
                "merged": false,
                "mergeable": null,
                "rebaseable": null,
                "mergeable_state": "unknown",
                "merged_by": null,
                "comments": 0,
                "review_comments": 0,
                "maintainer_can_modify": true,
                "commits": 1,
                "additions": 286,
                "deletions": 104,
                "changed_files": 14
            }
        },
        "public": true,
        "created_at": "2022-11-27T16:28:08Z"
    },
    {
        "id": "25495409239",
        "type": "PushEvent",
        "actor": {
            "id": 1029536,
            "login": "boenrobot",
            "display_login": "boenrobot",
            "gravatar_id": "",
            "url": "https://api.github.com/users/boenrobot",
            "avatar_url": "https://avatars.githubusercontent.com/u/1029536?"
        },
        "repo": {
            "id": 570935558,
            "name": "boenrobot/asynchronous-codec",
            "url": "https://api.github.com/repos/boenrobot/asynchronous-codec"
        },
        "payload": {
            "push_id": 11799524585,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/custom-error-enum",
            "head": "964e568f9756b9ef304871305bf7429e63e38eef",
            "before": "4002cb79025962617128a972fb2dbad27341fdd2",
            "commits": [
                {
                    "sha": "964e568f9756b9ef304871305bf7429e63e38eef",
                    "author": {
                        "email": "boen.robot@gmail.com",
                        "name": "Vasil Rangelov"
                    },
                    "message": "Added a custom error enum to wrap around encoder and decoder errors, as well as an enum to wrap around read/write errors for Framed;\n\nPut std and alloc feature gates, and ensured the bytes encoder and decoder are usable without it.",
                    "distinct": true,
                    "url": "https://api.github.com/repos/boenrobot/asynchronous-codec/commits/964e568f9756b9ef304871305bf7429e63e38eef"
                }
            ]
        },
        "public": true,
        "created_at": "2022-11-27T16:07:58Z"
    },
    {
        "id": "25487528115",
        "type": "PushEvent",
        "actor": {
            "id": 1029536,
            "login": "boenrobot",
            "display_login": "boenrobot",
            "gravatar_id": "",
            "url": "https://api.github.com/users/boenrobot",
            "avatar_url": "https://avatars.githubusercontent.com/u/1029536?"
        },
        "repo": {
            "id": 570935558,
            "name": "boenrobot/asynchronous-codec",
            "url": "https://api.github.com/repos/boenrobot/asynchronous-codec"
        },
        "payload": {
            "push_id": 11794044612,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/custom-error-enum",
            "head": "4002cb79025962617128a972fb2dbad27341fdd2",
            "before": "33e3b403e75bc0a0d53563a6af9754dc36bd5202",
            "commits": [
                {
                    "sha": "4002cb79025962617128a972fb2dbad27341fdd2",
                    "author": {
                        "email": "boen.robot@gmail.com",
                        "name": "Vasil Rangelov"
                    },
                    "message": "Added a custom error enum to wrap around encoder and decoder errors.",
                    "distinct": true,
                    "url": "https://api.github.com/repos/boenrobot/asynchronous-codec/commits/4002cb79025962617128a972fb2dbad27341fdd2"
                }
            ]
        },
        "public": true,
        "created_at": "2022-11-26T16:04:14Z"
    },
    {
        "id": "25487520488",
        "type": "CreateEvent",
        "actor": {
            "id": 1029536,
            "login": "boenrobot",
            "display_login": "boenrobot",
            "gravatar_id": "",
            "url": "https://api.github.com/users/boenrobot",
            "avatar_url": "https://avatars.githubusercontent.com/u/1029536?"
        },
        "repo": {
            "id": 570935558,
            "name": "boenrobot/asynchronous-codec",
            "url": "https://api.github.com/repos/boenrobot/asynchronous-codec"
        },
        "payload": {
            "ref": "custom-error-enum",
            "ref_type": "branch",
            "master_branch": "master",
            "description": "Utilities for encoding and decoding frames using `async/await`.",
            "pusher_type": "user"
        },
        "public": true,
        "created_at": "2022-11-26T16:03:03Z"
    },
    {
        "id": "25487508238",
        "type": "ForkEvent",
        "actor": {
            "id": 1029536,
            "login": "boenrobot",
            "display_login": "boenrobot",
            "gravatar_id": "",
            "url": "https://api.github.com/users/boenrobot",
            "avatar_url": "https://avatars.githubusercontent.com/u/1029536?"
        },
        "repo": {
            "id": 327282114,
            "name": "mxinden/asynchronous-codec",
            "url": "https://api.github.com/repos/mxinden/asynchronous-codec"
        },
        "payload": {
            "forkee": {
                "id": 570935558,
                "node_id": "R_kgDOIgfJBg",
                "name": "asynchronous-codec",
                "full_name": "boenrobot/asynchronous-codec",
                "private": false,
                "owner": {
                    "login": "boenrobot",
                    "id": 1029536,
                    "node_id": "MDQ6VXNlcjEwMjk1MzY=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/1029536?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/boenrobot",
                    "html_url": "https://github.com/boenrobot",
                    "followers_url": "https://api.github.com/users/boenrobot/followers",
                    "following_url": "https://api.github.com/users/boenrobot/following{/other_user}",
                    "gists_url": "https://api.github.com/users/boenrobot/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/boenrobot/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/boenrobot/subscriptions",
                    "organizations_url": "https://api.github.com/users/boenrobot/orgs",
                    "repos_url": "https://api.github.com/users/boenrobot/repos",
                    "events_url": "https://api.github.com/users/boenrobot/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/boenrobot/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "html_url": "https://github.com/boenrobot/asynchronous-codec",
                "description": "Utilities for encoding and decoding frames using `async/await`.",
                "fork": true,
                "url": "https://api.github.com/repos/boenrobot/asynchronous-codec",
                "forks_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/forks",
                "keys_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/keys{/key_id}",
                "collaborators_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/collaborators{/collaborator}",
                "teams_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/teams",
                "hooks_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/hooks",
                "issue_events_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/issues/events{/number}",
                "events_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/events",
                "assignees_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/assignees{/user}",
                "branches_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/branches{/branch}",
                "tags_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/tags",
                "blobs_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/git/blobs{/sha}",
                "git_tags_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/git/tags{/sha}",
                "git_refs_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/git/refs{/sha}",
                "trees_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/git/trees{/sha}",
                "statuses_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/statuses/{sha}",
                "languages_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/languages",
                "stargazers_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/stargazers",
                "contributors_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/contributors",
                "subscribers_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/subscribers",
                "subscription_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/subscription",
                "commits_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/commits{/sha}",
                "git_commits_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/git/commits{/sha}",
                "comments_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/comments{/number}",
                "issue_comment_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/issues/comments{/number}",
                "contents_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/contents/{+path}",
                "compare_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/compare/{base}...{head}",
                "merges_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/merges",
                "archive_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/{archive_format}{/ref}",
                "downloads_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/downloads",
                "issues_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/issues{/number}",
                "pulls_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/pulls{/number}",
                "milestones_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/milestones{/number}",
                "notifications_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/notifications{?since,all,participating}",
                "labels_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/labels{/name}",
                "releases_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/releases{/id}",
                "deployments_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/deployments",
                "created_at": "2022-11-26T16:01:12Z",
                "updated_at": "2022-11-08T11:14:14Z",
                "pushed_at": "2022-11-08T10:14:22Z",
                "git_url": "git://github.com/boenrobot/asynchronous-codec.git",
                "ssh_url": "git@github.com:boenrobot/asynchronous-codec.git",
                "clone_url": "https://github.com/boenrobot/asynchronous-codec.git",
                "svn_url": "https://github.com/boenrobot/asynchronous-codec",
                "homepage": "",
                "size": 146,
                "stargazers_count": 0,
                "watchers_count": 0,
                "language": null,
                "has_issues": false,
                "has_projects": true,
                "has_downloads": true,
                "has_wiki": true,
                "has_pages": false,
                "has_discussions": false,
                "forks_count": 0,
                "mirror_url": null,
                "archived": false,
                "disabled": false,
                "open_issues_count": 0,
                "license": {
                    "key": "mit",
                    "name": "MIT License",
                    "spdx_id": "MIT",
                    "url": "https://api.github.com/licenses/mit",
                    "node_id": "MDc6TGljZW5zZTEz"
                },
                "allow_forking": true,
                "is_template": false,
                "web_commit_signoff_required": false,
                "topics": [],
                "visibility": "public",
                "forks": 0,
                "open_issues": 0,
                "watchers": 0,
                "default_branch": "master",
                "public": true
            }
        },
        "public": true,
        "created_at": "2022-11-26T16:01:13Z"
    },
    {
        "id": "25130970083",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 1029536,
            "login": "boenrobot",
            "display_login": "boenrobot",
            "gravatar_id": "",
            "url": "https://api.github.com/users/boenrobot",
            "avatar_url": "https://avatars.githubusercontent.com/u/1029536?"
        },
        "repo": {
            "id": 230595891,
            "name": "launchbadge/sqlx",
            "url": "https://api.github.com/repos/launchbadge/sqlx"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/launchbadge/sqlx/issues/2119",
                "repository_url": "https://api.github.com/repos/launchbadge/sqlx",
                "labels_url": "https://api.github.com/repos/launchbadge/sqlx/issues/2119/labels{/name}",
                "comments_url": "https://api.github.com/repos/launchbadge/sqlx/issues/2119/comments",
                "events_url": "https://api.github.com/repos/launchbadge/sqlx/issues/2119/events",
                "html_url": "https://github.com/launchbadge/sqlx/issues/2119",
                "id": 1385193034,
                "node_id": "I_kwDODb6dM85SkF5K",
                "number": 2119,
                "title": "sqlx no longer compiles on rust 1.64 when use any of the async-std features",
                "user": {
                    "login": "zaphar",
                    "id": 40631,
                    "node_id": "MDQ6VXNlcjQwNjMx",
                    "avatar_url": "https://avatars.githubusercontent.com/u/40631?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/zaphar",
                    "html_url": "https://github.com/zaphar",
                    "followers_url": "https://api.github.com/users/zaphar/followers",
                    "following_url": "https://api.github.com/users/zaphar/following{/other_user}",
                    "gists_url": "https://api.github.com/users/zaphar/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/zaphar/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/zaphar/subscriptions",
                    "organizations_url": "https://api.github.com/users/zaphar/orgs",
                    "repos_url": "https://api.github.com/users/zaphar/repos",
                    "events_url": "https://api.github.com/users/zaphar/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/zaphar/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 1757378993,
                        "node_id": "MDU6TGFiZWwxNzU3Mzc4OTkz",
                        "url": "https://api.github.com/repos/launchbadge/sqlx/labels/bug",
                        "name": "bug",
                        "color": "e11d21",
                        "default": true,
                        "description": ""
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 3,
                "created_at": "2022-09-25T23:05:59Z",
                "updated_at": "2022-11-09T15:07:28Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "### Bug Description\r\nCompile errors can be seen below. I assume this is because the async-rt support relies on the unstable features in async-std. and as a result the async-process crate doesn't build on this version.\r\n\r\n```\r\nerror[E0599]: no method named `as_fd` found for struct `Async` in the current scope\r\n   --> /Users/zaphar/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.5.0/src/lib.rs:514:16\r\n    |\r\n514 |         self.0.as_fd()\r\n    |                ^^^^^ method not found in `Async<std::process::ChildStdin>`\r\n\r\nerror[E0271]: type mismatch resolving `<OwnedFd as TryFrom<Async<std::process::ChildStdin>>>::Error == std::io::Error`\r\n   --> /Users/zaphar/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.5.0/src/lib.rs:523:17\r\n    |\r\n523 |         value.0.try_into()\r\n    |                 ^^^^^^^^ expected enum `Infallible`, found struct `std::io::Error`\r\n\r\nerror[E0277]: the trait bound `OwnedFd: From<Async<std::process::ChildStdin>>` is not satisfied\r\n   --> /Users/zaphar/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.5.0/src/lib.rs:523:17\r\n    |\r\n523 |         value.0.try_into()\r\n    |                 ^^^^^^^^ the trait `From<Async<std::process::ChildStdin>>` is not implemented for `OwnedFd`\r\n    |\r\n    = help: the following other types implement trait `From<T>`:\r\n              <OwnedFd as From<File>>\r\n              <OwnedFd as From<TcpListener>>\r\n              <OwnedFd as From<TcpStream>>\r\n              <OwnedFd as From<UdpSocket>>\r\n              <OwnedFd as From<UnixDatagram>>\r\n              <OwnedFd as From<UnixListener>>\r\n              <OwnedFd as From<UnixStream>>\r\n              <OwnedFd as From<std::process::ChildStderr>>\r\n            and 2 others\r\n    = note: required because of the requirements on the impl of `Into<OwnedFd>` for `Async<std::process::ChildStdin>`\r\n    = note: required because of the requirements on the impl of `TryFrom<Async<std::process::ChildStdin>>` for `OwnedFd`\r\n    = note: required because of the requirements on the impl of `TryInto<OwnedFd>` for `Async<std::process::ChildStdin>`\r\n\r\nerror[E0599]: no method named `as_fd` found for struct `Async` in the current scope\r\n   --> /Users/zaphar/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.5.0/src/lib.rs:598:16\r\n    |\r\n598 |         self.0.as_fd()\r\n    |                ^^^^^ method not found in `Async<std::process::ChildStdout>`\r\n\r\nerror[E0271]: type mismatch resolving `<OwnedFd as TryFrom<Async<std::process::ChildStdout>>>::Error == std::io::Error`\r\n   --> /Users/zaphar/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.5.0/src/lib.rs:607:17\r\n    |\r\n607 |         value.0.try_into()\r\n    |                 ^^^^^^^^ expected enum `Infallible`, found struct `std::io::Error`\r\n\r\nerror[E0277]: the trait bound `OwnedFd: From<Async<std::process::ChildStdout>>` is not satisfied\r\n   --> /Users/zaphar/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.5.0/src/lib.rs:607:17\r\n    |\r\n607 |         value.0.try_into()\r\n    |                 ^^^^^^^^ the trait `From<Async<std::process::ChildStdout>>` is not implemented for `OwnedFd`\r\n    |\r\n    = help: the following other types implement trait `From<T>`:\r\n              <OwnedFd as From<File>>\r\n              <OwnedFd as From<TcpListener>>\r\n              <OwnedFd as From<TcpStream>>\r\n              <OwnedFd as From<UdpSocket>>\r\n              <OwnedFd as From<UnixDatagram>>\r\n              <OwnedFd as From<UnixListener>>\r\n              <OwnedFd as From<UnixStream>>\r\n              <OwnedFd as From<std::process::ChildStderr>>\r\n            and 2 others\r\n    = note: required because of the requirements on the impl of `Into<OwnedFd>` for `Async<std::process::ChildStdout>`\r\n    = note: required because of the requirements on the impl of `TryFrom<Async<std::process::ChildStdout>>` for `OwnedFd`\r\n    = note: required because of the requirements on the impl of `TryInto<OwnedFd>` for `Async<std::process::ChildStdout>`\r\n\r\nerror[E0599]: no method named `as_fd` found for struct `Async` in the current scope\r\n   --> /Users/zaphar/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.5.0/src/lib.rs:671:16\r\n    |\r\n671 |         self.0.as_fd()\r\n    |                ^^^^^ method not found in `Async<std::process::ChildStderr>`\r\n\r\nerror[E0271]: type mismatch resolving `<OwnedFd as TryFrom<Async<std::process::ChildStderr>>>::Error == std::io::Error`\r\n   --> /Users/zaphar/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.5.0/src/lib.rs:680:17\r\n    |\r\n680 |         value.0.try_into()\r\n    |                 ^^^^^^^^ expected enum `Infallible`, found struct `std::io::Error`\r\n\r\nerror[E0277]: the trait bound `OwnedFd: From<Async<std::process::ChildStderr>>` is not satisfied\r\n   --> /Users/zaphar/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.5.0/src/lib.rs:680:17\r\n    |\r\n680 |         value.0.try_into()\r\n    |                 ^^^^^^^^ the trait `From<Async<std::process::ChildStderr>>` is not implemented for `OwnedFd`\r\n    |\r\n    = help: the following other types implement trait `From<T>`:\r\n              <OwnedFd as From<File>>\r\n              <OwnedFd as From<TcpListener>>\r\n              <OwnedFd as From<TcpStream>>\r\n              <OwnedFd as From<UdpSocket>>\r\n              <OwnedFd as From<UnixDatagram>>\r\n              <OwnedFd as From<UnixListener>>\r\n              <OwnedFd as From<UnixStream>>\r\n              <OwnedFd as From<std::process::ChildStderr>>\r\n            and 2 others\r\n    = note: required because of the requirements on the impl of `Into<OwnedFd>` for `Async<std::process::ChildStderr>`\r\n    = note: required because of the requirements on the impl of `TryFrom<Async<std::process::ChildStderr>>` for `OwnedFd`\r\n    = note: required because of the requirements on the impl of `TryInto<OwnedFd>` for `Async<std::process::ChildStderr>`\r\n\r\nSome errors have detailed explanations: E0271, E0277, E0599.\r\nFor more information about an error, try `rustc --explain E0271`.\r\nerror: could not compile `async-process` due to 9 previous errors\r\n```\r\n\r\n### Minimal Reproduction\r\n\r\nIt appears that all that is necessary is to be running rust 1.64 and include the `rust-async-std-rustls` or perhaps another `*-async-std-*` feature although I haven't directly verified that. But looking through the dependency tree with features and I would be surprised if this was not the case.\r\n\r\n### Info\r\n* sqlx version: sqlx v0.6.1\r\n* SQLx features enabled: [\"sqlite\", \"runtime-async-std-rustls\", \"offline\"]\r\n* Database server and version: SQLite\r\n* Operating system: MacOS\r\n* `rustc --version`: rustc 1.64.0 (a55dd71d5 2022-09-19)\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/launchbadge/sqlx/issues/2119/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/launchbadge/sqlx/issues/2119/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/launchbadge/sqlx/issues/comments/1308904062",
                "html_url": "https://github.com/launchbadge/sqlx/issues/2119#issuecomment-1308904062",
                "issue_url": "https://api.github.com/repos/launchbadge/sqlx/issues/2119",
                "id": 1308904062,
                "node_id": "IC_kwDODb6dM85OBEp-",
                "user": {
                    "login": "boenrobot",
                    "id": 1029536,
                    "node_id": "MDQ6VXNlcjEwMjk1MzY=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/1029536?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/boenrobot",
                    "html_url": "https://github.com/boenrobot",
                    "followers_url": "https://api.github.com/users/boenrobot/followers",
                    "following_url": "https://api.github.com/users/boenrobot/following{/other_user}",
                    "gists_url": "https://api.github.com/users/boenrobot/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/boenrobot/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/boenrobot/subscriptions",
                    "organizations_url": "https://api.github.com/users/boenrobot/orgs",
                    "repos_url": "https://api.github.com/users/boenrobot/repos",
                    "events_url": "https://api.github.com/users/boenrobot/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/boenrobot/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2022-11-09T15:07:28Z",
                "updated_at": "2022-11-09T15:07:28Z",
                "author_association": "NONE",
                "body": "The unstable flag has been added from the initial inception of sqlx-rt here: https://github.com/launchbadge/sqlx/commit/a233fbfdb7748a519035896a52c671ef7caa7e59\r\n\r\nAnd back when async-std was at 1.6.0. Now it is at 1.7.0. Perhaps whatever was unstable at 1.6.0 has already became stable by now, and nobody cared to remove the unstable flag?\r\n\r\nLooking at [the changelog of async-std](https://github.com/async-rs/async-std/blob/main/CHANGELOG.md), maybe it was initially added due to the fix later in 1.6.1?\r\n\r\nOr maybe it had something to do with the \"fs\" module. Specifically, symlinks on Windows were unstable, but by 1.7.0, they are stable. idk... Those are just the only things I can narrow down.\r\n\r\nIMO, the unstable flag should be removed, and if sqlx-rt needs it in the future, it can be added, along with a comment explaining the feature due to which it is added (so that it can be removed again once that new feature becomes stable).",
                "reactions": {
                    "url": "https://api.github.com/repos/launchbadge/sqlx/issues/comments/1308904062/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2022-11-09T15:07:29Z",
        "org": {
            "id": 10077001,
            "login": "launchbadge",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/launchbadge",
            "avatar_url": "https://avatars.githubusercontent.com/u/10077001?"
        }
    },
    {
        "id": "24987833829",
        "type": "PullRequestEvent",
        "actor": {
            "id": 1029536,
            "login": "boenrobot",
            "display_login": "boenrobot",
            "gravatar_id": "",
            "url": "https://api.github.com/users/boenrobot",
            "avatar_url": "https://avatars.githubusercontent.com/u/1029536?"
        },
        "repo": {
            "id": 308636076,
            "name": "gspirov/zendframework1-doctrine2",
            "url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2"
        },
        "payload": {
            "action": "opened",
            "number": 1,
            "pull_request": {
                "url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/pulls/1",
                "id": 1108507999,
                "node_id": "PR_kwDOEmVprM5CEn1f",
                "html_url": "https://github.com/gspirov/zendframework1-doctrine2/pull/1",
                "diff_url": "https://github.com/gspirov/zendframework1-doctrine2/pull/1.diff",
                "patch_url": "https://github.com/gspirov/zendframework1-doctrine2/pull/1.patch",
                "issue_url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/issues/1",
                "number": 1,
                "state": "open",
                "locked": false,
                "title": "Added support for DoctrineProvider wrapped cache adapters",
                "user": {
                    "login": "boenrobot",
                    "id": 1029536,
                    "node_id": "MDQ6VXNlcjEwMjk1MzY=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/1029536?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/boenrobot",
                    "html_url": "https://github.com/boenrobot",
                    "followers_url": "https://api.github.com/users/boenrobot/followers",
                    "following_url": "https://api.github.com/users/boenrobot/following{/other_user}",
                    "gists_url": "https://api.github.com/users/boenrobot/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/boenrobot/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/boenrobot/subscriptions",
                    "organizations_url": "https://api.github.com/users/boenrobot/orgs",
                    "repos_url": "https://api.github.com/users/boenrobot/repos",
                    "events_url": "https://api.github.com/users/boenrobot/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/boenrobot/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "Added support for DoctrineProvider wrapped cache adapters, and raised the acceptable doctrine ORM versions to any in the 2 family after 2.3.",
                "created_at": "2022-11-02T16:17:48Z",
                "updated_at": "2022-11-02T16:17:48Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": null,
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/pulls/1/commits",
                "review_comments_url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/pulls/1/comments",
                "review_comment_url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/issues/1/comments",
                "statuses_url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/statuses/326df3798b39c70596c1aef35ea692c55e8fd99e",
                "head": {
                    "label": "boenrobot:doctrine-provider-support",
                    "ref": "doctrine-provider-support",
                    "sha": "326df3798b39c70596c1aef35ea692c55e8fd99e",
                    "user": {
                        "login": "boenrobot",
                        "id": 1029536,
                        "node_id": "MDQ6VXNlcjEwMjk1MzY=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/1029536?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/boenrobot",
                        "html_url": "https://github.com/boenrobot",
                        "followers_url": "https://api.github.com/users/boenrobot/followers",
                        "following_url": "https://api.github.com/users/boenrobot/following{/other_user}",
                        "gists_url": "https://api.github.com/users/boenrobot/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/boenrobot/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/boenrobot/subscriptions",
                        "organizations_url": "https://api.github.com/users/boenrobot/orgs",
                        "repos_url": "https://api.github.com/users/boenrobot/repos",
                        "events_url": "https://api.github.com/users/boenrobot/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/boenrobot/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 560908421,
                        "node_id": "R_kgDOIW7IhQ",
                        "name": "zendframework1-doctrine2",
                        "full_name": "boenrobot/zendframework1-doctrine2",
                        "private": false,
                        "owner": {
                            "login": "boenrobot",
                            "id": 1029536,
                            "node_id": "MDQ6VXNlcjEwMjk1MzY=",
                            "avatar_url": "https://avatars.githubusercontent.com/u/1029536?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/boenrobot",
                            "html_url": "https://github.com/boenrobot",
                            "followers_url": "https://api.github.com/users/boenrobot/followers",
                            "following_url": "https://api.github.com/users/boenrobot/following{/other_user}",
                            "gists_url": "https://api.github.com/users/boenrobot/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/boenrobot/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/boenrobot/subscriptions",
                            "organizations_url": "https://api.github.com/users/boenrobot/orgs",
                            "repos_url": "https://api.github.com/users/boenrobot/repos",
                            "events_url": "https://api.github.com/users/boenrobot/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/boenrobot/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/boenrobot/zendframework1-doctrine2",
                        "description": "Integration for Zend Framework and Doctrine",
                        "fork": true,
                        "url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2",
                        "forks_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/forks",
                        "keys_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/teams",
                        "hooks_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/hooks",
                        "issue_events_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/events",
                        "assignees_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/tags",
                        "blobs_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/languages",
                        "stargazers_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/stargazers",
                        "contributors_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/contributors",
                        "subscribers_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/subscribers",
                        "subscription_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/subscription",
                        "commits_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/merges",
                        "archive_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/downloads",
                        "issues_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/labels{/name}",
                        "releases_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/deployments",
                        "created_at": "2022-11-02T14:29:46Z",
                        "updated_at": "2021-02-09T07:38:33Z",
                        "pushed_at": "2022-11-02T15:42:36Z",
                        "git_url": "git://github.com/boenrobot/zendframework1-doctrine2.git",
                        "ssh_url": "git@github.com:boenrobot/zendframework1-doctrine2.git",
                        "clone_url": "https://github.com/boenrobot/zendframework1-doctrine2.git",
                        "svn_url": "https://github.com/boenrobot/zendframework1-doctrine2",
                        "homepage": "",
                        "size": 119,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": null,
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": null,
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "master"
                    }
                },
                "base": {
                    "label": "gspirov:master",
                    "ref": "master",
                    "sha": "4c05c00ebd9d7928c636fd1d285eb13712534c11",
                    "user": {
                        "login": "gspirov",
                        "id": 58955169,
                        "node_id": "MDQ6VXNlcjU4OTU1MTY5",
                        "avatar_url": "https://avatars.githubusercontent.com/u/58955169?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/gspirov",
                        "html_url": "https://github.com/gspirov",
                        "followers_url": "https://api.github.com/users/gspirov/followers",
                        "following_url": "https://api.github.com/users/gspirov/following{/other_user}",
                        "gists_url": "https://api.github.com/users/gspirov/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/gspirov/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/gspirov/subscriptions",
                        "organizations_url": "https://api.github.com/users/gspirov/orgs",
                        "repos_url": "https://api.github.com/users/gspirov/repos",
                        "events_url": "https://api.github.com/users/gspirov/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/gspirov/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 308636076,
                        "node_id": "MDEwOlJlcG9zaXRvcnkzMDg2MzYwNzY=",
                        "name": "zendframework1-doctrine2",
                        "full_name": "gspirov/zendframework1-doctrine2",
                        "private": false,
                        "owner": {
                            "login": "gspirov",
                            "id": 58955169,
                            "node_id": "MDQ6VXNlcjU4OTU1MTY5",
                            "avatar_url": "https://avatars.githubusercontent.com/u/58955169?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/gspirov",
                            "html_url": "https://github.com/gspirov",
                            "followers_url": "https://api.github.com/users/gspirov/followers",
                            "following_url": "https://api.github.com/users/gspirov/following{/other_user}",
                            "gists_url": "https://api.github.com/users/gspirov/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/gspirov/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/gspirov/subscriptions",
                            "organizations_url": "https://api.github.com/users/gspirov/orgs",
                            "repos_url": "https://api.github.com/users/gspirov/repos",
                            "events_url": "https://api.github.com/users/gspirov/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/gspirov/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/gspirov/zendframework1-doctrine2",
                        "description": "Integration for Zend Framework and Doctrine",
                        "fork": true,
                        "url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2",
                        "forks_url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/forks",
                        "keys_url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/teams",
                        "hooks_url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/hooks",
                        "issue_events_url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/events",
                        "assignees_url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/tags",
                        "blobs_url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/languages",
                        "stargazers_url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/stargazers",
                        "contributors_url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/contributors",
                        "subscribers_url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/subscribers",
                        "subscription_url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/subscription",
                        "commits_url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/merges",
                        "archive_url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/downloads",
                        "issues_url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/labels{/name}",
                        "releases_url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/deployments",
                        "created_at": "2020-10-30T13:18:16Z",
                        "updated_at": "2021-02-09T07:38:33Z",
                        "pushed_at": "2022-11-02T16:17:49Z",
                        "git_url": "git://github.com/gspirov/zendframework1-doctrine2.git",
                        "ssh_url": "git@github.com:gspirov/zendframework1-doctrine2.git",
                        "clone_url": "https://github.com/gspirov/zendframework1-doctrine2.git",
                        "svn_url": "https://github.com/gspirov/zendframework1-doctrine2",
                        "homepage": "",
                        "size": 119,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": "PHP",
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "forks_count": 1,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 1,
                        "license": null,
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 1,
                        "open_issues": 1,
                        "watchers": 0,
                        "default_branch": "master"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/pulls/1"
                    },
                    "html": {
                        "href": "https://github.com/gspirov/zendframework1-doctrine2/pull/1"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/issues/1"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/issues/1/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/pulls/1/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/pulls/1/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/statuses/326df3798b39c70596c1aef35ea692c55e8fd99e"
                    }
                },
                "author_association": "NONE",
                "auto_merge": null,
                "active_lock_reason": null,
                "merged": false,
                "mergeable": null,
                "rebaseable": null,
                "mergeable_state": "unknown",
                "merged_by": null,
                "comments": 0,
                "review_comments": 0,
                "maintainer_can_modify": true,
                "commits": 1,
                "additions": 12,
                "deletions": 1,
                "changed_files": 2
            }
        },
        "public": true,
        "created_at": "2022-11-02T16:17:49Z"
    },
    {
        "id": "24986936049",
        "type": "PushEvent",
        "actor": {
            "id": 1029536,
            "login": "boenrobot",
            "display_login": "boenrobot",
            "gravatar_id": "",
            "url": "https://api.github.com/users/boenrobot",
            "avatar_url": "https://avatars.githubusercontent.com/u/1029536?"
        },
        "repo": {
            "id": 560908421,
            "name": "boenrobot/zendframework1-doctrine2",
            "url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2"
        },
        "payload": {
            "push_id": 11531490803,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/doctrine-provider-support",
            "head": "326df3798b39c70596c1aef35ea692c55e8fd99e",
            "before": "9dc71a9f713ee3718125e4681d9fce325d923a95",
            "commits": [
                {
                    "sha": "326df3798b39c70596c1aef35ea692c55e8fd99e",
                    "author": {
                        "email": "boen.robot@gmail.com",
                        "name": "Vasil Rangelov"
                    },
                    "message": "Added support for DoctrineProvider wrapped cache adapters, and raised the acceptable doctrine ORM versions to any in the 2 family after 2.3.",
                    "distinct": true,
                    "url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/commits/326df3798b39c70596c1aef35ea692c55e8fd99e"
                }
            ]
        },
        "public": true,
        "created_at": "2022-11-02T15:42:37Z"
    },
    {
        "id": "24985093526",
        "type": "CreateEvent",
        "actor": {
            "id": 1029536,
            "login": "boenrobot",
            "display_login": "boenrobot",
            "gravatar_id": "",
            "url": "https://api.github.com/users/boenrobot",
            "avatar_url": "https://avatars.githubusercontent.com/u/1029536?"
        },
        "repo": {
            "id": 560908421,
            "name": "boenrobot/zendframework1-doctrine2",
            "url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2"
        },
        "payload": {
            "ref": "doctrine-provider-support",
            "ref_type": "branch",
            "master_branch": "master",
            "description": "Integration for Zend Framework and Doctrine",
            "pusher_type": "user"
        },
        "public": true,
        "created_at": "2022-11-02T14:32:54Z"
    },
    {
        "id": "24985010051",
        "type": "ForkEvent",
        "actor": {
            "id": 1029536,
            "login": "boenrobot",
            "display_login": "boenrobot",
            "gravatar_id": "",
            "url": "https://api.github.com/users/boenrobot",
            "avatar_url": "https://avatars.githubusercontent.com/u/1029536?"
        },
        "repo": {
            "id": 308636076,
            "name": "gspirov/zendframework1-doctrine2",
            "url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2"
        },
        "payload": {
            "forkee": {
                "id": 560908421,
                "node_id": "R_kgDOIW7IhQ",
                "name": "zendframework1-doctrine2",
                "full_name": "boenrobot/zendframework1-doctrine2",
                "private": false,
                "owner": {
                    "login": "boenrobot",
                    "id": 1029536,
                    "node_id": "MDQ6VXNlcjEwMjk1MzY=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/1029536?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/boenrobot",
                    "html_url": "https://github.com/boenrobot",
                    "followers_url": "https://api.github.com/users/boenrobot/followers",
                    "following_url": "https://api.github.com/users/boenrobot/following{/other_user}",
                    "gists_url": "https://api.github.com/users/boenrobot/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/boenrobot/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/boenrobot/subscriptions",
                    "organizations_url": "https://api.github.com/users/boenrobot/orgs",
                    "repos_url": "https://api.github.com/users/boenrobot/repos",
                    "events_url": "https://api.github.com/users/boenrobot/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/boenrobot/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "html_url": "https://github.com/boenrobot/zendframework1-doctrine2",
                "description": "Integration for Zend Framework and Doctrine",
                "fork": true,
                "url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2",
                "forks_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/forks",
                "keys_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/keys{/key_id}",
                "collaborators_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/collaborators{/collaborator}",
                "teams_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/teams",
                "hooks_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/hooks",
                "issue_events_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/issues/events{/number}",
                "events_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/events",
                "assignees_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/assignees{/user}",
                "branches_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/branches{/branch}",
                "tags_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/tags",
                "blobs_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/git/blobs{/sha}",
                "git_tags_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/git/tags{/sha}",
                "git_refs_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/git/refs{/sha}",
                "trees_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/git/trees{/sha}",
                "statuses_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/statuses/{sha}",
                "languages_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/languages",
                "stargazers_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/stargazers",
                "contributors_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/contributors",
                "subscribers_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/subscribers",
                "subscription_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/subscription",
                "commits_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/commits{/sha}",
                "git_commits_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/git/commits{/sha}",
                "comments_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/comments{/number}",
                "issue_comment_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/issues/comments{/number}",
                "contents_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/contents/{+path}",
                "compare_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/compare/{base}...{head}",
                "merges_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/merges",
                "archive_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/{archive_format}{/ref}",
                "downloads_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/downloads",
                "issues_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/issues{/number}",
                "pulls_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/pulls{/number}",
                "milestones_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/milestones{/number}",
                "notifications_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/notifications{?since,all,participating}",
                "labels_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/labels{/name}",
                "releases_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/releases{/id}",
                "deployments_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/deployments",
                "created_at": "2022-11-02T14:29:46Z",
                "updated_at": "2021-02-09T07:38:33Z",
                "pushed_at": "2021-02-09T07:49:16Z",
                "git_url": "git://github.com/boenrobot/zendframework1-doctrine2.git",
                "ssh_url": "git@github.com:boenrobot/zendframework1-doctrine2.git",
                "clone_url": "https://github.com/boenrobot/zendframework1-doctrine2.git",
                "svn_url": "https://github.com/boenrobot/zendframework1-doctrine2",
                "homepage": "",
                "size": 119,
                "stargazers_count": 0,
                "watchers_count": 0,
                "language": null,
                "has_issues": false,
                "has_projects": true,
                "has_downloads": true,
                "has_wiki": true,
                "has_pages": false,
                "forks_count": 0,
                "mirror_url": null,
                "archived": false,
                "disabled": false,
                "open_issues_count": 0,
                "license": null,
                "allow_forking": true,
                "is_template": false,
                "web_commit_signoff_required": false,
                "topics": [],
                "visibility": "public",
                "forks": 0,
                "open_issues": 0,
                "watchers": 0,
                "default_branch": "master",
                "public": true
            }
        },
        "public": true,
        "created_at": "2022-11-02T14:29:47Z"
    },
    {
        "id": "24603366398",
        "type": "IssuesEvent",
        "actor": {
            "id": 1029536,
            "login": "boenrobot",
            "display_login": "boenrobot",
            "gravatar_id": "",
            "url": "https://api.github.com/users/boenrobot",
            "avatar_url": "https://avatars.githubusercontent.com/u/1029536?"
        },
        "repo": {
            "id": 166616185,
            "name": "roc-lang/roc",
            "url": "https://api.github.com/repos/roc-lang/roc"
        },
        "payload": {
            "action": "opened",
            "issue": {
                "url": "https://api.github.com/repos/roc-lang/roc/issues/4326",
                "repository_url": "https://api.github.com/repos/roc-lang/roc",
                "labels_url": "https://api.github.com/repos/roc-lang/roc/issues/4326/labels{/name}",
                "comments_url": "https://api.github.com/repos/roc-lang/roc/issues/4326/comments",
                "events_url": "https://api.github.com/repos/roc-lang/roc/issues/4326/events",
                "html_url": "https://github.com/roc-lang/roc/issues/4326",
                "id": 1409422102,
                "node_id": "I_kwDOCe5cec5UAhMW",
                "number": 4326,
                "title": "HTTP boundary value",
                "user": {
                    "login": "boenrobot",
                    "id": 1029536,
                    "node_id": "MDQ6VXNlcjEwMjk1MzY=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/1029536?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/boenrobot",
                    "html_url": "https://github.com/boenrobot",
                    "followers_url": "https://api.github.com/users/boenrobot/followers",
                    "following_url": "https://api.github.com/users/boenrobot/following{/other_user}",
                    "gists_url": "https://api.github.com/users/boenrobot/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/boenrobot/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/boenrobot/subscriptions",
                    "organizations_url": "https://api.github.com/users/boenrobot/orgs",
                    "repos_url": "https://api.github.com/users/boenrobot/repos",
                    "events_url": "https://api.github.com/users/boenrobot/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/boenrobot/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 0,
                "created_at": "2022-10-14T14:14:28Z",
                "updated_at": "2022-10-14T14:14:28Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "https://github.com/roc-lang/roc/blob/89a4522faa20ee0b3ed0cdeaab07379873b95c3f/examples/cli/cli-platform/Http.roc#L65\r\n\r\nThought I answer this TODO by linking you guys to this\r\nhttps://www.w3.org/Protocols/rfc1341/7_2_Multipart.html\r\n\r\nBasically, \"boundary\" should ideally not be hardcoded, and doesn't have to be any particular hash. It's a delimiter.\r\n\r\nIt can be any 0-69 characters long string with the alphabet described in the spec (alphanum plus a few ASCII punctuation characters). That string, prefixed with \"--\", should not occur in the actual contents of the data being transferred.\r\n\r\nBtw, I see the chosen string is taken straight out of https://package.elm-lang.org/packages/elm/http/2.0.0/Http .\r\n\r\nThe way it is currently hardcoded, if I have a textarea form field called \"title\" and I use as a value\r\n\r\n```\r\nHello\r\n\r\n--7MA4YWxkTrZu0gW\r\nContent-Disposition: file; filename=\"file1.txt\"\r\nContent-Type: text/plain\r\n\r\nTrip to London\r\n```\r\n\r\nThis should give the server the string \"Hello\" for \"title\", and also attach a text file with the contents \"Trip to London\". I say \"should\", because I haven't actually tried this. I was just browsing the source for... reasons... and stumbled upon this.\ud83d\ude05 ",
                "reactions": {
                    "url": "https://api.github.com/repos/roc-lang/roc/issues/4326/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/roc-lang/roc/issues/4326/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            }
        },
        "public": true,
        "created_at": "2022-10-14T14:14:29Z",
        "org": {
            "id": 63474338,
            "login": "roc-lang",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/roc-lang",
            "avatar_url": "https://avatars.githubusercontent.com/u/63474338?"
        }
    },
    {
        "id": "24107168917",
        "type": "WatchEvent",
        "actor": {
            "id": 1029536,
            "login": "boenrobot",
            "display_login": "boenrobot",
            "gravatar_id": "",
            "url": "https://api.github.com/users/boenrobot",
            "avatar_url": "https://avatars.githubusercontent.com/u/1029536?"
        },
        "repo": {
            "id": 467212329,
            "name": "microsoft/routeros-scanner",
            "url": "https://api.github.com/repos/microsoft/routeros-scanner"
        },
        "payload": {
            "action": "started"
        },
        "public": true,
        "created_at": "2022-09-20T08:26:14Z",
        "org": {
            "id": 6154722,
            "login": "microsoft",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/microsoft",
            "avatar_url": "https://avatars.githubusercontent.com/u/6154722?"
        }
    },
    {
        "id": "24044593645",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 1029536,
            "login": "boenrobot",
            "display_login": "boenrobot",
            "gravatar_id": "",
            "url": "https://api.github.com/users/boenrobot",
            "avatar_url": "https://avatars.githubusercontent.com/u/1029536?"
        },
        "repo": {
            "id": 12084182,
            "name": "friends-of-reactphp/mysql",
            "url": "https://api.github.com/repos/friends-of-reactphp/mysql"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/friends-of-reactphp/mysql/issues/151",
                "repository_url": "https://api.github.com/repos/friends-of-reactphp/mysql",
                "labels_url": "https://api.github.com/repos/friends-of-reactphp/mysql/issues/151/labels{/name}",
                "comments_url": "https://api.github.com/repos/friends-of-reactphp/mysql/issues/151/comments",
                "events_url": "https://api.github.com/repos/friends-of-reactphp/mysql/issues/151/events",
                "html_url": "https://github.com/friends-of-reactphp/mysql/issues/151",
                "id": 1084427696,
                "node_id": "I_kwDOALhj1s5Aow2w",
                "number": 151,
                "title": "How to support duplicate column names?",
                "user": {
                    "login": "clue",
                    "id": 776829,
                    "node_id": "MDQ6VXNlcjc3NjgyOQ==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/776829?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/clue",
                    "html_url": "https://github.com/clue",
                    "followers_url": "https://api.github.com/users/clue/followers",
                    "following_url": "https://api.github.com/users/clue/following{/other_user}",
                    "gists_url": "https://api.github.com/users/clue/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/clue/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/clue/subscriptions",
                    "organizations_url": "https://api.github.com/users/clue/orgs",
                    "repos_url": "https://api.github.com/users/clue/repos",
                    "events_url": "https://api.github.com/users/clue/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/clue/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 51889037,
                        "node_id": "MDU6TGFiZWw1MTg4OTAzNw==",
                        "url": "https://api.github.com/repos/friends-of-reactphp/mysql/labels/question",
                        "name": "question",
                        "color": "cc317c",
                        "default": true,
                        "description": null
                    },
                    {
                        "id": 863287342,
                        "node_id": "MDU6TGFiZWw4NjMyODczNDI=",
                        "url": "https://api.github.com/repos/friends-of-reactphp/mysql/labels/help%20wanted",
                        "name": "help wanted",
                        "color": "0e8a16",
                        "default": true,
                        "description": ""
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 1,
                "created_at": "2021-12-20T06:55:45Z",
                "updated_at": "2022-09-16T07:05:58Z",
                "closed_at": null,
                "author_association": "CONTRIBUTOR",
                "active_lock_reason": null,
                "body": "How should we handle queries that use the same name column name multiple times?\r\n\r\n```sql\r\n-- Bob wins\r\nSELECT \"Alice\" AS name, \"Bob\" AS name\r\n\r\n-- Bob wins\r\nSELECT \"Alice\" AS name, user.* FROM (SELECT \"Bob\" AS name) AS user\r\n\r\n-- Alice wins\r\nSELECT user.*, \"Alice\" AS name FROM (SELECT \"Bob\" AS name) AS user\r\n```\r\n\r\nAt the moment, the value from the last occurrence wins because we expose each row as an associative array (later values with the same key overwrite previous values).\r\n\r\nTechnically, the protocol exposes a list of all values, so we do have access to all values inside the protocol implementation, but do not currently expose this to the user. Other projects expose a \"fetch mode\" to control whether the data should be exposed as a plain list (`PDO::FETCH_NUM`) or as an associative array (`PDO::FETCH_ASSOC`) or object (`PDO::FETCH_OBJ` / `PDO::FETCH_CLASS`), etc. (https://www.php.net/manual/en/pdostatement.fetch.php)\r\n\r\nThe current behavior can be seen as inconvenient or inconsistent, given that `QueryResult::$resultFields` contains a list of all(!) column names, yet `QueryResult::$resultRows[0]` contains an associative array with unique column names only. If you run any of the above queries with the `examples/01-query.php` script, you'll see that it reports a table with 2 header columns, but only reports one value per row.\r\n\r\nProviding this kind of API isn't too much work, but I wonder how big of a problem this actually is and whether this actually warrants increasing our API surface?",
                "reactions": {
                    "url": "https://api.github.com/repos/friends-of-reactphp/mysql/issues/151/reactions",
                    "total_count": 1,
                    "+1": 1,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/friends-of-reactphp/mysql/issues/151/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/friends-of-reactphp/mysql/issues/comments/1248997615",
                "html_url": "https://github.com/friends-of-reactphp/mysql/issues/151#issuecomment-1248997615",
                "issue_url": "https://api.github.com/repos/friends-of-reactphp/mysql/issues/151",
                "id": 1248997615,
                "node_id": "IC_kwDOALhj1s5KcjDv",
                "user": {
                    "login": "boenrobot",
                    "id": 1029536,
                    "node_id": "MDQ6VXNlcjEwMjk1MzY=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/1029536?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/boenrobot",
                    "html_url": "https://github.com/boenrobot",
                    "followers_url": "https://api.github.com/users/boenrobot/followers",
                    "following_url": "https://api.github.com/users/boenrobot/following{/other_user}",
                    "gists_url": "https://api.github.com/users/boenrobot/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/boenrobot/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/boenrobot/subscriptions",
                    "organizations_url": "https://api.github.com/users/boenrobot/orgs",
                    "repos_url": "https://api.github.com/users/boenrobot/repos",
                    "events_url": "https://api.github.com/users/boenrobot/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/boenrobot/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2022-09-16T07:05:58Z",
                "updated_at": "2022-09-16T07:05:58Z",
                "author_association": "NONE",
                "body": "IMHO, adding a fetch mode in general is worth it.\r\n\r\nKeep the current default of taking the last value in an associate array (both for the sake of BC, but also for the sake of people coming from PDO), but add an indexed array option, which would return all column values mapped to the same indexes (i.e. ```count($queryResult->resultFields) === count($queryResult->resultRows[0])```).\r\n\r\nAdding a object mode could be worth it if that object combines the two other fetch modes, i.e. it provides ArrayAccess that would give the column at that index when given an integer, or the last column of that name if given a string. On such an object, count() and foreach behavior could perhaps default to the associative array behavior, but provide a setter to switch both to an indexed mode. This object mode would obviously be more memory consuming, since it would need to contain a reference to some \"string to index\" map which would add some overhead.\r\n\r\nA \"compact\" object mode (akin to PDO's object mode) is not worth it I think, as in PHP, it has the same ergonomics as an associative array. If you need an stdClass, you can always just cast the associative array.\r\n\r\nA \"class\" mode is also not worth it I think, as you still need to define a mapping anyway - might as well define it out of the build it fetch modes. Less magic = easier to reason about.",
                "reactions": {
                    "url": "https://api.github.com/repos/friends-of-reactphp/mysql/issues/comments/1248997615/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2022-09-16T07:05:58Z",
        "org": {
            "id": 28479009,
            "login": "friends-of-reactphp",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/friends-of-reactphp",
            "avatar_url": "https://avatars.githubusercontent.com/u/28479009?"
        }
    },
    {
        "id": "24024650715",
        "type": "WatchEvent",
        "actor": {
            "id": 1029536,
            "login": "boenrobot",
            "display_login": "boenrobot",
            "gravatar_id": "",
            "url": "https://api.github.com/users/boenrobot",
            "avatar_url": "https://avatars.githubusercontent.com/u/1029536?"
        },
        "repo": {
            "id": 166616185,
            "name": "roc-lang/roc",
            "url": "https://api.github.com/repos/roc-lang/roc"
        },
        "payload": {
            "action": "started"
        },
        "public": true,
        "created_at": "2022-09-15T10:26:55Z",
        "org": {
            "id": 63474338,
            "login": "roc-lang",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/roc-lang",
            "avatar_url": "https://avatars.githubusercontent.com/u/63474338?"
        }
    },
    {
        "id": "25748351694",
        "type": "IssuesEvent",
        "actor": {
            "id": 1029536,
            "login": "boenrobot",
            "display_login": "boenrobot",
            "gravatar_id": "",
            "url": "https://api.github.com/users/boenrobot",
            "avatar_url": "https://avatars.githubusercontent.com/u/1029536?"
        },
        "repo": {
            "id": 173702772,
            "name": "pest-parser/intellij-pest",
            "url": "https://api.github.com/repos/pest-parser/intellij-pest"
        },
        "payload": {
            "action": "opened",
            "issue": {
                "url": "https://api.github.com/repos/pest-parser/intellij-pest/issues/261",
                "repository_url": "https://api.github.com/repos/pest-parser/intellij-pest",
                "labels_url": "https://api.github.com/repos/pest-parser/intellij-pest/issues/261/labels{/name}",
                "comments_url": "https://api.github.com/repos/pest-parser/intellij-pest/issues/261/comments",
                "events_url": "https://api.github.com/repos/pest-parser/intellij-pest/issues/261/events",
                "html_url": "https://github.com/pest-parser/intellij-pest/issues/261",
                "id": 1484415510,
                "node_id": "I_kwDOClp-dM5YemIW",
                "number": 261,
                "title": "Include output in live preview",
                "user": {
                    "login": "boenrobot",
                    "id": 1029536,
                    "node_id": "MDQ6VXNlcjEwMjk1MzY=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/1029536?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/boenrobot",
                    "html_url": "https://github.com/boenrobot",
                    "followers_url": "https://api.github.com/users/boenrobot/followers",
                    "following_url": "https://api.github.com/users/boenrobot/following{/other_user}",
                    "gists_url": "https://api.github.com/users/boenrobot/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/boenrobot/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/boenrobot/subscriptions",
                    "organizations_url": "https://api.github.com/users/boenrobot/orgs",
                    "repos_url": "https://api.github.com/users/boenrobot/repos",
                    "events_url": "https://api.github.com/users/boenrobot/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/boenrobot/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 0,
                "created_at": "2022-12-08T11:23:08Z",
                "updated_at": "2022-12-08T11:23:08Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "The pest.rs website has a feature where if you have the grammar successfully evaluate an input, you get the output AST.\r\n\r\nThis is very useful when iterating on new parsers. The live preview in the IDE instead does nothing on a successful parsing of the input, other than not complain, to show that parsing is successful.",
                "reactions": {
                    "url": "https://api.github.com/repos/pest-parser/intellij-pest/issues/261/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/pest-parser/intellij-pest/issues/261/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            }
        },
        "public": true,
        "created_at": "2022-12-08T11:23:09Z",
        "org": {
            "id": 26044607,
            "login": "pest-parser",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/pest-parser",
            "avatar_url": "https://avatars.githubusercontent.com/u/26044607?"
        }
    },
    {
        "id": "25685591150",
        "type": "PullRequestEvent",
        "actor": {
            "id": 1029536,
            "login": "boenrobot",
            "display_login": "boenrobot",
            "gravatar_id": "",
            "url": "https://api.github.com/users/boenrobot",
            "avatar_url": "https://avatars.githubusercontent.com/u/1029536?"
        },
        "repo": {
            "id": 141724413,
            "name": "Shardj/zf1-future",
            "url": "https://api.github.com/repos/Shardj/zf1-future"
        },
        "payload": {
            "action": "opened",
            "number": 292,
            "pull_request": {
                "url": "https://api.github.com/repos/Shardj/zf1-future/pulls/292",
                "id": 1148576806,
                "node_id": "PR_kwDOCHKK_c5EdeQm",
                "html_url": "https://github.com/Shardj/zf1-future/pull/292",
                "diff_url": "https://github.com/Shardj/zf1-future/pull/292.diff",
                "patch_url": "https://github.com/Shardj/zf1-future/pull/292.patch",
                "issue_url": "https://api.github.com/repos/Shardj/zf1-future/issues/292",
                "number": 292,
                "state": "open",
                "locked": false,
                "title": "Compatibility with PHPUnit 9",
                "user": {
                    "login": "boenrobot",
                    "id": 1029536,
                    "node_id": "MDQ6VXNlcjEwMjk1MzY=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/1029536?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/boenrobot",
                    "html_url": "https://github.com/boenrobot",
                    "followers_url": "https://api.github.com/users/boenrobot/followers",
                    "following_url": "https://api.github.com/users/boenrobot/following{/other_user}",
                    "gists_url": "https://api.github.com/users/boenrobot/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/boenrobot/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/boenrobot/subscriptions",
                    "organizations_url": "https://api.github.com/users/boenrobot/orgs",
                    "repos_url": "https://api.github.com/users/boenrobot/repos",
                    "events_url": "https://api.github.com/users/boenrobot/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/boenrobot/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "I found out #44 , and followed the advice of adding shims for the missing classes, including also adding\r\n\r\n```php\r\nuse PHPUnit\\Runner\\Version;\r\n\r\nfinal class PHPUnit_Runner_Version {\r\n    public static function id(): string\r\n    {\r\n        return Version::id();\r\n    }\r\n\r\n    public static function series(): string\r\n    {\r\n        return Version::series();\r\n    }\r\n\r\n    public static function getVersionString(): string\r\n    {\r\n        return Version::getVersionString();\r\n    }\r\n}\r\n```\r\n\r\nFor the sake of PHPUnit\\Runner\\Version that is otherwise final, so can't simply be extended, and PHPUnit_Framework_ExpectationFailedException is only referenced in doc comments, so it's not required for the tests to actually run.\r\n\r\nEven after all that, I got\r\n```\r\nFatal error: Declaration of Zend_Test_PHPUnit_ControllerTestCase::setUp() must be compatible with PHPUnit\\Framework\\TestCase::setUp(): void in C:\\...\\vendor\\shardj\\zf1-future\\library\\Zend\\Test\\PHPUnit\\ControllerTestCase.php on line 123\r\n```\r\n\r\nAfter explicitly adding `: void` to the return type, it works, so this is a PR to fix this. bootstrap()... I thought I might as well... It's a final method already.",
                "created_at": "2022-12-06T10:01:24Z",
                "updated_at": "2022-12-06T10:01:24Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": null,
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/Shardj/zf1-future/pulls/292/commits",
                "review_comments_url": "https://api.github.com/repos/Shardj/zf1-future/pulls/292/comments",
                "review_comment_url": "https://api.github.com/repos/Shardj/zf1-future/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/Shardj/zf1-future/issues/292/comments",
                "statuses_url": "https://api.github.com/repos/Shardj/zf1-future/statuses/86fd28fbdf4aa13dbefac47197dc2d326e0b5a2e",
                "head": {
                    "label": "boenrobot:phpunit-forward-compat",
                    "ref": "phpunit-forward-compat",
                    "sha": "86fd28fbdf4aa13dbefac47197dc2d326e0b5a2e",
                    "user": {
                        "login": "boenrobot",
                        "id": 1029536,
                        "node_id": "MDQ6VXNlcjEwMjk1MzY=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/1029536?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/boenrobot",
                        "html_url": "https://github.com/boenrobot",
                        "followers_url": "https://api.github.com/users/boenrobot/followers",
                        "following_url": "https://api.github.com/users/boenrobot/following{/other_user}",
                        "gists_url": "https://api.github.com/users/boenrobot/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/boenrobot/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/boenrobot/subscriptions",
                        "organizations_url": "https://api.github.com/users/boenrobot/orgs",
                        "repos_url": "https://api.github.com/users/boenrobot/repos",
                        "events_url": "https://api.github.com/users/boenrobot/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/boenrobot/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 574890254,
                        "node_id": "R_kgDOIkQhDg",
                        "name": "zf1-future",
                        "full_name": "boenrobot/zf1-future",
                        "private": false,
                        "owner": {
                            "login": "boenrobot",
                            "id": 1029536,
                            "node_id": "MDQ6VXNlcjEwMjk1MzY=",
                            "avatar_url": "https://avatars.githubusercontent.com/u/1029536?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/boenrobot",
                            "html_url": "https://github.com/boenrobot",
                            "followers_url": "https://api.github.com/users/boenrobot/followers",
                            "following_url": "https://api.github.com/users/boenrobot/following{/other_user}",
                            "gists_url": "https://api.github.com/users/boenrobot/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/boenrobot/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/boenrobot/subscriptions",
                            "organizations_url": "https://api.github.com/users/boenrobot/orgs",
                            "repos_url": "https://api.github.com/users/boenrobot/repos",
                            "events_url": "https://api.github.com/users/boenrobot/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/boenrobot/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/boenrobot/zf1-future",
                        "description": "PHP 8.0 compatible version of ZF1",
                        "fork": true,
                        "url": "https://api.github.com/repos/boenrobot/zf1-future",
                        "forks_url": "https://api.github.com/repos/boenrobot/zf1-future/forks",
                        "keys_url": "https://api.github.com/repos/boenrobot/zf1-future/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/boenrobot/zf1-future/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/boenrobot/zf1-future/teams",
                        "hooks_url": "https://api.github.com/repos/boenrobot/zf1-future/hooks",
                        "issue_events_url": "https://api.github.com/repos/boenrobot/zf1-future/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/boenrobot/zf1-future/events",
                        "assignees_url": "https://api.github.com/repos/boenrobot/zf1-future/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/boenrobot/zf1-future/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/boenrobot/zf1-future/tags",
                        "blobs_url": "https://api.github.com/repos/boenrobot/zf1-future/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/boenrobot/zf1-future/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/boenrobot/zf1-future/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/boenrobot/zf1-future/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/boenrobot/zf1-future/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/boenrobot/zf1-future/languages",
                        "stargazers_url": "https://api.github.com/repos/boenrobot/zf1-future/stargazers",
                        "contributors_url": "https://api.github.com/repos/boenrobot/zf1-future/contributors",
                        "subscribers_url": "https://api.github.com/repos/boenrobot/zf1-future/subscribers",
                        "subscription_url": "https://api.github.com/repos/boenrobot/zf1-future/subscription",
                        "commits_url": "https://api.github.com/repos/boenrobot/zf1-future/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/boenrobot/zf1-future/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/boenrobot/zf1-future/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/boenrobot/zf1-future/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/boenrobot/zf1-future/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/boenrobot/zf1-future/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/boenrobot/zf1-future/merges",
                        "archive_url": "https://api.github.com/repos/boenrobot/zf1-future/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/boenrobot/zf1-future/downloads",
                        "issues_url": "https://api.github.com/repos/boenrobot/zf1-future/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/boenrobot/zf1-future/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/boenrobot/zf1-future/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/boenrobot/zf1-future/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/boenrobot/zf1-future/labels{/name}",
                        "releases_url": "https://api.github.com/repos/boenrobot/zf1-future/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/boenrobot/zf1-future/deployments",
                        "created_at": "2022-12-06T09:52:49Z",
                        "updated_at": "2022-12-02T13:42:32Z",
                        "pushed_at": "2022-12-06T09:54:48Z",
                        "git_url": "git://github.com/boenrobot/zf1-future.git",
                        "ssh_url": "git@github.com:boenrobot/zf1-future.git",
                        "clone_url": "https://github.com/boenrobot/zf1-future.git",
                        "svn_url": "https://github.com/boenrobot/zf1-future",
                        "homepage": "",
                        "size": 86409,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": null,
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "bsd-3-clause",
                            "name": "BSD 3-Clause \"New\" or \"Revised\" License",
                            "spdx_id": "BSD-3-Clause",
                            "url": "https://api.github.com/licenses/bsd-3-clause",
                            "node_id": "MDc6TGljZW5zZTU="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "master"
                    }
                },
                "base": {
                    "label": "Shardj:master",
                    "ref": "master",
                    "sha": "66f96b4d55d24850f002156c9b447abf9b154ad7",
                    "user": {
                        "login": "Shardj",
                        "id": 5624120,
                        "node_id": "MDQ6VXNlcjU2MjQxMjA=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/5624120?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/Shardj",
                        "html_url": "https://github.com/Shardj",
                        "followers_url": "https://api.github.com/users/Shardj/followers",
                        "following_url": "https://api.github.com/users/Shardj/following{/other_user}",
                        "gists_url": "https://api.github.com/users/Shardj/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/Shardj/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/Shardj/subscriptions",
                        "organizations_url": "https://api.github.com/users/Shardj/orgs",
                        "repos_url": "https://api.github.com/users/Shardj/repos",
                        "events_url": "https://api.github.com/users/Shardj/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/Shardj/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 141724413,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNDE3MjQ0MTM=",
                        "name": "zf1-future",
                        "full_name": "Shardj/zf1-future",
                        "private": false,
                        "owner": {
                            "login": "Shardj",
                            "id": 5624120,
                            "node_id": "MDQ6VXNlcjU2MjQxMjA=",
                            "avatar_url": "https://avatars.githubusercontent.com/u/5624120?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/Shardj",
                            "html_url": "https://github.com/Shardj",
                            "followers_url": "https://api.github.com/users/Shardj/followers",
                            "following_url": "https://api.github.com/users/Shardj/following{/other_user}",
                            "gists_url": "https://api.github.com/users/Shardj/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/Shardj/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/Shardj/subscriptions",
                            "organizations_url": "https://api.github.com/users/Shardj/orgs",
                            "repos_url": "https://api.github.com/users/Shardj/repos",
                            "events_url": "https://api.github.com/users/Shardj/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/Shardj/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/Shardj/zf1-future",
                        "description": "PHP 8.0 compatible version of ZF1",
                        "fork": true,
                        "url": "https://api.github.com/repos/Shardj/zf1-future",
                        "forks_url": "https://api.github.com/repos/Shardj/zf1-future/forks",
                        "keys_url": "https://api.github.com/repos/Shardj/zf1-future/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/Shardj/zf1-future/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/Shardj/zf1-future/teams",
                        "hooks_url": "https://api.github.com/repos/Shardj/zf1-future/hooks",
                        "issue_events_url": "https://api.github.com/repos/Shardj/zf1-future/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/Shardj/zf1-future/events",
                        "assignees_url": "https://api.github.com/repos/Shardj/zf1-future/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/Shardj/zf1-future/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/Shardj/zf1-future/tags",
                        "blobs_url": "https://api.github.com/repos/Shardj/zf1-future/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/Shardj/zf1-future/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/Shardj/zf1-future/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/Shardj/zf1-future/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/Shardj/zf1-future/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/Shardj/zf1-future/languages",
                        "stargazers_url": "https://api.github.com/repos/Shardj/zf1-future/stargazers",
                        "contributors_url": "https://api.github.com/repos/Shardj/zf1-future/contributors",
                        "subscribers_url": "https://api.github.com/repos/Shardj/zf1-future/subscribers",
                        "subscription_url": "https://api.github.com/repos/Shardj/zf1-future/subscription",
                        "commits_url": "https://api.github.com/repos/Shardj/zf1-future/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/Shardj/zf1-future/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/Shardj/zf1-future/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/Shardj/zf1-future/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/Shardj/zf1-future/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/Shardj/zf1-future/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/Shardj/zf1-future/merges",
                        "archive_url": "https://api.github.com/repos/Shardj/zf1-future/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/Shardj/zf1-future/downloads",
                        "issues_url": "https://api.github.com/repos/Shardj/zf1-future/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/Shardj/zf1-future/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/Shardj/zf1-future/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/Shardj/zf1-future/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/Shardj/zf1-future/labels{/name}",
                        "releases_url": "https://api.github.com/repos/Shardj/zf1-future/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/Shardj/zf1-future/deployments",
                        "created_at": "2018-07-20T14:49:06Z",
                        "updated_at": "2022-12-02T13:42:32Z",
                        "pushed_at": "2022-12-06T10:01:24Z",
                        "git_url": "git://github.com/Shardj/zf1-future.git",
                        "ssh_url": "git@github.com:Shardj/zf1-future.git",
                        "clone_url": "https://github.com/Shardj/zf1-future.git",
                        "svn_url": "https://github.com/Shardj/zf1-future",
                        "homepage": "",
                        "size": 86409,
                        "stargazers_count": 351,
                        "watchers_count": 351,
                        "language": "PHP",
                        "has_issues": true,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 152,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 12,
                        "license": {
                            "key": "bsd-3-clause",
                            "name": "BSD 3-Clause \"New\" or \"Revised\" License",
                            "spdx_id": "BSD-3-Clause",
                            "url": "https://api.github.com/licenses/bsd-3-clause",
                            "node_id": "MDc6TGljZW5zZTU="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 152,
                        "open_issues": 12,
                        "watchers": 351,
                        "default_branch": "master"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/Shardj/zf1-future/pulls/292"
                    },
                    "html": {
                        "href": "https://github.com/Shardj/zf1-future/pull/292"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/Shardj/zf1-future/issues/292"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/Shardj/zf1-future/issues/292/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/Shardj/zf1-future/pulls/292/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/Shardj/zf1-future/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/Shardj/zf1-future/pulls/292/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/Shardj/zf1-future/statuses/86fd28fbdf4aa13dbefac47197dc2d326e0b5a2e"
                    }
                },
                "author_association": "NONE",
                "auto_merge": null,
                "active_lock_reason": null,
                "merged": false,
                "mergeable": null,
                "rebaseable": null,
                "mergeable_state": "unknown",
                "merged_by": null,
                "comments": 0,
                "review_comments": 0,
                "maintainer_can_modify": true,
                "commits": 1,
                "additions": 2,
                "deletions": 2,
                "changed_files": 1
            }
        },
        "public": true,
        "created_at": "2022-12-06T10:01:25Z"
    },
    {
        "id": "25685429461",
        "type": "CreateEvent",
        "actor": {
            "id": 1029536,
            "login": "boenrobot",
            "display_login": "boenrobot",
            "gravatar_id": "",
            "url": "https://api.github.com/users/boenrobot",
            "avatar_url": "https://avatars.githubusercontent.com/u/1029536?"
        },
        "repo": {
            "id": 574890254,
            "name": "boenrobot/zf1-future",
            "url": "https://api.github.com/repos/boenrobot/zf1-future"
        },
        "payload": {
            "ref": "phpunit-forward-compat",
            "ref_type": "branch",
            "master_branch": "master",
            "description": "PHP 8.0 compatible version of ZF1",
            "pusher_type": "user"
        },
        "public": true,
        "created_at": "2022-12-06T09:54:49Z"
    },
    {
        "id": "25685381328",
        "type": "ForkEvent",
        "actor": {
            "id": 1029536,
            "login": "boenrobot",
            "display_login": "boenrobot",
            "gravatar_id": "",
            "url": "https://api.github.com/users/boenrobot",
            "avatar_url": "https://avatars.githubusercontent.com/u/1029536?"
        },
        "repo": {
            "id": 141724413,
            "name": "Shardj/zf1-future",
            "url": "https://api.github.com/repos/Shardj/zf1-future"
        },
        "payload": {
            "forkee": {
                "id": 574890254,
                "node_id": "R_kgDOIkQhDg",
                "name": "zf1-future",
                "full_name": "boenrobot/zf1-future",
                "private": false,
                "owner": {
                    "login": "boenrobot",
                    "id": 1029536,
                    "node_id": "MDQ6VXNlcjEwMjk1MzY=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/1029536?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/boenrobot",
                    "html_url": "https://github.com/boenrobot",
                    "followers_url": "https://api.github.com/users/boenrobot/followers",
                    "following_url": "https://api.github.com/users/boenrobot/following{/other_user}",
                    "gists_url": "https://api.github.com/users/boenrobot/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/boenrobot/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/boenrobot/subscriptions",
                    "organizations_url": "https://api.github.com/users/boenrobot/orgs",
                    "repos_url": "https://api.github.com/users/boenrobot/repos",
                    "events_url": "https://api.github.com/users/boenrobot/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/boenrobot/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "html_url": "https://github.com/boenrobot/zf1-future",
                "description": "PHP 8.0 compatible version of ZF1",
                "fork": true,
                "url": "https://api.github.com/repos/boenrobot/zf1-future",
                "forks_url": "https://api.github.com/repos/boenrobot/zf1-future/forks",
                "keys_url": "https://api.github.com/repos/boenrobot/zf1-future/keys{/key_id}",
                "collaborators_url": "https://api.github.com/repos/boenrobot/zf1-future/collaborators{/collaborator}",
                "teams_url": "https://api.github.com/repos/boenrobot/zf1-future/teams",
                "hooks_url": "https://api.github.com/repos/boenrobot/zf1-future/hooks",
                "issue_events_url": "https://api.github.com/repos/boenrobot/zf1-future/issues/events{/number}",
                "events_url": "https://api.github.com/repos/boenrobot/zf1-future/events",
                "assignees_url": "https://api.github.com/repos/boenrobot/zf1-future/assignees{/user}",
                "branches_url": "https://api.github.com/repos/boenrobot/zf1-future/branches{/branch}",
                "tags_url": "https://api.github.com/repos/boenrobot/zf1-future/tags",
                "blobs_url": "https://api.github.com/repos/boenrobot/zf1-future/git/blobs{/sha}",
                "git_tags_url": "https://api.github.com/repos/boenrobot/zf1-future/git/tags{/sha}",
                "git_refs_url": "https://api.github.com/repos/boenrobot/zf1-future/git/refs{/sha}",
                "trees_url": "https://api.github.com/repos/boenrobot/zf1-future/git/trees{/sha}",
                "statuses_url": "https://api.github.com/repos/boenrobot/zf1-future/statuses/{sha}",
                "languages_url": "https://api.github.com/repos/boenrobot/zf1-future/languages",
                "stargazers_url": "https://api.github.com/repos/boenrobot/zf1-future/stargazers",
                "contributors_url": "https://api.github.com/repos/boenrobot/zf1-future/contributors",
                "subscribers_url": "https://api.github.com/repos/boenrobot/zf1-future/subscribers",
                "subscription_url": "https://api.github.com/repos/boenrobot/zf1-future/subscription",
                "commits_url": "https://api.github.com/repos/boenrobot/zf1-future/commits{/sha}",
                "git_commits_url": "https://api.github.com/repos/boenrobot/zf1-future/git/commits{/sha}",
                "comments_url": "https://api.github.com/repos/boenrobot/zf1-future/comments{/number}",
                "issue_comment_url": "https://api.github.com/repos/boenrobot/zf1-future/issues/comments{/number}",
                "contents_url": "https://api.github.com/repos/boenrobot/zf1-future/contents/{+path}",
                "compare_url": "https://api.github.com/repos/boenrobot/zf1-future/compare/{base}...{head}",
                "merges_url": "https://api.github.com/repos/boenrobot/zf1-future/merges",
                "archive_url": "https://api.github.com/repos/boenrobot/zf1-future/{archive_format}{/ref}",
                "downloads_url": "https://api.github.com/repos/boenrobot/zf1-future/downloads",
                "issues_url": "https://api.github.com/repos/boenrobot/zf1-future/issues{/number}",
                "pulls_url": "https://api.github.com/repos/boenrobot/zf1-future/pulls{/number}",
                "milestones_url": "https://api.github.com/repos/boenrobot/zf1-future/milestones{/number}",
                "notifications_url": "https://api.github.com/repos/boenrobot/zf1-future/notifications{?since,all,participating}",
                "labels_url": "https://api.github.com/repos/boenrobot/zf1-future/labels{/name}",
                "releases_url": "https://api.github.com/repos/boenrobot/zf1-future/releases{/id}",
                "deployments_url": "https://api.github.com/repos/boenrobot/zf1-future/deployments",
                "created_at": "2022-12-06T09:52:49Z",
                "updated_at": "2022-12-02T13:42:32Z",
                "pushed_at": "2022-11-29T17:42:01Z",
                "git_url": "git://github.com/boenrobot/zf1-future.git",
                "ssh_url": "git@github.com:boenrobot/zf1-future.git",
                "clone_url": "https://github.com/boenrobot/zf1-future.git",
                "svn_url": "https://github.com/boenrobot/zf1-future",
                "homepage": "",
                "size": 86409,
                "stargazers_count": 0,
                "watchers_count": 0,
                "language": null,
                "has_issues": false,
                "has_projects": true,
                "has_downloads": true,
                "has_wiki": true,
                "has_pages": false,
                "has_discussions": false,
                "forks_count": 0,
                "mirror_url": null,
                "archived": false,
                "disabled": false,
                "open_issues_count": 0,
                "license": {
                    "key": "bsd-3-clause",
                    "name": "BSD 3-Clause \"New\" or \"Revised\" License",
                    "spdx_id": "BSD-3-Clause",
                    "url": "https://api.github.com/licenses/bsd-3-clause",
                    "node_id": "MDc6TGljZW5zZTU="
                },
                "allow_forking": true,
                "is_template": false,
                "web_commit_signoff_required": false,
                "topics": [],
                "visibility": "public",
                "forks": 0,
                "open_issues": 0,
                "watchers": 0,
                "default_branch": "master",
                "public": true
            }
        },
        "public": true,
        "created_at": "2022-12-06T09:52:50Z"
    },
    {
        "id": "25610410534",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 1029536,
            "login": "boenrobot",
            "display_login": "boenrobot",
            "gravatar_id": "",
            "url": "https://api.github.com/users/boenrobot",
            "avatar_url": "https://avatars.githubusercontent.com/u/1029536?"
        },
        "repo": {
            "id": 327282114,
            "name": "mxinden/asynchronous-codec",
            "url": "https://api.github.com/repos/mxinden/asynchronous-codec"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/mxinden/asynchronous-codec/issues/4",
                "repository_url": "https://api.github.com/repos/mxinden/asynchronous-codec",
                "labels_url": "https://api.github.com/repos/mxinden/asynchronous-codec/issues/4/labels{/name}",
                "comments_url": "https://api.github.com/repos/mxinden/asynchronous-codec/issues/4/comments",
                "events_url": "https://api.github.com/repos/mxinden/asynchronous-codec/issues/4/events",
                "html_url": "https://github.com/mxinden/asynchronous-codec/pull/4",
                "id": 1465495315,
                "node_id": "PR_kwDOE4Htws5DwTA_",
                "number": 4,
                "title": "[WIP] no_std traits",
                "user": {
                    "login": "boenrobot",
                    "id": 1029536,
                    "node_id": "MDQ6VXNlcjEwMjk1MzY=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/1029536?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/boenrobot",
                    "html_url": "https://github.com/boenrobot",
                    "followers_url": "https://api.github.com/users/boenrobot/followers",
                    "following_url": "https://api.github.com/users/boenrobot/following{/other_user}",
                    "gists_url": "https://api.github.com/users/boenrobot/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/boenrobot/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/boenrobot/subscriptions",
                    "organizations_url": "https://api.github.com/users/boenrobot/orgs",
                    "repos_url": "https://api.github.com/users/boenrobot/repos",
                    "events_url": "https://api.github.com/users/boenrobot/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/boenrobot/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 1,
                "created_at": "2022-11-27T16:28:08Z",
                "updated_at": "2022-12-02T07:59:34Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "draft": false,
                "pull_request": {
                    "url": "https://api.github.com/repos/mxinden/asynchronous-codec/pulls/4",
                    "html_url": "https://github.com/mxinden/asynchronous-codec/pull/4",
                    "diff_url": "https://github.com/mxinden/asynchronous-codec/pull/4.diff",
                    "patch_url": "https://github.com/mxinden/asynchronous-codec/pull/4.patch",
                    "merged_at": null
                },
                "body": "Hello.\r\n\r\nI am trying to use this crate to write a library around a custom TCP based protocol. Said protocol will likely be useful on both web servers and embedded devices (as long as said devices provide some sort of networking and a TCP stream implementation; think embassy-net), so I want to make it as portable as possible.\r\n\r\nWhile I understand it might not be possible for it to be fully portable (e.g. Framed(Read/Write) are not embassy-net compatible, due to embassy-net's TCP stream not being AsyncRead/AsyncWrite compatible), it would still help a great deal if I can at least reuse the encoder and decoder, and just swap out a stream handler.\r\n\r\nThis PR is my attempt to do this (by getting rid of std::io::Error in encoder and decoder, and following the compiler warnings from there), but I am new to Rust, so I ended up with some errors related to Fuse, and yet occurring in FramedRead/FramedWrite, and I'm not sure how to deal with those yet.\r\n\r\nI thought I share the progress so far, to ensure it's even worth pursuing this to its end, or if I should perhaps try to instead refactor async-codec to be splittable (which is the reason I ended here... Because I _also_ need a reader/writer split).",
                "reactions": {
                    "url": "https://api.github.com/repos/mxinden/asynchronous-codec/issues/4/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/mxinden/asynchronous-codec/issues/4/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/mxinden/asynchronous-codec/issues/comments/1334877419",
                "html_url": "https://github.com/mxinden/asynchronous-codec/pull/4#issuecomment-1334877419",
                "issue_url": "https://api.github.com/repos/mxinden/asynchronous-codec/issues/4",
                "id": 1334877419,
                "node_id": "IC_kwDOE4Htws5PkJzr",
                "user": {
                    "login": "boenrobot",
                    "id": 1029536,
                    "node_id": "MDQ6VXNlcjEwMjk1MzY=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/1029536?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/boenrobot",
                    "html_url": "https://github.com/boenrobot",
                    "followers_url": "https://api.github.com/users/boenrobot/followers",
                    "following_url": "https://api.github.com/users/boenrobot/following{/other_user}",
                    "gists_url": "https://api.github.com/users/boenrobot/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/boenrobot/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/boenrobot/subscriptions",
                    "organizations_url": "https://api.github.com/users/boenrobot/orgs",
                    "repos_url": "https://api.github.com/users/boenrobot/repos",
                    "events_url": "https://api.github.com/users/boenrobot/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/boenrobot/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2022-12-02T07:59:34Z",
                "updated_at": "2022-12-02T07:59:34Z",
                "author_association": "NONE",
                "body": "> Thanks for upstreaming this. In general I am not opposed to being no-std compliant, unless it adds significant overhead to the crate.\r\n\r\nGood to know \ud83d\udc4d \r\n\r\n> Do you think it makes sense to port parts of async-codec to this crate?\r\n\r\nNot sure... I kind of like this crate's API better, in that it is simpler to make codecs with it.\r\n\r\nAt the same time, it seems async-codec allows for the codec to be more directly demanding of the stream handler (i.e. it can tell it \"don't invoke me again until you have N more bytes ready in the buffer\"), which... maybe... would improve performance. I say maybe, because the bytes still need to be checked anyway... It's just that they are checked by the stream handler, not by the codec... and the codec still should be defensively checking the length anyway, so... I guess the point is lost, maybe.\r\n\r\nI have not tried to implement a no_std compatible framed reader/writer, so maybe async-codec's API is the only way to potentially do it in alloc-free environments (potentially being a keyword, because even async-codec's reader is not no_std compatible; only its codec API is).\r\n\r\n\r\nI am thinking that instead of porting async-codec, maybe just eliminate Fuse and instead refactor the hierarchy a bit, so that we have reader/writer traits with default implementations that include get_reader()/get_writer() methods, respectively. FramedReader/FramedWriter would only implement the respective trait, and Framed would implement both. In all cases, get_reader()/get_writer() would return \"self\"... It's just \"self\" would be different based on the struct.\r\n\r\nI do similar gymnastics in my lib, but I'm not sure if that's a good pattern.",
                "reactions": {
                    "url": "https://api.github.com/repos/mxinden/asynchronous-codec/issues/comments/1334877419/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2022-12-02T07:59:34Z"
    },
    {
        "id": "25495553388",
        "type": "PullRequestEvent",
        "actor": {
            "id": 1029536,
            "login": "boenrobot",
            "display_login": "boenrobot",
            "gravatar_id": "",
            "url": "https://api.github.com/users/boenrobot",
            "avatar_url": "https://avatars.githubusercontent.com/u/1029536?"
        },
        "repo": {
            "id": 327282114,
            "name": "mxinden/asynchronous-codec",
            "url": "https://api.github.com/repos/mxinden/asynchronous-codec"
        },
        "payload": {
            "action": "opened",
            "number": 4,
            "pull_request": {
                "url": "https://api.github.com/repos/mxinden/asynchronous-codec/pulls/4",
                "id": 1136734271,
                "node_id": "PR_kwDOE4Htws5DwTA_",
                "html_url": "https://github.com/mxinden/asynchronous-codec/pull/4",
                "diff_url": "https://github.com/mxinden/asynchronous-codec/pull/4.diff",
                "patch_url": "https://github.com/mxinden/asynchronous-codec/pull/4.patch",
                "issue_url": "https://api.github.com/repos/mxinden/asynchronous-codec/issues/4",
                "number": 4,
                "state": "open",
                "locked": false,
                "title": "[WIP] no_std traits",
                "user": {
                    "login": "boenrobot",
                    "id": 1029536,
                    "node_id": "MDQ6VXNlcjEwMjk1MzY=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/1029536?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/boenrobot",
                    "html_url": "https://github.com/boenrobot",
                    "followers_url": "https://api.github.com/users/boenrobot/followers",
                    "following_url": "https://api.github.com/users/boenrobot/following{/other_user}",
                    "gists_url": "https://api.github.com/users/boenrobot/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/boenrobot/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/boenrobot/subscriptions",
                    "organizations_url": "https://api.github.com/users/boenrobot/orgs",
                    "repos_url": "https://api.github.com/users/boenrobot/repos",
                    "events_url": "https://api.github.com/users/boenrobot/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/boenrobot/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "Hello.\r\n\r\nI am trying to use this crate to write a library around a custom TCP protocol. Said protocol will likely be useful on both web servers and embedded devices (as long as said devices provide some sort of networking and a TCP stream implementation; think embassy-net), so I want to make it as portable as possible.\r\n\r\nWhile I understand it might not be possible for it to be fully portable (e.g. Framed(Read/Write) are not embassy-net compatible, due to embassy-net not being AsyncRead/AsyncWrite compatible), it would still help a great deal if I can at least reuse the encoder and decoder, and just swap out a stream handler.\r\n\r\nThis PR is my attempt to do this (by getting rid of std::io::Error in encoder and decoder, and following the compiler warnings from there), but I am new to Rust, so I ended up with some errors related to Fuse, and yet occurring in FramedRead/FramedWrite, and I'm not sure how to deal with those yet.\r\n\r\nI thought I share the progress so far, to ensure it's even worth pursuing this to its end, or if I should perhaps try to instead refactor async-codec to be splittable (which is the reason I ended here... Because I _also_ need a reader/writer split).",
                "created_at": "2022-11-27T16:28:08Z",
                "updated_at": "2022-11-27T16:28:08Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": null,
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/mxinden/asynchronous-codec/pulls/4/commits",
                "review_comments_url": "https://api.github.com/repos/mxinden/asynchronous-codec/pulls/4/comments",
                "review_comment_url": "https://api.github.com/repos/mxinden/asynchronous-codec/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/mxinden/asynchronous-codec/issues/4/comments",
                "statuses_url": "https://api.github.com/repos/mxinden/asynchronous-codec/statuses/964e568f9756b9ef304871305bf7429e63e38eef",
                "head": {
                    "label": "boenrobot:custom-error-enum",
                    "ref": "custom-error-enum",
                    "sha": "964e568f9756b9ef304871305bf7429e63e38eef",
                    "user": {
                        "login": "boenrobot",
                        "id": 1029536,
                        "node_id": "MDQ6VXNlcjEwMjk1MzY=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/1029536?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/boenrobot",
                        "html_url": "https://github.com/boenrobot",
                        "followers_url": "https://api.github.com/users/boenrobot/followers",
                        "following_url": "https://api.github.com/users/boenrobot/following{/other_user}",
                        "gists_url": "https://api.github.com/users/boenrobot/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/boenrobot/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/boenrobot/subscriptions",
                        "organizations_url": "https://api.github.com/users/boenrobot/orgs",
                        "repos_url": "https://api.github.com/users/boenrobot/repos",
                        "events_url": "https://api.github.com/users/boenrobot/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/boenrobot/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 570935558,
                        "node_id": "R_kgDOIgfJBg",
                        "name": "asynchronous-codec",
                        "full_name": "boenrobot/asynchronous-codec",
                        "private": false,
                        "owner": {
                            "login": "boenrobot",
                            "id": 1029536,
                            "node_id": "MDQ6VXNlcjEwMjk1MzY=",
                            "avatar_url": "https://avatars.githubusercontent.com/u/1029536?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/boenrobot",
                            "html_url": "https://github.com/boenrobot",
                            "followers_url": "https://api.github.com/users/boenrobot/followers",
                            "following_url": "https://api.github.com/users/boenrobot/following{/other_user}",
                            "gists_url": "https://api.github.com/users/boenrobot/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/boenrobot/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/boenrobot/subscriptions",
                            "organizations_url": "https://api.github.com/users/boenrobot/orgs",
                            "repos_url": "https://api.github.com/users/boenrobot/repos",
                            "events_url": "https://api.github.com/users/boenrobot/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/boenrobot/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/boenrobot/asynchronous-codec",
                        "description": "Utilities for encoding and decoding frames using `async/await`.",
                        "fork": true,
                        "url": "https://api.github.com/repos/boenrobot/asynchronous-codec",
                        "forks_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/forks",
                        "keys_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/teams",
                        "hooks_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/hooks",
                        "issue_events_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/events",
                        "assignees_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/tags",
                        "blobs_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/languages",
                        "stargazers_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/stargazers",
                        "contributors_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/contributors",
                        "subscribers_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/subscribers",
                        "subscription_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/subscription",
                        "commits_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/merges",
                        "archive_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/downloads",
                        "issues_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/labels{/name}",
                        "releases_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/deployments",
                        "created_at": "2022-11-26T16:01:12Z",
                        "updated_at": "2022-11-08T11:14:14Z",
                        "pushed_at": "2022-11-27T16:07:58Z",
                        "git_url": "git://github.com/boenrobot/asynchronous-codec.git",
                        "ssh_url": "git@github.com:boenrobot/asynchronous-codec.git",
                        "clone_url": "https://github.com/boenrobot/asynchronous-codec.git",
                        "svn_url": "https://github.com/boenrobot/asynchronous-codec",
                        "homepage": "",
                        "size": 153,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": null,
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "mit",
                            "name": "MIT License",
                            "spdx_id": "MIT",
                            "url": "https://api.github.com/licenses/mit",
                            "node_id": "MDc6TGljZW5zZTEz"
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "master"
                    }
                },
                "base": {
                    "label": "mxinden:master",
                    "ref": "master",
                    "sha": "43338f656f7a50a3c77b8e8ebd58bd9a1416cbd2",
                    "user": {
                        "login": "mxinden",
                        "id": 7047859,
                        "node_id": "MDQ6VXNlcjcwNDc4NTk=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/7047859?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/mxinden",
                        "html_url": "https://github.com/mxinden",
                        "followers_url": "https://api.github.com/users/mxinden/followers",
                        "following_url": "https://api.github.com/users/mxinden/following{/other_user}",
                        "gists_url": "https://api.github.com/users/mxinden/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/mxinden/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/mxinden/subscriptions",
                        "organizations_url": "https://api.github.com/users/mxinden/orgs",
                        "repos_url": "https://api.github.com/users/mxinden/repos",
                        "events_url": "https://api.github.com/users/mxinden/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/mxinden/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 327282114,
                        "node_id": "MDEwOlJlcG9zaXRvcnkzMjcyODIxMTQ=",
                        "name": "asynchronous-codec",
                        "full_name": "mxinden/asynchronous-codec",
                        "private": false,
                        "owner": {
                            "login": "mxinden",
                            "id": 7047859,
                            "node_id": "MDQ6VXNlcjcwNDc4NTk=",
                            "avatar_url": "https://avatars.githubusercontent.com/u/7047859?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/mxinden",
                            "html_url": "https://github.com/mxinden",
                            "followers_url": "https://api.github.com/users/mxinden/followers",
                            "following_url": "https://api.github.com/users/mxinden/following{/other_user}",
                            "gists_url": "https://api.github.com/users/mxinden/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/mxinden/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/mxinden/subscriptions",
                            "organizations_url": "https://api.github.com/users/mxinden/orgs",
                            "repos_url": "https://api.github.com/users/mxinden/repos",
                            "events_url": "https://api.github.com/users/mxinden/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/mxinden/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/mxinden/asynchronous-codec",
                        "description": "Utilities for encoding and decoding frames using `async/await`.",
                        "fork": false,
                        "url": "https://api.github.com/repos/mxinden/asynchronous-codec",
                        "forks_url": "https://api.github.com/repos/mxinden/asynchronous-codec/forks",
                        "keys_url": "https://api.github.com/repos/mxinden/asynchronous-codec/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/mxinden/asynchronous-codec/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/mxinden/asynchronous-codec/teams",
                        "hooks_url": "https://api.github.com/repos/mxinden/asynchronous-codec/hooks",
                        "issue_events_url": "https://api.github.com/repos/mxinden/asynchronous-codec/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/mxinden/asynchronous-codec/events",
                        "assignees_url": "https://api.github.com/repos/mxinden/asynchronous-codec/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/mxinden/asynchronous-codec/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/mxinden/asynchronous-codec/tags",
                        "blobs_url": "https://api.github.com/repos/mxinden/asynchronous-codec/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/mxinden/asynchronous-codec/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/mxinden/asynchronous-codec/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/mxinden/asynchronous-codec/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/mxinden/asynchronous-codec/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/mxinden/asynchronous-codec/languages",
                        "stargazers_url": "https://api.github.com/repos/mxinden/asynchronous-codec/stargazers",
                        "contributors_url": "https://api.github.com/repos/mxinden/asynchronous-codec/contributors",
                        "subscribers_url": "https://api.github.com/repos/mxinden/asynchronous-codec/subscribers",
                        "subscription_url": "https://api.github.com/repos/mxinden/asynchronous-codec/subscription",
                        "commits_url": "https://api.github.com/repos/mxinden/asynchronous-codec/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/mxinden/asynchronous-codec/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/mxinden/asynchronous-codec/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/mxinden/asynchronous-codec/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/mxinden/asynchronous-codec/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/mxinden/asynchronous-codec/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/mxinden/asynchronous-codec/merges",
                        "archive_url": "https://api.github.com/repos/mxinden/asynchronous-codec/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/mxinden/asynchronous-codec/downloads",
                        "issues_url": "https://api.github.com/repos/mxinden/asynchronous-codec/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/mxinden/asynchronous-codec/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/mxinden/asynchronous-codec/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/mxinden/asynchronous-codec/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/mxinden/asynchronous-codec/labels{/name}",
                        "releases_url": "https://api.github.com/repos/mxinden/asynchronous-codec/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/mxinden/asynchronous-codec/deployments",
                        "created_at": "2021-01-06T10:50:59Z",
                        "updated_at": "2022-11-08T11:14:14Z",
                        "pushed_at": "2022-11-08T10:14:22Z",
                        "git_url": "git://github.com/mxinden/asynchronous-codec.git",
                        "ssh_url": "git@github.com:mxinden/asynchronous-codec.git",
                        "clone_url": "https://github.com/mxinden/asynchronous-codec.git",
                        "svn_url": "https://github.com/mxinden/asynchronous-codec",
                        "homepage": "",
                        "size": 146,
                        "stargazers_count": 11,
                        "watchers_count": 11,
                        "language": "Rust",
                        "has_issues": true,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 4,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 1,
                        "license": {
                            "key": "mit",
                            "name": "MIT License",
                            "spdx_id": "MIT",
                            "url": "https://api.github.com/licenses/mit",
                            "node_id": "MDc6TGljZW5zZTEz"
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "async-await",
                            "encoding",
                            "networking"
                        ],
                        "visibility": "public",
                        "forks": 4,
                        "open_issues": 1,
                        "watchers": 11,
                        "default_branch": "master"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/mxinden/asynchronous-codec/pulls/4"
                    },
                    "html": {
                        "href": "https://github.com/mxinden/asynchronous-codec/pull/4"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/mxinden/asynchronous-codec/issues/4"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/mxinden/asynchronous-codec/issues/4/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/mxinden/asynchronous-codec/pulls/4/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/mxinden/asynchronous-codec/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/mxinden/asynchronous-codec/pulls/4/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/mxinden/asynchronous-codec/statuses/964e568f9756b9ef304871305bf7429e63e38eef"
                    }
                },
                "author_association": "NONE",
                "auto_merge": null,
                "active_lock_reason": null,
                "merged": false,
                "mergeable": null,
                "rebaseable": null,
                "mergeable_state": "unknown",
                "merged_by": null,
                "comments": 0,
                "review_comments": 0,
                "maintainer_can_modify": true,
                "commits": 1,
                "additions": 286,
                "deletions": 104,
                "changed_files": 14
            }
        },
        "public": true,
        "created_at": "2022-11-27T16:28:08Z"
    },
    {
        "id": "25495409239",
        "type": "PushEvent",
        "actor": {
            "id": 1029536,
            "login": "boenrobot",
            "display_login": "boenrobot",
            "gravatar_id": "",
            "url": "https://api.github.com/users/boenrobot",
            "avatar_url": "https://avatars.githubusercontent.com/u/1029536?"
        },
        "repo": {
            "id": 570935558,
            "name": "boenrobot/asynchronous-codec",
            "url": "https://api.github.com/repos/boenrobot/asynchronous-codec"
        },
        "payload": {
            "push_id": 11799524585,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/custom-error-enum",
            "head": "964e568f9756b9ef304871305bf7429e63e38eef",
            "before": "4002cb79025962617128a972fb2dbad27341fdd2",
            "commits": [
                {
                    "sha": "964e568f9756b9ef304871305bf7429e63e38eef",
                    "author": {
                        "email": "boen.robot@gmail.com",
                        "name": "Vasil Rangelov"
                    },
                    "message": "Added a custom error enum to wrap around encoder and decoder errors, as well as an enum to wrap around read/write errors for Framed;\n\nPut std and alloc feature gates, and ensured the bytes encoder and decoder are usable without it.",
                    "distinct": true,
                    "url": "https://api.github.com/repos/boenrobot/asynchronous-codec/commits/964e568f9756b9ef304871305bf7429e63e38eef"
                }
            ]
        },
        "public": true,
        "created_at": "2022-11-27T16:07:58Z"
    },
    {
        "id": "25487528115",
        "type": "PushEvent",
        "actor": {
            "id": 1029536,
            "login": "boenrobot",
            "display_login": "boenrobot",
            "gravatar_id": "",
            "url": "https://api.github.com/users/boenrobot",
            "avatar_url": "https://avatars.githubusercontent.com/u/1029536?"
        },
        "repo": {
            "id": 570935558,
            "name": "boenrobot/asynchronous-codec",
            "url": "https://api.github.com/repos/boenrobot/asynchronous-codec"
        },
        "payload": {
            "push_id": 11794044612,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/custom-error-enum",
            "head": "4002cb79025962617128a972fb2dbad27341fdd2",
            "before": "33e3b403e75bc0a0d53563a6af9754dc36bd5202",
            "commits": [
                {
                    "sha": "4002cb79025962617128a972fb2dbad27341fdd2",
                    "author": {
                        "email": "boen.robot@gmail.com",
                        "name": "Vasil Rangelov"
                    },
                    "message": "Added a custom error enum to wrap around encoder and decoder errors.",
                    "distinct": true,
                    "url": "https://api.github.com/repos/boenrobot/asynchronous-codec/commits/4002cb79025962617128a972fb2dbad27341fdd2"
                }
            ]
        },
        "public": true,
        "created_at": "2022-11-26T16:04:14Z"
    },
    {
        "id": "25487520488",
        "type": "CreateEvent",
        "actor": {
            "id": 1029536,
            "login": "boenrobot",
            "display_login": "boenrobot",
            "gravatar_id": "",
            "url": "https://api.github.com/users/boenrobot",
            "avatar_url": "https://avatars.githubusercontent.com/u/1029536?"
        },
        "repo": {
            "id": 570935558,
            "name": "boenrobot/asynchronous-codec",
            "url": "https://api.github.com/repos/boenrobot/asynchronous-codec"
        },
        "payload": {
            "ref": "custom-error-enum",
            "ref_type": "branch",
            "master_branch": "master",
            "description": "Utilities for encoding and decoding frames using `async/await`.",
            "pusher_type": "user"
        },
        "public": true,
        "created_at": "2022-11-26T16:03:03Z"
    },
    {
        "id": "25487508238",
        "type": "ForkEvent",
        "actor": {
            "id": 1029536,
            "login": "boenrobot",
            "display_login": "boenrobot",
            "gravatar_id": "",
            "url": "https://api.github.com/users/boenrobot",
            "avatar_url": "https://avatars.githubusercontent.com/u/1029536?"
        },
        "repo": {
            "id": 327282114,
            "name": "mxinden/asynchronous-codec",
            "url": "https://api.github.com/repos/mxinden/asynchronous-codec"
        },
        "payload": {
            "forkee": {
                "id": 570935558,
                "node_id": "R_kgDOIgfJBg",
                "name": "asynchronous-codec",
                "full_name": "boenrobot/asynchronous-codec",
                "private": false,
                "owner": {
                    "login": "boenrobot",
                    "id": 1029536,
                    "node_id": "MDQ6VXNlcjEwMjk1MzY=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/1029536?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/boenrobot",
                    "html_url": "https://github.com/boenrobot",
                    "followers_url": "https://api.github.com/users/boenrobot/followers",
                    "following_url": "https://api.github.com/users/boenrobot/following{/other_user}",
                    "gists_url": "https://api.github.com/users/boenrobot/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/boenrobot/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/boenrobot/subscriptions",
                    "organizations_url": "https://api.github.com/users/boenrobot/orgs",
                    "repos_url": "https://api.github.com/users/boenrobot/repos",
                    "events_url": "https://api.github.com/users/boenrobot/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/boenrobot/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "html_url": "https://github.com/boenrobot/asynchronous-codec",
                "description": "Utilities for encoding and decoding frames using `async/await`.",
                "fork": true,
                "url": "https://api.github.com/repos/boenrobot/asynchronous-codec",
                "forks_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/forks",
                "keys_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/keys{/key_id}",
                "collaborators_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/collaborators{/collaborator}",
                "teams_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/teams",
                "hooks_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/hooks",
                "issue_events_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/issues/events{/number}",
                "events_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/events",
                "assignees_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/assignees{/user}",
                "branches_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/branches{/branch}",
                "tags_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/tags",
                "blobs_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/git/blobs{/sha}",
                "git_tags_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/git/tags{/sha}",
                "git_refs_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/git/refs{/sha}",
                "trees_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/git/trees{/sha}",
                "statuses_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/statuses/{sha}",
                "languages_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/languages",
                "stargazers_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/stargazers",
                "contributors_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/contributors",
                "subscribers_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/subscribers",
                "subscription_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/subscription",
                "commits_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/commits{/sha}",
                "git_commits_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/git/commits{/sha}",
                "comments_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/comments{/number}",
                "issue_comment_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/issues/comments{/number}",
                "contents_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/contents/{+path}",
                "compare_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/compare/{base}...{head}",
                "merges_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/merges",
                "archive_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/{archive_format}{/ref}",
                "downloads_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/downloads",
                "issues_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/issues{/number}",
                "pulls_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/pulls{/number}",
                "milestones_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/milestones{/number}",
                "notifications_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/notifications{?since,all,participating}",
                "labels_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/labels{/name}",
                "releases_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/releases{/id}",
                "deployments_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/deployments",
                "created_at": "2022-11-26T16:01:12Z",
                "updated_at": "2022-11-08T11:14:14Z",
                "pushed_at": "2022-11-08T10:14:22Z",
                "git_url": "git://github.com/boenrobot/asynchronous-codec.git",
                "ssh_url": "git@github.com:boenrobot/asynchronous-codec.git",
                "clone_url": "https://github.com/boenrobot/asynchronous-codec.git",
                "svn_url": "https://github.com/boenrobot/asynchronous-codec",
                "homepage": "",
                "size": 146,
                "stargazers_count": 0,
                "watchers_count": 0,
                "language": null,
                "has_issues": false,
                "has_projects": true,
                "has_downloads": true,
                "has_wiki": true,
                "has_pages": false,
                "has_discussions": false,
                "forks_count": 0,
                "mirror_url": null,
                "archived": false,
                "disabled": false,
                "open_issues_count": 0,
                "license": {
                    "key": "mit",
                    "name": "MIT License",
                    "spdx_id": "MIT",
                    "url": "https://api.github.com/licenses/mit",
                    "node_id": "MDc6TGljZW5zZTEz"
                },
                "allow_forking": true,
                "is_template": false,
                "web_commit_signoff_required": false,
                "topics": [],
                "visibility": "public",
                "forks": 0,
                "open_issues": 0,
                "watchers": 0,
                "default_branch": "master",
                "public": true
            }
        },
        "public": true,
        "created_at": "2022-11-26T16:01:13Z"
    },
    {
        "id": "25130970083",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 1029536,
            "login": "boenrobot",
            "display_login": "boenrobot",
            "gravatar_id": "",
            "url": "https://api.github.com/users/boenrobot",
            "avatar_url": "https://avatars.githubusercontent.com/u/1029536?"
        },
        "repo": {
            "id": 230595891,
            "name": "launchbadge/sqlx",
            "url": "https://api.github.com/repos/launchbadge/sqlx"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/launchbadge/sqlx/issues/2119",
                "repository_url": "https://api.github.com/repos/launchbadge/sqlx",
                "labels_url": "https://api.github.com/repos/launchbadge/sqlx/issues/2119/labels{/name}",
                "comments_url": "https://api.github.com/repos/launchbadge/sqlx/issues/2119/comments",
                "events_url": "https://api.github.com/repos/launchbadge/sqlx/issues/2119/events",
                "html_url": "https://github.com/launchbadge/sqlx/issues/2119",
                "id": 1385193034,
                "node_id": "I_kwDODb6dM85SkF5K",
                "number": 2119,
                "title": "sqlx no longer compiles on rust 1.64 when use any of the async-std features",
                "user": {
                    "login": "zaphar",
                    "id": 40631,
                    "node_id": "MDQ6VXNlcjQwNjMx",
                    "avatar_url": "https://avatars.githubusercontent.com/u/40631?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/zaphar",
                    "html_url": "https://github.com/zaphar",
                    "followers_url": "https://api.github.com/users/zaphar/followers",
                    "following_url": "https://api.github.com/users/zaphar/following{/other_user}",
                    "gists_url": "https://api.github.com/users/zaphar/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/zaphar/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/zaphar/subscriptions",
                    "organizations_url": "https://api.github.com/users/zaphar/orgs",
                    "repos_url": "https://api.github.com/users/zaphar/repos",
                    "events_url": "https://api.github.com/users/zaphar/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/zaphar/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 1757378993,
                        "node_id": "MDU6TGFiZWwxNzU3Mzc4OTkz",
                        "url": "https://api.github.com/repos/launchbadge/sqlx/labels/bug",
                        "name": "bug",
                        "color": "e11d21",
                        "default": true,
                        "description": ""
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 3,
                "created_at": "2022-09-25T23:05:59Z",
                "updated_at": "2022-11-09T15:07:28Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "### Bug Description\r\nCompile errors can be seen below. I assume this is because the async-rt support relies on the unstable features in async-std. and as a result the async-process crate doesn't build on this version.\r\n\r\n```\r\nerror[E0599]: no method named `as_fd` found for struct `Async` in the current scope\r\n   --> /Users/zaphar/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.5.0/src/lib.rs:514:16\r\n    |\r\n514 |         self.0.as_fd()\r\n    |                ^^^^^ method not found in `Async<std::process::ChildStdin>`\r\n\r\nerror[E0271]: type mismatch resolving `<OwnedFd as TryFrom<Async<std::process::ChildStdin>>>::Error == std::io::Error`\r\n   --> /Users/zaphar/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.5.0/src/lib.rs:523:17\r\n    |\r\n523 |         value.0.try_into()\r\n    |                 ^^^^^^^^ expected enum `Infallible`, found struct `std::io::Error`\r\n\r\nerror[E0277]: the trait bound `OwnedFd: From<Async<std::process::ChildStdin>>` is not satisfied\r\n   --> /Users/zaphar/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.5.0/src/lib.rs:523:17\r\n    |\r\n523 |         value.0.try_into()\r\n    |                 ^^^^^^^^ the trait `From<Async<std::process::ChildStdin>>` is not implemented for `OwnedFd`\r\n    |\r\n    = help: the following other types implement trait `From<T>`:\r\n              <OwnedFd as From<File>>\r\n              <OwnedFd as From<TcpListener>>\r\n              <OwnedFd as From<TcpStream>>\r\n              <OwnedFd as From<UdpSocket>>\r\n              <OwnedFd as From<UnixDatagram>>\r\n              <OwnedFd as From<UnixListener>>\r\n              <OwnedFd as From<UnixStream>>\r\n              <OwnedFd as From<std::process::ChildStderr>>\r\n            and 2 others\r\n    = note: required because of the requirements on the impl of `Into<OwnedFd>` for `Async<std::process::ChildStdin>`\r\n    = note: required because of the requirements on the impl of `TryFrom<Async<std::process::ChildStdin>>` for `OwnedFd`\r\n    = note: required because of the requirements on the impl of `TryInto<OwnedFd>` for `Async<std::process::ChildStdin>`\r\n\r\nerror[E0599]: no method named `as_fd` found for struct `Async` in the current scope\r\n   --> /Users/zaphar/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.5.0/src/lib.rs:598:16\r\n    |\r\n598 |         self.0.as_fd()\r\n    |                ^^^^^ method not found in `Async<std::process::ChildStdout>`\r\n\r\nerror[E0271]: type mismatch resolving `<OwnedFd as TryFrom<Async<std::process::ChildStdout>>>::Error == std::io::Error`\r\n   --> /Users/zaphar/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.5.0/src/lib.rs:607:17\r\n    |\r\n607 |         value.0.try_into()\r\n    |                 ^^^^^^^^ expected enum `Infallible`, found struct `std::io::Error`\r\n\r\nerror[E0277]: the trait bound `OwnedFd: From<Async<std::process::ChildStdout>>` is not satisfied\r\n   --> /Users/zaphar/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.5.0/src/lib.rs:607:17\r\n    |\r\n607 |         value.0.try_into()\r\n    |                 ^^^^^^^^ the trait `From<Async<std::process::ChildStdout>>` is not implemented for `OwnedFd`\r\n    |\r\n    = help: the following other types implement trait `From<T>`:\r\n              <OwnedFd as From<File>>\r\n              <OwnedFd as From<TcpListener>>\r\n              <OwnedFd as From<TcpStream>>\r\n              <OwnedFd as From<UdpSocket>>\r\n              <OwnedFd as From<UnixDatagram>>\r\n              <OwnedFd as From<UnixListener>>\r\n              <OwnedFd as From<UnixStream>>\r\n              <OwnedFd as From<std::process::ChildStderr>>\r\n            and 2 others\r\n    = note: required because of the requirements on the impl of `Into<OwnedFd>` for `Async<std::process::ChildStdout>`\r\n    = note: required because of the requirements on the impl of `TryFrom<Async<std::process::ChildStdout>>` for `OwnedFd`\r\n    = note: required because of the requirements on the impl of `TryInto<OwnedFd>` for `Async<std::process::ChildStdout>`\r\n\r\nerror[E0599]: no method named `as_fd` found for struct `Async` in the current scope\r\n   --> /Users/zaphar/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.5.0/src/lib.rs:671:16\r\n    |\r\n671 |         self.0.as_fd()\r\n    |                ^^^^^ method not found in `Async<std::process::ChildStderr>`\r\n\r\nerror[E0271]: type mismatch resolving `<OwnedFd as TryFrom<Async<std::process::ChildStderr>>>::Error == std::io::Error`\r\n   --> /Users/zaphar/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.5.0/src/lib.rs:680:17\r\n    |\r\n680 |         value.0.try_into()\r\n    |                 ^^^^^^^^ expected enum `Infallible`, found struct `std::io::Error`\r\n\r\nerror[E0277]: the trait bound `OwnedFd: From<Async<std::process::ChildStderr>>` is not satisfied\r\n   --> /Users/zaphar/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.5.0/src/lib.rs:680:17\r\n    |\r\n680 |         value.0.try_into()\r\n    |                 ^^^^^^^^ the trait `From<Async<std::process::ChildStderr>>` is not implemented for `OwnedFd`\r\n    |\r\n    = help: the following other types implement trait `From<T>`:\r\n              <OwnedFd as From<File>>\r\n              <OwnedFd as From<TcpListener>>\r\n              <OwnedFd as From<TcpStream>>\r\n              <OwnedFd as From<UdpSocket>>\r\n              <OwnedFd as From<UnixDatagram>>\r\n              <OwnedFd as From<UnixListener>>\r\n              <OwnedFd as From<UnixStream>>\r\n              <OwnedFd as From<std::process::ChildStderr>>\r\n            and 2 others\r\n    = note: required because of the requirements on the impl of `Into<OwnedFd>` for `Async<std::process::ChildStderr>`\r\n    = note: required because of the requirements on the impl of `TryFrom<Async<std::process::ChildStderr>>` for `OwnedFd`\r\n    = note: required because of the requirements on the impl of `TryInto<OwnedFd>` for `Async<std::process::ChildStderr>`\r\n\r\nSome errors have detailed explanations: E0271, E0277, E0599.\r\nFor more information about an error, try `rustc --explain E0271`.\r\nerror: could not compile `async-process` due to 9 previous errors\r\n```\r\n\r\n### Minimal Reproduction\r\n\r\nIt appears that all that is necessary is to be running rust 1.64 and include the `rust-async-std-rustls` or perhaps another `*-async-std-*` feature although I haven't directly verified that. But looking through the dependency tree with features and I would be surprised if this was not the case.\r\n\r\n### Info\r\n* sqlx version: sqlx v0.6.1\r\n* SQLx features enabled: [\"sqlite\", \"runtime-async-std-rustls\", \"offline\"]\r\n* Database server and version: SQLite\r\n* Operating system: MacOS\r\n* `rustc --version`: rustc 1.64.0 (a55dd71d5 2022-09-19)\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/launchbadge/sqlx/issues/2119/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/launchbadge/sqlx/issues/2119/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/launchbadge/sqlx/issues/comments/1308904062",
                "html_url": "https://github.com/launchbadge/sqlx/issues/2119#issuecomment-1308904062",
                "issue_url": "https://api.github.com/repos/launchbadge/sqlx/issues/2119",
                "id": 1308904062,
                "node_id": "IC_kwDODb6dM85OBEp-",
                "user": {
                    "login": "boenrobot",
                    "id": 1029536,
                    "node_id": "MDQ6VXNlcjEwMjk1MzY=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/1029536?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/boenrobot",
                    "html_url": "https://github.com/boenrobot",
                    "followers_url": "https://api.github.com/users/boenrobot/followers",
                    "following_url": "https://api.github.com/users/boenrobot/following{/other_user}",
                    "gists_url": "https://api.github.com/users/boenrobot/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/boenrobot/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/boenrobot/subscriptions",
                    "organizations_url": "https://api.github.com/users/boenrobot/orgs",
                    "repos_url": "https://api.github.com/users/boenrobot/repos",
                    "events_url": "https://api.github.com/users/boenrobot/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/boenrobot/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2022-11-09T15:07:28Z",
                "updated_at": "2022-11-09T15:07:28Z",
                "author_association": "NONE",
                "body": "The unstable flag has been added from the initial inception of sqlx-rt here: https://github.com/launchbadge/sqlx/commit/a233fbfdb7748a519035896a52c671ef7caa7e59\r\n\r\nAnd back when async-std was at 1.6.0. Now it is at 1.7.0. Perhaps whatever was unstable at 1.6.0 has already became stable by now, and nobody cared to remove the unstable flag?\r\n\r\nLooking at [the changelog of async-std](https://github.com/async-rs/async-std/blob/main/CHANGELOG.md), maybe it was initially added due to the fix later in 1.6.1?\r\n\r\nOr maybe it had something to do with the \"fs\" module. Specifically, symlinks on Windows were unstable, but by 1.7.0, they are stable. idk... Those are just the only things I can narrow down.\r\n\r\nIMO, the unstable flag should be removed, and if sqlx-rt needs it in the future, it can be added, along with a comment explaining the feature due to which it is added (so that it can be removed again once that new feature becomes stable).",
                "reactions": {
                    "url": "https://api.github.com/repos/launchbadge/sqlx/issues/comments/1308904062/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2022-11-09T15:07:29Z",
        "org": {
            "id": 10077001,
            "login": "launchbadge",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/launchbadge",
            "avatar_url": "https://avatars.githubusercontent.com/u/10077001?"
        }
    },
    {
        "id": "24987833829",
        "type": "PullRequestEvent",
        "actor": {
            "id": 1029536,
            "login": "boenrobot",
            "display_login": "boenrobot",
            "gravatar_id": "",
            "url": "https://api.github.com/users/boenrobot",
            "avatar_url": "https://avatars.githubusercontent.com/u/1029536?"
        },
        "repo": {
            "id": 308636076,
            "name": "gspirov/zendframework1-doctrine2",
            "url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2"
        },
        "payload": {
            "action": "opened",
            "number": 1,
            "pull_request": {
                "url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/pulls/1",
                "id": 1108507999,
                "node_id": "PR_kwDOEmVprM5CEn1f",
                "html_url": "https://github.com/gspirov/zendframework1-doctrine2/pull/1",
                "diff_url": "https://github.com/gspirov/zendframework1-doctrine2/pull/1.diff",
                "patch_url": "https://github.com/gspirov/zendframework1-doctrine2/pull/1.patch",
                "issue_url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/issues/1",
                "number": 1,
                "state": "open",
                "locked": false,
                "title": "Added support for DoctrineProvider wrapped cache adapters",
                "user": {
                    "login": "boenrobot",
                    "id": 1029536,
                    "node_id": "MDQ6VXNlcjEwMjk1MzY=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/1029536?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/boenrobot",
                    "html_url": "https://github.com/boenrobot",
                    "followers_url": "https://api.github.com/users/boenrobot/followers",
                    "following_url": "https://api.github.com/users/boenrobot/following{/other_user}",
                    "gists_url": "https://api.github.com/users/boenrobot/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/boenrobot/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/boenrobot/subscriptions",
                    "organizations_url": "https://api.github.com/users/boenrobot/orgs",
                    "repos_url": "https://api.github.com/users/boenrobot/repos",
                    "events_url": "https://api.github.com/users/boenrobot/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/boenrobot/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "Added support for DoctrineProvider wrapped cache adapters, and raised the acceptable doctrine ORM versions to any in the 2 family after 2.3.",
                "created_at": "2022-11-02T16:17:48Z",
                "updated_at": "2022-11-02T16:17:48Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": null,
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/pulls/1/commits",
                "review_comments_url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/pulls/1/comments",
                "review_comment_url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/issues/1/comments",
                "statuses_url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/statuses/326df3798b39c70596c1aef35ea692c55e8fd99e",
                "head": {
                    "label": "boenrobot:doctrine-provider-support",
                    "ref": "doctrine-provider-support",
                    "sha": "326df3798b39c70596c1aef35ea692c55e8fd99e",
                    "user": {
                        "login": "boenrobot",
                        "id": 1029536,
                        "node_id": "MDQ6VXNlcjEwMjk1MzY=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/1029536?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/boenrobot",
                        "html_url": "https://github.com/boenrobot",
                        "followers_url": "https://api.github.com/users/boenrobot/followers",
                        "following_url": "https://api.github.com/users/boenrobot/following{/other_user}",
                        "gists_url": "https://api.github.com/users/boenrobot/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/boenrobot/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/boenrobot/subscriptions",
                        "organizations_url": "https://api.github.com/users/boenrobot/orgs",
                        "repos_url": "https://api.github.com/users/boenrobot/repos",
                        "events_url": "https://api.github.com/users/boenrobot/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/boenrobot/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 560908421,
                        "node_id": "R_kgDOIW7IhQ",
                        "name": "zendframework1-doctrine2",
                        "full_name": "boenrobot/zendframework1-doctrine2",
                        "private": false,
                        "owner": {
                            "login": "boenrobot",
                            "id": 1029536,
                            "node_id": "MDQ6VXNlcjEwMjk1MzY=",
                            "avatar_url": "https://avatars.githubusercontent.com/u/1029536?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/boenrobot",
                            "html_url": "https://github.com/boenrobot",
                            "followers_url": "https://api.github.com/users/boenrobot/followers",
                            "following_url": "https://api.github.com/users/boenrobot/following{/other_user}",
                            "gists_url": "https://api.github.com/users/boenrobot/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/boenrobot/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/boenrobot/subscriptions",
                            "organizations_url": "https://api.github.com/users/boenrobot/orgs",
                            "repos_url": "https://api.github.com/users/boenrobot/repos",
                            "events_url": "https://api.github.com/users/boenrobot/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/boenrobot/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/boenrobot/zendframework1-doctrine2",
                        "description": "Integration for Zend Framework and Doctrine",
                        "fork": true,
                        "url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2",
                        "forks_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/forks",
                        "keys_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/teams",
                        "hooks_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/hooks",
                        "issue_events_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/events",
                        "assignees_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/tags",
                        "blobs_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/languages",
                        "stargazers_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/stargazers",
                        "contributors_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/contributors",
                        "subscribers_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/subscribers",
                        "subscription_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/subscription",
                        "commits_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/merges",
                        "archive_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/downloads",
                        "issues_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/labels{/name}",
                        "releases_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/deployments",
                        "created_at": "2022-11-02T14:29:46Z",
                        "updated_at": "2021-02-09T07:38:33Z",
                        "pushed_at": "2022-11-02T15:42:36Z",
                        "git_url": "git://github.com/boenrobot/zendframework1-doctrine2.git",
                        "ssh_url": "git@github.com:boenrobot/zendframework1-doctrine2.git",
                        "clone_url": "https://github.com/boenrobot/zendframework1-doctrine2.git",
                        "svn_url": "https://github.com/boenrobot/zendframework1-doctrine2",
                        "homepage": "",
                        "size": 119,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": null,
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": null,
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "master"
                    }
                },
                "base": {
                    "label": "gspirov:master",
                    "ref": "master",
                    "sha": "4c05c00ebd9d7928c636fd1d285eb13712534c11",
                    "user": {
                        "login": "gspirov",
                        "id": 58955169,
                        "node_id": "MDQ6VXNlcjU4OTU1MTY5",
                        "avatar_url": "https://avatars.githubusercontent.com/u/58955169?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/gspirov",
                        "html_url": "https://github.com/gspirov",
                        "followers_url": "https://api.github.com/users/gspirov/followers",
                        "following_url": "https://api.github.com/users/gspirov/following{/other_user}",
                        "gists_url": "https://api.github.com/users/gspirov/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/gspirov/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/gspirov/subscriptions",
                        "organizations_url": "https://api.github.com/users/gspirov/orgs",
                        "repos_url": "https://api.github.com/users/gspirov/repos",
                        "events_url": "https://api.github.com/users/gspirov/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/gspirov/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 308636076,
                        "node_id": "MDEwOlJlcG9zaXRvcnkzMDg2MzYwNzY=",
                        "name": "zendframework1-doctrine2",
                        "full_name": "gspirov/zendframework1-doctrine2",
                        "private": false,
                        "owner": {
                            "login": "gspirov",
                            "id": 58955169,
                            "node_id": "MDQ6VXNlcjU4OTU1MTY5",
                            "avatar_url": "https://avatars.githubusercontent.com/u/58955169?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/gspirov",
                            "html_url": "https://github.com/gspirov",
                            "followers_url": "https://api.github.com/users/gspirov/followers",
                            "following_url": "https://api.github.com/users/gspirov/following{/other_user}",
                            "gists_url": "https://api.github.com/users/gspirov/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/gspirov/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/gspirov/subscriptions",
                            "organizations_url": "https://api.github.com/users/gspirov/orgs",
                            "repos_url": "https://api.github.com/users/gspirov/repos",
                            "events_url": "https://api.github.com/users/gspirov/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/gspirov/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/gspirov/zendframework1-doctrine2",
                        "description": "Integration for Zend Framework and Doctrine",
                        "fork": true,
                        "url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2",
                        "forks_url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/forks",
                        "keys_url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/teams",
                        "hooks_url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/hooks",
                        "issue_events_url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/events",
                        "assignees_url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/tags",
                        "blobs_url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/languages",
                        "stargazers_url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/stargazers",
                        "contributors_url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/contributors",
                        "subscribers_url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/subscribers",
                        "subscription_url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/subscription",
                        "commits_url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/merges",
                        "archive_url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/downloads",
                        "issues_url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/labels{/name}",
                        "releases_url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/deployments",
                        "created_at": "2020-10-30T13:18:16Z",
                        "updated_at": "2021-02-09T07:38:33Z",
                        "pushed_at": "2022-11-02T16:17:49Z",
                        "git_url": "git://github.com/gspirov/zendframework1-doctrine2.git",
                        "ssh_url": "git@github.com:gspirov/zendframework1-doctrine2.git",
                        "clone_url": "https://github.com/gspirov/zendframework1-doctrine2.git",
                        "svn_url": "https://github.com/gspirov/zendframework1-doctrine2",
                        "homepage": "",
                        "size": 119,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": "PHP",
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "forks_count": 1,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 1,
                        "license": null,
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 1,
                        "open_issues": 1,
                        "watchers": 0,
                        "default_branch": "master"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/pulls/1"
                    },
                    "html": {
                        "href": "https://github.com/gspirov/zendframework1-doctrine2/pull/1"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/issues/1"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/issues/1/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/pulls/1/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/pulls/1/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/statuses/326df3798b39c70596c1aef35ea692c55e8fd99e"
                    }
                },
                "author_association": "NONE",
                "auto_merge": null,
                "active_lock_reason": null,
                "merged": false,
                "mergeable": null,
                "rebaseable": null,
                "mergeable_state": "unknown",
                "merged_by": null,
                "comments": 0,
                "review_comments": 0,
                "maintainer_can_modify": true,
                "commits": 1,
                "additions": 12,
                "deletions": 1,
                "changed_files": 2
            }
        },
        "public": true,
        "created_at": "2022-11-02T16:17:49Z"
    },
    {
        "id": "24986936049",
        "type": "PushEvent",
        "actor": {
            "id": 1029536,
            "login": "boenrobot",
            "display_login": "boenrobot",
            "gravatar_id": "",
            "url": "https://api.github.com/users/boenrobot",
            "avatar_url": "https://avatars.githubusercontent.com/u/1029536?"
        },
        "repo": {
            "id": 560908421,
            "name": "boenrobot/zendframework1-doctrine2",
            "url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2"
        },
        "payload": {
            "push_id": 11531490803,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/doctrine-provider-support",
            "head": "326df3798b39c70596c1aef35ea692c55e8fd99e",
            "before": "9dc71a9f713ee3718125e4681d9fce325d923a95",
            "commits": [
                {
                    "sha": "326df3798b39c70596c1aef35ea692c55e8fd99e",
                    "author": {
                        "email": "boen.robot@gmail.com",
                        "name": "Vasil Rangelov"
                    },
                    "message": "Added support for DoctrineProvider wrapped cache adapters, and raised the acceptable doctrine ORM versions to any in the 2 family after 2.3.",
                    "distinct": true,
                    "url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/commits/326df3798b39c70596c1aef35ea692c55e8fd99e"
                }
            ]
        },
        "public": true,
        "created_at": "2022-11-02T15:42:37Z"
    },
    {
        "id": "24985093526",
        "type": "CreateEvent",
        "actor": {
            "id": 1029536,
            "login": "boenrobot",
            "display_login": "boenrobot",
            "gravatar_id": "",
            "url": "https://api.github.com/users/boenrobot",
            "avatar_url": "https://avatars.githubusercontent.com/u/1029536?"
        },
        "repo": {
            "id": 560908421,
            "name": "boenrobot/zendframework1-doctrine2",
            "url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2"
        },
        "payload": {
            "ref": "doctrine-provider-support",
            "ref_type": "branch",
            "master_branch": "master",
            "description": "Integration for Zend Framework and Doctrine",
            "pusher_type": "user"
        },
        "public": true,
        "created_at": "2022-11-02T14:32:54Z"
    },
    {
        "id": "24985010051",
        "type": "ForkEvent",
        "actor": {
            "id": 1029536,
            "login": "boenrobot",
            "display_login": "boenrobot",
            "gravatar_id": "",
            "url": "https://api.github.com/users/boenrobot",
            "avatar_url": "https://avatars.githubusercontent.com/u/1029536?"
        },
        "repo": {
            "id": 308636076,
            "name": "gspirov/zendframework1-doctrine2",
            "url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2"
        },
        "payload": {
            "forkee": {
                "id": 560908421,
                "node_id": "R_kgDOIW7IhQ",
                "name": "zendframework1-doctrine2",
                "full_name": "boenrobot/zendframework1-doctrine2",
                "private": false,
                "owner": {
                    "login": "boenrobot",
                    "id": 1029536,
                    "node_id": "MDQ6VXNlcjEwMjk1MzY=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/1029536?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/boenrobot",
                    "html_url": "https://github.com/boenrobot",
                    "followers_url": "https://api.github.com/users/boenrobot/followers",
                    "following_url": "https://api.github.com/users/boenrobot/following{/other_user}",
                    "gists_url": "https://api.github.com/users/boenrobot/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/boenrobot/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/boenrobot/subscriptions",
                    "organizations_url": "https://api.github.com/users/boenrobot/orgs",
                    "repos_url": "https://api.github.com/users/boenrobot/repos",
                    "events_url": "https://api.github.com/users/boenrobot/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/boenrobot/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "html_url": "https://github.com/boenrobot/zendframework1-doctrine2",
                "description": "Integration for Zend Framework and Doctrine",
                "fork": true,
                "url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2",
                "forks_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/forks",
                "keys_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/keys{/key_id}",
                "collaborators_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/collaborators{/collaborator}",
                "teams_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/teams",
                "hooks_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/hooks",
                "issue_events_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/issues/events{/number}",
                "events_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/events",
                "assignees_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/assignees{/user}",
                "branches_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/branches{/branch}",
                "tags_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/tags",
                "blobs_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/git/blobs{/sha}",
                "git_tags_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/git/tags{/sha}",
                "git_refs_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/git/refs{/sha}",
                "trees_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/git/trees{/sha}",
                "statuses_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/statuses/{sha}",
                "languages_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/languages",
                "stargazers_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/stargazers",
                "contributors_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/contributors",
                "subscribers_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/subscribers",
                "subscription_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/subscription",
                "commits_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/commits{/sha}",
                "git_commits_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/git/commits{/sha}",
                "comments_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/comments{/number}",
                "issue_comment_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/issues/comments{/number}",
                "contents_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/contents/{+path}",
                "compare_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/compare/{base}...{head}",
                "merges_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/merges",
                "archive_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/{archive_format}{/ref}",
                "downloads_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/downloads",
                "issues_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/issues{/number}",
                "pulls_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/pulls{/number}",
                "milestones_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/milestones{/number}",
                "notifications_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/notifications{?since,all,participating}",
                "labels_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/labels{/name}",
                "releases_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/releases{/id}",
                "deployments_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/deployments",
                "created_at": "2022-11-02T14:29:46Z",
                "updated_at": "2021-02-09T07:38:33Z",
                "pushed_at": "2021-02-09T07:49:16Z",
                "git_url": "git://github.com/boenrobot/zendframework1-doctrine2.git",
                "ssh_url": "git@github.com:boenrobot/zendframework1-doctrine2.git",
                "clone_url": "https://github.com/boenrobot/zendframework1-doctrine2.git",
                "svn_url": "https://github.com/boenrobot/zendframework1-doctrine2",
                "homepage": "",
                "size": 119,
                "stargazers_count": 0,
                "watchers_count": 0,
                "language": null,
                "has_issues": false,
                "has_projects": true,
                "has_downloads": true,
                "has_wiki": true,
                "has_pages": false,
                "forks_count": 0,
                "mirror_url": null,
                "archived": false,
                "disabled": false,
                "open_issues_count": 0,
                "license": null,
                "allow_forking": true,
                "is_template": false,
                "web_commit_signoff_required": false,
                "topics": [],
                "visibility": "public",
                "forks": 0,
                "open_issues": 0,
                "watchers": 0,
                "default_branch": "master",
                "public": true
            }
        },
        "public": true,
        "created_at": "2022-11-02T14:29:47Z"
    },
    {
        "id": "24603366398",
        "type": "IssuesEvent",
        "actor": {
            "id": 1029536,
            "login": "boenrobot",
            "display_login": "boenrobot",
            "gravatar_id": "",
            "url": "https://api.github.com/users/boenrobot",
            "avatar_url": "https://avatars.githubusercontent.com/u/1029536?"
        },
        "repo": {
            "id": 166616185,
            "name": "roc-lang/roc",
            "url": "https://api.github.com/repos/roc-lang/roc"
        },
        "payload": {
            "action": "opened",
            "issue": {
                "url": "https://api.github.com/repos/roc-lang/roc/issues/4326",
                "repository_url": "https://api.github.com/repos/roc-lang/roc",
                "labels_url": "https://api.github.com/repos/roc-lang/roc/issues/4326/labels{/name}",
                "comments_url": "https://api.github.com/repos/roc-lang/roc/issues/4326/comments",
                "events_url": "https://api.github.com/repos/roc-lang/roc/issues/4326/events",
                "html_url": "https://github.com/roc-lang/roc/issues/4326",
                "id": 1409422102,
                "node_id": "I_kwDOCe5cec5UAhMW",
                "number": 4326,
                "title": "HTTP boundary value",
                "user": {
                    "login": "boenrobot",
                    "id": 1029536,
                    "node_id": "MDQ6VXNlcjEwMjk1MzY=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/1029536?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/boenrobot",
                    "html_url": "https://github.com/boenrobot",
                    "followers_url": "https://api.github.com/users/boenrobot/followers",
                    "following_url": "https://api.github.com/users/boenrobot/following{/other_user}",
                    "gists_url": "https://api.github.com/users/boenrobot/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/boenrobot/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/boenrobot/subscriptions",
                    "organizations_url": "https://api.github.com/users/boenrobot/orgs",
                    "repos_url": "https://api.github.com/users/boenrobot/repos",
                    "events_url": "https://api.github.com/users/boenrobot/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/boenrobot/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 0,
                "created_at": "2022-10-14T14:14:28Z",
                "updated_at": "2022-10-14T14:14:28Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "https://github.com/roc-lang/roc/blob/89a4522faa20ee0b3ed0cdeaab07379873b95c3f/examples/cli/cli-platform/Http.roc#L65\r\n\r\nThought I answer this TODO by linking you guys to this\r\nhttps://www.w3.org/Protocols/rfc1341/7_2_Multipart.html\r\n\r\nBasically, \"boundary\" should ideally not be hardcoded, and doesn't have to be any particular hash. It's a delimiter.\r\n\r\nIt can be any 0-69 characters long string with the alphabet described in the spec (alphanum plus a few ASCII punctuation characters). That string, prefixed with \"--\", should not occur in the actual contents of the data being transferred.\r\n\r\nBtw, I see the chosen string is taken straight out of https://package.elm-lang.org/packages/elm/http/2.0.0/Http .\r\n\r\nThe way it is currently hardcoded, if I have a textarea form field called \"title\" and I use as a value\r\n\r\n```\r\nHello\r\n\r\n--7MA4YWxkTrZu0gW\r\nContent-Disposition: file; filename=\"file1.txt\"\r\nContent-Type: text/plain\r\n\r\nTrip to London\r\n```\r\n\r\nThis should give the server the string \"Hello\" for \"title\", and also attach a text file with the contents \"Trip to London\". I say \"should\", because I haven't actually tried this. I was just browsing the source for... reasons... and stumbled upon this.\ud83d\ude05 ",
                "reactions": {
                    "url": "https://api.github.com/repos/roc-lang/roc/issues/4326/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/roc-lang/roc/issues/4326/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            }
        },
        "public": true,
        "created_at": "2022-10-14T14:14:29Z",
        "org": {
            "id": 63474338,
            "login": "roc-lang",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/roc-lang",
            "avatar_url": "https://avatars.githubusercontent.com/u/63474338?"
        }
    },
    {
        "id": "24107168917",
        "type": "WatchEvent",
        "actor": {
            "id": 1029536,
            "login": "boenrobot",
            "display_login": "boenrobot",
            "gravatar_id": "",
            "url": "https://api.github.com/users/boenrobot",
            "avatar_url": "https://avatars.githubusercontent.com/u/1029536?"
        },
        "repo": {
            "id": 467212329,
            "name": "microsoft/routeros-scanner",
            "url": "https://api.github.com/repos/microsoft/routeros-scanner"
        },
        "payload": {
            "action": "started"
        },
        "public": true,
        "created_at": "2022-09-20T08:26:14Z",
        "org": {
            "id": 6154722,
            "login": "microsoft",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/microsoft",
            "avatar_url": "https://avatars.githubusercontent.com/u/6154722?"
        }
    },
    {
        "id": "24044593645",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 1029536,
            "login": "boenrobot",
            "display_login": "boenrobot",
            "gravatar_id": "",
            "url": "https://api.github.com/users/boenrobot",
            "avatar_url": "https://avatars.githubusercontent.com/u/1029536?"
        },
        "repo": {
            "id": 12084182,
            "name": "friends-of-reactphp/mysql",
            "url": "https://api.github.com/repos/friends-of-reactphp/mysql"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/friends-of-reactphp/mysql/issues/151",
                "repository_url": "https://api.github.com/repos/friends-of-reactphp/mysql",
                "labels_url": "https://api.github.com/repos/friends-of-reactphp/mysql/issues/151/labels{/name}",
                "comments_url": "https://api.github.com/repos/friends-of-reactphp/mysql/issues/151/comments",
                "events_url": "https://api.github.com/repos/friends-of-reactphp/mysql/issues/151/events",
                "html_url": "https://github.com/friends-of-reactphp/mysql/issues/151",
                "id": 1084427696,
                "node_id": "I_kwDOALhj1s5Aow2w",
                "number": 151,
                "title": "How to support duplicate column names?",
                "user": {
                    "login": "clue",
                    "id": 776829,
                    "node_id": "MDQ6VXNlcjc3NjgyOQ==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/776829?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/clue",
                    "html_url": "https://github.com/clue",
                    "followers_url": "https://api.github.com/users/clue/followers",
                    "following_url": "https://api.github.com/users/clue/following{/other_user}",
                    "gists_url": "https://api.github.com/users/clue/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/clue/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/clue/subscriptions",
                    "organizations_url": "https://api.github.com/users/clue/orgs",
                    "repos_url": "https://api.github.com/users/clue/repos",
                    "events_url": "https://api.github.com/users/clue/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/clue/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 51889037,
                        "node_id": "MDU6TGFiZWw1MTg4OTAzNw==",
                        "url": "https://api.github.com/repos/friends-of-reactphp/mysql/labels/question",
                        "name": "question",
                        "color": "cc317c",
                        "default": true,
                        "description": null
                    },
                    {
                        "id": 863287342,
                        "node_id": "MDU6TGFiZWw4NjMyODczNDI=",
                        "url": "https://api.github.com/repos/friends-of-reactphp/mysql/labels/help%20wanted",
                        "name": "help wanted",
                        "color": "0e8a16",
                        "default": true,
                        "description": ""
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 1,
                "created_at": "2021-12-20T06:55:45Z",
                "updated_at": "2022-09-16T07:05:58Z",
                "closed_at": null,
                "author_association": "CONTRIBUTOR",
                "active_lock_reason": null,
                "body": "How should we handle queries that use the same name column name multiple times?\r\n\r\n```sql\r\n-- Bob wins\r\nSELECT \"Alice\" AS name, \"Bob\" AS name\r\n\r\n-- Bob wins\r\nSELECT \"Alice\" AS name, user.* FROM (SELECT \"Bob\" AS name) AS user\r\n\r\n-- Alice wins\r\nSELECT user.*, \"Alice\" AS name FROM (SELECT \"Bob\" AS name) AS user\r\n```\r\n\r\nAt the moment, the value from the last occurrence wins because we expose each row as an associative array (later values with the same key overwrite previous values).\r\n\r\nTechnically, the protocol exposes a list of all values, so we do have access to all values inside the protocol implementation, but do not currently expose this to the user. Other projects expose a \"fetch mode\" to control whether the data should be exposed as a plain list (`PDO::FETCH_NUM`) or as an associative array (`PDO::FETCH_ASSOC`) or object (`PDO::FETCH_OBJ` / `PDO::FETCH_CLASS`), etc. (https://www.php.net/manual/en/pdostatement.fetch.php)\r\n\r\nThe current behavior can be seen as inconvenient or inconsistent, given that `QueryResult::$resultFields` contains a list of all(!) column names, yet `QueryResult::$resultRows[0]` contains an associative array with unique column names only. If you run any of the above queries with the `examples/01-query.php` script, you'll see that it reports a table with 2 header columns, but only reports one value per row.\r\n\r\nProviding this kind of API isn't too much work, but I wonder how big of a problem this actually is and whether this actually warrants increasing our API surface?",
                "reactions": {
                    "url": "https://api.github.com/repos/friends-of-reactphp/mysql/issues/151/reactions",
                    "total_count": 1,
                    "+1": 1,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/friends-of-reactphp/mysql/issues/151/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/friends-of-reactphp/mysql/issues/comments/1248997615",
                "html_url": "https://github.com/friends-of-reactphp/mysql/issues/151#issuecomment-1248997615",
                "issue_url": "https://api.github.com/repos/friends-of-reactphp/mysql/issues/151",
                "id": 1248997615,
                "node_id": "IC_kwDOALhj1s5KcjDv",
                "user": {
                    "login": "boenrobot",
                    "id": 1029536,
                    "node_id": "MDQ6VXNlcjEwMjk1MzY=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/1029536?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/boenrobot",
                    "html_url": "https://github.com/boenrobot",
                    "followers_url": "https://api.github.com/users/boenrobot/followers",
                    "following_url": "https://api.github.com/users/boenrobot/following{/other_user}",
                    "gists_url": "https://api.github.com/users/boenrobot/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/boenrobot/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/boenrobot/subscriptions",
                    "organizations_url": "https://api.github.com/users/boenrobot/orgs",
                    "repos_url": "https://api.github.com/users/boenrobot/repos",
                    "events_url": "https://api.github.com/users/boenrobot/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/boenrobot/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2022-09-16T07:05:58Z",
                "updated_at": "2022-09-16T07:05:58Z",
                "author_association": "NONE",
                "body": "IMHO, adding a fetch mode in general is worth it.\r\n\r\nKeep the current default of taking the last value in an associate array (both for the sake of BC, but also for the sake of people coming from PDO), but add an indexed array option, which would return all column values mapped to the same indexes (i.e. ```count($queryResult->resultFields) === count($queryResult->resultRows[0])```).\r\n\r\nAdding a object mode could be worth it if that object combines the two other fetch modes, i.e. it provides ArrayAccess that would give the column at that index when given an integer, or the last column of that name if given a string. On such an object, count() and foreach behavior could perhaps default to the associative array behavior, but provide a setter to switch both to an indexed mode. This object mode would obviously be more memory consuming, since it would need to contain a reference to some \"string to index\" map which would add some overhead.\r\n\r\nA \"compact\" object mode (akin to PDO's object mode) is not worth it I think, as in PHP, it has the same ergonomics as an associative array. If you need an stdClass, you can always just cast the associative array.\r\n\r\nA \"class\" mode is also not worth it I think, as you still need to define a mapping anyway - might as well define it out of the build it fetch modes. Less magic = easier to reason about.",
                "reactions": {
                    "url": "https://api.github.com/repos/friends-of-reactphp/mysql/issues/comments/1248997615/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2022-09-16T07:05:58Z",
        "org": {
            "id": 28479009,
            "login": "friends-of-reactphp",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/friends-of-reactphp",
            "avatar_url": "https://avatars.githubusercontent.com/u/28479009?"
        }
    },
    {
        "id": "24024650715",
        "type": "WatchEvent",
        "actor": {
            "id": 1029536,
            "login": "boenrobot",
            "display_login": "boenrobot",
            "gravatar_id": "",
            "url": "https://api.github.com/users/boenrobot",
            "avatar_url": "https://avatars.githubusercontent.com/u/1029536?"
        },
        "repo": {
            "id": 166616185,
            "name": "roc-lang/roc",
            "url": "https://api.github.com/repos/roc-lang/roc"
        },
        "payload": {
            "action": "started"
        },
        "public": true,
        "created_at": "2022-09-15T10:26:55Z",
        "org": {
            "id": 63474338,
            "login": "roc-lang",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/roc-lang",
            "avatar_url": "https://avatars.githubusercontent.com/u/63474338?"
        }
    },
    {
        "id": "25748351694",
        "type": "IssuesEvent",
        "actor": {
            "id": 1029536,
            "login": "boenrobot",
            "display_login": "boenrobot",
            "gravatar_id": "",
            "url": "https://api.github.com/users/boenrobot",
            "avatar_url": "https://avatars.githubusercontent.com/u/1029536?"
        },
        "repo": {
            "id": 173702772,
            "name": "pest-parser/intellij-pest",
            "url": "https://api.github.com/repos/pest-parser/intellij-pest"
        },
        "payload": {
            "action": "opened",
            "issue": {
                "url": "https://api.github.com/repos/pest-parser/intellij-pest/issues/261",
                "repository_url": "https://api.github.com/repos/pest-parser/intellij-pest",
                "labels_url": "https://api.github.com/repos/pest-parser/intellij-pest/issues/261/labels{/name}",
                "comments_url": "https://api.github.com/repos/pest-parser/intellij-pest/issues/261/comments",
                "events_url": "https://api.github.com/repos/pest-parser/intellij-pest/issues/261/events",
                "html_url": "https://github.com/pest-parser/intellij-pest/issues/261",
                "id": 1484415510,
                "node_id": "I_kwDOClp-dM5YemIW",
                "number": 261,
                "title": "Include output in live preview",
                "user": {
                    "login": "boenrobot",
                    "id": 1029536,
                    "node_id": "MDQ6VXNlcjEwMjk1MzY=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/1029536?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/boenrobot",
                    "html_url": "https://github.com/boenrobot",
                    "followers_url": "https://api.github.com/users/boenrobot/followers",
                    "following_url": "https://api.github.com/users/boenrobot/following{/other_user}",
                    "gists_url": "https://api.github.com/users/boenrobot/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/boenrobot/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/boenrobot/subscriptions",
                    "organizations_url": "https://api.github.com/users/boenrobot/orgs",
                    "repos_url": "https://api.github.com/users/boenrobot/repos",
                    "events_url": "https://api.github.com/users/boenrobot/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/boenrobot/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 0,
                "created_at": "2022-12-08T11:23:08Z",
                "updated_at": "2022-12-08T11:23:08Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "The pest.rs website has a feature where if you have the grammar successfully evaluate an input, you get the output AST.\r\n\r\nThis is very useful when iterating on new parsers. The live preview in the IDE instead does nothing on a successful parsing of the input, other than not complain, to show that parsing is successful.",
                "reactions": {
                    "url": "https://api.github.com/repos/pest-parser/intellij-pest/issues/261/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/pest-parser/intellij-pest/issues/261/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            }
        },
        "public": true,
        "created_at": "2022-12-08T11:23:09Z",
        "org": {
            "id": 26044607,
            "login": "pest-parser",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/pest-parser",
            "avatar_url": "https://avatars.githubusercontent.com/u/26044607?"
        }
    },
    {
        "id": "25685591150",
        "type": "PullRequestEvent",
        "actor": {
            "id": 1029536,
            "login": "boenrobot",
            "display_login": "boenrobot",
            "gravatar_id": "",
            "url": "https://api.github.com/users/boenrobot",
            "avatar_url": "https://avatars.githubusercontent.com/u/1029536?"
        },
        "repo": {
            "id": 141724413,
            "name": "Shardj/zf1-future",
            "url": "https://api.github.com/repos/Shardj/zf1-future"
        },
        "payload": {
            "action": "opened",
            "number": 292,
            "pull_request": {
                "url": "https://api.github.com/repos/Shardj/zf1-future/pulls/292",
                "id": 1148576806,
                "node_id": "PR_kwDOCHKK_c5EdeQm",
                "html_url": "https://github.com/Shardj/zf1-future/pull/292",
                "diff_url": "https://github.com/Shardj/zf1-future/pull/292.diff",
                "patch_url": "https://github.com/Shardj/zf1-future/pull/292.patch",
                "issue_url": "https://api.github.com/repos/Shardj/zf1-future/issues/292",
                "number": 292,
                "state": "open",
                "locked": false,
                "title": "Compatibility with PHPUnit 9",
                "user": {
                    "login": "boenrobot",
                    "id": 1029536,
                    "node_id": "MDQ6VXNlcjEwMjk1MzY=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/1029536?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/boenrobot",
                    "html_url": "https://github.com/boenrobot",
                    "followers_url": "https://api.github.com/users/boenrobot/followers",
                    "following_url": "https://api.github.com/users/boenrobot/following{/other_user}",
                    "gists_url": "https://api.github.com/users/boenrobot/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/boenrobot/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/boenrobot/subscriptions",
                    "organizations_url": "https://api.github.com/users/boenrobot/orgs",
                    "repos_url": "https://api.github.com/users/boenrobot/repos",
                    "events_url": "https://api.github.com/users/boenrobot/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/boenrobot/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "I found out #44 , and followed the advice of adding shims for the missing classes, including also adding\r\n\r\n```php\r\nuse PHPUnit\\Runner\\Version;\r\n\r\nfinal class PHPUnit_Runner_Version {\r\n    public static function id(): string\r\n    {\r\n        return Version::id();\r\n    }\r\n\r\n    public static function series(): string\r\n    {\r\n        return Version::series();\r\n    }\r\n\r\n    public static function getVersionString(): string\r\n    {\r\n        return Version::getVersionString();\r\n    }\r\n}\r\n```\r\n\r\nFor the sake of PHPUnit\\Runner\\Version that is otherwise final, so can't simply be extended, and PHPUnit_Framework_ExpectationFailedException is only referenced in doc comments, so it's not required for the tests to actually run.\r\n\r\nEven after all that, I got\r\n```\r\nFatal error: Declaration of Zend_Test_PHPUnit_ControllerTestCase::setUp() must be compatible with PHPUnit\\Framework\\TestCase::setUp(): void in C:\\...\\vendor\\shardj\\zf1-future\\library\\Zend\\Test\\PHPUnit\\ControllerTestCase.php on line 123\r\n```\r\n\r\nAfter explicitly adding `: void` to the return type, it works, so this is a PR to fix this. bootstrap()... I thought I might as well... It's a final method already.",
                "created_at": "2022-12-06T10:01:24Z",
                "updated_at": "2022-12-06T10:01:24Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": null,
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/Shardj/zf1-future/pulls/292/commits",
                "review_comments_url": "https://api.github.com/repos/Shardj/zf1-future/pulls/292/comments",
                "review_comment_url": "https://api.github.com/repos/Shardj/zf1-future/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/Shardj/zf1-future/issues/292/comments",
                "statuses_url": "https://api.github.com/repos/Shardj/zf1-future/statuses/86fd28fbdf4aa13dbefac47197dc2d326e0b5a2e",
                "head": {
                    "label": "boenrobot:phpunit-forward-compat",
                    "ref": "phpunit-forward-compat",
                    "sha": "86fd28fbdf4aa13dbefac47197dc2d326e0b5a2e",
                    "user": {
                        "login": "boenrobot",
                        "id": 1029536,
                        "node_id": "MDQ6VXNlcjEwMjk1MzY=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/1029536?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/boenrobot",
                        "html_url": "https://github.com/boenrobot",
                        "followers_url": "https://api.github.com/users/boenrobot/followers",
                        "following_url": "https://api.github.com/users/boenrobot/following{/other_user}",
                        "gists_url": "https://api.github.com/users/boenrobot/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/boenrobot/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/boenrobot/subscriptions",
                        "organizations_url": "https://api.github.com/users/boenrobot/orgs",
                        "repos_url": "https://api.github.com/users/boenrobot/repos",
                        "events_url": "https://api.github.com/users/boenrobot/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/boenrobot/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 574890254,
                        "node_id": "R_kgDOIkQhDg",
                        "name": "zf1-future",
                        "full_name": "boenrobot/zf1-future",
                        "private": false,
                        "owner": {
                            "login": "boenrobot",
                            "id": 1029536,
                            "node_id": "MDQ6VXNlcjEwMjk1MzY=",
                            "avatar_url": "https://avatars.githubusercontent.com/u/1029536?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/boenrobot",
                            "html_url": "https://github.com/boenrobot",
                            "followers_url": "https://api.github.com/users/boenrobot/followers",
                            "following_url": "https://api.github.com/users/boenrobot/following{/other_user}",
                            "gists_url": "https://api.github.com/users/boenrobot/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/boenrobot/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/boenrobot/subscriptions",
                            "organizations_url": "https://api.github.com/users/boenrobot/orgs",
                            "repos_url": "https://api.github.com/users/boenrobot/repos",
                            "events_url": "https://api.github.com/users/boenrobot/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/boenrobot/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/boenrobot/zf1-future",
                        "description": "PHP 8.0 compatible version of ZF1",
                        "fork": true,
                        "url": "https://api.github.com/repos/boenrobot/zf1-future",
                        "forks_url": "https://api.github.com/repos/boenrobot/zf1-future/forks",
                        "keys_url": "https://api.github.com/repos/boenrobot/zf1-future/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/boenrobot/zf1-future/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/boenrobot/zf1-future/teams",
                        "hooks_url": "https://api.github.com/repos/boenrobot/zf1-future/hooks",
                        "issue_events_url": "https://api.github.com/repos/boenrobot/zf1-future/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/boenrobot/zf1-future/events",
                        "assignees_url": "https://api.github.com/repos/boenrobot/zf1-future/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/boenrobot/zf1-future/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/boenrobot/zf1-future/tags",
                        "blobs_url": "https://api.github.com/repos/boenrobot/zf1-future/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/boenrobot/zf1-future/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/boenrobot/zf1-future/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/boenrobot/zf1-future/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/boenrobot/zf1-future/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/boenrobot/zf1-future/languages",
                        "stargazers_url": "https://api.github.com/repos/boenrobot/zf1-future/stargazers",
                        "contributors_url": "https://api.github.com/repos/boenrobot/zf1-future/contributors",
                        "subscribers_url": "https://api.github.com/repos/boenrobot/zf1-future/subscribers",
                        "subscription_url": "https://api.github.com/repos/boenrobot/zf1-future/subscription",
                        "commits_url": "https://api.github.com/repos/boenrobot/zf1-future/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/boenrobot/zf1-future/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/boenrobot/zf1-future/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/boenrobot/zf1-future/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/boenrobot/zf1-future/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/boenrobot/zf1-future/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/boenrobot/zf1-future/merges",
                        "archive_url": "https://api.github.com/repos/boenrobot/zf1-future/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/boenrobot/zf1-future/downloads",
                        "issues_url": "https://api.github.com/repos/boenrobot/zf1-future/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/boenrobot/zf1-future/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/boenrobot/zf1-future/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/boenrobot/zf1-future/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/boenrobot/zf1-future/labels{/name}",
                        "releases_url": "https://api.github.com/repos/boenrobot/zf1-future/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/boenrobot/zf1-future/deployments",
                        "created_at": "2022-12-06T09:52:49Z",
                        "updated_at": "2022-12-02T13:42:32Z",
                        "pushed_at": "2022-12-06T09:54:48Z",
                        "git_url": "git://github.com/boenrobot/zf1-future.git",
                        "ssh_url": "git@github.com:boenrobot/zf1-future.git",
                        "clone_url": "https://github.com/boenrobot/zf1-future.git",
                        "svn_url": "https://github.com/boenrobot/zf1-future",
                        "homepage": "",
                        "size": 86409,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": null,
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "bsd-3-clause",
                            "name": "BSD 3-Clause \"New\" or \"Revised\" License",
                            "spdx_id": "BSD-3-Clause",
                            "url": "https://api.github.com/licenses/bsd-3-clause",
                            "node_id": "MDc6TGljZW5zZTU="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "master"
                    }
                },
                "base": {
                    "label": "Shardj:master",
                    "ref": "master",
                    "sha": "66f96b4d55d24850f002156c9b447abf9b154ad7",
                    "user": {
                        "login": "Shardj",
                        "id": 5624120,
                        "node_id": "MDQ6VXNlcjU2MjQxMjA=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/5624120?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/Shardj",
                        "html_url": "https://github.com/Shardj",
                        "followers_url": "https://api.github.com/users/Shardj/followers",
                        "following_url": "https://api.github.com/users/Shardj/following{/other_user}",
                        "gists_url": "https://api.github.com/users/Shardj/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/Shardj/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/Shardj/subscriptions",
                        "organizations_url": "https://api.github.com/users/Shardj/orgs",
                        "repos_url": "https://api.github.com/users/Shardj/repos",
                        "events_url": "https://api.github.com/users/Shardj/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/Shardj/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 141724413,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNDE3MjQ0MTM=",
                        "name": "zf1-future",
                        "full_name": "Shardj/zf1-future",
                        "private": false,
                        "owner": {
                            "login": "Shardj",
                            "id": 5624120,
                            "node_id": "MDQ6VXNlcjU2MjQxMjA=",
                            "avatar_url": "https://avatars.githubusercontent.com/u/5624120?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/Shardj",
                            "html_url": "https://github.com/Shardj",
                            "followers_url": "https://api.github.com/users/Shardj/followers",
                            "following_url": "https://api.github.com/users/Shardj/following{/other_user}",
                            "gists_url": "https://api.github.com/users/Shardj/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/Shardj/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/Shardj/subscriptions",
                            "organizations_url": "https://api.github.com/users/Shardj/orgs",
                            "repos_url": "https://api.github.com/users/Shardj/repos",
                            "events_url": "https://api.github.com/users/Shardj/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/Shardj/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/Shardj/zf1-future",
                        "description": "PHP 8.0 compatible version of ZF1",
                        "fork": true,
                        "url": "https://api.github.com/repos/Shardj/zf1-future",
                        "forks_url": "https://api.github.com/repos/Shardj/zf1-future/forks",
                        "keys_url": "https://api.github.com/repos/Shardj/zf1-future/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/Shardj/zf1-future/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/Shardj/zf1-future/teams",
                        "hooks_url": "https://api.github.com/repos/Shardj/zf1-future/hooks",
                        "issue_events_url": "https://api.github.com/repos/Shardj/zf1-future/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/Shardj/zf1-future/events",
                        "assignees_url": "https://api.github.com/repos/Shardj/zf1-future/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/Shardj/zf1-future/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/Shardj/zf1-future/tags",
                        "blobs_url": "https://api.github.com/repos/Shardj/zf1-future/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/Shardj/zf1-future/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/Shardj/zf1-future/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/Shardj/zf1-future/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/Shardj/zf1-future/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/Shardj/zf1-future/languages",
                        "stargazers_url": "https://api.github.com/repos/Shardj/zf1-future/stargazers",
                        "contributors_url": "https://api.github.com/repos/Shardj/zf1-future/contributors",
                        "subscribers_url": "https://api.github.com/repos/Shardj/zf1-future/subscribers",
                        "subscription_url": "https://api.github.com/repos/Shardj/zf1-future/subscription",
                        "commits_url": "https://api.github.com/repos/Shardj/zf1-future/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/Shardj/zf1-future/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/Shardj/zf1-future/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/Shardj/zf1-future/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/Shardj/zf1-future/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/Shardj/zf1-future/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/Shardj/zf1-future/merges",
                        "archive_url": "https://api.github.com/repos/Shardj/zf1-future/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/Shardj/zf1-future/downloads",
                        "issues_url": "https://api.github.com/repos/Shardj/zf1-future/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/Shardj/zf1-future/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/Shardj/zf1-future/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/Shardj/zf1-future/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/Shardj/zf1-future/labels{/name}",
                        "releases_url": "https://api.github.com/repos/Shardj/zf1-future/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/Shardj/zf1-future/deployments",
                        "created_at": "2018-07-20T14:49:06Z",
                        "updated_at": "2022-12-02T13:42:32Z",
                        "pushed_at": "2022-12-06T10:01:24Z",
                        "git_url": "git://github.com/Shardj/zf1-future.git",
                        "ssh_url": "git@github.com:Shardj/zf1-future.git",
                        "clone_url": "https://github.com/Shardj/zf1-future.git",
                        "svn_url": "https://github.com/Shardj/zf1-future",
                        "homepage": "",
                        "size": 86409,
                        "stargazers_count": 351,
                        "watchers_count": 351,
                        "language": "PHP",
                        "has_issues": true,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 152,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 12,
                        "license": {
                            "key": "bsd-3-clause",
                            "name": "BSD 3-Clause \"New\" or \"Revised\" License",
                            "spdx_id": "BSD-3-Clause",
                            "url": "https://api.github.com/licenses/bsd-3-clause",
                            "node_id": "MDc6TGljZW5zZTU="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 152,
                        "open_issues": 12,
                        "watchers": 351,
                        "default_branch": "master"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/Shardj/zf1-future/pulls/292"
                    },
                    "html": {
                        "href": "https://github.com/Shardj/zf1-future/pull/292"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/Shardj/zf1-future/issues/292"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/Shardj/zf1-future/issues/292/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/Shardj/zf1-future/pulls/292/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/Shardj/zf1-future/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/Shardj/zf1-future/pulls/292/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/Shardj/zf1-future/statuses/86fd28fbdf4aa13dbefac47197dc2d326e0b5a2e"
                    }
                },
                "author_association": "NONE",
                "auto_merge": null,
                "active_lock_reason": null,
                "merged": false,
                "mergeable": null,
                "rebaseable": null,
                "mergeable_state": "unknown",
                "merged_by": null,
                "comments": 0,
                "review_comments": 0,
                "maintainer_can_modify": true,
                "commits": 1,
                "additions": 2,
                "deletions": 2,
                "changed_files": 1
            }
        },
        "public": true,
        "created_at": "2022-12-06T10:01:25Z"
    },
    {
        "id": "25685429461",
        "type": "CreateEvent",
        "actor": {
            "id": 1029536,
            "login": "boenrobot",
            "display_login": "boenrobot",
            "gravatar_id": "",
            "url": "https://api.github.com/users/boenrobot",
            "avatar_url": "https://avatars.githubusercontent.com/u/1029536?"
        },
        "repo": {
            "id": 574890254,
            "name": "boenrobot/zf1-future",
            "url": "https://api.github.com/repos/boenrobot/zf1-future"
        },
        "payload": {
            "ref": "phpunit-forward-compat",
            "ref_type": "branch",
            "master_branch": "master",
            "description": "PHP 8.0 compatible version of ZF1",
            "pusher_type": "user"
        },
        "public": true,
        "created_at": "2022-12-06T09:54:49Z"
    },
    {
        "id": "25685381328",
        "type": "ForkEvent",
        "actor": {
            "id": 1029536,
            "login": "boenrobot",
            "display_login": "boenrobot",
            "gravatar_id": "",
            "url": "https://api.github.com/users/boenrobot",
            "avatar_url": "https://avatars.githubusercontent.com/u/1029536?"
        },
        "repo": {
            "id": 141724413,
            "name": "Shardj/zf1-future",
            "url": "https://api.github.com/repos/Shardj/zf1-future"
        },
        "payload": {
            "forkee": {
                "id": 574890254,
                "node_id": "R_kgDOIkQhDg",
                "name": "zf1-future",
                "full_name": "boenrobot/zf1-future",
                "private": false,
                "owner": {
                    "login": "boenrobot",
                    "id": 1029536,
                    "node_id": "MDQ6VXNlcjEwMjk1MzY=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/1029536?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/boenrobot",
                    "html_url": "https://github.com/boenrobot",
                    "followers_url": "https://api.github.com/users/boenrobot/followers",
                    "following_url": "https://api.github.com/users/boenrobot/following{/other_user}",
                    "gists_url": "https://api.github.com/users/boenrobot/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/boenrobot/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/boenrobot/subscriptions",
                    "organizations_url": "https://api.github.com/users/boenrobot/orgs",
                    "repos_url": "https://api.github.com/users/boenrobot/repos",
                    "events_url": "https://api.github.com/users/boenrobot/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/boenrobot/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "html_url": "https://github.com/boenrobot/zf1-future",
                "description": "PHP 8.0 compatible version of ZF1",
                "fork": true,
                "url": "https://api.github.com/repos/boenrobot/zf1-future",
                "forks_url": "https://api.github.com/repos/boenrobot/zf1-future/forks",
                "keys_url": "https://api.github.com/repos/boenrobot/zf1-future/keys{/key_id}",
                "collaborators_url": "https://api.github.com/repos/boenrobot/zf1-future/collaborators{/collaborator}",
                "teams_url": "https://api.github.com/repos/boenrobot/zf1-future/teams",
                "hooks_url": "https://api.github.com/repos/boenrobot/zf1-future/hooks",
                "issue_events_url": "https://api.github.com/repos/boenrobot/zf1-future/issues/events{/number}",
                "events_url": "https://api.github.com/repos/boenrobot/zf1-future/events",
                "assignees_url": "https://api.github.com/repos/boenrobot/zf1-future/assignees{/user}",
                "branches_url": "https://api.github.com/repos/boenrobot/zf1-future/branches{/branch}",
                "tags_url": "https://api.github.com/repos/boenrobot/zf1-future/tags",
                "blobs_url": "https://api.github.com/repos/boenrobot/zf1-future/git/blobs{/sha}",
                "git_tags_url": "https://api.github.com/repos/boenrobot/zf1-future/git/tags{/sha}",
                "git_refs_url": "https://api.github.com/repos/boenrobot/zf1-future/git/refs{/sha}",
                "trees_url": "https://api.github.com/repos/boenrobot/zf1-future/git/trees{/sha}",
                "statuses_url": "https://api.github.com/repos/boenrobot/zf1-future/statuses/{sha}",
                "languages_url": "https://api.github.com/repos/boenrobot/zf1-future/languages",
                "stargazers_url": "https://api.github.com/repos/boenrobot/zf1-future/stargazers",
                "contributors_url": "https://api.github.com/repos/boenrobot/zf1-future/contributors",
                "subscribers_url": "https://api.github.com/repos/boenrobot/zf1-future/subscribers",
                "subscription_url": "https://api.github.com/repos/boenrobot/zf1-future/subscription",
                "commits_url": "https://api.github.com/repos/boenrobot/zf1-future/commits{/sha}",
                "git_commits_url": "https://api.github.com/repos/boenrobot/zf1-future/git/commits{/sha}",
                "comments_url": "https://api.github.com/repos/boenrobot/zf1-future/comments{/number}",
                "issue_comment_url": "https://api.github.com/repos/boenrobot/zf1-future/issues/comments{/number}",
                "contents_url": "https://api.github.com/repos/boenrobot/zf1-future/contents/{+path}",
                "compare_url": "https://api.github.com/repos/boenrobot/zf1-future/compare/{base}...{head}",
                "merges_url": "https://api.github.com/repos/boenrobot/zf1-future/merges",
                "archive_url": "https://api.github.com/repos/boenrobot/zf1-future/{archive_format}{/ref}",
                "downloads_url": "https://api.github.com/repos/boenrobot/zf1-future/downloads",
                "issues_url": "https://api.github.com/repos/boenrobot/zf1-future/issues{/number}",
                "pulls_url": "https://api.github.com/repos/boenrobot/zf1-future/pulls{/number}",
                "milestones_url": "https://api.github.com/repos/boenrobot/zf1-future/milestones{/number}",
                "notifications_url": "https://api.github.com/repos/boenrobot/zf1-future/notifications{?since,all,participating}",
                "labels_url": "https://api.github.com/repos/boenrobot/zf1-future/labels{/name}",
                "releases_url": "https://api.github.com/repos/boenrobot/zf1-future/releases{/id}",
                "deployments_url": "https://api.github.com/repos/boenrobot/zf1-future/deployments",
                "created_at": "2022-12-06T09:52:49Z",
                "updated_at": "2022-12-02T13:42:32Z",
                "pushed_at": "2022-11-29T17:42:01Z",
                "git_url": "git://github.com/boenrobot/zf1-future.git",
                "ssh_url": "git@github.com:boenrobot/zf1-future.git",
                "clone_url": "https://github.com/boenrobot/zf1-future.git",
                "svn_url": "https://github.com/boenrobot/zf1-future",
                "homepage": "",
                "size": 86409,
                "stargazers_count": 0,
                "watchers_count": 0,
                "language": null,
                "has_issues": false,
                "has_projects": true,
                "has_downloads": true,
                "has_wiki": true,
                "has_pages": false,
                "has_discussions": false,
                "forks_count": 0,
                "mirror_url": null,
                "archived": false,
                "disabled": false,
                "open_issues_count": 0,
                "license": {
                    "key": "bsd-3-clause",
                    "name": "BSD 3-Clause \"New\" or \"Revised\" License",
                    "spdx_id": "BSD-3-Clause",
                    "url": "https://api.github.com/licenses/bsd-3-clause",
                    "node_id": "MDc6TGljZW5zZTU="
                },
                "allow_forking": true,
                "is_template": false,
                "web_commit_signoff_required": false,
                "topics": [],
                "visibility": "public",
                "forks": 0,
                "open_issues": 0,
                "watchers": 0,
                "default_branch": "master",
                "public": true
            }
        },
        "public": true,
        "created_at": "2022-12-06T09:52:50Z"
    },
    {
        "id": "25610410534",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 1029536,
            "login": "boenrobot",
            "display_login": "boenrobot",
            "gravatar_id": "",
            "url": "https://api.github.com/users/boenrobot",
            "avatar_url": "https://avatars.githubusercontent.com/u/1029536?"
        },
        "repo": {
            "id": 327282114,
            "name": "mxinden/asynchronous-codec",
            "url": "https://api.github.com/repos/mxinden/asynchronous-codec"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/mxinden/asynchronous-codec/issues/4",
                "repository_url": "https://api.github.com/repos/mxinden/asynchronous-codec",
                "labels_url": "https://api.github.com/repos/mxinden/asynchronous-codec/issues/4/labels{/name}",
                "comments_url": "https://api.github.com/repos/mxinden/asynchronous-codec/issues/4/comments",
                "events_url": "https://api.github.com/repos/mxinden/asynchronous-codec/issues/4/events",
                "html_url": "https://github.com/mxinden/asynchronous-codec/pull/4",
                "id": 1465495315,
                "node_id": "PR_kwDOE4Htws5DwTA_",
                "number": 4,
                "title": "[WIP] no_std traits",
                "user": {
                    "login": "boenrobot",
                    "id": 1029536,
                    "node_id": "MDQ6VXNlcjEwMjk1MzY=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/1029536?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/boenrobot",
                    "html_url": "https://github.com/boenrobot",
                    "followers_url": "https://api.github.com/users/boenrobot/followers",
                    "following_url": "https://api.github.com/users/boenrobot/following{/other_user}",
                    "gists_url": "https://api.github.com/users/boenrobot/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/boenrobot/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/boenrobot/subscriptions",
                    "organizations_url": "https://api.github.com/users/boenrobot/orgs",
                    "repos_url": "https://api.github.com/users/boenrobot/repos",
                    "events_url": "https://api.github.com/users/boenrobot/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/boenrobot/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 1,
                "created_at": "2022-11-27T16:28:08Z",
                "updated_at": "2022-12-02T07:59:34Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "draft": false,
                "pull_request": {
                    "url": "https://api.github.com/repos/mxinden/asynchronous-codec/pulls/4",
                    "html_url": "https://github.com/mxinden/asynchronous-codec/pull/4",
                    "diff_url": "https://github.com/mxinden/asynchronous-codec/pull/4.diff",
                    "patch_url": "https://github.com/mxinden/asynchronous-codec/pull/4.patch",
                    "merged_at": null
                },
                "body": "Hello.\r\n\r\nI am trying to use this crate to write a library around a custom TCP based protocol. Said protocol will likely be useful on both web servers and embedded devices (as long as said devices provide some sort of networking and a TCP stream implementation; think embassy-net), so I want to make it as portable as possible.\r\n\r\nWhile I understand it might not be possible for it to be fully portable (e.g. Framed(Read/Write) are not embassy-net compatible, due to embassy-net's TCP stream not being AsyncRead/AsyncWrite compatible), it would still help a great deal if I can at least reuse the encoder and decoder, and just swap out a stream handler.\r\n\r\nThis PR is my attempt to do this (by getting rid of std::io::Error in encoder and decoder, and following the compiler warnings from there), but I am new to Rust, so I ended up with some errors related to Fuse, and yet occurring in FramedRead/FramedWrite, and I'm not sure how to deal with those yet.\r\n\r\nI thought I share the progress so far, to ensure it's even worth pursuing this to its end, or if I should perhaps try to instead refactor async-codec to be splittable (which is the reason I ended here... Because I _also_ need a reader/writer split).",
                "reactions": {
                    "url": "https://api.github.com/repos/mxinden/asynchronous-codec/issues/4/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/mxinden/asynchronous-codec/issues/4/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/mxinden/asynchronous-codec/issues/comments/1334877419",
                "html_url": "https://github.com/mxinden/asynchronous-codec/pull/4#issuecomment-1334877419",
                "issue_url": "https://api.github.com/repos/mxinden/asynchronous-codec/issues/4",
                "id": 1334877419,
                "node_id": "IC_kwDOE4Htws5PkJzr",
                "user": {
                    "login": "boenrobot",
                    "id": 1029536,
                    "node_id": "MDQ6VXNlcjEwMjk1MzY=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/1029536?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/boenrobot",
                    "html_url": "https://github.com/boenrobot",
                    "followers_url": "https://api.github.com/users/boenrobot/followers",
                    "following_url": "https://api.github.com/users/boenrobot/following{/other_user}",
                    "gists_url": "https://api.github.com/users/boenrobot/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/boenrobot/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/boenrobot/subscriptions",
                    "organizations_url": "https://api.github.com/users/boenrobot/orgs",
                    "repos_url": "https://api.github.com/users/boenrobot/repos",
                    "events_url": "https://api.github.com/users/boenrobot/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/boenrobot/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2022-12-02T07:59:34Z",
                "updated_at": "2022-12-02T07:59:34Z",
                "author_association": "NONE",
                "body": "> Thanks for upstreaming this. In general I am not opposed to being no-std compliant, unless it adds significant overhead to the crate.\r\n\r\nGood to know \ud83d\udc4d \r\n\r\n> Do you think it makes sense to port parts of async-codec to this crate?\r\n\r\nNot sure... I kind of like this crate's API better, in that it is simpler to make codecs with it.\r\n\r\nAt the same time, it seems async-codec allows for the codec to be more directly demanding of the stream handler (i.e. it can tell it \"don't invoke me again until you have N more bytes ready in the buffer\"), which... maybe... would improve performance. I say maybe, because the bytes still need to be checked anyway... It's just that they are checked by the stream handler, not by the codec... and the codec still should be defensively checking the length anyway, so... I guess the point is lost, maybe.\r\n\r\nI have not tried to implement a no_std compatible framed reader/writer, so maybe async-codec's API is the only way to potentially do it in alloc-free environments (potentially being a keyword, because even async-codec's reader is not no_std compatible; only its codec API is).\r\n\r\n\r\nI am thinking that instead of porting async-codec, maybe just eliminate Fuse and instead refactor the hierarchy a bit, so that we have reader/writer traits with default implementations that include get_reader()/get_writer() methods, respectively. FramedReader/FramedWriter would only implement the respective trait, and Framed would implement both. In all cases, get_reader()/get_writer() would return \"self\"... It's just \"self\" would be different based on the struct.\r\n\r\nI do similar gymnastics in my lib, but I'm not sure if that's a good pattern.",
                "reactions": {
                    "url": "https://api.github.com/repos/mxinden/asynchronous-codec/issues/comments/1334877419/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2022-12-02T07:59:34Z"
    },
    {
        "id": "25495553388",
        "type": "PullRequestEvent",
        "actor": {
            "id": 1029536,
            "login": "boenrobot",
            "display_login": "boenrobot",
            "gravatar_id": "",
            "url": "https://api.github.com/users/boenrobot",
            "avatar_url": "https://avatars.githubusercontent.com/u/1029536?"
        },
        "repo": {
            "id": 327282114,
            "name": "mxinden/asynchronous-codec",
            "url": "https://api.github.com/repos/mxinden/asynchronous-codec"
        },
        "payload": {
            "action": "opened",
            "number": 4,
            "pull_request": {
                "url": "https://api.github.com/repos/mxinden/asynchronous-codec/pulls/4",
                "id": 1136734271,
                "node_id": "PR_kwDOE4Htws5DwTA_",
                "html_url": "https://github.com/mxinden/asynchronous-codec/pull/4",
                "diff_url": "https://github.com/mxinden/asynchronous-codec/pull/4.diff",
                "patch_url": "https://github.com/mxinden/asynchronous-codec/pull/4.patch",
                "issue_url": "https://api.github.com/repos/mxinden/asynchronous-codec/issues/4",
                "number": 4,
                "state": "open",
                "locked": false,
                "title": "[WIP] no_std traits",
                "user": {
                    "login": "boenrobot",
                    "id": 1029536,
                    "node_id": "MDQ6VXNlcjEwMjk1MzY=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/1029536?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/boenrobot",
                    "html_url": "https://github.com/boenrobot",
                    "followers_url": "https://api.github.com/users/boenrobot/followers",
                    "following_url": "https://api.github.com/users/boenrobot/following{/other_user}",
                    "gists_url": "https://api.github.com/users/boenrobot/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/boenrobot/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/boenrobot/subscriptions",
                    "organizations_url": "https://api.github.com/users/boenrobot/orgs",
                    "repos_url": "https://api.github.com/users/boenrobot/repos",
                    "events_url": "https://api.github.com/users/boenrobot/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/boenrobot/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "Hello.\r\n\r\nI am trying to use this crate to write a library around a custom TCP protocol. Said protocol will likely be useful on both web servers and embedded devices (as long as said devices provide some sort of networking and a TCP stream implementation; think embassy-net), so I want to make it as portable as possible.\r\n\r\nWhile I understand it might not be possible for it to be fully portable (e.g. Framed(Read/Write) are not embassy-net compatible, due to embassy-net not being AsyncRead/AsyncWrite compatible), it would still help a great deal if I can at least reuse the encoder and decoder, and just swap out a stream handler.\r\n\r\nThis PR is my attempt to do this (by getting rid of std::io::Error in encoder and decoder, and following the compiler warnings from there), but I am new to Rust, so I ended up with some errors related to Fuse, and yet occurring in FramedRead/FramedWrite, and I'm not sure how to deal with those yet.\r\n\r\nI thought I share the progress so far, to ensure it's even worth pursuing this to its end, or if I should perhaps try to instead refactor async-codec to be splittable (which is the reason I ended here... Because I _also_ need a reader/writer split).",
                "created_at": "2022-11-27T16:28:08Z",
                "updated_at": "2022-11-27T16:28:08Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": null,
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/mxinden/asynchronous-codec/pulls/4/commits",
                "review_comments_url": "https://api.github.com/repos/mxinden/asynchronous-codec/pulls/4/comments",
                "review_comment_url": "https://api.github.com/repos/mxinden/asynchronous-codec/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/mxinden/asynchronous-codec/issues/4/comments",
                "statuses_url": "https://api.github.com/repos/mxinden/asynchronous-codec/statuses/964e568f9756b9ef304871305bf7429e63e38eef",
                "head": {
                    "label": "boenrobot:custom-error-enum",
                    "ref": "custom-error-enum",
                    "sha": "964e568f9756b9ef304871305bf7429e63e38eef",
                    "user": {
                        "login": "boenrobot",
                        "id": 1029536,
                        "node_id": "MDQ6VXNlcjEwMjk1MzY=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/1029536?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/boenrobot",
                        "html_url": "https://github.com/boenrobot",
                        "followers_url": "https://api.github.com/users/boenrobot/followers",
                        "following_url": "https://api.github.com/users/boenrobot/following{/other_user}",
                        "gists_url": "https://api.github.com/users/boenrobot/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/boenrobot/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/boenrobot/subscriptions",
                        "organizations_url": "https://api.github.com/users/boenrobot/orgs",
                        "repos_url": "https://api.github.com/users/boenrobot/repos",
                        "events_url": "https://api.github.com/users/boenrobot/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/boenrobot/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 570935558,
                        "node_id": "R_kgDOIgfJBg",
                        "name": "asynchronous-codec",
                        "full_name": "boenrobot/asynchronous-codec",
                        "private": false,
                        "owner": {
                            "login": "boenrobot",
                            "id": 1029536,
                            "node_id": "MDQ6VXNlcjEwMjk1MzY=",
                            "avatar_url": "https://avatars.githubusercontent.com/u/1029536?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/boenrobot",
                            "html_url": "https://github.com/boenrobot",
                            "followers_url": "https://api.github.com/users/boenrobot/followers",
                            "following_url": "https://api.github.com/users/boenrobot/following{/other_user}",
                            "gists_url": "https://api.github.com/users/boenrobot/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/boenrobot/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/boenrobot/subscriptions",
                            "organizations_url": "https://api.github.com/users/boenrobot/orgs",
                            "repos_url": "https://api.github.com/users/boenrobot/repos",
                            "events_url": "https://api.github.com/users/boenrobot/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/boenrobot/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/boenrobot/asynchronous-codec",
                        "description": "Utilities for encoding and decoding frames using `async/await`.",
                        "fork": true,
                        "url": "https://api.github.com/repos/boenrobot/asynchronous-codec",
                        "forks_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/forks",
                        "keys_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/teams",
                        "hooks_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/hooks",
                        "issue_events_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/events",
                        "assignees_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/tags",
                        "blobs_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/languages",
                        "stargazers_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/stargazers",
                        "contributors_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/contributors",
                        "subscribers_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/subscribers",
                        "subscription_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/subscription",
                        "commits_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/merges",
                        "archive_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/downloads",
                        "issues_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/labels{/name}",
                        "releases_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/deployments",
                        "created_at": "2022-11-26T16:01:12Z",
                        "updated_at": "2022-11-08T11:14:14Z",
                        "pushed_at": "2022-11-27T16:07:58Z",
                        "git_url": "git://github.com/boenrobot/asynchronous-codec.git",
                        "ssh_url": "git@github.com:boenrobot/asynchronous-codec.git",
                        "clone_url": "https://github.com/boenrobot/asynchronous-codec.git",
                        "svn_url": "https://github.com/boenrobot/asynchronous-codec",
                        "homepage": "",
                        "size": 153,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": null,
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "mit",
                            "name": "MIT License",
                            "spdx_id": "MIT",
                            "url": "https://api.github.com/licenses/mit",
                            "node_id": "MDc6TGljZW5zZTEz"
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "master"
                    }
                },
                "base": {
                    "label": "mxinden:master",
                    "ref": "master",
                    "sha": "43338f656f7a50a3c77b8e8ebd58bd9a1416cbd2",
                    "user": {
                        "login": "mxinden",
                        "id": 7047859,
                        "node_id": "MDQ6VXNlcjcwNDc4NTk=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/7047859?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/mxinden",
                        "html_url": "https://github.com/mxinden",
                        "followers_url": "https://api.github.com/users/mxinden/followers",
                        "following_url": "https://api.github.com/users/mxinden/following{/other_user}",
                        "gists_url": "https://api.github.com/users/mxinden/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/mxinden/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/mxinden/subscriptions",
                        "organizations_url": "https://api.github.com/users/mxinden/orgs",
                        "repos_url": "https://api.github.com/users/mxinden/repos",
                        "events_url": "https://api.github.com/users/mxinden/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/mxinden/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 327282114,
                        "node_id": "MDEwOlJlcG9zaXRvcnkzMjcyODIxMTQ=",
                        "name": "asynchronous-codec",
                        "full_name": "mxinden/asynchronous-codec",
                        "private": false,
                        "owner": {
                            "login": "mxinden",
                            "id": 7047859,
                            "node_id": "MDQ6VXNlcjcwNDc4NTk=",
                            "avatar_url": "https://avatars.githubusercontent.com/u/7047859?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/mxinden",
                            "html_url": "https://github.com/mxinden",
                            "followers_url": "https://api.github.com/users/mxinden/followers",
                            "following_url": "https://api.github.com/users/mxinden/following{/other_user}",
                            "gists_url": "https://api.github.com/users/mxinden/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/mxinden/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/mxinden/subscriptions",
                            "organizations_url": "https://api.github.com/users/mxinden/orgs",
                            "repos_url": "https://api.github.com/users/mxinden/repos",
                            "events_url": "https://api.github.com/users/mxinden/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/mxinden/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/mxinden/asynchronous-codec",
                        "description": "Utilities for encoding and decoding frames using `async/await`.",
                        "fork": false,
                        "url": "https://api.github.com/repos/mxinden/asynchronous-codec",
                        "forks_url": "https://api.github.com/repos/mxinden/asynchronous-codec/forks",
                        "keys_url": "https://api.github.com/repos/mxinden/asynchronous-codec/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/mxinden/asynchronous-codec/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/mxinden/asynchronous-codec/teams",
                        "hooks_url": "https://api.github.com/repos/mxinden/asynchronous-codec/hooks",
                        "issue_events_url": "https://api.github.com/repos/mxinden/asynchronous-codec/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/mxinden/asynchronous-codec/events",
                        "assignees_url": "https://api.github.com/repos/mxinden/asynchronous-codec/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/mxinden/asynchronous-codec/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/mxinden/asynchronous-codec/tags",
                        "blobs_url": "https://api.github.com/repos/mxinden/asynchronous-codec/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/mxinden/asynchronous-codec/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/mxinden/asynchronous-codec/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/mxinden/asynchronous-codec/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/mxinden/asynchronous-codec/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/mxinden/asynchronous-codec/languages",
                        "stargazers_url": "https://api.github.com/repos/mxinden/asynchronous-codec/stargazers",
                        "contributors_url": "https://api.github.com/repos/mxinden/asynchronous-codec/contributors",
                        "subscribers_url": "https://api.github.com/repos/mxinden/asynchronous-codec/subscribers",
                        "subscription_url": "https://api.github.com/repos/mxinden/asynchronous-codec/subscription",
                        "commits_url": "https://api.github.com/repos/mxinden/asynchronous-codec/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/mxinden/asynchronous-codec/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/mxinden/asynchronous-codec/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/mxinden/asynchronous-codec/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/mxinden/asynchronous-codec/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/mxinden/asynchronous-codec/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/mxinden/asynchronous-codec/merges",
                        "archive_url": "https://api.github.com/repos/mxinden/asynchronous-codec/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/mxinden/asynchronous-codec/downloads",
                        "issues_url": "https://api.github.com/repos/mxinden/asynchronous-codec/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/mxinden/asynchronous-codec/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/mxinden/asynchronous-codec/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/mxinden/asynchronous-codec/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/mxinden/asynchronous-codec/labels{/name}",
                        "releases_url": "https://api.github.com/repos/mxinden/asynchronous-codec/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/mxinden/asynchronous-codec/deployments",
                        "created_at": "2021-01-06T10:50:59Z",
                        "updated_at": "2022-11-08T11:14:14Z",
                        "pushed_at": "2022-11-08T10:14:22Z",
                        "git_url": "git://github.com/mxinden/asynchronous-codec.git",
                        "ssh_url": "git@github.com:mxinden/asynchronous-codec.git",
                        "clone_url": "https://github.com/mxinden/asynchronous-codec.git",
                        "svn_url": "https://github.com/mxinden/asynchronous-codec",
                        "homepage": "",
                        "size": 146,
                        "stargazers_count": 11,
                        "watchers_count": 11,
                        "language": "Rust",
                        "has_issues": true,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 4,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 1,
                        "license": {
                            "key": "mit",
                            "name": "MIT License",
                            "spdx_id": "MIT",
                            "url": "https://api.github.com/licenses/mit",
                            "node_id": "MDc6TGljZW5zZTEz"
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "async-await",
                            "encoding",
                            "networking"
                        ],
                        "visibility": "public",
                        "forks": 4,
                        "open_issues": 1,
                        "watchers": 11,
                        "default_branch": "master"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/mxinden/asynchronous-codec/pulls/4"
                    },
                    "html": {
                        "href": "https://github.com/mxinden/asynchronous-codec/pull/4"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/mxinden/asynchronous-codec/issues/4"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/mxinden/asynchronous-codec/issues/4/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/mxinden/asynchronous-codec/pulls/4/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/mxinden/asynchronous-codec/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/mxinden/asynchronous-codec/pulls/4/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/mxinden/asynchronous-codec/statuses/964e568f9756b9ef304871305bf7429e63e38eef"
                    }
                },
                "author_association": "NONE",
                "auto_merge": null,
                "active_lock_reason": null,
                "merged": false,
                "mergeable": null,
                "rebaseable": null,
                "mergeable_state": "unknown",
                "merged_by": null,
                "comments": 0,
                "review_comments": 0,
                "maintainer_can_modify": true,
                "commits": 1,
                "additions": 286,
                "deletions": 104,
                "changed_files": 14
            }
        },
        "public": true,
        "created_at": "2022-11-27T16:28:08Z"
    },
    {
        "id": "25495409239",
        "type": "PushEvent",
        "actor": {
            "id": 1029536,
            "login": "boenrobot",
            "display_login": "boenrobot",
            "gravatar_id": "",
            "url": "https://api.github.com/users/boenrobot",
            "avatar_url": "https://avatars.githubusercontent.com/u/1029536?"
        },
        "repo": {
            "id": 570935558,
            "name": "boenrobot/asynchronous-codec",
            "url": "https://api.github.com/repos/boenrobot/asynchronous-codec"
        },
        "payload": {
            "push_id": 11799524585,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/custom-error-enum",
            "head": "964e568f9756b9ef304871305bf7429e63e38eef",
            "before": "4002cb79025962617128a972fb2dbad27341fdd2",
            "commits": [
                {
                    "sha": "964e568f9756b9ef304871305bf7429e63e38eef",
                    "author": {
                        "email": "boen.robot@gmail.com",
                        "name": "Vasil Rangelov"
                    },
                    "message": "Added a custom error enum to wrap around encoder and decoder errors, as well as an enum to wrap around read/write errors for Framed;\n\nPut std and alloc feature gates, and ensured the bytes encoder and decoder are usable without it.",
                    "distinct": true,
                    "url": "https://api.github.com/repos/boenrobot/asynchronous-codec/commits/964e568f9756b9ef304871305bf7429e63e38eef"
                }
            ]
        },
        "public": true,
        "created_at": "2022-11-27T16:07:58Z"
    },
    {
        "id": "25487528115",
        "type": "PushEvent",
        "actor": {
            "id": 1029536,
            "login": "boenrobot",
            "display_login": "boenrobot",
            "gravatar_id": "",
            "url": "https://api.github.com/users/boenrobot",
            "avatar_url": "https://avatars.githubusercontent.com/u/1029536?"
        },
        "repo": {
            "id": 570935558,
            "name": "boenrobot/asynchronous-codec",
            "url": "https://api.github.com/repos/boenrobot/asynchronous-codec"
        },
        "payload": {
            "push_id": 11794044612,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/custom-error-enum",
            "head": "4002cb79025962617128a972fb2dbad27341fdd2",
            "before": "33e3b403e75bc0a0d53563a6af9754dc36bd5202",
            "commits": [
                {
                    "sha": "4002cb79025962617128a972fb2dbad27341fdd2",
                    "author": {
                        "email": "boen.robot@gmail.com",
                        "name": "Vasil Rangelov"
                    },
                    "message": "Added a custom error enum to wrap around encoder and decoder errors.",
                    "distinct": true,
                    "url": "https://api.github.com/repos/boenrobot/asynchronous-codec/commits/4002cb79025962617128a972fb2dbad27341fdd2"
                }
            ]
        },
        "public": true,
        "created_at": "2022-11-26T16:04:14Z"
    },
    {
        "id": "25487520488",
        "type": "CreateEvent",
        "actor": {
            "id": 1029536,
            "login": "boenrobot",
            "display_login": "boenrobot",
            "gravatar_id": "",
            "url": "https://api.github.com/users/boenrobot",
            "avatar_url": "https://avatars.githubusercontent.com/u/1029536?"
        },
        "repo": {
            "id": 570935558,
            "name": "boenrobot/asynchronous-codec",
            "url": "https://api.github.com/repos/boenrobot/asynchronous-codec"
        },
        "payload": {
            "ref": "custom-error-enum",
            "ref_type": "branch",
            "master_branch": "master",
            "description": "Utilities for encoding and decoding frames using `async/await`.",
            "pusher_type": "user"
        },
        "public": true,
        "created_at": "2022-11-26T16:03:03Z"
    },
    {
        "id": "25487508238",
        "type": "ForkEvent",
        "actor": {
            "id": 1029536,
            "login": "boenrobot",
            "display_login": "boenrobot",
            "gravatar_id": "",
            "url": "https://api.github.com/users/boenrobot",
            "avatar_url": "https://avatars.githubusercontent.com/u/1029536?"
        },
        "repo": {
            "id": 327282114,
            "name": "mxinden/asynchronous-codec",
            "url": "https://api.github.com/repos/mxinden/asynchronous-codec"
        },
        "payload": {
            "forkee": {
                "id": 570935558,
                "node_id": "R_kgDOIgfJBg",
                "name": "asynchronous-codec",
                "full_name": "boenrobot/asynchronous-codec",
                "private": false,
                "owner": {
                    "login": "boenrobot",
                    "id": 1029536,
                    "node_id": "MDQ6VXNlcjEwMjk1MzY=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/1029536?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/boenrobot",
                    "html_url": "https://github.com/boenrobot",
                    "followers_url": "https://api.github.com/users/boenrobot/followers",
                    "following_url": "https://api.github.com/users/boenrobot/following{/other_user}",
                    "gists_url": "https://api.github.com/users/boenrobot/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/boenrobot/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/boenrobot/subscriptions",
                    "organizations_url": "https://api.github.com/users/boenrobot/orgs",
                    "repos_url": "https://api.github.com/users/boenrobot/repos",
                    "events_url": "https://api.github.com/users/boenrobot/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/boenrobot/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "html_url": "https://github.com/boenrobot/asynchronous-codec",
                "description": "Utilities for encoding and decoding frames using `async/await`.",
                "fork": true,
                "url": "https://api.github.com/repos/boenrobot/asynchronous-codec",
                "forks_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/forks",
                "keys_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/keys{/key_id}",
                "collaborators_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/collaborators{/collaborator}",
                "teams_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/teams",
                "hooks_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/hooks",
                "issue_events_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/issues/events{/number}",
                "events_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/events",
                "assignees_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/assignees{/user}",
                "branches_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/branches{/branch}",
                "tags_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/tags",
                "blobs_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/git/blobs{/sha}",
                "git_tags_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/git/tags{/sha}",
                "git_refs_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/git/refs{/sha}",
                "trees_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/git/trees{/sha}",
                "statuses_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/statuses/{sha}",
                "languages_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/languages",
                "stargazers_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/stargazers",
                "contributors_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/contributors",
                "subscribers_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/subscribers",
                "subscription_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/subscription",
                "commits_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/commits{/sha}",
                "git_commits_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/git/commits{/sha}",
                "comments_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/comments{/number}",
                "issue_comment_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/issues/comments{/number}",
                "contents_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/contents/{+path}",
                "compare_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/compare/{base}...{head}",
                "merges_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/merges",
                "archive_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/{archive_format}{/ref}",
                "downloads_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/downloads",
                "issues_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/issues{/number}",
                "pulls_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/pulls{/number}",
                "milestones_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/milestones{/number}",
                "notifications_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/notifications{?since,all,participating}",
                "labels_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/labels{/name}",
                "releases_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/releases{/id}",
                "deployments_url": "https://api.github.com/repos/boenrobot/asynchronous-codec/deployments",
                "created_at": "2022-11-26T16:01:12Z",
                "updated_at": "2022-11-08T11:14:14Z",
                "pushed_at": "2022-11-08T10:14:22Z",
                "git_url": "git://github.com/boenrobot/asynchronous-codec.git",
                "ssh_url": "git@github.com:boenrobot/asynchronous-codec.git",
                "clone_url": "https://github.com/boenrobot/asynchronous-codec.git",
                "svn_url": "https://github.com/boenrobot/asynchronous-codec",
                "homepage": "",
                "size": 146,
                "stargazers_count": 0,
                "watchers_count": 0,
                "language": null,
                "has_issues": false,
                "has_projects": true,
                "has_downloads": true,
                "has_wiki": true,
                "has_pages": false,
                "has_discussions": false,
                "forks_count": 0,
                "mirror_url": null,
                "archived": false,
                "disabled": false,
                "open_issues_count": 0,
                "license": {
                    "key": "mit",
                    "name": "MIT License",
                    "spdx_id": "MIT",
                    "url": "https://api.github.com/licenses/mit",
                    "node_id": "MDc6TGljZW5zZTEz"
                },
                "allow_forking": true,
                "is_template": false,
                "web_commit_signoff_required": false,
                "topics": [],
                "visibility": "public",
                "forks": 0,
                "open_issues": 0,
                "watchers": 0,
                "default_branch": "master",
                "public": true
            }
        },
        "public": true,
        "created_at": "2022-11-26T16:01:13Z"
    },
    {
        "id": "25130970083",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 1029536,
            "login": "boenrobot",
            "display_login": "boenrobot",
            "gravatar_id": "",
            "url": "https://api.github.com/users/boenrobot",
            "avatar_url": "https://avatars.githubusercontent.com/u/1029536?"
        },
        "repo": {
            "id": 230595891,
            "name": "launchbadge/sqlx",
            "url": "https://api.github.com/repos/launchbadge/sqlx"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/launchbadge/sqlx/issues/2119",
                "repository_url": "https://api.github.com/repos/launchbadge/sqlx",
                "labels_url": "https://api.github.com/repos/launchbadge/sqlx/issues/2119/labels{/name}",
                "comments_url": "https://api.github.com/repos/launchbadge/sqlx/issues/2119/comments",
                "events_url": "https://api.github.com/repos/launchbadge/sqlx/issues/2119/events",
                "html_url": "https://github.com/launchbadge/sqlx/issues/2119",
                "id": 1385193034,
                "node_id": "I_kwDODb6dM85SkF5K",
                "number": 2119,
                "title": "sqlx no longer compiles on rust 1.64 when use any of the async-std features",
                "user": {
                    "login": "zaphar",
                    "id": 40631,
                    "node_id": "MDQ6VXNlcjQwNjMx",
                    "avatar_url": "https://avatars.githubusercontent.com/u/40631?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/zaphar",
                    "html_url": "https://github.com/zaphar",
                    "followers_url": "https://api.github.com/users/zaphar/followers",
                    "following_url": "https://api.github.com/users/zaphar/following{/other_user}",
                    "gists_url": "https://api.github.com/users/zaphar/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/zaphar/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/zaphar/subscriptions",
                    "organizations_url": "https://api.github.com/users/zaphar/orgs",
                    "repos_url": "https://api.github.com/users/zaphar/repos",
                    "events_url": "https://api.github.com/users/zaphar/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/zaphar/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 1757378993,
                        "node_id": "MDU6TGFiZWwxNzU3Mzc4OTkz",
                        "url": "https://api.github.com/repos/launchbadge/sqlx/labels/bug",
                        "name": "bug",
                        "color": "e11d21",
                        "default": true,
                        "description": ""
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 3,
                "created_at": "2022-09-25T23:05:59Z",
                "updated_at": "2022-11-09T15:07:28Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "### Bug Description\r\nCompile errors can be seen below. I assume this is because the async-rt support relies on the unstable features in async-std. and as a result the async-process crate doesn't build on this version.\r\n\r\n```\r\nerror[E0599]: no method named `as_fd` found for struct `Async` in the current scope\r\n   --> /Users/zaphar/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.5.0/src/lib.rs:514:16\r\n    |\r\n514 |         self.0.as_fd()\r\n    |                ^^^^^ method not found in `Async<std::process::ChildStdin>`\r\n\r\nerror[E0271]: type mismatch resolving `<OwnedFd as TryFrom<Async<std::process::ChildStdin>>>::Error == std::io::Error`\r\n   --> /Users/zaphar/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.5.0/src/lib.rs:523:17\r\n    |\r\n523 |         value.0.try_into()\r\n    |                 ^^^^^^^^ expected enum `Infallible`, found struct `std::io::Error`\r\n\r\nerror[E0277]: the trait bound `OwnedFd: From<Async<std::process::ChildStdin>>` is not satisfied\r\n   --> /Users/zaphar/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.5.0/src/lib.rs:523:17\r\n    |\r\n523 |         value.0.try_into()\r\n    |                 ^^^^^^^^ the trait `From<Async<std::process::ChildStdin>>` is not implemented for `OwnedFd`\r\n    |\r\n    = help: the following other types implement trait `From<T>`:\r\n              <OwnedFd as From<File>>\r\n              <OwnedFd as From<TcpListener>>\r\n              <OwnedFd as From<TcpStream>>\r\n              <OwnedFd as From<UdpSocket>>\r\n              <OwnedFd as From<UnixDatagram>>\r\n              <OwnedFd as From<UnixListener>>\r\n              <OwnedFd as From<UnixStream>>\r\n              <OwnedFd as From<std::process::ChildStderr>>\r\n            and 2 others\r\n    = note: required because of the requirements on the impl of `Into<OwnedFd>` for `Async<std::process::ChildStdin>`\r\n    = note: required because of the requirements on the impl of `TryFrom<Async<std::process::ChildStdin>>` for `OwnedFd`\r\n    = note: required because of the requirements on the impl of `TryInto<OwnedFd>` for `Async<std::process::ChildStdin>`\r\n\r\nerror[E0599]: no method named `as_fd` found for struct `Async` in the current scope\r\n   --> /Users/zaphar/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.5.0/src/lib.rs:598:16\r\n    |\r\n598 |         self.0.as_fd()\r\n    |                ^^^^^ method not found in `Async<std::process::ChildStdout>`\r\n\r\nerror[E0271]: type mismatch resolving `<OwnedFd as TryFrom<Async<std::process::ChildStdout>>>::Error == std::io::Error`\r\n   --> /Users/zaphar/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.5.0/src/lib.rs:607:17\r\n    |\r\n607 |         value.0.try_into()\r\n    |                 ^^^^^^^^ expected enum `Infallible`, found struct `std::io::Error`\r\n\r\nerror[E0277]: the trait bound `OwnedFd: From<Async<std::process::ChildStdout>>` is not satisfied\r\n   --> /Users/zaphar/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.5.0/src/lib.rs:607:17\r\n    |\r\n607 |         value.0.try_into()\r\n    |                 ^^^^^^^^ the trait `From<Async<std::process::ChildStdout>>` is not implemented for `OwnedFd`\r\n    |\r\n    = help: the following other types implement trait `From<T>`:\r\n              <OwnedFd as From<File>>\r\n              <OwnedFd as From<TcpListener>>\r\n              <OwnedFd as From<TcpStream>>\r\n              <OwnedFd as From<UdpSocket>>\r\n              <OwnedFd as From<UnixDatagram>>\r\n              <OwnedFd as From<UnixListener>>\r\n              <OwnedFd as From<UnixStream>>\r\n              <OwnedFd as From<std::process::ChildStderr>>\r\n            and 2 others\r\n    = note: required because of the requirements on the impl of `Into<OwnedFd>` for `Async<std::process::ChildStdout>`\r\n    = note: required because of the requirements on the impl of `TryFrom<Async<std::process::ChildStdout>>` for `OwnedFd`\r\n    = note: required because of the requirements on the impl of `TryInto<OwnedFd>` for `Async<std::process::ChildStdout>`\r\n\r\nerror[E0599]: no method named `as_fd` found for struct `Async` in the current scope\r\n   --> /Users/zaphar/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.5.0/src/lib.rs:671:16\r\n    |\r\n671 |         self.0.as_fd()\r\n    |                ^^^^^ method not found in `Async<std::process::ChildStderr>`\r\n\r\nerror[E0271]: type mismatch resolving `<OwnedFd as TryFrom<Async<std::process::ChildStderr>>>::Error == std::io::Error`\r\n   --> /Users/zaphar/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.5.0/src/lib.rs:680:17\r\n    |\r\n680 |         value.0.try_into()\r\n    |                 ^^^^^^^^ expected enum `Infallible`, found struct `std::io::Error`\r\n\r\nerror[E0277]: the trait bound `OwnedFd: From<Async<std::process::ChildStderr>>` is not satisfied\r\n   --> /Users/zaphar/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.5.0/src/lib.rs:680:17\r\n    |\r\n680 |         value.0.try_into()\r\n    |                 ^^^^^^^^ the trait `From<Async<std::process::ChildStderr>>` is not implemented for `OwnedFd`\r\n    |\r\n    = help: the following other types implement trait `From<T>`:\r\n              <OwnedFd as From<File>>\r\n              <OwnedFd as From<TcpListener>>\r\n              <OwnedFd as From<TcpStream>>\r\n              <OwnedFd as From<UdpSocket>>\r\n              <OwnedFd as From<UnixDatagram>>\r\n              <OwnedFd as From<UnixListener>>\r\n              <OwnedFd as From<UnixStream>>\r\n              <OwnedFd as From<std::process::ChildStderr>>\r\n            and 2 others\r\n    = note: required because of the requirements on the impl of `Into<OwnedFd>` for `Async<std::process::ChildStderr>`\r\n    = note: required because of the requirements on the impl of `TryFrom<Async<std::process::ChildStderr>>` for `OwnedFd`\r\n    = note: required because of the requirements on the impl of `TryInto<OwnedFd>` for `Async<std::process::ChildStderr>`\r\n\r\nSome errors have detailed explanations: E0271, E0277, E0599.\r\nFor more information about an error, try `rustc --explain E0271`.\r\nerror: could not compile `async-process` due to 9 previous errors\r\n```\r\n\r\n### Minimal Reproduction\r\n\r\nIt appears that all that is necessary is to be running rust 1.64 and include the `rust-async-std-rustls` or perhaps another `*-async-std-*` feature although I haven't directly verified that. But looking through the dependency tree with features and I would be surprised if this was not the case.\r\n\r\n### Info\r\n* sqlx version: sqlx v0.6.1\r\n* SQLx features enabled: [\"sqlite\", \"runtime-async-std-rustls\", \"offline\"]\r\n* Database server and version: SQLite\r\n* Operating system: MacOS\r\n* `rustc --version`: rustc 1.64.0 (a55dd71d5 2022-09-19)\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/launchbadge/sqlx/issues/2119/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/launchbadge/sqlx/issues/2119/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/launchbadge/sqlx/issues/comments/1308904062",
                "html_url": "https://github.com/launchbadge/sqlx/issues/2119#issuecomment-1308904062",
                "issue_url": "https://api.github.com/repos/launchbadge/sqlx/issues/2119",
                "id": 1308904062,
                "node_id": "IC_kwDODb6dM85OBEp-",
                "user": {
                    "login": "boenrobot",
                    "id": 1029536,
                    "node_id": "MDQ6VXNlcjEwMjk1MzY=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/1029536?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/boenrobot",
                    "html_url": "https://github.com/boenrobot",
                    "followers_url": "https://api.github.com/users/boenrobot/followers",
                    "following_url": "https://api.github.com/users/boenrobot/following{/other_user}",
                    "gists_url": "https://api.github.com/users/boenrobot/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/boenrobot/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/boenrobot/subscriptions",
                    "organizations_url": "https://api.github.com/users/boenrobot/orgs",
                    "repos_url": "https://api.github.com/users/boenrobot/repos",
                    "events_url": "https://api.github.com/users/boenrobot/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/boenrobot/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2022-11-09T15:07:28Z",
                "updated_at": "2022-11-09T15:07:28Z",
                "author_association": "NONE",
                "body": "The unstable flag has been added from the initial inception of sqlx-rt here: https://github.com/launchbadge/sqlx/commit/a233fbfdb7748a519035896a52c671ef7caa7e59\r\n\r\nAnd back when async-std was at 1.6.0. Now it is at 1.7.0. Perhaps whatever was unstable at 1.6.0 has already became stable by now, and nobody cared to remove the unstable flag?\r\n\r\nLooking at [the changelog of async-std](https://github.com/async-rs/async-std/blob/main/CHANGELOG.md), maybe it was initially added due to the fix later in 1.6.1?\r\n\r\nOr maybe it had something to do with the \"fs\" module. Specifically, symlinks on Windows were unstable, but by 1.7.0, they are stable. idk... Those are just the only things I can narrow down.\r\n\r\nIMO, the unstable flag should be removed, and if sqlx-rt needs it in the future, it can be added, along with a comment explaining the feature due to which it is added (so that it can be removed again once that new feature becomes stable).",
                "reactions": {
                    "url": "https://api.github.com/repos/launchbadge/sqlx/issues/comments/1308904062/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2022-11-09T15:07:29Z",
        "org": {
            "id": 10077001,
            "login": "launchbadge",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/launchbadge",
            "avatar_url": "https://avatars.githubusercontent.com/u/10077001?"
        }
    },
    {
        "id": "24987833829",
        "type": "PullRequestEvent",
        "actor": {
            "id": 1029536,
            "login": "boenrobot",
            "display_login": "boenrobot",
            "gravatar_id": "",
            "url": "https://api.github.com/users/boenrobot",
            "avatar_url": "https://avatars.githubusercontent.com/u/1029536?"
        },
        "repo": {
            "id": 308636076,
            "name": "gspirov/zendframework1-doctrine2",
            "url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2"
        },
        "payload": {
            "action": "opened",
            "number": 1,
            "pull_request": {
                "url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/pulls/1",
                "id": 1108507999,
                "node_id": "PR_kwDOEmVprM5CEn1f",
                "html_url": "https://github.com/gspirov/zendframework1-doctrine2/pull/1",
                "diff_url": "https://github.com/gspirov/zendframework1-doctrine2/pull/1.diff",
                "patch_url": "https://github.com/gspirov/zendframework1-doctrine2/pull/1.patch",
                "issue_url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/issues/1",
                "number": 1,
                "state": "open",
                "locked": false,
                "title": "Added support for DoctrineProvider wrapped cache adapters",
                "user": {
                    "login": "boenrobot",
                    "id": 1029536,
                    "node_id": "MDQ6VXNlcjEwMjk1MzY=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/1029536?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/boenrobot",
                    "html_url": "https://github.com/boenrobot",
                    "followers_url": "https://api.github.com/users/boenrobot/followers",
                    "following_url": "https://api.github.com/users/boenrobot/following{/other_user}",
                    "gists_url": "https://api.github.com/users/boenrobot/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/boenrobot/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/boenrobot/subscriptions",
                    "organizations_url": "https://api.github.com/users/boenrobot/orgs",
                    "repos_url": "https://api.github.com/users/boenrobot/repos",
                    "events_url": "https://api.github.com/users/boenrobot/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/boenrobot/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "Added support for DoctrineProvider wrapped cache adapters, and raised the acceptable doctrine ORM versions to any in the 2 family after 2.3.",
                "created_at": "2022-11-02T16:17:48Z",
                "updated_at": "2022-11-02T16:17:48Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": null,
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/pulls/1/commits",
                "review_comments_url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/pulls/1/comments",
                "review_comment_url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/issues/1/comments",
                "statuses_url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/statuses/326df3798b39c70596c1aef35ea692c55e8fd99e",
                "head": {
                    "label": "boenrobot:doctrine-provider-support",
                    "ref": "doctrine-provider-support",
                    "sha": "326df3798b39c70596c1aef35ea692c55e8fd99e",
                    "user": {
                        "login": "boenrobot",
                        "id": 1029536,
                        "node_id": "MDQ6VXNlcjEwMjk1MzY=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/1029536?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/boenrobot",
                        "html_url": "https://github.com/boenrobot",
                        "followers_url": "https://api.github.com/users/boenrobot/followers",
                        "following_url": "https://api.github.com/users/boenrobot/following{/other_user}",
                        "gists_url": "https://api.github.com/users/boenrobot/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/boenrobot/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/boenrobot/subscriptions",
                        "organizations_url": "https://api.github.com/users/boenrobot/orgs",
                        "repos_url": "https://api.github.com/users/boenrobot/repos",
                        "events_url": "https://api.github.com/users/boenrobot/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/boenrobot/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 560908421,
                        "node_id": "R_kgDOIW7IhQ",
                        "name": "zendframework1-doctrine2",
                        "full_name": "boenrobot/zendframework1-doctrine2",
                        "private": false,
                        "owner": {
                            "login": "boenrobot",
                            "id": 1029536,
                            "node_id": "MDQ6VXNlcjEwMjk1MzY=",
                            "avatar_url": "https://avatars.githubusercontent.com/u/1029536?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/boenrobot",
                            "html_url": "https://github.com/boenrobot",
                            "followers_url": "https://api.github.com/users/boenrobot/followers",
                            "following_url": "https://api.github.com/users/boenrobot/following{/other_user}",
                            "gists_url": "https://api.github.com/users/boenrobot/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/boenrobot/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/boenrobot/subscriptions",
                            "organizations_url": "https://api.github.com/users/boenrobot/orgs",
                            "repos_url": "https://api.github.com/users/boenrobot/repos",
                            "events_url": "https://api.github.com/users/boenrobot/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/boenrobot/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/boenrobot/zendframework1-doctrine2",
                        "description": "Integration for Zend Framework and Doctrine",
                        "fork": true,
                        "url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2",
                        "forks_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/forks",
                        "keys_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/teams",
                        "hooks_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/hooks",
                        "issue_events_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/events",
                        "assignees_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/tags",
                        "blobs_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/languages",
                        "stargazers_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/stargazers",
                        "contributors_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/contributors",
                        "subscribers_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/subscribers",
                        "subscription_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/subscription",
                        "commits_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/merges",
                        "archive_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/downloads",
                        "issues_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/labels{/name}",
                        "releases_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/deployments",
                        "created_at": "2022-11-02T14:29:46Z",
                        "updated_at": "2021-02-09T07:38:33Z",
                        "pushed_at": "2022-11-02T15:42:36Z",
                        "git_url": "git://github.com/boenrobot/zendframework1-doctrine2.git",
                        "ssh_url": "git@github.com:boenrobot/zendframework1-doctrine2.git",
                        "clone_url": "https://github.com/boenrobot/zendframework1-doctrine2.git",
                        "svn_url": "https://github.com/boenrobot/zendframework1-doctrine2",
                        "homepage": "",
                        "size": 119,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": null,
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": null,
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "master"
                    }
                },
                "base": {
                    "label": "gspirov:master",
                    "ref": "master",
                    "sha": "4c05c00ebd9d7928c636fd1d285eb13712534c11",
                    "user": {
                        "login": "gspirov",
                        "id": 58955169,
                        "node_id": "MDQ6VXNlcjU4OTU1MTY5",
                        "avatar_url": "https://avatars.githubusercontent.com/u/58955169?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/gspirov",
                        "html_url": "https://github.com/gspirov",
                        "followers_url": "https://api.github.com/users/gspirov/followers",
                        "following_url": "https://api.github.com/users/gspirov/following{/other_user}",
                        "gists_url": "https://api.github.com/users/gspirov/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/gspirov/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/gspirov/subscriptions",
                        "organizations_url": "https://api.github.com/users/gspirov/orgs",
                        "repos_url": "https://api.github.com/users/gspirov/repos",
                        "events_url": "https://api.github.com/users/gspirov/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/gspirov/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 308636076,
                        "node_id": "MDEwOlJlcG9zaXRvcnkzMDg2MzYwNzY=",
                        "name": "zendframework1-doctrine2",
                        "full_name": "gspirov/zendframework1-doctrine2",
                        "private": false,
                        "owner": {
                            "login": "gspirov",
                            "id": 58955169,
                            "node_id": "MDQ6VXNlcjU4OTU1MTY5",
                            "avatar_url": "https://avatars.githubusercontent.com/u/58955169?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/gspirov",
                            "html_url": "https://github.com/gspirov",
                            "followers_url": "https://api.github.com/users/gspirov/followers",
                            "following_url": "https://api.github.com/users/gspirov/following{/other_user}",
                            "gists_url": "https://api.github.com/users/gspirov/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/gspirov/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/gspirov/subscriptions",
                            "organizations_url": "https://api.github.com/users/gspirov/orgs",
                            "repos_url": "https://api.github.com/users/gspirov/repos",
                            "events_url": "https://api.github.com/users/gspirov/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/gspirov/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/gspirov/zendframework1-doctrine2",
                        "description": "Integration for Zend Framework and Doctrine",
                        "fork": true,
                        "url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2",
                        "forks_url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/forks",
                        "keys_url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/teams",
                        "hooks_url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/hooks",
                        "issue_events_url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/events",
                        "assignees_url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/tags",
                        "blobs_url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/languages",
                        "stargazers_url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/stargazers",
                        "contributors_url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/contributors",
                        "subscribers_url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/subscribers",
                        "subscription_url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/subscription",
                        "commits_url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/merges",
                        "archive_url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/downloads",
                        "issues_url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/labels{/name}",
                        "releases_url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/deployments",
                        "created_at": "2020-10-30T13:18:16Z",
                        "updated_at": "2021-02-09T07:38:33Z",
                        "pushed_at": "2022-11-02T16:17:49Z",
                        "git_url": "git://github.com/gspirov/zendframework1-doctrine2.git",
                        "ssh_url": "git@github.com:gspirov/zendframework1-doctrine2.git",
                        "clone_url": "https://github.com/gspirov/zendframework1-doctrine2.git",
                        "svn_url": "https://github.com/gspirov/zendframework1-doctrine2",
                        "homepage": "",
                        "size": 119,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": "PHP",
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "forks_count": 1,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 1,
                        "license": null,
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 1,
                        "open_issues": 1,
                        "watchers": 0,
                        "default_branch": "master"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/pulls/1"
                    },
                    "html": {
                        "href": "https://github.com/gspirov/zendframework1-doctrine2/pull/1"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/issues/1"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/issues/1/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/pulls/1/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/pulls/1/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/gspirov/zendframework1-doctrine2/statuses/326df3798b39c70596c1aef35ea692c55e8fd99e"
                    }
                },
                "author_association": "NONE",
                "auto_merge": null,
                "active_lock_reason": null,
                "merged": false,
                "mergeable": null,
                "rebaseable": null,
                "mergeable_state": "unknown",
                "merged_by": null,
                "comments": 0,
                "review_comments": 0,
                "maintainer_can_modify": true,
                "commits": 1,
                "additions": 12,
                "deletions": 1,
                "changed_files": 2
            }
        },
        "public": true,
        "created_at": "2022-11-02T16:17:49Z"
    },
    {
        "id": "24986936049",
        "type": "PushEvent",
        "actor": {
            "id": 1029536,
            "login": "boenrobot",
            "display_login": "boenrobot",
            "gravatar_id": "",
            "url": "https://api.github.com/users/boenrobot",
            "avatar_url": "https://avatars.githubusercontent.com/u/1029536?"
        },
        "repo": {
            "id": 560908421,
            "name": "boenrobot/zendframework1-doctrine2",
            "url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2"
        },
        "payload": {
            "push_id": 11531490803,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/doctrine-provider-support",
            "head": "326df3798b39c70596c1aef35ea692c55e8fd99e",
            "before": "9dc71a9f713ee3718125e4681d9fce325d923a95",
            "commits": [
                {
                    "sha": "326df3798b39c70596c1aef35ea692c55e8fd99e",
                    "author": {
                        "email": "boen.robot@gmail.com",
                        "name": "Vasil Rangelov"
                    },
                    "message": "Added support for DoctrineProvider wrapped cache adapters, and raised the acceptable doctrine ORM versions to any in the 2 family after 2.3.",
                    "distinct": true,
                    "url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/commits/326df3798b39c70596c1aef35ea692c55e8fd99e"
                }
            ]
        },
        "public": true,
        "created_at": "2022-11-02T15:42:37Z"
    },
    {
        "id": "24985093526",
        "type": "CreateEvent",
        "actor": {
            "id": 1029536,
            "login": "boenrobot",
            "display_login": "boenrobot",
            "gravatar_id": "",
            "url": "https://api.github.com/users/boenrobot",
            "avatar_url": "https://avatars.githubusercontent.com/u/1029536?"
        },
        "repo": {
            "id": 560908421,
            "name": "boenrobot/zendframework1-doctrine2",
            "url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2"
        },
        "payload": {
            "ref": "doctrine-provider-support",
            "ref_type": "branch",
            "master_branch": "master",
            "description": "Integration for Zend Framework and Doctrine",
            "pusher_type": "user"
        },
        "public": true,
        "created_at": "2022-11-02T14:32:54Z"
    },
    {
        "id": "24985010051",
        "type": "ForkEvent",
        "actor": {
            "id": 1029536,
            "login": "boenrobot",
            "display_login": "boenrobot",
            "gravatar_id": "",
            "url": "https://api.github.com/users/boenrobot",
            "avatar_url": "https://avatars.githubusercontent.com/u/1029536?"
        },
        "repo": {
            "id": 308636076,
            "name": "gspirov/zendframework1-doctrine2",
            "url": "https://api.github.com/repos/gspirov/zendframework1-doctrine2"
        },
        "payload": {
            "forkee": {
                "id": 560908421,
                "node_id": "R_kgDOIW7IhQ",
                "name": "zendframework1-doctrine2",
                "full_name": "boenrobot/zendframework1-doctrine2",
                "private": false,
                "owner": {
                    "login": "boenrobot",
                    "id": 1029536,
                    "node_id": "MDQ6VXNlcjEwMjk1MzY=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/1029536?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/boenrobot",
                    "html_url": "https://github.com/boenrobot",
                    "followers_url": "https://api.github.com/users/boenrobot/followers",
                    "following_url": "https://api.github.com/users/boenrobot/following{/other_user}",
                    "gists_url": "https://api.github.com/users/boenrobot/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/boenrobot/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/boenrobot/subscriptions",
                    "organizations_url": "https://api.github.com/users/boenrobot/orgs",
                    "repos_url": "https://api.github.com/users/boenrobot/repos",
                    "events_url": "https://api.github.com/users/boenrobot/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/boenrobot/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "html_url": "https://github.com/boenrobot/zendframework1-doctrine2",
                "description": "Integration for Zend Framework and Doctrine",
                "fork": true,
                "url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2",
                "forks_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/forks",
                "keys_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/keys{/key_id}",
                "collaborators_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/collaborators{/collaborator}",
                "teams_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/teams",
                "hooks_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/hooks",
                "issue_events_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/issues/events{/number}",
                "events_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/events",
                "assignees_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/assignees{/user}",
                "branches_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/branches{/branch}",
                "tags_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/tags",
                "blobs_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/git/blobs{/sha}",
                "git_tags_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/git/tags{/sha}",
                "git_refs_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/git/refs{/sha}",
                "trees_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/git/trees{/sha}",
                "statuses_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/statuses/{sha}",
                "languages_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/languages",
                "stargazers_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/stargazers",
                "contributors_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/contributors",
                "subscribers_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/subscribers",
                "subscription_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/subscription",
                "commits_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/commits{/sha}",
                "git_commits_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/git/commits{/sha}",
                "comments_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/comments{/number}",
                "issue_comment_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/issues/comments{/number}",
                "contents_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/contents/{+path}",
                "compare_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/compare/{base}...{head}",
                "merges_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/merges",
                "archive_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/{archive_format}{/ref}",
                "downloads_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/downloads",
                "issues_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/issues{/number}",
                "pulls_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/pulls{/number}",
                "milestones_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/milestones{/number}",
                "notifications_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/notifications{?since,all,participating}",
                "labels_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/labels{/name}",
                "releases_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/releases{/id}",
                "deployments_url": "https://api.github.com/repos/boenrobot/zendframework1-doctrine2/deployments",
                "created_at": "2022-11-02T14:29:46Z",
                "updated_at": "2021-02-09T07:38:33Z",
                "pushed_at": "2021-02-09T07:49:16Z",
                "git_url": "git://github.com/boenrobot/zendframework1-doctrine2.git",
                "ssh_url": "git@github.com:boenrobot/zendframework1-doctrine2.git",
                "clone_url": "https://github.com/boenrobot/zendframework1-doctrine2.git",
                "svn_url": "https://github.com/boenrobot/zendframework1-doctrine2",
                "homepage": "",
                "size": 119,
                "stargazers_count": 0,
                "watchers_count": 0,
                "language": null,
                "has_issues": false,
                "has_projects": true,
                "has_downloads": true,
                "has_wiki": true,
                "has_pages": false,
                "forks_count": 0,
                "mirror_url": null,
                "archived": false,
                "disabled": false,
                "open_issues_count": 0,
                "license": null,
                "allow_forking": true,
                "is_template": false,
                "web_commit_signoff_required": false,
                "topics": [],
                "visibility": "public",
                "forks": 0,
                "open_issues": 0,
                "watchers": 0,
                "default_branch": "master",
                "public": true
            }
        },
        "public": true,
        "created_at": "2022-11-02T14:29:47Z"
    },
    {
        "id": "24603366398",
        "type": "IssuesEvent",
        "actor": {
            "id": 1029536,
            "login": "boenrobot",
            "display_login": "boenrobot",
            "gravatar_id": "",
            "url": "https://api.github.com/users/boenrobot",
            "avatar_url": "https://avatars.githubusercontent.com/u/1029536?"
        },
        "repo": {
            "id": 166616185,
            "name": "roc-lang/roc",
            "url": "https://api.github.com/repos/roc-lang/roc"
        },
        "payload": {
            "action": "opened",
            "issue": {
                "url": "https://api.github.com/repos/roc-lang/roc/issues/4326",
                "repository_url": "https://api.github.com/repos/roc-lang/roc",
                "labels_url": "https://api.github.com/repos/roc-lang/roc/issues/4326/labels{/name}",
                "comments_url": "https://api.github.com/repos/roc-lang/roc/issues/4326/comments",
                "events_url": "https://api.github.com/repos/roc-lang/roc/issues/4326/events",
                "html_url": "https://github.com/roc-lang/roc/issues/4326",
                "id": 1409422102,
                "node_id": "I_kwDOCe5cec5UAhMW",
                "number": 4326,
                "title": "HTTP boundary value",
                "user": {
                    "login": "boenrobot",
                    "id": 1029536,
                    "node_id": "MDQ6VXNlcjEwMjk1MzY=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/1029536?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/boenrobot",
                    "html_url": "https://github.com/boenrobot",
                    "followers_url": "https://api.github.com/users/boenrobot/followers",
                    "following_url": "https://api.github.com/users/boenrobot/following{/other_user}",
                    "gists_url": "https://api.github.com/users/boenrobot/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/boenrobot/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/boenrobot/subscriptions",
                    "organizations_url": "https://api.github.com/users/boenrobot/orgs",
                    "repos_url": "https://api.github.com/users/boenrobot/repos",
                    "events_url": "https://api.github.com/users/boenrobot/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/boenrobot/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 0,
                "created_at": "2022-10-14T14:14:28Z",
                "updated_at": "2022-10-14T14:14:28Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "https://github.com/roc-lang/roc/blob/89a4522faa20ee0b3ed0cdeaab07379873b95c3f/examples/cli/cli-platform/Http.roc#L65\r\n\r\nThought I answer this TODO by linking you guys to this\r\nhttps://www.w3.org/Protocols/rfc1341/7_2_Multipart.html\r\n\r\nBasically, \"boundary\" should ideally not be hardcoded, and doesn't have to be any particular hash. It's a delimiter.\r\n\r\nIt can be any 0-69 characters long string with the alphabet described in the spec (alphanum plus a few ASCII punctuation characters). That string, prefixed with \"--\", should not occur in the actual contents of the data being transferred.\r\n\r\nBtw, I see the chosen string is taken straight out of https://package.elm-lang.org/packages/elm/http/2.0.0/Http .\r\n\r\nThe way it is currently hardcoded, if I have a textarea form field called \"title\" and I use as a value\r\n\r\n```\r\nHello\r\n\r\n--7MA4YWxkTrZu0gW\r\nContent-Disposition: file; filename=\"file1.txt\"\r\nContent-Type: text/plain\r\n\r\nTrip to London\r\n```\r\n\r\nThis should give the server the string \"Hello\" for \"title\", and also attach a text file with the contents \"Trip to London\". I say \"should\", because I haven't actually tried this. I was just browsing the source for... reasons... and stumbled upon this.\ud83d\ude05 ",
                "reactions": {
                    "url": "https://api.github.com/repos/roc-lang/roc/issues/4326/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/roc-lang/roc/issues/4326/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            }
        },
        "public": true,
        "created_at": "2022-10-14T14:14:29Z",
        "org": {
            "id": 63474338,
            "login": "roc-lang",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/roc-lang",
            "avatar_url": "https://avatars.githubusercontent.com/u/63474338?"
        }
    },
    {
        "id": "24107168917",
        "type": "WatchEvent",
        "actor": {
            "id": 1029536,
            "login": "boenrobot",
            "display_login": "boenrobot",
            "gravatar_id": "",
            "url": "https://api.github.com/users/boenrobot",
            "avatar_url": "https://avatars.githubusercontent.com/u/1029536?"
        },
        "repo": {
            "id": 467212329,
            "name": "microsoft/routeros-scanner",
            "url": "https://api.github.com/repos/microsoft/routeros-scanner"
        },
        "payload": {
            "action": "started"
        },
        "public": true,
        "created_at": "2022-09-20T08:26:14Z",
        "org": {
            "id": 6154722,
            "login": "microsoft",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/microsoft",
            "avatar_url": "https://avatars.githubusercontent.com/u/6154722?"
        }
    },
    {
        "id": "24044593645",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 1029536,
            "login": "boenrobot",
            "display_login": "boenrobot",
            "gravatar_id": "",
            "url": "https://api.github.com/users/boenrobot",
            "avatar_url": "https://avatars.githubusercontent.com/u/1029536?"
        },
        "repo": {
            "id": 12084182,
            "name": "friends-of-reactphp/mysql",
            "url": "https://api.github.com/repos/friends-of-reactphp/mysql"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/friends-of-reactphp/mysql/issues/151",
                "repository_url": "https://api.github.com/repos/friends-of-reactphp/mysql",
                "labels_url": "https://api.github.com/repos/friends-of-reactphp/mysql/issues/151/labels{/name}",
                "comments_url": "https://api.github.com/repos/friends-of-reactphp/mysql/issues/151/comments",
                "events_url": "https://api.github.com/repos/friends-of-reactphp/mysql/issues/151/events",
                "html_url": "https://github.com/friends-of-reactphp/mysql/issues/151",
                "id": 1084427696,
                "node_id": "I_kwDOALhj1s5Aow2w",
                "number": 151,
                "title": "How to support duplicate column names?",
                "user": {
                    "login": "clue",
                    "id": 776829,
                    "node_id": "MDQ6VXNlcjc3NjgyOQ==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/776829?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/clue",
                    "html_url": "https://github.com/clue",
                    "followers_url": "https://api.github.com/users/clue/followers",
                    "following_url": "https://api.github.com/users/clue/following{/other_user}",
                    "gists_url": "https://api.github.com/users/clue/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/clue/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/clue/subscriptions",
                    "organizations_url": "https://api.github.com/users/clue/orgs",
                    "repos_url": "https://api.github.com/users/clue/repos",
                    "events_url": "https://api.github.com/users/clue/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/clue/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 51889037,
                        "node_id": "MDU6TGFiZWw1MTg4OTAzNw==",
                        "url": "https://api.github.com/repos/friends-of-reactphp/mysql/labels/question",
                        "name": "question",
                        "color": "cc317c",
                        "default": true,
                        "description": null
                    },
                    {
                        "id": 863287342,
                        "node_id": "MDU6TGFiZWw4NjMyODczNDI=",
                        "url": "https://api.github.com/repos/friends-of-reactphp/mysql/labels/help%20wanted",
                        "name": "help wanted",
                        "color": "0e8a16",
                        "default": true,
                        "description": ""
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 1,
                "created_at": "2021-12-20T06:55:45Z",
                "updated_at": "2022-09-16T07:05:58Z",
                "closed_at": null,
                "author_association": "CONTRIBUTOR",
                "active_lock_reason": null,
                "body": "How should we handle queries that use the same name column name multiple times?\r\n\r\n```sql\r\n-- Bob wins\r\nSELECT \"Alice\" AS name, \"Bob\" AS name\r\n\r\n-- Bob wins\r\nSELECT \"Alice\" AS name, user.* FROM (SELECT \"Bob\" AS name) AS user\r\n\r\n-- Alice wins\r\nSELECT user.*, \"Alice\" AS name FROM (SELECT \"Bob\" AS name) AS user\r\n```\r\n\r\nAt the moment, the value from the last occurrence wins because we expose each row as an associative array (later values with the same key overwrite previous values).\r\n\r\nTechnically, the protocol exposes a list of all values, so we do have access to all values inside the protocol implementation, but do not currently expose this to the user. Other projects expose a \"fetch mode\" to control whether the data should be exposed as a plain list (`PDO::FETCH_NUM`) or as an associative array (`PDO::FETCH_ASSOC`) or object (`PDO::FETCH_OBJ` / `PDO::FETCH_CLASS`), etc. (https://www.php.net/manual/en/pdostatement.fetch.php)\r\n\r\nThe current behavior can be seen as inconvenient or inconsistent, given that `QueryResult::$resultFields` contains a list of all(!) column names, yet `QueryResult::$resultRows[0]` contains an associative array with unique column names only. If you run any of the above queries with the `examples/01-query.php` script, you'll see that it reports a table with 2 header columns, but only reports one value per row.\r\n\r\nProviding this kind of API isn't too much work, but I wonder how big of a problem this actually is and whether this actually warrants increasing our API surface?",
                "reactions": {
                    "url": "https://api.github.com/repos/friends-of-reactphp/mysql/issues/151/reactions",
                    "total_count": 1,
                    "+1": 1,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/friends-of-reactphp/mysql/issues/151/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/friends-of-reactphp/mysql/issues/comments/1248997615",
                "html_url": "https://github.com/friends-of-reactphp/mysql/issues/151#issuecomment-1248997615",
                "issue_url": "https://api.github.com/repos/friends-of-reactphp/mysql/issues/151",
                "id": 1248997615,
                "node_id": "IC_kwDOALhj1s5KcjDv",
                "user": {
                    "login": "boenrobot",
                    "id": 1029536,
                    "node_id": "MDQ6VXNlcjEwMjk1MzY=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/1029536?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/boenrobot",
                    "html_url": "https://github.com/boenrobot",
                    "followers_url": "https://api.github.com/users/boenrobot/followers",
                    "following_url": "https://api.github.com/users/boenrobot/following{/other_user}",
                    "gists_url": "https://api.github.com/users/boenrobot/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/boenrobot/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/boenrobot/subscriptions",
                    "organizations_url": "https://api.github.com/users/boenrobot/orgs",
                    "repos_url": "https://api.github.com/users/boenrobot/repos",
                    "events_url": "https://api.github.com/users/boenrobot/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/boenrobot/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2022-09-16T07:05:58Z",
                "updated_at": "2022-09-16T07:05:58Z",
                "author_association": "NONE",
                "body": "IMHO, adding a fetch mode in general is worth it.\r\n\r\nKeep the current default of taking the last value in an associate array (both for the sake of BC, but also for the sake of people coming from PDO), but add an indexed array option, which would return all column values mapped to the same indexes (i.e. ```count($queryResult->resultFields) === count($queryResult->resultRows[0])```).\r\n\r\nAdding a object mode could be worth it if that object combines the two other fetch modes, i.e. it provides ArrayAccess that would give the column at that index when given an integer, or the last column of that name if given a string. On such an object, count() and foreach behavior could perhaps default to the associative array behavior, but provide a setter to switch both to an indexed mode. This object mode would obviously be more memory consuming, since it would need to contain a reference to some \"string to index\" map which would add some overhead.\r\n\r\nA \"compact\" object mode (akin to PDO's object mode) is not worth it I think, as in PHP, it has the same ergonomics as an associative array. If you need an stdClass, you can always just cast the associative array.\r\n\r\nA \"class\" mode is also not worth it I think, as you still need to define a mapping anyway - might as well define it out of the build it fetch modes. Less magic = easier to reason about.",
                "reactions": {
                    "url": "https://api.github.com/repos/friends-of-reactphp/mysql/issues/comments/1248997615/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2022-09-16T07:05:58Z",
        "org": {
            "id": 28479009,
            "login": "friends-of-reactphp",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/friends-of-reactphp",
            "avatar_url": "https://avatars.githubusercontent.com/u/28479009?"
        }
    },
    {
        "id": "24024650715",
        "type": "WatchEvent",
        "actor": {
            "id": 1029536,
            "login": "boenrobot",
            "display_login": "boenrobot",
            "gravatar_id": "",
            "url": "https://api.github.com/users/boenrobot",
            "avatar_url": "https://avatars.githubusercontent.com/u/1029536?"
        },
        "repo": {
            "id": 166616185,
            "name": "roc-lang/roc",
            "url": "https://api.github.com/repos/roc-lang/roc"
        },
        "payload": {
            "action": "started"
        },
        "public": true,
        "created_at": "2022-09-15T10:26:55Z",
        "org": {
            "id": 63474338,
            "login": "roc-lang",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/roc-lang",
            "avatar_url": "https://avatars.githubusercontent.com/u/63474338?"
        }
    }
]
[
    {
        "id": "25757147946",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 166515022,
            "name": "trinodb/trino",
            "url": "https://api.github.com/repos/trinodb/trino"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/trinodb/trino/issues/15337",
                "repository_url": "https://api.github.com/repos/trinodb/trino",
                "labels_url": "https://api.github.com/repos/trinodb/trino/issues/15337/labels{/name}",
                "comments_url": "https://api.github.com/repos/trinodb/trino/issues/15337/comments",
                "events_url": "https://api.github.com/repos/trinodb/trino/issues/15337/events",
                "html_url": "https://github.com/trinodb/trino/pull/15337",
                "id": 1482501542,
                "node_id": "PR_kwDOCezRTs5Eq7bB",
                "number": 15337,
                "title": "Fix test for invalid rate in FormatUtils.formatDataRate()",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 1202580151,
                        "node_id": "MDU6TGFiZWwxMjAyNTgwMTUx",
                        "url": "https://api.github.com/repos/trinodb/trino/labels/cla-signed",
                        "name": "cla-signed",
                        "color": "ededed",
                        "default": false,
                        "description": null
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 2,
                "created_at": "2022-12-07T17:54:40Z",
                "updated_at": "2022-12-08T17:16:07Z",
                "closed_at": null,
                "author_association": "MEMBER",
                "active_lock_reason": null,
                "draft": false,
                "pull_request": {
                    "url": "https://api.github.com/repos/trinodb/trino/pulls/15337",
                    "html_url": "https://github.com/trinodb/trino/pull/15337",
                    "diff_url": "https://github.com/trinodb/trino/pull/15337.diff",
                    "patch_url": "https://github.com/trinodb/trino/pull/15337.patch",
                    "merged_at": null
                },
                "body": "<!-- Thank you for submitting a pull request! Find more information in our development guide at https://github.com/trinodb/trino/blob/master/.github/DEVELOPMENT.md and contact us on #dev in Slack. -->\r\n<!-- Provide an overview of the PR for maintainers and reviewers. -->\r\n## Description\r\n\r\n`FormatUtils.formatDataRate()` contains the following code:\r\n\r\n```java\r\nlong rate = Math.round(dataSize.toBytes() / duration.getValue(SECONDS));\r\nif (Double.isNaN(rate) || Double.isInfinite(rate)) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nThe test can never evaluate as `true`, since both functions will return false for any `long`.\r\n\r\nThe correct test is:\r\n\r\n```java\r\nif (rate == Long.MAX_VALUE) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nIt's not necessary to test for `Long.MIN_VALUE`, since neither `dataSize` nor `duration` can be negative.\r\n\r\n<!-- Provide details that would help an engineer who is unfamiliar with this part of the code. -->\r\n## Unit Test\r\n\r\nI added a new class, `TestFormatUtils` to test both this fix and the rest of `FormatUtils`. The tests for this change are:\r\n\r\n```java\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), false), \"0B\");\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), true), \"0B/s\");\r\n```\r\n\r\n<!-- Mark the appropriate option with an (x). Propose a release note if you can. -->\r\n## Release notes\r\n\r\n(x) This is not user-visible or docs only and no release notes are required.\r\n( ) Release notes are required, please propose a release note for me.\r\n( ) Release notes are required, with the following suggested text:\r\n\r\n## Related Issue\r\n\r\nFixes #13093",
                "reactions": {
                    "url": "https://api.github.com/repos/trinodb/trino/issues/15337/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/trinodb/trino/issues/15337/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/trinodb/trino/issues/comments/1343042979",
                "html_url": "https://github.com/trinodb/trino/pull/15337#issuecomment-1343042979",
                "issue_url": "https://api.github.com/repos/trinodb/trino/issues/15337",
                "id": 1343042979,
                "node_id": "IC_kwDOCezRTs5QDTWj",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2022-12-08T17:16:07Z",
                "updated_at": "2022-12-08T17:16:07Z",
                "author_association": "MEMBER",
                "body": "Force-pushed the fix for the failing maven check (`import static io.trino.cli.FormatUtils.*`)",
                "reactions": {
                    "url": "https://api.github.com/repos/trinodb/trino/issues/comments/1343042979/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2022-12-08T17:16:08Z",
        "org": {
            "id": 34147222,
            "login": "trinodb",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/trinodb",
            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?"
        }
    },
    {
        "id": "25757121052",
        "type": "PushEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 509274784,
            "name": "metadaddy/trino",
            "url": "https://api.github.com/repos/metadaddy/trino"
        },
        "payload": {
            "push_id": 11931950930,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/fix-formatdatarate-test",
            "head": "ed8e1a6d52194b8ac9f2807f4ca8a5d1cdb63965",
            "before": "a3ff14606d70a46f592dbdd56eb32cb71a79ef91",
            "commits": [
                {
                    "sha": "ed8e1a6d52194b8ac9f2807f4ca8a5d1cdb63965",
                    "author": {
                        "email": "pat@backblaze.com",
                        "name": "Pat Patterson"
                    },
                    "message": "Fix check for invalid rate in FormatUtils.formatDataRate()",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/ed8e1a6d52194b8ac9f2807f4ca8a5d1cdb63965"
                }
            ]
        },
        "public": true,
        "created_at": "2022-12-08T17:15:00Z"
    },
    {
        "id": "25756989078",
        "type": "PullRequestReviewCommentEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 166515022,
            "name": "trinodb/trino",
            "url": "https://api.github.com/repos/trinodb/trino"
        },
        "payload": {
            "action": "created",
            "comment": {
                "url": "https://api.github.com/repos/trinodb/trino/pulls/comments/1043598007",
                "pull_request_review_id": 1210447926,
                "id": 1043598007,
                "node_id": "PRRC_kwDOCezRTs4-NAq3",
                "diff_hunk": "@@ -0,0 +1,353 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.trino.cli;\n+\n+import io.airlift.units.DataSize;\n+import io.airlift.units.Duration;\n+import org.testng.annotations.Test;\n+\n+import static org.testng.Assert.assertEquals;\n+\n+public class TestFormatUtils\n+{\n+    @Test\n+    public void testFormatCount()\n+    {\n+        assertEquals(FormatUtils.formatCount(1L), \"1\");\n+        assertEquals(FormatUtils.formatCount(12L), \"12\");\n+        assertEquals(FormatUtils.formatCount(123L), \"123\");\n+        assertEquals(FormatUtils.formatCount(1234L), \"1.23K\");\n+        assertEquals(FormatUtils.formatCount(12345L), \"12.3K\");\n+        assertEquals(FormatUtils.formatCount(123456L), \"123K\");\n+        assertEquals(FormatUtils.formatCount(1234567L), \"1.23M\");\n+        assertEquals(FormatUtils.formatCount(12345678L), \"12.3M\");\n+        assertEquals(FormatUtils.formatCount(123456789L), \"123M\");\n+        assertEquals(FormatUtils.formatCount(1234567890L), \"1.23B\");\n+        assertEquals(FormatUtils.formatCount(12345678901L), \"12.3B\");\n+        assertEquals(FormatUtils.formatCount(123456789012L), \"123B\");\n+        assertEquals(FormatUtils.formatCount(1234567890123L), \"1.23T\");\n+        assertEquals(FormatUtils.formatCount(12345678901234L), \"12.3T\");\n+        assertEquals(FormatUtils.formatCount(123456789012345L), \"123T\");\n+        assertEquals(FormatUtils.formatCount(1234567890123456L), \"1.23Q\");\n+        assertEquals(FormatUtils.formatCount(12345678901234567L), \"12.3Q\");\n+        assertEquals(FormatUtils.formatCount(123456789012345678L), \"123Q\");\n+        assertEquals(FormatUtils.formatCount(1234567890123456789L), \"1235Q\");\n+    }\n+\n+    @Test\n+    public void formatCountRate()\n+    {\n+        assertEquals(FormatUtils.formatCountRate(0.0000000001D, Duration.valueOf(\"1ns\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(0.0000000001D, Duration.valueOf(\"1ns\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(0.000000001D, Duration.valueOf(\"1ns\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(0.000000001D, Duration.valueOf(\"1ns\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(0.0000000015D, Duration.valueOf(\"1ns\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(0.0000000015D, Duration.valueOf(\"1ns\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(1D, Duration.valueOf(\"1ns\"), false), \"1000M\");\n+        assertEquals(FormatUtils.formatCountRate(1D, Duration.valueOf(\"1ns\"), true), \"1000M/s\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"1ns\"), false), \"10B\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"1ns\"), true), \"10B/s\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"10ns\"), false), \"1000M\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"10ns\"), true), \"1000M/s\");\n+\n+        assertEquals(FormatUtils.formatCountRate(0.0000001D, Duration.valueOf(\"1us\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(0.0000001D, Duration.valueOf(\"1us\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(0.000001D, Duration.valueOf(\"1us\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(0.000001D, Duration.valueOf(\"1us\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(0.0000015D, Duration.valueOf(\"1us\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(0.0000015D, Duration.valueOf(\"1us\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(1D, Duration.valueOf(\"1us\"), false), \"1000K\");\n+        assertEquals(FormatUtils.formatCountRate(1D, Duration.valueOf(\"1us\"), true), \"1000K/s\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"1us\"), false), \"10M\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"1us\"), true), \"10M/s\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"10us\"), false), \"1000K\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"10us\"), true), \"1000K/s\");\n+\n+        assertEquals(FormatUtils.formatCountRate(0.0001D, Duration.valueOf(\"1ms\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(0.0001D, Duration.valueOf(\"1ms\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(0.001D, Duration.valueOf(\"1ms\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(0.001D, Duration.valueOf(\"1ms\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(0.0015D, Duration.valueOf(\"1ms\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(0.0015D, Duration.valueOf(\"1ms\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(1D, Duration.valueOf(\"1ms\"), false), \"1000\");\n+        assertEquals(FormatUtils.formatCountRate(1D, Duration.valueOf(\"1ms\"), true), \"1000/s\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"1ms\"), false), \"10K\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"1ms\"), true), \"10K/s\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"10ms\"), false), \"1000\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"10ms\"), true), \"1000/s\");\n+\n+        assertEquals(FormatUtils.formatCountRate(0.1D, Duration.valueOf(\"1s\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(0.1D, Duration.valueOf(\"1s\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"1s\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"1s\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"10s\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"10s\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(1.5D, Duration.valueOf(\"1s\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(1.5D, Duration.valueOf(\"1s\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"1s\"), false), \"10\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"1s\"), true), \"10/s\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"10s\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"10s\"), true), \"1/s\");\n+\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"1m\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"1m\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(60.0D, Duration.valueOf(\"1m\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(60.0D, Duration.valueOf(\"1m\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(600.0D, Duration.valueOf(\"1m\"), false), \"10\");\n+        assertEquals(FormatUtils.formatCountRate(600.0D, Duration.valueOf(\"1m\"), true), \"10/s\");\n+        assertEquals(FormatUtils.formatCountRate(100.0D, Duration.valueOf(\"10m\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(100.0D, Duration.valueOf(\"10m\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(600.0D, Duration.valueOf(\"10m\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(600.0D, Duration.valueOf(\"10m\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(6000.0D, Duration.valueOf(\"10m\"), false), \"10\");\n+        assertEquals(FormatUtils.formatCountRate(6000.0D, Duration.valueOf(\"10m\"), true), \"10/s\");\n+\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"1h\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"1h\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(3600.0D, Duration.valueOf(\"1h\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(3600.0D, Duration.valueOf(\"1h\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(36000.0D, Duration.valueOf(\"1h\"), false), \"10\");\n+        assertEquals(FormatUtils.formatCountRate(36000.0D, Duration.valueOf(\"1h\"), true), \"10/s\");\n+        assertEquals(FormatUtils.formatCountRate(100.0D, Duration.valueOf(\"10h\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(100.0D, Duration.valueOf(\"10h\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(36000.0D, Duration.valueOf(\"10h\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(36000.0D, Duration.valueOf(\"10h\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(360000.0D, Duration.valueOf(\"10h\"), false), \"10\");\n+        assertEquals(FormatUtils.formatCountRate(360000.0D, Duration.valueOf(\"10h\"), true), \"10/s\");\n+\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"1d\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"1d\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(86400.0D, Duration.valueOf(\"1d\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(86400.0D, Duration.valueOf(\"1d\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(864000.0D, Duration.valueOf(\"1d\"), false), \"10\");\n+        assertEquals(FormatUtils.formatCountRate(864000.0D, Duration.valueOf(\"1d\"), true), \"10/s\");\n+        assertEquals(FormatUtils.formatCountRate(86400.0D, Duration.valueOf(\"10d\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(86400.0D, Duration.valueOf(\"10d\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(864000.0D, Duration.valueOf(\"10d\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(864000.0D, Duration.valueOf(\"10d\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(8640000.0D, Duration.valueOf(\"10d\"), false), \"10\");\n+        assertEquals(FormatUtils.formatCountRate(8640000.0D, Duration.valueOf(\"10d\"), true), \"10/s\");\n+\n+        assertEquals(FormatUtils.formatCountRate(Double.NaN, Duration.valueOf(\"1s\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(Double.NaN, Duration.valueOf(\"1s\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(Double.POSITIVE_INFINITY, Duration.valueOf(\"1s\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(Double.POSITIVE_INFINITY, Duration.valueOf(\"1s\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(Double.NEGATIVE_INFINITY, Duration.valueOf(\"1s\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(Double.NEGATIVE_INFINITY, Duration.valueOf(\"1s\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"0s\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"0s\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(-1.0D, Duration.valueOf(\"0s\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(-1.0D, Duration.valueOf(\"0s\"), true), \"0/s\");\n+    }\n+\n+    @Test\n+    public void testFormatDataSize()\n+    {\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1L), false), \"1B\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1L), true), \"1B\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12L), false), \"12B\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12L), true), \"12B\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123L), false), \"123B\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123L), true), \"123B\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234L), false), \"1.21K\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234L), true), \"1.21KB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12345L), false), \"12.1K\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12345L), true), \"12.1KB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123456L), false), \"121K\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123456L), true), \"121KB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234567L), false), \"1.18M\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234567L), true), \"1.18MB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12345678L), false), \"11.8M\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12345678L), true), \"11.8MB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123456789L), false), \"118M\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123456789L), true), \"118MB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234567890L), false), \"1.15G\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234567890L), true), \"1.15GB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12345678901L), false), \"11.5G\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12345678901L), true), \"11.5GB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123456789012L), false), \"115G\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123456789012L), true), \"115GB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234567890123L), false), \"1.12T\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234567890123L), true), \"1.12TB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12345678901234L), false), \"11.2T\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12345678901234L), true), \"11.2TB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123456789012345L), false), \"112T\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123456789012345L), true), \"112TB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234567890123456L), false), \"1.1P\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234567890123456L), true), \"1.1PB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12345678901234567L), false), \"11P\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12345678901234567L), true), \"11PB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123456789012345678L), false), \"110P\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123456789012345678L), true), \"110PB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234567890123456789L), false), \"1097P\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234567890123456789L), true), \"1097PB\");\n+    }\n+\n+    @Test\n+    public void testFormatDataRate()\n+    {\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(0), Duration.valueOf(\"1ns\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(0), Duration.valueOf(\"1ns\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1ns\"), false), \"954M\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1ns\"), true), \"954MB/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"1ns\"), false), \"9.31G\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"1ns\"), true), \"9.31GB/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"10ns\"), false), \"954M\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"10ns\"), true), \"954MB/s\");\n+\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(0), Duration.valueOf(\"1us\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(0), Duration.valueOf(\"1us\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1us\"), false), \"977K\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1us\"), true), \"977KB/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"1us\"), false), \"9.54M\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"1us\"), true), \"9.54MB/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"10us\"), false), \"977K\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"10us\"), true), \"977KB/s\");\n+\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(0), Duration.valueOf(\"1ms\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(0), Duration.valueOf(\"1ms\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1ms\"), false), \"1000B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1ms\"), true), \"1000B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"1ms\"), false), \"9.77K\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"1ms\"), true), \"9.77KB/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"10ms\"), false), \"1000B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"10ms\"), true), \"1000B/s\");\n+\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(0), Duration.valueOf(\"1s\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(0), Duration.valueOf(\"1s\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1s\"), false), \"1B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1s\"), true), \"1B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"10s\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"10s\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"1s\"), false), \"10B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"1s\"), true), \"10B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"10s\"), false), \"1B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"10s\"), true), \"1B/s\");\n+\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1m\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1m\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(60), Duration.valueOf(\"1m\"), false), \"1B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(60), Duration.valueOf(\"1m\"), true), \"1B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(600), Duration.valueOf(\"1m\"), false), \"10B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(600), Duration.valueOf(\"1m\"), true), \"10B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(100), Duration.valueOf(\"10m\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(100), Duration.valueOf(\"10m\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(600), Duration.valueOf(\"10m\"), false), \"1B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(600), Duration.valueOf(\"10m\"), true), \"1B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(6000), Duration.valueOf(\"10m\"), false), \"10B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(6000), Duration.valueOf(\"10m\"), true), \"10B/s\");\n+\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1h\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1h\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(3600), Duration.valueOf(\"1h\"), false), \"1B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(3600), Duration.valueOf(\"1h\"), true), \"1B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(36000), Duration.valueOf(\"1h\"), false), \"10B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(36000), Duration.valueOf(\"1h\"), true), \"10B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(100), Duration.valueOf(\"10h\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(100), Duration.valueOf(\"10h\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(36000), Duration.valueOf(\"10h\"), false), \"1B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(36000), Duration.valueOf(\"10h\"), true), \"1B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(360000), Duration.valueOf(\"10h\"), false), \"10B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(360000), Duration.valueOf(\"10h\"), true), \"10B/s\");\n+\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1d\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1d\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(86400), Duration.valueOf(\"1d\"), false), \"1B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(86400), Duration.valueOf(\"1d\"), true), \"1B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(864000), Duration.valueOf(\"1d\"), false), \"10B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(864000), Duration.valueOf(\"1d\"), true), \"10B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(86400), Duration.valueOf(\"10d\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(86400), Duration.valueOf(\"10d\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(864000), Duration.valueOf(\"10d\"), false), \"1B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(864000), Duration.valueOf(\"10d\"), true), \"1B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(8640000), Duration.valueOf(\"10d\"), false), \"10B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(8640000), Duration.valueOf(\"10d\"), true), \"10B/s\");\n+\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), true), \"0B/s\");\n+    }\n+\n+    @Test\n+    public void testPluralize()",
                "path": "client/trino-cli/src/test/java/io/trino/cli/TestFormatUtils.java",
                "position": 284,
                "original_position": 282,
                "commit_id": "a3ff14606d70a46f592dbdd56eb32cb71a79ef91",
                "original_commit_id": "f88ba0cee83615211a54a7351df5656d7688ae1c",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "Done",
                "created_at": "2022-12-08T17:09:24Z",
                "updated_at": "2022-12-08T17:09:24Z",
                "html_url": "https://github.com/trinodb/trino/pull/15337#discussion_r1043598007",
                "pull_request_url": "https://api.github.com/repos/trinodb/trino/pulls/15337",
                "author_association": "MEMBER",
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/comments/1043598007"
                    },
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15337#discussion_r1043598007"
                    },
                    "pull_request": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337"
                    }
                },
                "reactions": {
                    "url": "https://api.github.com/repos/trinodb/trino/pulls/comments/1043598007/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "start_line": null,
                "original_start_line": null,
                "start_side": null,
                "line": 284,
                "original_line": 284,
                "side": "RIGHT",
                "in_reply_to_id": 1042707167
            },
            "pull_request": {
                "url": "https://api.github.com/repos/trinodb/trino/pulls/15337",
                "id": 1152104129,
                "node_id": "PR_kwDOCezRTs5Eq7bB",
                "html_url": "https://github.com/trinodb/trino/pull/15337",
                "diff_url": "https://github.com/trinodb/trino/pull/15337.diff",
                "patch_url": "https://github.com/trinodb/trino/pull/15337.patch",
                "issue_url": "https://api.github.com/repos/trinodb/trino/issues/15337",
                "number": 15337,
                "state": "open",
                "locked": false,
                "title": "Fix test for invalid rate in FormatUtils.formatDataRate()",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "<!-- Thank you for submitting a pull request! Find more information in our development guide at https://github.com/trinodb/trino/blob/master/.github/DEVELOPMENT.md and contact us on #dev in Slack. -->\r\n<!-- Provide an overview of the PR for maintainers and reviewers. -->\r\n## Description\r\n\r\n`FormatUtils.formatDataRate()` contains the following code:\r\n\r\n```java\r\nlong rate = Math.round(dataSize.toBytes() / duration.getValue(SECONDS));\r\nif (Double.isNaN(rate) || Double.isInfinite(rate)) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nThe test can never evaluate as `true`, since both functions will return false for any `long`.\r\n\r\nThe correct test is:\r\n\r\n```java\r\nif (rate == Long.MAX_VALUE) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nIt's not necessary to test for `Long.MIN_VALUE`, since neither `dataSize` nor `duration` can be negative.\r\n\r\n<!-- Provide details that would help an engineer who is unfamiliar with this part of the code. -->\r\n## Unit Test\r\n\r\nI added a new class, `TestFormatUtils` to test both this fix and the rest of `FormatUtils`. The tests for this change are:\r\n\r\n```java\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), false), \"0B\");\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), true), \"0B/s\");\r\n```\r\n\r\n<!-- Mark the appropriate option with an (x). Propose a release note if you can. -->\r\n## Release notes\r\n\r\n(x) This is not user-visible or docs only and no release notes are required.\r\n( ) Release notes are required, please propose a release note for me.\r\n( ) Release notes are required, with the following suggested text:\r\n\r\n## Related Issue\r\n\r\nFixes #13093",
                "created_at": "2022-12-07T17:54:40Z",
                "updated_at": "2022-12-08T17:09:24Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": "04709a71679326dfa2fa43ab44d4da90024bf8c7",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [
                    {
                        "id": 1202580151,
                        "node_id": "MDU6TGFiZWwxMjAyNTgwMTUx",
                        "url": "https://api.github.com/repos/trinodb/trino/labels/cla-signed",
                        "name": "cla-signed",
                        "color": "ededed",
                        "default": false,
                        "description": null
                    }
                ],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/trinodb/trino/pulls/15337/commits",
                "review_comments_url": "https://api.github.com/repos/trinodb/trino/pulls/15337/comments",
                "review_comment_url": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/trinodb/trino/issues/15337/comments",
                "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/a3ff14606d70a46f592dbdd56eb32cb71a79ef91",
                "head": {
                    "label": "metadaddy:fix-formatdatarate-test",
                    "ref": "fix-formatdatarate-test",
                    "sha": "a3ff14606d70a46f592dbdd56eb32cb71a79ef91",
                    "user": {
                        "login": "metadaddy",
                        "id": 723517,
                        "node_id": "MDQ6VXNlcjcyMzUxNw==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/metadaddy",
                        "html_url": "https://github.com/metadaddy",
                        "followers_url": "https://api.github.com/users/metadaddy/followers",
                        "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                        "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                        "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                        "repos_url": "https://api.github.com/users/metadaddy/repos",
                        "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 509274784,
                        "node_id": "R_kgDOHlrqoA",
                        "name": "trino",
                        "full_name": "metadaddy/trino",
                        "private": false,
                        "owner": {
                            "login": "metadaddy",
                            "id": 723517,
                            "node_id": "MDQ6VXNlcjcyMzUxNw==",
                            "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/metadaddy",
                            "html_url": "https://github.com/metadaddy",
                            "followers_url": "https://api.github.com/users/metadaddy/followers",
                            "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                            "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                            "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                            "repos_url": "https://api.github.com/users/metadaddy/repos",
                            "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/metadaddy/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": true,
                        "url": "https://api.github.com/repos/metadaddy/trino",
                        "forks_url": "https://api.github.com/repos/metadaddy/trino/forks",
                        "keys_url": "https://api.github.com/repos/metadaddy/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/metadaddy/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/metadaddy/trino/teams",
                        "hooks_url": "https://api.github.com/repos/metadaddy/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/metadaddy/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/metadaddy/trino/events",
                        "assignees_url": "https://api.github.com/repos/metadaddy/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/metadaddy/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/metadaddy/trino/tags",
                        "blobs_url": "https://api.github.com/repos/metadaddy/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/metadaddy/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/metadaddy/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/metadaddy/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/metadaddy/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/metadaddy/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/metadaddy/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/metadaddy/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/metadaddy/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/metadaddy/trino/subscription",
                        "commits_url": "https://api.github.com/repos/metadaddy/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/metadaddy/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/metadaddy/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/metadaddy/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/metadaddy/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/metadaddy/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/metadaddy/trino/merges",
                        "archive_url": "https://api.github.com/repos/metadaddy/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/metadaddy/trino/downloads",
                        "issues_url": "https://api.github.com/repos/metadaddy/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/metadaddy/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/metadaddy/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/metadaddy/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/metadaddy/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/metadaddy/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/metadaddy/trino/deployments",
                        "created_at": "2022-07-01T00:43:32Z",
                        "updated_at": "2022-07-06T01:44:20Z",
                        "pushed_at": "2022-12-08T02:39:50Z",
                        "git_url": "git://github.com/metadaddy/trino.git",
                        "ssh_url": "git@github.com:metadaddy/trino.git",
                        "clone_url": "https://github.com/metadaddy/trino.git",
                        "svn_url": "https://github.com/metadaddy/trino",
                        "homepage": "https://trino.io",
                        "size": 197784,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": "Java",
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "master"
                    }
                },
                "base": {
                    "label": "trinodb:master",
                    "ref": "master",
                    "sha": "81d1525c7b0d24433712957632c0895847a6788b",
                    "user": {
                        "login": "trinodb",
                        "id": 34147222,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                        "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/trinodb",
                        "html_url": "https://github.com/trinodb",
                        "followers_url": "https://api.github.com/users/trinodb/followers",
                        "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                        "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                        "organizations_url": "https://api.github.com/users/trinodb/orgs",
                        "repos_url": "https://api.github.com/users/trinodb/repos",
                        "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/trinodb/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 166515022,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNjY1MTUwMjI=",
                        "name": "trino",
                        "full_name": "trinodb/trino",
                        "private": false,
                        "owner": {
                            "login": "trinodb",
                            "id": 34147222,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/trinodb",
                            "html_url": "https://github.com/trinodb",
                            "followers_url": "https://api.github.com/users/trinodb/followers",
                            "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                            "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                            "organizations_url": "https://api.github.com/users/trinodb/orgs",
                            "repos_url": "https://api.github.com/users/trinodb/repos",
                            "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/trinodb/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/trinodb/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": false,
                        "url": "https://api.github.com/repos/trinodb/trino",
                        "forks_url": "https://api.github.com/repos/trinodb/trino/forks",
                        "keys_url": "https://api.github.com/repos/trinodb/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/trinodb/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/trinodb/trino/teams",
                        "hooks_url": "https://api.github.com/repos/trinodb/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/trinodb/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/trinodb/trino/events",
                        "assignees_url": "https://api.github.com/repos/trinodb/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/trinodb/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/trinodb/trino/tags",
                        "blobs_url": "https://api.github.com/repos/trinodb/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/trinodb/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/trinodb/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/trinodb/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/trinodb/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/trinodb/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/trinodb/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/trinodb/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/trinodb/trino/subscription",
                        "commits_url": "https://api.github.com/repos/trinodb/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/trinodb/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/trinodb/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/trinodb/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/trinodb/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/trinodb/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/trinodb/trino/merges",
                        "archive_url": "https://api.github.com/repos/trinodb/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/trinodb/trino/downloads",
                        "issues_url": "https://api.github.com/repos/trinodb/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/trinodb/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/trinodb/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/trinodb/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/trinodb/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/trinodb/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/trinodb/trino/deployments",
                        "created_at": "2019-01-19T06:38:14Z",
                        "updated_at": "2022-12-08T14:45:56Z",
                        "pushed_at": "2022-12-08T16:49:16Z",
                        "git_url": "git://github.com/trinodb/trino.git",
                        "ssh_url": "git@github.com:trinodb/trino.git",
                        "clone_url": "https://github.com/trinodb/trino.git",
                        "svn_url": "https://github.com/trinodb/trino",
                        "homepage": "https://trino.io",
                        "size": 198725,
                        "stargazers_count": 6805,
                        "watchers_count": 6805,
                        "language": "Java",
                        "has_issues": true,
                        "has_projects": false,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": true,
                        "forks_count": 2085,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 2089,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "analytics",
                            "big-data",
                            "data-science",
                            "database",
                            "databases",
                            "datalake",
                            "distributed-database",
                            "distributed-databases",
                            "distributed-systems",
                            "hadoop",
                            "hive",
                            "java",
                            "jdbc",
                            "presto",
                            "prestodb",
                            "query-engine",
                            "sql",
                            "trino"
                        ],
                        "visibility": "public",
                        "forks": 2085,
                        "open_issues": 2089,
                        "watchers": 6805,
                        "default_branch": "master"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337"
                    },
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15337"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15337"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15337/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/trinodb/trino/statuses/a3ff14606d70a46f592dbdd56eb32cb71a79ef91"
                    }
                },
                "author_association": "MEMBER",
                "auto_merge": null,
                "active_lock_reason": null
            }
        },
        "public": true,
        "created_at": "2022-12-08T17:09:24Z",
        "org": {
            "id": 34147222,
            "login": "trinodb",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/trinodb",
            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?"
        }
    },
    {
        "id": "25756988955",
        "type": "PullRequestReviewEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 166515022,
            "name": "trinodb/trino",
            "url": "https://api.github.com/repos/trinodb/trino"
        },
        "payload": {
            "action": "created",
            "review": {
                "id": 1210447926,
                "node_id": "PRR_kwDOCezRTs5IJfg2",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": null,
                "commit_id": "f88ba0cee83615211a54a7351df5656d7688ae1c",
                "submitted_at": "2022-12-08T17:09:24Z",
                "state": "commented",
                "html_url": "https://github.com/trinodb/trino/pull/15337#pullrequestreview-1210447926",
                "pull_request_url": "https://api.github.com/repos/trinodb/trino/pulls/15337",
                "author_association": "MEMBER",
                "_links": {
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15337#pullrequestreview-1210447926"
                    },
                    "pull_request": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337"
                    }
                }
            },
            "pull_request": {
                "url": "https://api.github.com/repos/trinodb/trino/pulls/15337",
                "id": 1152104129,
                "node_id": "PR_kwDOCezRTs5Eq7bB",
                "html_url": "https://github.com/trinodb/trino/pull/15337",
                "diff_url": "https://github.com/trinodb/trino/pull/15337.diff",
                "patch_url": "https://github.com/trinodb/trino/pull/15337.patch",
                "issue_url": "https://api.github.com/repos/trinodb/trino/issues/15337",
                "number": 15337,
                "state": "open",
                "locked": false,
                "title": "Fix test for invalid rate in FormatUtils.formatDataRate()",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "<!-- Thank you for submitting a pull request! Find more information in our development guide at https://github.com/trinodb/trino/blob/master/.github/DEVELOPMENT.md and contact us on #dev in Slack. -->\r\n<!-- Provide an overview of the PR for maintainers and reviewers. -->\r\n## Description\r\n\r\n`FormatUtils.formatDataRate()` contains the following code:\r\n\r\n```java\r\nlong rate = Math.round(dataSize.toBytes() / duration.getValue(SECONDS));\r\nif (Double.isNaN(rate) || Double.isInfinite(rate)) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nThe test can never evaluate as `true`, since both functions will return false for any `long`.\r\n\r\nThe correct test is:\r\n\r\n```java\r\nif (rate == Long.MAX_VALUE) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nIt's not necessary to test for `Long.MIN_VALUE`, since neither `dataSize` nor `duration` can be negative.\r\n\r\n<!-- Provide details that would help an engineer who is unfamiliar with this part of the code. -->\r\n## Unit Test\r\n\r\nI added a new class, `TestFormatUtils` to test both this fix and the rest of `FormatUtils`. The tests for this change are:\r\n\r\n```java\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), false), \"0B\");\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), true), \"0B/s\");\r\n```\r\n\r\n<!-- Mark the appropriate option with an (x). Propose a release note if you can. -->\r\n## Release notes\r\n\r\n(x) This is not user-visible or docs only and no release notes are required.\r\n( ) Release notes are required, please propose a release note for me.\r\n( ) Release notes are required, with the following suggested text:\r\n\r\n## Related Issue\r\n\r\nFixes #13093",
                "created_at": "2022-12-07T17:54:40Z",
                "updated_at": "2022-12-08T17:09:24Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": "04709a71679326dfa2fa43ab44d4da90024bf8c7",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [
                    {
                        "id": 1202580151,
                        "node_id": "MDU6TGFiZWwxMjAyNTgwMTUx",
                        "url": "https://api.github.com/repos/trinodb/trino/labels/cla-signed",
                        "name": "cla-signed",
                        "color": "ededed",
                        "default": false,
                        "description": null
                    }
                ],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/trinodb/trino/pulls/15337/commits",
                "review_comments_url": "https://api.github.com/repos/trinodb/trino/pulls/15337/comments",
                "review_comment_url": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/trinodb/trino/issues/15337/comments",
                "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/a3ff14606d70a46f592dbdd56eb32cb71a79ef91",
                "head": {
                    "label": "metadaddy:fix-formatdatarate-test",
                    "ref": "fix-formatdatarate-test",
                    "sha": "a3ff14606d70a46f592dbdd56eb32cb71a79ef91",
                    "user": {
                        "login": "metadaddy",
                        "id": 723517,
                        "node_id": "MDQ6VXNlcjcyMzUxNw==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/metadaddy",
                        "html_url": "https://github.com/metadaddy",
                        "followers_url": "https://api.github.com/users/metadaddy/followers",
                        "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                        "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                        "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                        "repos_url": "https://api.github.com/users/metadaddy/repos",
                        "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 509274784,
                        "node_id": "R_kgDOHlrqoA",
                        "name": "trino",
                        "full_name": "metadaddy/trino",
                        "private": false,
                        "owner": {
                            "login": "metadaddy",
                            "id": 723517,
                            "node_id": "MDQ6VXNlcjcyMzUxNw==",
                            "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/metadaddy",
                            "html_url": "https://github.com/metadaddy",
                            "followers_url": "https://api.github.com/users/metadaddy/followers",
                            "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                            "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                            "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                            "repos_url": "https://api.github.com/users/metadaddy/repos",
                            "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/metadaddy/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": true,
                        "url": "https://api.github.com/repos/metadaddy/trino",
                        "forks_url": "https://api.github.com/repos/metadaddy/trino/forks",
                        "keys_url": "https://api.github.com/repos/metadaddy/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/metadaddy/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/metadaddy/trino/teams",
                        "hooks_url": "https://api.github.com/repos/metadaddy/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/metadaddy/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/metadaddy/trino/events",
                        "assignees_url": "https://api.github.com/repos/metadaddy/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/metadaddy/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/metadaddy/trino/tags",
                        "blobs_url": "https://api.github.com/repos/metadaddy/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/metadaddy/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/metadaddy/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/metadaddy/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/metadaddy/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/metadaddy/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/metadaddy/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/metadaddy/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/metadaddy/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/metadaddy/trino/subscription",
                        "commits_url": "https://api.github.com/repos/metadaddy/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/metadaddy/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/metadaddy/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/metadaddy/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/metadaddy/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/metadaddy/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/metadaddy/trino/merges",
                        "archive_url": "https://api.github.com/repos/metadaddy/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/metadaddy/trino/downloads",
                        "issues_url": "https://api.github.com/repos/metadaddy/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/metadaddy/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/metadaddy/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/metadaddy/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/metadaddy/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/metadaddy/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/metadaddy/trino/deployments",
                        "created_at": "2022-07-01T00:43:32Z",
                        "updated_at": "2022-07-06T01:44:20Z",
                        "pushed_at": "2022-12-08T02:39:50Z",
                        "git_url": "git://github.com/metadaddy/trino.git",
                        "ssh_url": "git@github.com:metadaddy/trino.git",
                        "clone_url": "https://github.com/metadaddy/trino.git",
                        "svn_url": "https://github.com/metadaddy/trino",
                        "homepage": "https://trino.io",
                        "size": 197784,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": "Java",
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "master"
                    }
                },
                "base": {
                    "label": "trinodb:master",
                    "ref": "master",
                    "sha": "81d1525c7b0d24433712957632c0895847a6788b",
                    "user": {
                        "login": "trinodb",
                        "id": 34147222,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                        "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/trinodb",
                        "html_url": "https://github.com/trinodb",
                        "followers_url": "https://api.github.com/users/trinodb/followers",
                        "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                        "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                        "organizations_url": "https://api.github.com/users/trinodb/orgs",
                        "repos_url": "https://api.github.com/users/trinodb/repos",
                        "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/trinodb/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 166515022,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNjY1MTUwMjI=",
                        "name": "trino",
                        "full_name": "trinodb/trino",
                        "private": false,
                        "owner": {
                            "login": "trinodb",
                            "id": 34147222,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/trinodb",
                            "html_url": "https://github.com/trinodb",
                            "followers_url": "https://api.github.com/users/trinodb/followers",
                            "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                            "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                            "organizations_url": "https://api.github.com/users/trinodb/orgs",
                            "repos_url": "https://api.github.com/users/trinodb/repos",
                            "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/trinodb/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/trinodb/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": false,
                        "url": "https://api.github.com/repos/trinodb/trino",
                        "forks_url": "https://api.github.com/repos/trinodb/trino/forks",
                        "keys_url": "https://api.github.com/repos/trinodb/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/trinodb/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/trinodb/trino/teams",
                        "hooks_url": "https://api.github.com/repos/trinodb/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/trinodb/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/trinodb/trino/events",
                        "assignees_url": "https://api.github.com/repos/trinodb/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/trinodb/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/trinodb/trino/tags",
                        "blobs_url": "https://api.github.com/repos/trinodb/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/trinodb/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/trinodb/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/trinodb/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/trinodb/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/trinodb/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/trinodb/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/trinodb/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/trinodb/trino/subscription",
                        "commits_url": "https://api.github.com/repos/trinodb/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/trinodb/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/trinodb/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/trinodb/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/trinodb/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/trinodb/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/trinodb/trino/merges",
                        "archive_url": "https://api.github.com/repos/trinodb/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/trinodb/trino/downloads",
                        "issues_url": "https://api.github.com/repos/trinodb/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/trinodb/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/trinodb/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/trinodb/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/trinodb/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/trinodb/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/trinodb/trino/deployments",
                        "created_at": "2019-01-19T06:38:14Z",
                        "updated_at": "2022-12-08T14:45:56Z",
                        "pushed_at": "2022-12-08T16:49:16Z",
                        "git_url": "git://github.com/trinodb/trino.git",
                        "ssh_url": "git@github.com:trinodb/trino.git",
                        "clone_url": "https://github.com/trinodb/trino.git",
                        "svn_url": "https://github.com/trinodb/trino",
                        "homepage": "https://trino.io",
                        "size": 198725,
                        "stargazers_count": 6805,
                        "watchers_count": 6805,
                        "language": "Java",
                        "has_issues": true,
                        "has_projects": false,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": true,
                        "forks_count": 2085,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 2089,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "analytics",
                            "big-data",
                            "data-science",
                            "database",
                            "databases",
                            "datalake",
                            "distributed-database",
                            "distributed-databases",
                            "distributed-systems",
                            "hadoop",
                            "hive",
                            "java",
                            "jdbc",
                            "presto",
                            "prestodb",
                            "query-engine",
                            "sql",
                            "trino"
                        ],
                        "visibility": "public",
                        "forks": 2085,
                        "open_issues": 2089,
                        "watchers": 6805,
                        "default_branch": "master"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337"
                    },
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15337"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15337"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15337/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/trinodb/trino/statuses/a3ff14606d70a46f592dbdd56eb32cb71a79ef91"
                    }
                },
                "author_association": "MEMBER",
                "auto_merge": null,
                "active_lock_reason": null
            }
        },
        "public": true,
        "created_at": "2022-12-08T17:09:25Z",
        "org": {
            "id": 34147222,
            "login": "trinodb",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/trinodb",
            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?"
        }
    },
    {
        "id": "25756984491",
        "type": "PullRequestReviewCommentEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 166515022,
            "name": "trinodb/trino",
            "url": "https://api.github.com/repos/trinodb/trino"
        },
        "payload": {
            "action": "created",
            "comment": {
                "url": "https://api.github.com/repos/trinodb/trino/pulls/comments/1043597809",
                "pull_request_review_id": 1210447628,
                "id": 1043597809,
                "node_id": "PRRC_kwDOCezRTs4-NAnx",
                "diff_hunk": "@@ -115,7 +115,7 @@ else if (longForm) {\n     public static String formatDataRate(DataSize dataSize, Duration duration, boolean longForm)\n     {\n         long rate = Math.round(dataSize.toBytes() / duration.getValue(SECONDS));\n-        if (Double.isNaN(rate) || Double.isInfinite(rate)) {\n+        if (rate == Long.MAX_VALUE) {",
                "path": "client/trino-cli/src/main/java/io/trino/cli/FormatUtils.java",
                "position": 5,
                "original_position": 5,
                "commit_id": "a3ff14606d70a46f592dbdd56eb32cb71a79ef91",
                "original_commit_id": "f88ba0cee83615211a54a7351df5656d7688ae1c",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "Yes - this is how `formatCountRate` works. I'm merely fixing the check here so it works as intended.",
                "created_at": "2022-12-08T17:09:12Z",
                "updated_at": "2022-12-08T17:09:12Z",
                "html_url": "https://github.com/trinodb/trino/pull/15337#discussion_r1043597809",
                "pull_request_url": "https://api.github.com/repos/trinodb/trino/pulls/15337",
                "author_association": "MEMBER",
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/comments/1043597809"
                    },
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15337#discussion_r1043597809"
                    },
                    "pull_request": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337"
                    }
                },
                "reactions": {
                    "url": "https://api.github.com/repos/trinodb/trino/pulls/comments/1043597809/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "start_line": null,
                "original_start_line": null,
                "start_side": null,
                "line": 118,
                "original_line": 118,
                "side": "RIGHT",
                "in_reply_to_id": 1042706109
            },
            "pull_request": {
                "url": "https://api.github.com/repos/trinodb/trino/pulls/15337",
                "id": 1152104129,
                "node_id": "PR_kwDOCezRTs5Eq7bB",
                "html_url": "https://github.com/trinodb/trino/pull/15337",
                "diff_url": "https://github.com/trinodb/trino/pull/15337.diff",
                "patch_url": "https://github.com/trinodb/trino/pull/15337.patch",
                "issue_url": "https://api.github.com/repos/trinodb/trino/issues/15337",
                "number": 15337,
                "state": "open",
                "locked": false,
                "title": "Fix test for invalid rate in FormatUtils.formatDataRate()",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "<!-- Thank you for submitting a pull request! Find more information in our development guide at https://github.com/trinodb/trino/blob/master/.github/DEVELOPMENT.md and contact us on #dev in Slack. -->\r\n<!-- Provide an overview of the PR for maintainers and reviewers. -->\r\n## Description\r\n\r\n`FormatUtils.formatDataRate()` contains the following code:\r\n\r\n```java\r\nlong rate = Math.round(dataSize.toBytes() / duration.getValue(SECONDS));\r\nif (Double.isNaN(rate) || Double.isInfinite(rate)) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nThe test can never evaluate as `true`, since both functions will return false for any `long`.\r\n\r\nThe correct test is:\r\n\r\n```java\r\nif (rate == Long.MAX_VALUE) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nIt's not necessary to test for `Long.MIN_VALUE`, since neither `dataSize` nor `duration` can be negative.\r\n\r\n<!-- Provide details that would help an engineer who is unfamiliar with this part of the code. -->\r\n## Unit Test\r\n\r\nI added a new class, `TestFormatUtils` to test both this fix and the rest of `FormatUtils`. The tests for this change are:\r\n\r\n```java\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), false), \"0B\");\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), true), \"0B/s\");\r\n```\r\n\r\n<!-- Mark the appropriate option with an (x). Propose a release note if you can. -->\r\n## Release notes\r\n\r\n(x) This is not user-visible or docs only and no release notes are required.\r\n( ) Release notes are required, please propose a release note for me.\r\n( ) Release notes are required, with the following suggested text:\r\n\r\n## Related Issue\r\n\r\nFixes #13093",
                "created_at": "2022-12-07T17:54:40Z",
                "updated_at": "2022-12-08T17:09:12Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": "04709a71679326dfa2fa43ab44d4da90024bf8c7",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [
                    {
                        "id": 1202580151,
                        "node_id": "MDU6TGFiZWwxMjAyNTgwMTUx",
                        "url": "https://api.github.com/repos/trinodb/trino/labels/cla-signed",
                        "name": "cla-signed",
                        "color": "ededed",
                        "default": false,
                        "description": null
                    }
                ],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/trinodb/trino/pulls/15337/commits",
                "review_comments_url": "https://api.github.com/repos/trinodb/trino/pulls/15337/comments",
                "review_comment_url": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/trinodb/trino/issues/15337/comments",
                "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/a3ff14606d70a46f592dbdd56eb32cb71a79ef91",
                "head": {
                    "label": "metadaddy:fix-formatdatarate-test",
                    "ref": "fix-formatdatarate-test",
                    "sha": "a3ff14606d70a46f592dbdd56eb32cb71a79ef91",
                    "user": {
                        "login": "metadaddy",
                        "id": 723517,
                        "node_id": "MDQ6VXNlcjcyMzUxNw==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/metadaddy",
                        "html_url": "https://github.com/metadaddy",
                        "followers_url": "https://api.github.com/users/metadaddy/followers",
                        "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                        "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                        "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                        "repos_url": "https://api.github.com/users/metadaddy/repos",
                        "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 509274784,
                        "node_id": "R_kgDOHlrqoA",
                        "name": "trino",
                        "full_name": "metadaddy/trino",
                        "private": false,
                        "owner": {
                            "login": "metadaddy",
                            "id": 723517,
                            "node_id": "MDQ6VXNlcjcyMzUxNw==",
                            "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/metadaddy",
                            "html_url": "https://github.com/metadaddy",
                            "followers_url": "https://api.github.com/users/metadaddy/followers",
                            "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                            "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                            "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                            "repos_url": "https://api.github.com/users/metadaddy/repos",
                            "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/metadaddy/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": true,
                        "url": "https://api.github.com/repos/metadaddy/trino",
                        "forks_url": "https://api.github.com/repos/metadaddy/trino/forks",
                        "keys_url": "https://api.github.com/repos/metadaddy/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/metadaddy/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/metadaddy/trino/teams",
                        "hooks_url": "https://api.github.com/repos/metadaddy/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/metadaddy/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/metadaddy/trino/events",
                        "assignees_url": "https://api.github.com/repos/metadaddy/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/metadaddy/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/metadaddy/trino/tags",
                        "blobs_url": "https://api.github.com/repos/metadaddy/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/metadaddy/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/metadaddy/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/metadaddy/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/metadaddy/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/metadaddy/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/metadaddy/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/metadaddy/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/metadaddy/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/metadaddy/trino/subscription",
                        "commits_url": "https://api.github.com/repos/metadaddy/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/metadaddy/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/metadaddy/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/metadaddy/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/metadaddy/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/metadaddy/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/metadaddy/trino/merges",
                        "archive_url": "https://api.github.com/repos/metadaddy/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/metadaddy/trino/downloads",
                        "issues_url": "https://api.github.com/repos/metadaddy/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/metadaddy/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/metadaddy/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/metadaddy/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/metadaddy/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/metadaddy/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/metadaddy/trino/deployments",
                        "created_at": "2022-07-01T00:43:32Z",
                        "updated_at": "2022-07-06T01:44:20Z",
                        "pushed_at": "2022-12-08T02:39:50Z",
                        "git_url": "git://github.com/metadaddy/trino.git",
                        "ssh_url": "git@github.com:metadaddy/trino.git",
                        "clone_url": "https://github.com/metadaddy/trino.git",
                        "svn_url": "https://github.com/metadaddy/trino",
                        "homepage": "https://trino.io",
                        "size": 197784,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": "Java",
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "master"
                    }
                },
                "base": {
                    "label": "trinodb:master",
                    "ref": "master",
                    "sha": "81d1525c7b0d24433712957632c0895847a6788b",
                    "user": {
                        "login": "trinodb",
                        "id": 34147222,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                        "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/trinodb",
                        "html_url": "https://github.com/trinodb",
                        "followers_url": "https://api.github.com/users/trinodb/followers",
                        "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                        "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                        "organizations_url": "https://api.github.com/users/trinodb/orgs",
                        "repos_url": "https://api.github.com/users/trinodb/repos",
                        "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/trinodb/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 166515022,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNjY1MTUwMjI=",
                        "name": "trino",
                        "full_name": "trinodb/trino",
                        "private": false,
                        "owner": {
                            "login": "trinodb",
                            "id": 34147222,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/trinodb",
                            "html_url": "https://github.com/trinodb",
                            "followers_url": "https://api.github.com/users/trinodb/followers",
                            "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                            "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                            "organizations_url": "https://api.github.com/users/trinodb/orgs",
                            "repos_url": "https://api.github.com/users/trinodb/repos",
                            "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/trinodb/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/trinodb/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": false,
                        "url": "https://api.github.com/repos/trinodb/trino",
                        "forks_url": "https://api.github.com/repos/trinodb/trino/forks",
                        "keys_url": "https://api.github.com/repos/trinodb/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/trinodb/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/trinodb/trino/teams",
                        "hooks_url": "https://api.github.com/repos/trinodb/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/trinodb/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/trinodb/trino/events",
                        "assignees_url": "https://api.github.com/repos/trinodb/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/trinodb/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/trinodb/trino/tags",
                        "blobs_url": "https://api.github.com/repos/trinodb/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/trinodb/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/trinodb/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/trinodb/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/trinodb/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/trinodb/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/trinodb/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/trinodb/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/trinodb/trino/subscription",
                        "commits_url": "https://api.github.com/repos/trinodb/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/trinodb/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/trinodb/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/trinodb/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/trinodb/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/trinodb/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/trinodb/trino/merges",
                        "archive_url": "https://api.github.com/repos/trinodb/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/trinodb/trino/downloads",
                        "issues_url": "https://api.github.com/repos/trinodb/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/trinodb/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/trinodb/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/trinodb/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/trinodb/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/trinodb/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/trinodb/trino/deployments",
                        "created_at": "2019-01-19T06:38:14Z",
                        "updated_at": "2022-12-08T14:45:56Z",
                        "pushed_at": "2022-12-08T16:49:16Z",
                        "git_url": "git://github.com/trinodb/trino.git",
                        "ssh_url": "git@github.com:trinodb/trino.git",
                        "clone_url": "https://github.com/trinodb/trino.git",
                        "svn_url": "https://github.com/trinodb/trino",
                        "homepage": "https://trino.io",
                        "size": 198725,
                        "stargazers_count": 6805,
                        "watchers_count": 6805,
                        "language": "Java",
                        "has_issues": true,
                        "has_projects": false,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": true,
                        "forks_count": 2085,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 2089,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "analytics",
                            "big-data",
                            "data-science",
                            "database",
                            "databases",
                            "datalake",
                            "distributed-database",
                            "distributed-databases",
                            "distributed-systems",
                            "hadoop",
                            "hive",
                            "java",
                            "jdbc",
                            "presto",
                            "prestodb",
                            "query-engine",
                            "sql",
                            "trino"
                        ],
                        "visibility": "public",
                        "forks": 2085,
                        "open_issues": 2089,
                        "watchers": 6805,
                        "default_branch": "master"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337"
                    },
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15337"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15337"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15337/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/trinodb/trino/statuses/a3ff14606d70a46f592dbdd56eb32cb71a79ef91"
                    }
                },
                "author_association": "MEMBER",
                "auto_merge": null,
                "active_lock_reason": null
            }
        },
        "public": true,
        "created_at": "2022-12-08T17:09:12Z",
        "org": {
            "id": 34147222,
            "login": "trinodb",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/trinodb",
            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?"
        }
    },
    {
        "id": "25756984490",
        "type": "PullRequestReviewEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 166515022,
            "name": "trinodb/trino",
            "url": "https://api.github.com/repos/trinodb/trino"
        },
        "payload": {
            "action": "created",
            "review": {
                "id": 1210447628,
                "node_id": "PRR_kwDOCezRTs5IJfcM",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": null,
                "commit_id": "f88ba0cee83615211a54a7351df5656d7688ae1c",
                "submitted_at": "2022-12-08T17:09:12Z",
                "state": "commented",
                "html_url": "https://github.com/trinodb/trino/pull/15337#pullrequestreview-1210447628",
                "pull_request_url": "https://api.github.com/repos/trinodb/trino/pulls/15337",
                "author_association": "MEMBER",
                "_links": {
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15337#pullrequestreview-1210447628"
                    },
                    "pull_request": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337"
                    }
                }
            },
            "pull_request": {
                "url": "https://api.github.com/repos/trinodb/trino/pulls/15337",
                "id": 1152104129,
                "node_id": "PR_kwDOCezRTs5Eq7bB",
                "html_url": "https://github.com/trinodb/trino/pull/15337",
                "diff_url": "https://github.com/trinodb/trino/pull/15337.diff",
                "patch_url": "https://github.com/trinodb/trino/pull/15337.patch",
                "issue_url": "https://api.github.com/repos/trinodb/trino/issues/15337",
                "number": 15337,
                "state": "open",
                "locked": false,
                "title": "Fix test for invalid rate in FormatUtils.formatDataRate()",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "<!-- Thank you for submitting a pull request! Find more information in our development guide at https://github.com/trinodb/trino/blob/master/.github/DEVELOPMENT.md and contact us on #dev in Slack. -->\r\n<!-- Provide an overview of the PR for maintainers and reviewers. -->\r\n## Description\r\n\r\n`FormatUtils.formatDataRate()` contains the following code:\r\n\r\n```java\r\nlong rate = Math.round(dataSize.toBytes() / duration.getValue(SECONDS));\r\nif (Double.isNaN(rate) || Double.isInfinite(rate)) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nThe test can never evaluate as `true`, since both functions will return false for any `long`.\r\n\r\nThe correct test is:\r\n\r\n```java\r\nif (rate == Long.MAX_VALUE) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nIt's not necessary to test for `Long.MIN_VALUE`, since neither `dataSize` nor `duration` can be negative.\r\n\r\n<!-- Provide details that would help an engineer who is unfamiliar with this part of the code. -->\r\n## Unit Test\r\n\r\nI added a new class, `TestFormatUtils` to test both this fix and the rest of `FormatUtils`. The tests for this change are:\r\n\r\n```java\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), false), \"0B\");\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), true), \"0B/s\");\r\n```\r\n\r\n<!-- Mark the appropriate option with an (x). Propose a release note if you can. -->\r\n## Release notes\r\n\r\n(x) This is not user-visible or docs only and no release notes are required.\r\n( ) Release notes are required, please propose a release note for me.\r\n( ) Release notes are required, with the following suggested text:\r\n\r\n## Related Issue\r\n\r\nFixes #13093",
                "created_at": "2022-12-07T17:54:40Z",
                "updated_at": "2022-12-08T17:09:12Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": "04709a71679326dfa2fa43ab44d4da90024bf8c7",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [
                    {
                        "id": 1202580151,
                        "node_id": "MDU6TGFiZWwxMjAyNTgwMTUx",
                        "url": "https://api.github.com/repos/trinodb/trino/labels/cla-signed",
                        "name": "cla-signed",
                        "color": "ededed",
                        "default": false,
                        "description": null
                    }
                ],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/trinodb/trino/pulls/15337/commits",
                "review_comments_url": "https://api.github.com/repos/trinodb/trino/pulls/15337/comments",
                "review_comment_url": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/trinodb/trino/issues/15337/comments",
                "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/a3ff14606d70a46f592dbdd56eb32cb71a79ef91",
                "head": {
                    "label": "metadaddy:fix-formatdatarate-test",
                    "ref": "fix-formatdatarate-test",
                    "sha": "a3ff14606d70a46f592dbdd56eb32cb71a79ef91",
                    "user": {
                        "login": "metadaddy",
                        "id": 723517,
                        "node_id": "MDQ6VXNlcjcyMzUxNw==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/metadaddy",
                        "html_url": "https://github.com/metadaddy",
                        "followers_url": "https://api.github.com/users/metadaddy/followers",
                        "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                        "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                        "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                        "repos_url": "https://api.github.com/users/metadaddy/repos",
                        "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 509274784,
                        "node_id": "R_kgDOHlrqoA",
                        "name": "trino",
                        "full_name": "metadaddy/trino",
                        "private": false,
                        "owner": {
                            "login": "metadaddy",
                            "id": 723517,
                            "node_id": "MDQ6VXNlcjcyMzUxNw==",
                            "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/metadaddy",
                            "html_url": "https://github.com/metadaddy",
                            "followers_url": "https://api.github.com/users/metadaddy/followers",
                            "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                            "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                            "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                            "repos_url": "https://api.github.com/users/metadaddy/repos",
                            "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/metadaddy/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": true,
                        "url": "https://api.github.com/repos/metadaddy/trino",
                        "forks_url": "https://api.github.com/repos/metadaddy/trino/forks",
                        "keys_url": "https://api.github.com/repos/metadaddy/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/metadaddy/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/metadaddy/trino/teams",
                        "hooks_url": "https://api.github.com/repos/metadaddy/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/metadaddy/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/metadaddy/trino/events",
                        "assignees_url": "https://api.github.com/repos/metadaddy/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/metadaddy/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/metadaddy/trino/tags",
                        "blobs_url": "https://api.github.com/repos/metadaddy/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/metadaddy/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/metadaddy/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/metadaddy/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/metadaddy/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/metadaddy/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/metadaddy/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/metadaddy/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/metadaddy/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/metadaddy/trino/subscription",
                        "commits_url": "https://api.github.com/repos/metadaddy/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/metadaddy/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/metadaddy/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/metadaddy/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/metadaddy/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/metadaddy/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/metadaddy/trino/merges",
                        "archive_url": "https://api.github.com/repos/metadaddy/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/metadaddy/trino/downloads",
                        "issues_url": "https://api.github.com/repos/metadaddy/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/metadaddy/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/metadaddy/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/metadaddy/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/metadaddy/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/metadaddy/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/metadaddy/trino/deployments",
                        "created_at": "2022-07-01T00:43:32Z",
                        "updated_at": "2022-07-06T01:44:20Z",
                        "pushed_at": "2022-12-08T02:39:50Z",
                        "git_url": "git://github.com/metadaddy/trino.git",
                        "ssh_url": "git@github.com:metadaddy/trino.git",
                        "clone_url": "https://github.com/metadaddy/trino.git",
                        "svn_url": "https://github.com/metadaddy/trino",
                        "homepage": "https://trino.io",
                        "size": 197784,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": "Java",
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "master"
                    }
                },
                "base": {
                    "label": "trinodb:master",
                    "ref": "master",
                    "sha": "81d1525c7b0d24433712957632c0895847a6788b",
                    "user": {
                        "login": "trinodb",
                        "id": 34147222,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                        "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/trinodb",
                        "html_url": "https://github.com/trinodb",
                        "followers_url": "https://api.github.com/users/trinodb/followers",
                        "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                        "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                        "organizations_url": "https://api.github.com/users/trinodb/orgs",
                        "repos_url": "https://api.github.com/users/trinodb/repos",
                        "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/trinodb/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 166515022,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNjY1MTUwMjI=",
                        "name": "trino",
                        "full_name": "trinodb/trino",
                        "private": false,
                        "owner": {
                            "login": "trinodb",
                            "id": 34147222,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/trinodb",
                            "html_url": "https://github.com/trinodb",
                            "followers_url": "https://api.github.com/users/trinodb/followers",
                            "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                            "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                            "organizations_url": "https://api.github.com/users/trinodb/orgs",
                            "repos_url": "https://api.github.com/users/trinodb/repos",
                            "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/trinodb/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/trinodb/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": false,
                        "url": "https://api.github.com/repos/trinodb/trino",
                        "forks_url": "https://api.github.com/repos/trinodb/trino/forks",
                        "keys_url": "https://api.github.com/repos/trinodb/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/trinodb/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/trinodb/trino/teams",
                        "hooks_url": "https://api.github.com/repos/trinodb/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/trinodb/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/trinodb/trino/events",
                        "assignees_url": "https://api.github.com/repos/trinodb/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/trinodb/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/trinodb/trino/tags",
                        "blobs_url": "https://api.github.com/repos/trinodb/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/trinodb/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/trinodb/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/trinodb/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/trinodb/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/trinodb/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/trinodb/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/trinodb/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/trinodb/trino/subscription",
                        "commits_url": "https://api.github.com/repos/trinodb/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/trinodb/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/trinodb/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/trinodb/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/trinodb/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/trinodb/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/trinodb/trino/merges",
                        "archive_url": "https://api.github.com/repos/trinodb/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/trinodb/trino/downloads",
                        "issues_url": "https://api.github.com/repos/trinodb/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/trinodb/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/trinodb/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/trinodb/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/trinodb/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/trinodb/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/trinodb/trino/deployments",
                        "created_at": "2019-01-19T06:38:14Z",
                        "updated_at": "2022-12-08T14:45:56Z",
                        "pushed_at": "2022-12-08T16:49:16Z",
                        "git_url": "git://github.com/trinodb/trino.git",
                        "ssh_url": "git@github.com:trinodb/trino.git",
                        "clone_url": "https://github.com/trinodb/trino.git",
                        "svn_url": "https://github.com/trinodb/trino",
                        "homepage": "https://trino.io",
                        "size": 198725,
                        "stargazers_count": 6805,
                        "watchers_count": 6805,
                        "language": "Java",
                        "has_issues": true,
                        "has_projects": false,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": true,
                        "forks_count": 2085,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 2089,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "analytics",
                            "big-data",
                            "data-science",
                            "database",
                            "databases",
                            "datalake",
                            "distributed-database",
                            "distributed-databases",
                            "distributed-systems",
                            "hadoop",
                            "hive",
                            "java",
                            "jdbc",
                            "presto",
                            "prestodb",
                            "query-engine",
                            "sql",
                            "trino"
                        ],
                        "visibility": "public",
                        "forks": 2085,
                        "open_issues": 2089,
                        "watchers": 6805,
                        "default_branch": "master"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337"
                    },
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15337"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15337"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15337/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/trinodb/trino/statuses/a3ff14606d70a46f592dbdd56eb32cb71a79ef91"
                    }
                },
                "author_association": "MEMBER",
                "auto_merge": null,
                "active_lock_reason": null
            }
        },
        "public": true,
        "created_at": "2022-12-08T17:09:13Z",
        "org": {
            "id": 34147222,
            "login": "trinodb",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/trinodb",
            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?"
        }
    },
    {
        "id": "25756941369",
        "type": "PullRequestReviewCommentEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 166515022,
            "name": "trinodb/trino",
            "url": "https://api.github.com/repos/trinodb/trino"
        },
        "payload": {
            "action": "created",
            "comment": {
                "url": "https://api.github.com/repos/trinodb/trino/pulls/comments/1043596066",
                "pull_request_review_id": 1210444969,
                "id": 1043596066,
                "node_id": "PRRC_kwDOCezRTs4-NAMi",
                "diff_hunk": "@@ -275,6 +275,9 @@ public void testFormatDataRate()\n         assertEquals(formatDataRate(DataSize.ofBytes(864000), Duration.valueOf(\"10d\"), true), \"1B/s\");\n         assertEquals(formatDataRate(DataSize.ofBytes(8640000), Duration.valueOf(\"10d\"), false), \"10B\");\n         assertEquals(formatDataRate(DataSize.ofBytes(8640000), Duration.valueOf(\"10d\"), true), \"10B/s\");\n+\n+        assertEquals(formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), false), \"0B\");",
                "path": "client/trino-cli/src/test/java/io/trino/cli/TestFormatUtils.java",
                "position": 5,
                "original_position": 5,
                "commit_id": "a3ff14606d70a46f592dbdd56eb32cb71a79ef91",
                "original_commit_id": "a3ff14606d70a46f592dbdd56eb32cb71a79ef91",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "I don't know; I'm simply honoring the intent of the original code written by @electrum ",
                "created_at": "2022-12-08T17:07:22Z",
                "updated_at": "2022-12-08T17:07:22Z",
                "html_url": "https://github.com/trinodb/trino/pull/15337#discussion_r1043596066",
                "pull_request_url": "https://api.github.com/repos/trinodb/trino/pulls/15337",
                "author_association": "MEMBER",
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/comments/1043596066"
                    },
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15337#discussion_r1043596066"
                    },
                    "pull_request": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337"
                    }
                },
                "reactions": {
                    "url": "https://api.github.com/repos/trinodb/trino/pulls/comments/1043596066/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "start_line": null,
                "original_start_line": null,
                "start_side": null,
                "line": 279,
                "original_line": 279,
                "side": "RIGHT",
                "in_reply_to_id": 1043145437
            },
            "pull_request": {
                "url": "https://api.github.com/repos/trinodb/trino/pulls/15337",
                "id": 1152104129,
                "node_id": "PR_kwDOCezRTs5Eq7bB",
                "html_url": "https://github.com/trinodb/trino/pull/15337",
                "diff_url": "https://github.com/trinodb/trino/pull/15337.diff",
                "patch_url": "https://github.com/trinodb/trino/pull/15337.patch",
                "issue_url": "https://api.github.com/repos/trinodb/trino/issues/15337",
                "number": 15337,
                "state": "open",
                "locked": false,
                "title": "Fix test for invalid rate in FormatUtils.formatDataRate()",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "<!-- Thank you for submitting a pull request! Find more information in our development guide at https://github.com/trinodb/trino/blob/master/.github/DEVELOPMENT.md and contact us on #dev in Slack. -->\r\n<!-- Provide an overview of the PR for maintainers and reviewers. -->\r\n## Description\r\n\r\n`FormatUtils.formatDataRate()` contains the following code:\r\n\r\n```java\r\nlong rate = Math.round(dataSize.toBytes() / duration.getValue(SECONDS));\r\nif (Double.isNaN(rate) || Double.isInfinite(rate)) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nThe test can never evaluate as `true`, since both functions will return false for any `long`.\r\n\r\nThe correct test is:\r\n\r\n```java\r\nif (rate == Long.MAX_VALUE) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nIt's not necessary to test for `Long.MIN_VALUE`, since neither `dataSize` nor `duration` can be negative.\r\n\r\n<!-- Provide details that would help an engineer who is unfamiliar with this part of the code. -->\r\n## Unit Test\r\n\r\nI added a new class, `TestFormatUtils` to test both this fix and the rest of `FormatUtils`. The tests for this change are:\r\n\r\n```java\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), false), \"0B\");\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), true), \"0B/s\");\r\n```\r\n\r\n<!-- Mark the appropriate option with an (x). Propose a release note if you can. -->\r\n## Release notes\r\n\r\n(x) This is not user-visible or docs only and no release notes are required.\r\n( ) Release notes are required, please propose a release note for me.\r\n( ) Release notes are required, with the following suggested text:\r\n\r\n## Related Issue\r\n\r\nFixes #13093",
                "created_at": "2022-12-07T17:54:40Z",
                "updated_at": "2022-12-08T17:07:22Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": "04709a71679326dfa2fa43ab44d4da90024bf8c7",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [
                    {
                        "id": 1202580151,
                        "node_id": "MDU6TGFiZWwxMjAyNTgwMTUx",
                        "url": "https://api.github.com/repos/trinodb/trino/labels/cla-signed",
                        "name": "cla-signed",
                        "color": "ededed",
                        "default": false,
                        "description": null
                    }
                ],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/trinodb/trino/pulls/15337/commits",
                "review_comments_url": "https://api.github.com/repos/trinodb/trino/pulls/15337/comments",
                "review_comment_url": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/trinodb/trino/issues/15337/comments",
                "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/a3ff14606d70a46f592dbdd56eb32cb71a79ef91",
                "head": {
                    "label": "metadaddy:fix-formatdatarate-test",
                    "ref": "fix-formatdatarate-test",
                    "sha": "a3ff14606d70a46f592dbdd56eb32cb71a79ef91",
                    "user": {
                        "login": "metadaddy",
                        "id": 723517,
                        "node_id": "MDQ6VXNlcjcyMzUxNw==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/metadaddy",
                        "html_url": "https://github.com/metadaddy",
                        "followers_url": "https://api.github.com/users/metadaddy/followers",
                        "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                        "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                        "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                        "repos_url": "https://api.github.com/users/metadaddy/repos",
                        "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 509274784,
                        "node_id": "R_kgDOHlrqoA",
                        "name": "trino",
                        "full_name": "metadaddy/trino",
                        "private": false,
                        "owner": {
                            "login": "metadaddy",
                            "id": 723517,
                            "node_id": "MDQ6VXNlcjcyMzUxNw==",
                            "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/metadaddy",
                            "html_url": "https://github.com/metadaddy",
                            "followers_url": "https://api.github.com/users/metadaddy/followers",
                            "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                            "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                            "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                            "repos_url": "https://api.github.com/users/metadaddy/repos",
                            "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/metadaddy/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": true,
                        "url": "https://api.github.com/repos/metadaddy/trino",
                        "forks_url": "https://api.github.com/repos/metadaddy/trino/forks",
                        "keys_url": "https://api.github.com/repos/metadaddy/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/metadaddy/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/metadaddy/trino/teams",
                        "hooks_url": "https://api.github.com/repos/metadaddy/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/metadaddy/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/metadaddy/trino/events",
                        "assignees_url": "https://api.github.com/repos/metadaddy/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/metadaddy/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/metadaddy/trino/tags",
                        "blobs_url": "https://api.github.com/repos/metadaddy/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/metadaddy/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/metadaddy/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/metadaddy/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/metadaddy/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/metadaddy/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/metadaddy/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/metadaddy/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/metadaddy/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/metadaddy/trino/subscription",
                        "commits_url": "https://api.github.com/repos/metadaddy/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/metadaddy/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/metadaddy/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/metadaddy/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/metadaddy/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/metadaddy/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/metadaddy/trino/merges",
                        "archive_url": "https://api.github.com/repos/metadaddy/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/metadaddy/trino/downloads",
                        "issues_url": "https://api.github.com/repos/metadaddy/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/metadaddy/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/metadaddy/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/metadaddy/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/metadaddy/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/metadaddy/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/metadaddy/trino/deployments",
                        "created_at": "2022-07-01T00:43:32Z",
                        "updated_at": "2022-07-06T01:44:20Z",
                        "pushed_at": "2022-12-08T02:39:50Z",
                        "git_url": "git://github.com/metadaddy/trino.git",
                        "ssh_url": "git@github.com:metadaddy/trino.git",
                        "clone_url": "https://github.com/metadaddy/trino.git",
                        "svn_url": "https://github.com/metadaddy/trino",
                        "homepage": "https://trino.io",
                        "size": 197784,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": "Java",
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "master"
                    }
                },
                "base": {
                    "label": "trinodb:master",
                    "ref": "master",
                    "sha": "81d1525c7b0d24433712957632c0895847a6788b",
                    "user": {
                        "login": "trinodb",
                        "id": 34147222,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                        "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/trinodb",
                        "html_url": "https://github.com/trinodb",
                        "followers_url": "https://api.github.com/users/trinodb/followers",
                        "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                        "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                        "organizations_url": "https://api.github.com/users/trinodb/orgs",
                        "repos_url": "https://api.github.com/users/trinodb/repos",
                        "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/trinodb/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 166515022,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNjY1MTUwMjI=",
                        "name": "trino",
                        "full_name": "trinodb/trino",
                        "private": false,
                        "owner": {
                            "login": "trinodb",
                            "id": 34147222,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/trinodb",
                            "html_url": "https://github.com/trinodb",
                            "followers_url": "https://api.github.com/users/trinodb/followers",
                            "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                            "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                            "organizations_url": "https://api.github.com/users/trinodb/orgs",
                            "repos_url": "https://api.github.com/users/trinodb/repos",
                            "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/trinodb/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/trinodb/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": false,
                        "url": "https://api.github.com/repos/trinodb/trino",
                        "forks_url": "https://api.github.com/repos/trinodb/trino/forks",
                        "keys_url": "https://api.github.com/repos/trinodb/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/trinodb/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/trinodb/trino/teams",
                        "hooks_url": "https://api.github.com/repos/trinodb/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/trinodb/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/trinodb/trino/events",
                        "assignees_url": "https://api.github.com/repos/trinodb/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/trinodb/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/trinodb/trino/tags",
                        "blobs_url": "https://api.github.com/repos/trinodb/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/trinodb/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/trinodb/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/trinodb/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/trinodb/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/trinodb/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/trinodb/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/trinodb/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/trinodb/trino/subscription",
                        "commits_url": "https://api.github.com/repos/trinodb/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/trinodb/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/trinodb/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/trinodb/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/trinodb/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/trinodb/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/trinodb/trino/merges",
                        "archive_url": "https://api.github.com/repos/trinodb/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/trinodb/trino/downloads",
                        "issues_url": "https://api.github.com/repos/trinodb/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/trinodb/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/trinodb/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/trinodb/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/trinodb/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/trinodb/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/trinodb/trino/deployments",
                        "created_at": "2019-01-19T06:38:14Z",
                        "updated_at": "2022-12-08T14:45:56Z",
                        "pushed_at": "2022-12-08T16:49:16Z",
                        "git_url": "git://github.com/trinodb/trino.git",
                        "ssh_url": "git@github.com:trinodb/trino.git",
                        "clone_url": "https://github.com/trinodb/trino.git",
                        "svn_url": "https://github.com/trinodb/trino",
                        "homepage": "https://trino.io",
                        "size": 198725,
                        "stargazers_count": 6805,
                        "watchers_count": 6805,
                        "language": "Java",
                        "has_issues": true,
                        "has_projects": false,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": true,
                        "forks_count": 2085,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 2089,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "analytics",
                            "big-data",
                            "data-science",
                            "database",
                            "databases",
                            "datalake",
                            "distributed-database",
                            "distributed-databases",
                            "distributed-systems",
                            "hadoop",
                            "hive",
                            "java",
                            "jdbc",
                            "presto",
                            "prestodb",
                            "query-engine",
                            "sql",
                            "trino"
                        ],
                        "visibility": "public",
                        "forks": 2085,
                        "open_issues": 2089,
                        "watchers": 6805,
                        "default_branch": "master"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337"
                    },
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15337"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15337"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15337/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/trinodb/trino/statuses/a3ff14606d70a46f592dbdd56eb32cb71a79ef91"
                    }
                },
                "author_association": "MEMBER",
                "auto_merge": null,
                "active_lock_reason": null
            }
        },
        "public": true,
        "created_at": "2022-12-08T17:07:22Z",
        "org": {
            "id": 34147222,
            "login": "trinodb",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/trinodb",
            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?"
        }
    },
    {
        "id": "25756941304",
        "type": "PullRequestReviewEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 166515022,
            "name": "trinodb/trino",
            "url": "https://api.github.com/repos/trinodb/trino"
        },
        "payload": {
            "action": "created",
            "review": {
                "id": 1210444969,
                "node_id": "PRR_kwDOCezRTs5IJeyp",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": null,
                "commit_id": "a3ff14606d70a46f592dbdd56eb32cb71a79ef91",
                "submitted_at": "2022-12-08T17:07:22Z",
                "state": "commented",
                "html_url": "https://github.com/trinodb/trino/pull/15337#pullrequestreview-1210444969",
                "pull_request_url": "https://api.github.com/repos/trinodb/trino/pulls/15337",
                "author_association": "MEMBER",
                "_links": {
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15337#pullrequestreview-1210444969"
                    },
                    "pull_request": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337"
                    }
                }
            },
            "pull_request": {
                "url": "https://api.github.com/repos/trinodb/trino/pulls/15337",
                "id": 1152104129,
                "node_id": "PR_kwDOCezRTs5Eq7bB",
                "html_url": "https://github.com/trinodb/trino/pull/15337",
                "diff_url": "https://github.com/trinodb/trino/pull/15337.diff",
                "patch_url": "https://github.com/trinodb/trino/pull/15337.patch",
                "issue_url": "https://api.github.com/repos/trinodb/trino/issues/15337",
                "number": 15337,
                "state": "open",
                "locked": false,
                "title": "Fix test for invalid rate in FormatUtils.formatDataRate()",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "<!-- Thank you for submitting a pull request! Find more information in our development guide at https://github.com/trinodb/trino/blob/master/.github/DEVELOPMENT.md and contact us on #dev in Slack. -->\r\n<!-- Provide an overview of the PR for maintainers and reviewers. -->\r\n## Description\r\n\r\n`FormatUtils.formatDataRate()` contains the following code:\r\n\r\n```java\r\nlong rate = Math.round(dataSize.toBytes() / duration.getValue(SECONDS));\r\nif (Double.isNaN(rate) || Double.isInfinite(rate)) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nThe test can never evaluate as `true`, since both functions will return false for any `long`.\r\n\r\nThe correct test is:\r\n\r\n```java\r\nif (rate == Long.MAX_VALUE) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nIt's not necessary to test for `Long.MIN_VALUE`, since neither `dataSize` nor `duration` can be negative.\r\n\r\n<!-- Provide details that would help an engineer who is unfamiliar with this part of the code. -->\r\n## Unit Test\r\n\r\nI added a new class, `TestFormatUtils` to test both this fix and the rest of `FormatUtils`. The tests for this change are:\r\n\r\n```java\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), false), \"0B\");\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), true), \"0B/s\");\r\n```\r\n\r\n<!-- Mark the appropriate option with an (x). Propose a release note if you can. -->\r\n## Release notes\r\n\r\n(x) This is not user-visible or docs only and no release notes are required.\r\n( ) Release notes are required, please propose a release note for me.\r\n( ) Release notes are required, with the following suggested text:\r\n\r\n## Related Issue\r\n\r\nFixes #13093",
                "created_at": "2022-12-07T17:54:40Z",
                "updated_at": "2022-12-08T17:07:22Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": "04709a71679326dfa2fa43ab44d4da90024bf8c7",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [
                    {
                        "id": 1202580151,
                        "node_id": "MDU6TGFiZWwxMjAyNTgwMTUx",
                        "url": "https://api.github.com/repos/trinodb/trino/labels/cla-signed",
                        "name": "cla-signed",
                        "color": "ededed",
                        "default": false,
                        "description": null
                    }
                ],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/trinodb/trino/pulls/15337/commits",
                "review_comments_url": "https://api.github.com/repos/trinodb/trino/pulls/15337/comments",
                "review_comment_url": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/trinodb/trino/issues/15337/comments",
                "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/a3ff14606d70a46f592dbdd56eb32cb71a79ef91",
                "head": {
                    "label": "metadaddy:fix-formatdatarate-test",
                    "ref": "fix-formatdatarate-test",
                    "sha": "a3ff14606d70a46f592dbdd56eb32cb71a79ef91",
                    "user": {
                        "login": "metadaddy",
                        "id": 723517,
                        "node_id": "MDQ6VXNlcjcyMzUxNw==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/metadaddy",
                        "html_url": "https://github.com/metadaddy",
                        "followers_url": "https://api.github.com/users/metadaddy/followers",
                        "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                        "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                        "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                        "repos_url": "https://api.github.com/users/metadaddy/repos",
                        "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 509274784,
                        "node_id": "R_kgDOHlrqoA",
                        "name": "trino",
                        "full_name": "metadaddy/trino",
                        "private": false,
                        "owner": {
                            "login": "metadaddy",
                            "id": 723517,
                            "node_id": "MDQ6VXNlcjcyMzUxNw==",
                            "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/metadaddy",
                            "html_url": "https://github.com/metadaddy",
                            "followers_url": "https://api.github.com/users/metadaddy/followers",
                            "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                            "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                            "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                            "repos_url": "https://api.github.com/users/metadaddy/repos",
                            "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/metadaddy/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": true,
                        "url": "https://api.github.com/repos/metadaddy/trino",
                        "forks_url": "https://api.github.com/repos/metadaddy/trino/forks",
                        "keys_url": "https://api.github.com/repos/metadaddy/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/metadaddy/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/metadaddy/trino/teams",
                        "hooks_url": "https://api.github.com/repos/metadaddy/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/metadaddy/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/metadaddy/trino/events",
                        "assignees_url": "https://api.github.com/repos/metadaddy/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/metadaddy/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/metadaddy/trino/tags",
                        "blobs_url": "https://api.github.com/repos/metadaddy/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/metadaddy/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/metadaddy/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/metadaddy/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/metadaddy/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/metadaddy/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/metadaddy/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/metadaddy/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/metadaddy/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/metadaddy/trino/subscription",
                        "commits_url": "https://api.github.com/repos/metadaddy/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/metadaddy/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/metadaddy/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/metadaddy/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/metadaddy/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/metadaddy/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/metadaddy/trino/merges",
                        "archive_url": "https://api.github.com/repos/metadaddy/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/metadaddy/trino/downloads",
                        "issues_url": "https://api.github.com/repos/metadaddy/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/metadaddy/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/metadaddy/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/metadaddy/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/metadaddy/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/metadaddy/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/metadaddy/trino/deployments",
                        "created_at": "2022-07-01T00:43:32Z",
                        "updated_at": "2022-07-06T01:44:20Z",
                        "pushed_at": "2022-12-08T02:39:50Z",
                        "git_url": "git://github.com/metadaddy/trino.git",
                        "ssh_url": "git@github.com:metadaddy/trino.git",
                        "clone_url": "https://github.com/metadaddy/trino.git",
                        "svn_url": "https://github.com/metadaddy/trino",
                        "homepage": "https://trino.io",
                        "size": 197784,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": "Java",
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "master"
                    }
                },
                "base": {
                    "label": "trinodb:master",
                    "ref": "master",
                    "sha": "81d1525c7b0d24433712957632c0895847a6788b",
                    "user": {
                        "login": "trinodb",
                        "id": 34147222,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                        "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/trinodb",
                        "html_url": "https://github.com/trinodb",
                        "followers_url": "https://api.github.com/users/trinodb/followers",
                        "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                        "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                        "organizations_url": "https://api.github.com/users/trinodb/orgs",
                        "repos_url": "https://api.github.com/users/trinodb/repos",
                        "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/trinodb/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 166515022,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNjY1MTUwMjI=",
                        "name": "trino",
                        "full_name": "trinodb/trino",
                        "private": false,
                        "owner": {
                            "login": "trinodb",
                            "id": 34147222,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/trinodb",
                            "html_url": "https://github.com/trinodb",
                            "followers_url": "https://api.github.com/users/trinodb/followers",
                            "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                            "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                            "organizations_url": "https://api.github.com/users/trinodb/orgs",
                            "repos_url": "https://api.github.com/users/trinodb/repos",
                            "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/trinodb/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/trinodb/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": false,
                        "url": "https://api.github.com/repos/trinodb/trino",
                        "forks_url": "https://api.github.com/repos/trinodb/trino/forks",
                        "keys_url": "https://api.github.com/repos/trinodb/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/trinodb/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/trinodb/trino/teams",
                        "hooks_url": "https://api.github.com/repos/trinodb/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/trinodb/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/trinodb/trino/events",
                        "assignees_url": "https://api.github.com/repos/trinodb/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/trinodb/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/trinodb/trino/tags",
                        "blobs_url": "https://api.github.com/repos/trinodb/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/trinodb/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/trinodb/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/trinodb/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/trinodb/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/trinodb/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/trinodb/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/trinodb/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/trinodb/trino/subscription",
                        "commits_url": "https://api.github.com/repos/trinodb/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/trinodb/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/trinodb/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/trinodb/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/trinodb/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/trinodb/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/trinodb/trino/merges",
                        "archive_url": "https://api.github.com/repos/trinodb/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/trinodb/trino/downloads",
                        "issues_url": "https://api.github.com/repos/trinodb/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/trinodb/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/trinodb/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/trinodb/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/trinodb/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/trinodb/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/trinodb/trino/deployments",
                        "created_at": "2019-01-19T06:38:14Z",
                        "updated_at": "2022-12-08T14:45:56Z",
                        "pushed_at": "2022-12-08T16:49:16Z",
                        "git_url": "git://github.com/trinodb/trino.git",
                        "ssh_url": "git@github.com:trinodb/trino.git",
                        "clone_url": "https://github.com/trinodb/trino.git",
                        "svn_url": "https://github.com/trinodb/trino",
                        "homepage": "https://trino.io",
                        "size": 198725,
                        "stargazers_count": 6805,
                        "watchers_count": 6805,
                        "language": "Java",
                        "has_issues": true,
                        "has_projects": false,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": true,
                        "forks_count": 2085,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 2089,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "analytics",
                            "big-data",
                            "data-science",
                            "database",
                            "databases",
                            "datalake",
                            "distributed-database",
                            "distributed-databases",
                            "distributed-systems",
                            "hadoop",
                            "hive",
                            "java",
                            "jdbc",
                            "presto",
                            "prestodb",
                            "query-engine",
                            "sql",
                            "trino"
                        ],
                        "visibility": "public",
                        "forks": 2085,
                        "open_issues": 2089,
                        "watchers": 6805,
                        "default_branch": "master"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337"
                    },
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15337"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15337"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15337/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/trinodb/trino/statuses/a3ff14606d70a46f592dbdd56eb32cb71a79ef91"
                    }
                },
                "author_association": "MEMBER",
                "auto_merge": null,
                "active_lock_reason": null
            }
        },
        "public": true,
        "created_at": "2022-12-08T17:07:23Z",
        "org": {
            "id": 34147222,
            "login": "trinodb",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/trinodb",
            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?"
        }
    },
    {
        "id": "25737801575",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 166515022,
            "name": "trinodb/trino",
            "url": "https://api.github.com/repos/trinodb/trino"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/trinodb/trino/issues/15337",
                "repository_url": "https://api.github.com/repos/trinodb/trino",
                "labels_url": "https://api.github.com/repos/trinodb/trino/issues/15337/labels{/name}",
                "comments_url": "https://api.github.com/repos/trinodb/trino/issues/15337/comments",
                "events_url": "https://api.github.com/repos/trinodb/trino/issues/15337/events",
                "html_url": "https://github.com/trinodb/trino/pull/15337",
                "id": 1482501542,
                "node_id": "PR_kwDOCezRTs5Eq7bB",
                "number": 15337,
                "title": "Fix test for invalid rate in FormatUtils.formatDataRate()",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 1202580151,
                        "node_id": "MDU6TGFiZWwxMjAyNTgwMTUx",
                        "url": "https://api.github.com/repos/trinodb/trino/labels/cla-signed",
                        "name": "cla-signed",
                        "color": "ededed",
                        "default": false,
                        "description": null
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 2,
                "created_at": "2022-12-07T17:54:40Z",
                "updated_at": "2022-12-08T02:41:07Z",
                "closed_at": null,
                "author_association": "MEMBER",
                "active_lock_reason": null,
                "draft": false,
                "pull_request": {
                    "url": "https://api.github.com/repos/trinodb/trino/pulls/15337",
                    "html_url": "https://github.com/trinodb/trino/pull/15337",
                    "diff_url": "https://github.com/trinodb/trino/pull/15337.diff",
                    "patch_url": "https://github.com/trinodb/trino/pull/15337.patch",
                    "merged_at": null
                },
                "body": "<!-- Thank you for submitting a pull request! Find more information in our development guide at https://github.com/trinodb/trino/blob/master/.github/DEVELOPMENT.md and contact us on #dev in Slack. -->\r\n<!-- Provide an overview of the PR for maintainers and reviewers. -->\r\n## Description\r\n\r\n`FormatUtils.formatDataRate()` contains the following code:\r\n\r\n```java\r\nlong rate = Math.round(dataSize.toBytes() / duration.getValue(SECONDS));\r\nif (Double.isNaN(rate) || Double.isInfinite(rate)) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nThe test can never evaluate as `true`, since both functions will return false for any `long`.\r\n\r\nThe correct test is:\r\n\r\n```java\r\nif (rate == Long.MAX_VALUE) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nIt's not necessary to test for `Long.MIN_VALUE`, since neither `dataSize` nor `duration` can be negative.\r\n\r\n<!-- Provide details that would help an engineer who is unfamiliar with this part of the code. -->\r\n## Unit Test\r\n\r\nI added a new class, `TestFormatUtils` to test both this fix and the rest of `FormatUtils`. The tests for this change are:\r\n\r\n```java\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), false), \"0B\");\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), true), \"0B/s\");\r\n```\r\n\r\n<!-- Mark the appropriate option with an (x). Propose a release note if you can. -->\r\n## Release notes\r\n\r\n(x) This is not user-visible or docs only and no release notes are required.\r\n( ) Release notes are required, please propose a release note for me.\r\n( ) Release notes are required, with the following suggested text:\r\n\r\n## Related Issue\r\n\r\nFixes #13093",
                "reactions": {
                    "url": "https://api.github.com/repos/trinodb/trino/issues/15337/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/trinodb/trino/issues/15337/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/trinodb/trino/issues/comments/1341901362",
                "html_url": "https://github.com/trinodb/trino/pull/15337#issuecomment-1341901362",
                "issue_url": "https://api.github.com/repos/trinodb/trino/issues/15337",
                "id": 1341901362,
                "node_id": "IC_kwDOCezRTs5P-8oy",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2022-12-08T02:41:07Z",
                "updated_at": "2022-12-08T02:41:07Z",
                "author_association": "MEMBER",
                "body": "@findepi I refactored to two commits and force-pushed them. Let me know if you need two PRs.",
                "reactions": {
                    "url": "https://api.github.com/repos/trinodb/trino/issues/comments/1341901362/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2022-12-08T02:41:07Z",
        "org": {
            "id": 34147222,
            "login": "trinodb",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/trinodb",
            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?"
        }
    },
    {
        "id": "25737784762",
        "type": "PushEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 509274784,
            "name": "metadaddy/trino",
            "url": "https://api.github.com/repos/metadaddy/trino"
        },
        "payload": {
            "push_id": 11922596404,
            "size": 2,
            "distinct_size": 2,
            "ref": "refs/heads/fix-formatdatarate-test",
            "head": "a3ff14606d70a46f592dbdd56eb32cb71a79ef91",
            "before": "5253041f76469008e04dae2c0ad6a7d441d6c172",
            "commits": [
                {
                    "sha": "6d2d433c8702a2a03ae56140ccdc0bcc5cc5ba2a",
                    "author": {
                        "email": "pat@backblaze.com",
                        "name": "Pat Patterson"
                    },
                    "message": "Add TestFormatUtils to test FormatUtils methods",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/6d2d433c8702a2a03ae56140ccdc0bcc5cc5ba2a"
                },
                {
                    "sha": "a3ff14606d70a46f592dbdd56eb32cb71a79ef91",
                    "author": {
                        "email": "pat@backblaze.com",
                        "name": "Pat Patterson"
                    },
                    "message": "Fix check for invalid rate in FormatUtils.formatDataRate()",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/a3ff14606d70a46f592dbdd56eb32cb71a79ef91"
                }
            ]
        },
        "public": true,
        "created_at": "2022-12-08T02:39:51Z"
    },
    {
        "id": "25737456005",
        "type": "PushEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 509274784,
            "name": "metadaddy/trino",
            "url": "https://api.github.com/repos/metadaddy/trino"
        },
        "payload": {
            "push_id": 11922434692,
            "size": 97,
            "distinct_size": 1,
            "ref": "refs/heads/fix-formatdatarate-test",
            "head": "5253041f76469008e04dae2c0ad6a7d441d6c172",
            "before": "f88ba0cee83615211a54a7351df5656d7688ae1c",
            "commits": [
                {
                    "sha": "712ce5c988497dfbad25c9c031f9ce4159b2d68a",
                    "author": {
                        "email": "andriyrosa@gmail.com",
                        "name": "Andrii Rosa"
                    },
                    "message": "Remove preserve-input-partitions-in-write-stage config\n\nPartition should never be merged for the write stage given a risk of\nrunning into the maximum number of partitions limit enforced by writers",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/712ce5c988497dfbad25c9c031f9ce4159b2d68a"
                },
                {
                    "sha": "d47e28fd7c5831b822de11530f7e4f7448941b05",
                    "author": {
                        "email": "andriyrosa@gmail.com",
                        "name": "Andrii Rosa"
                    },
                    "message": "Allow optimize in Hive to be run with FTE",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/d47e28fd7c5831b822de11530f7e4f7448941b05"
                },
                {
                    "sha": "e292e1122bd056a0de592f0ffe7e9a0068341265",
                    "author": {
                        "email": "andriyrosa@gmail.com",
                        "name": "Andrii Rosa"
                    },
                    "message": "Provide partitioning layout for execute in Hive",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/e292e1122bd056a0de592f0ffe7e9a0068341265"
                },
                {
                    "sha": "993352b89be36393a1e0cd34d0c7067ac4f150c7",
                    "author": {
                        "email": "andriyrosa@gmail.com",
                        "name": "Andrii Rosa"
                    },
                    "message": "Refactor TestHashDistributionSplitAssigner\n\nExtract helper classes to avoid methods with too many arguments",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/993352b89be36393a1e0cd34d0c7067ac4f150c7"
                },
                {
                    "sha": "1ccb40a4989f8d4bccea4b6019af4f6e9792d290",
                    "author": {
                        "email": "andriyrosa@gmail.com",
                        "name": "Andrii Rosa"
                    },
                    "message": "Ensure partition id can't get re-assigned",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/1ccb40a4989f8d4bccea4b6019af4f6e9792d290"
                },
                {
                    "sha": "9982da3837fcfa8a831c3b9f0872713dc915b4a3",
                    "author": {
                        "email": "andriyrosa@gmail.com",
                        "name": "Andrii Rosa"
                    },
                    "message": "Enable preferred write partitioning for FTE by default\n\nImplement skew mitigation to avoid running into low write concurrency\nwhen the number of output partitions is small",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/9982da3837fcfa8a831c3b9f0872713dc915b4a3"
                },
                {
                    "sha": "3cf8e92363b9a54866cf8427bfd00f92e011631d",
                    "author": {
                        "email": "ebyhry@gmail.com",
                        "name": "Yuya Ebihara"
                    },
                    "message": "Rename TestMongoConnectorTest temporarily\n\nThis is a preparatory commit for the next commit.",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/3cf8e92363b9a54866cf8427bfd00f92e011631d"
                },
                {
                    "sha": "6f49c4d343988347286c42a80d27199eef156b5c",
                    "author": {
                        "email": "ebyhry@gmail.com",
                        "name": "Yuya Ebihara"
                    },
                    "message": "Remove redundant BaseMongoConnectorTest",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/6f49c4d343988347286c42a80d27199eef156b5c"
                },
                {
                    "sha": "1e3e7c730bd78f2ed0ab88b7c479a5a671280757",
                    "author": {
                        "email": "ebyhry@gmail.com",
                        "name": "Yuya Ebihara"
                    },
                    "message": "Improve error message when partitioning by nested fields in Iceberg",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/1e3e7c730bd78f2ed0ab88b7c479a5a671280757"
                },
                {
                    "sha": "ea24f811cc872987a4610d780d85d7def87eff07",
                    "author": {
                        "email": "napewnotrafi@gmail.com",
                        "name": "Karol Sobczak"
                    },
                    "message": "Embed Trino version in QueryInfo\n\nThis will help to diagnose issues quicker.",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/ea24f811cc872987a4610d780d85d7def87eff07"
                },
                {
                    "sha": "78abe76db0d34e69c490ffc93d8a26547b371b14",
                    "author": {
                        "email": "ebyhry@gmail.com",
                        "name": "Yuya Ebihara"
                    },
                    "message": "Don't start MongoDB server in TestMongoPlugin\n\nThere's no need to run MongoDB server in this test class.",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/78abe76db0d34e69c490ffc93d8a26547b371b14"
                },
                {
                    "sha": "77e7e2ba95ae354675eac2f99cb9e8b0687f31b6",
                    "author": {
                        "email": "ebyhry@gmail.com",
                        "name": "Yuya Ebihara"
                    },
                    "message": "Rename TLS configuration flag in MongoDB",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/77e7e2ba95ae354675eac2f99cb9e8b0687f31b6"
                },
                {
                    "sha": "bf0b6ee2d143318dc20ae8baac84d7aaac662e96",
                    "author": {
                        "email": "ebyhry@gmail.com",
                        "name": "Yuya Ebihara"
                    },
                    "message": "Add support for setting TLS context in MongoDB",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/bf0b6ee2d143318dc20ae8baac84d7aaac662e96"
                },
                {
                    "sha": "5f7ae2815c34fc2cc23a4dd58598b156cfc47a8f",
                    "author": {
                        "email": "neville.lyh@gmail.com",
                        "name": "Neville Li"
                    },
                    "message": "Add query.max-run-time.hard-limit\n\nCo-authored-by: Ashhar Hasan <hashhar_dev@outlook.com>",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/5f7ae2815c34fc2cc23a4dd58598b156cfc47a8f"
                },
                {
                    "sha": "9050471d7a7be673adbc850e2c43b11e69fd6fad",
                    "author": {
                        "email": "piotr.findeisen@gmail.com",
                        "name": "Piotr Findeisen"
                    },
                    "message": "Remove duplication in TestPostgreSqlTypeMapping\n\nReuse information provided for by `setUp()`.",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/9050471d7a7be673adbc850e2c43b11e69fd6fad"
                },
                {
                    "sha": "aff36e5aba0bff091aa030e775292bff35c25e6c",
                    "author": {
                        "email": "piotr.findeisen@gmail.com",
                        "name": "Piotr Findeisen"
                    },
                    "message": "Remove redundant test case from `testArrayEmptyOrNulls`\n\nCovered by first test case in `testArray`",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/aff36e5aba0bff091aa030e775292bff35c25e6c"
                },
                {
                    "sha": "9e31f4aea17f0476df47923d38e1ea62f0657ddd",
                    "author": {
                        "email": "piotr.findeisen@gmail.com",
                        "name": "Piotr Findeisen"
                    },
                    "message": "Comment on jdbc.columns values\n\nMake it easier to map values to columns.",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/9e31f4aea17f0476df47923d38e1ea62f0657ddd"
                },
                {
                    "sha": "a5d64cc59e03776e3e9635e23e8467348cbd8d70",
                    "author": {
                        "email": "piotr.findeisen@gmail.com",
                        "name": "Piotr Findeisen"
                    },
                    "message": "Fix DatabaseMetaData.getColumns nullability inconsistency\n\n`DatabaseMetaData.getColumns` reports nullability in two result columns\n\n- NULLABLE, a number (0, 1, 2)\n- IS_NULLABLE, a varchar column (\"YES\", \"NO\", \"\")\n\nThis fixes the `TrinoDatabaseMetaData` so that information returned in\nthose two ways is consistent.",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/a5d64cc59e03776e3e9635e23e8467348cbd8d70"
                },
                {
                    "sha": "79d19de926220563f890fca462bdf2cbaaadfc45",
                    "author": {
                        "email": "napewnotrafi@gmail.com",
                        "name": "Karol Sobczak"
                    },
                    "message": "Print Trino version to EXPLAIN ANALYZE VERBOSE\n\nOutput of EXPLAIN ANALYZE VERBOSE is often\nshared for troubleshooting therefore it's\nuseful to print Trino version there.\n\n-----------------------------------------------------------\n Trino version: dev\n Fragment 1 [SINGLE]\n     Output layout: [orderkey, custkey, count, sum_4, avg]\n     Output partitioning: SINGLE []",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/79d19de926220563f890fca462bdf2cbaaadfc45"
                },
                {
                    "sha": "c0febf4bf6b03abd1289febe08a56e40518a9cbb",
                    "author": {
                        "email": "napewnotrafi@gmail.com",
                        "name": "Karol Sobczak"
                    },
                    "message": "Increase Parquet page max positions",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/c0febf4bf6b03abd1289febe08a56e40518a9cbb"
                }
            ]
        },
        "public": true,
        "created_at": "2022-12-08T02:17:12Z"
    },
    {
        "id": "25737426813",
        "type": "PushEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 509274784,
            "name": "metadaddy/trino",
            "url": "https://api.github.com/repos/metadaddy/trino"
        },
        "payload": {
            "push_id": 11922420838,
            "size": 96,
            "distinct_size": 96,
            "ref": "refs/heads/master",
            "head": "81d1525c7b0d24433712957632c0895847a6788b",
            "before": "861d51c8b8047d43f017e887231edf01d1561c65",
            "commits": [
                {
                    "sha": "712ce5c988497dfbad25c9c031f9ce4159b2d68a",
                    "author": {
                        "email": "andriyrosa@gmail.com",
                        "name": "Andrii Rosa"
                    },
                    "message": "Remove preserve-input-partitions-in-write-stage config\n\nPartition should never be merged for the write stage given a risk of\nrunning into the maximum number of partitions limit enforced by writers",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/712ce5c988497dfbad25c9c031f9ce4159b2d68a"
                },
                {
                    "sha": "d47e28fd7c5831b822de11530f7e4f7448941b05",
                    "author": {
                        "email": "andriyrosa@gmail.com",
                        "name": "Andrii Rosa"
                    },
                    "message": "Allow optimize in Hive to be run with FTE",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/d47e28fd7c5831b822de11530f7e4f7448941b05"
                },
                {
                    "sha": "e292e1122bd056a0de592f0ffe7e9a0068341265",
                    "author": {
                        "email": "andriyrosa@gmail.com",
                        "name": "Andrii Rosa"
                    },
                    "message": "Provide partitioning layout for execute in Hive",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/e292e1122bd056a0de592f0ffe7e9a0068341265"
                },
                {
                    "sha": "993352b89be36393a1e0cd34d0c7067ac4f150c7",
                    "author": {
                        "email": "andriyrosa@gmail.com",
                        "name": "Andrii Rosa"
                    },
                    "message": "Refactor TestHashDistributionSplitAssigner\n\nExtract helper classes to avoid methods with too many arguments",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/993352b89be36393a1e0cd34d0c7067ac4f150c7"
                },
                {
                    "sha": "1ccb40a4989f8d4bccea4b6019af4f6e9792d290",
                    "author": {
                        "email": "andriyrosa@gmail.com",
                        "name": "Andrii Rosa"
                    },
                    "message": "Ensure partition id can't get re-assigned",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/1ccb40a4989f8d4bccea4b6019af4f6e9792d290"
                },
                {
                    "sha": "9982da3837fcfa8a831c3b9f0872713dc915b4a3",
                    "author": {
                        "email": "andriyrosa@gmail.com",
                        "name": "Andrii Rosa"
                    },
                    "message": "Enable preferred write partitioning for FTE by default\n\nImplement skew mitigation to avoid running into low write concurrency\nwhen the number of output partitions is small",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/9982da3837fcfa8a831c3b9f0872713dc915b4a3"
                },
                {
                    "sha": "3cf8e92363b9a54866cf8427bfd00f92e011631d",
                    "author": {
                        "email": "ebyhry@gmail.com",
                        "name": "Yuya Ebihara"
                    },
                    "message": "Rename TestMongoConnectorTest temporarily\n\nThis is a preparatory commit for the next commit.",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/3cf8e92363b9a54866cf8427bfd00f92e011631d"
                },
                {
                    "sha": "6f49c4d343988347286c42a80d27199eef156b5c",
                    "author": {
                        "email": "ebyhry@gmail.com",
                        "name": "Yuya Ebihara"
                    },
                    "message": "Remove redundant BaseMongoConnectorTest",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/6f49c4d343988347286c42a80d27199eef156b5c"
                },
                {
                    "sha": "1e3e7c730bd78f2ed0ab88b7c479a5a671280757",
                    "author": {
                        "email": "ebyhry@gmail.com",
                        "name": "Yuya Ebihara"
                    },
                    "message": "Improve error message when partitioning by nested fields in Iceberg",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/1e3e7c730bd78f2ed0ab88b7c479a5a671280757"
                },
                {
                    "sha": "ea24f811cc872987a4610d780d85d7def87eff07",
                    "author": {
                        "email": "napewnotrafi@gmail.com",
                        "name": "Karol Sobczak"
                    },
                    "message": "Embed Trino version in QueryInfo\n\nThis will help to diagnose issues quicker.",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/ea24f811cc872987a4610d780d85d7def87eff07"
                },
                {
                    "sha": "78abe76db0d34e69c490ffc93d8a26547b371b14",
                    "author": {
                        "email": "ebyhry@gmail.com",
                        "name": "Yuya Ebihara"
                    },
                    "message": "Don't start MongoDB server in TestMongoPlugin\n\nThere's no need to run MongoDB server in this test class.",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/78abe76db0d34e69c490ffc93d8a26547b371b14"
                },
                {
                    "sha": "77e7e2ba95ae354675eac2f99cb9e8b0687f31b6",
                    "author": {
                        "email": "ebyhry@gmail.com",
                        "name": "Yuya Ebihara"
                    },
                    "message": "Rename TLS configuration flag in MongoDB",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/77e7e2ba95ae354675eac2f99cb9e8b0687f31b6"
                },
                {
                    "sha": "bf0b6ee2d143318dc20ae8baac84d7aaac662e96",
                    "author": {
                        "email": "ebyhry@gmail.com",
                        "name": "Yuya Ebihara"
                    },
                    "message": "Add support for setting TLS context in MongoDB",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/bf0b6ee2d143318dc20ae8baac84d7aaac662e96"
                },
                {
                    "sha": "5f7ae2815c34fc2cc23a4dd58598b156cfc47a8f",
                    "author": {
                        "email": "neville.lyh@gmail.com",
                        "name": "Neville Li"
                    },
                    "message": "Add query.max-run-time.hard-limit\n\nCo-authored-by: Ashhar Hasan <hashhar_dev@outlook.com>",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/5f7ae2815c34fc2cc23a4dd58598b156cfc47a8f"
                },
                {
                    "sha": "9050471d7a7be673adbc850e2c43b11e69fd6fad",
                    "author": {
                        "email": "piotr.findeisen@gmail.com",
                        "name": "Piotr Findeisen"
                    },
                    "message": "Remove duplication in TestPostgreSqlTypeMapping\n\nReuse information provided for by `setUp()`.",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/9050471d7a7be673adbc850e2c43b11e69fd6fad"
                },
                {
                    "sha": "aff36e5aba0bff091aa030e775292bff35c25e6c",
                    "author": {
                        "email": "piotr.findeisen@gmail.com",
                        "name": "Piotr Findeisen"
                    },
                    "message": "Remove redundant test case from `testArrayEmptyOrNulls`\n\nCovered by first test case in `testArray`",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/aff36e5aba0bff091aa030e775292bff35c25e6c"
                },
                {
                    "sha": "9e31f4aea17f0476df47923d38e1ea62f0657ddd",
                    "author": {
                        "email": "piotr.findeisen@gmail.com",
                        "name": "Piotr Findeisen"
                    },
                    "message": "Comment on jdbc.columns values\n\nMake it easier to map values to columns.",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/9e31f4aea17f0476df47923d38e1ea62f0657ddd"
                },
                {
                    "sha": "a5d64cc59e03776e3e9635e23e8467348cbd8d70",
                    "author": {
                        "email": "piotr.findeisen@gmail.com",
                        "name": "Piotr Findeisen"
                    },
                    "message": "Fix DatabaseMetaData.getColumns nullability inconsistency\n\n`DatabaseMetaData.getColumns` reports nullability in two result columns\n\n- NULLABLE, a number (0, 1, 2)\n- IS_NULLABLE, a varchar column (\"YES\", \"NO\", \"\")\n\nThis fixes the `TrinoDatabaseMetaData` so that information returned in\nthose two ways is consistent.",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/a5d64cc59e03776e3e9635e23e8467348cbd8d70"
                },
                {
                    "sha": "79d19de926220563f890fca462bdf2cbaaadfc45",
                    "author": {
                        "email": "napewnotrafi@gmail.com",
                        "name": "Karol Sobczak"
                    },
                    "message": "Print Trino version to EXPLAIN ANALYZE VERBOSE\n\nOutput of EXPLAIN ANALYZE VERBOSE is often\nshared for troubleshooting therefore it's\nuseful to print Trino version there.\n\n-----------------------------------------------------------\n Trino version: dev\n Fragment 1 [SINGLE]\n     Output layout: [orderkey, custkey, count, sum_4, avg]\n     Output partitioning: SINGLE []",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/79d19de926220563f890fca462bdf2cbaaadfc45"
                },
                {
                    "sha": "c0febf4bf6b03abd1289febe08a56e40518a9cbb",
                    "author": {
                        "email": "napewnotrafi@gmail.com",
                        "name": "Karol Sobczak"
                    },
                    "message": "Increase Parquet page max positions",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/c0febf4bf6b03abd1289febe08a56e40518a9cbb"
                }
            ]
        },
        "public": true,
        "created_at": "2022-12-08T02:15:29Z"
    },
    {
        "id": "25737194487",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 166515022,
            "name": "trinodb/trino",
            "url": "https://api.github.com/repos/trinodb/trino"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/trinodb/trino/issues/15337",
                "repository_url": "https://api.github.com/repos/trinodb/trino",
                "labels_url": "https://api.github.com/repos/trinodb/trino/issues/15337/labels{/name}",
                "comments_url": "https://api.github.com/repos/trinodb/trino/issues/15337/comments",
                "events_url": "https://api.github.com/repos/trinodb/trino/issues/15337/events",
                "html_url": "https://github.com/trinodb/trino/pull/15337",
                "id": 1482501542,
                "node_id": "PR_kwDOCezRTs5Eq7bB",
                "number": 15337,
                "title": "Fix test for invalid rate in FormatUtils.formatDataRate()",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 1202580151,
                        "node_id": "MDU6TGFiZWwxMjAyNTgwMTUx",
                        "url": "https://api.github.com/repos/trinodb/trino/labels/cla-signed",
                        "name": "cla-signed",
                        "color": "ededed",
                        "default": false,
                        "description": null
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 1,
                "created_at": "2022-12-07T17:54:40Z",
                "updated_at": "2022-12-08T02:01:53Z",
                "closed_at": null,
                "author_association": "MEMBER",
                "active_lock_reason": null,
                "draft": false,
                "pull_request": {
                    "url": "https://api.github.com/repos/trinodb/trino/pulls/15337",
                    "html_url": "https://github.com/trinodb/trino/pull/15337",
                    "diff_url": "https://github.com/trinodb/trino/pull/15337.diff",
                    "patch_url": "https://github.com/trinodb/trino/pull/15337.patch",
                    "merged_at": null
                },
                "body": "<!-- Thank you for submitting a pull request! Find more information in our development guide at https://github.com/trinodb/trino/blob/master/.github/DEVELOPMENT.md and contact us on #dev in Slack. -->\r\n<!-- Provide an overview of the PR for maintainers and reviewers. -->\r\n## Description\r\n\r\n`FormatUtils.formatDataRate()` contains the following code:\r\n\r\n```java\r\nlong rate = Math.round(dataSize.toBytes() / duration.getValue(SECONDS));\r\nif (Double.isNaN(rate) || Double.isInfinite(rate)) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nThe test can never evaluate as `true`, since both functions will return false for any `long`.\r\n\r\nThe correct test is:\r\n\r\n```java\r\nif (rate == Long.MAX_VALUE) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nIt's not necessary to test for `Long.MIN_VALUE`, since neither `dataSize` nor `duration` can be negative.\r\n\r\n<!-- Provide details that would help an engineer who is unfamiliar with this part of the code. -->\r\n## Unit Test\r\n\r\nI added a new class, `TestFormatUtils` to test both this fix and the rest of `FormatUtils`. The tests for this change are:\r\n\r\n```java\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), false), \"0B\");\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), true), \"0B/s\");\r\n```\r\n\r\n<!-- Mark the appropriate option with an (x). Propose a release note if you can. -->\r\n## Release notes\r\n\r\n(x) This is not user-visible or docs only and no release notes are required.\r\n( ) Release notes are required, please propose a release note for me.\r\n( ) Release notes are required, with the following suggested text:\r\n\r\n## Related Issue\r\n\r\nFixes #13093",
                "reactions": {
                    "url": "https://api.github.com/repos/trinodb/trino/issues/15337/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/trinodb/trino/issues/15337/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/trinodb/trino/issues/comments/1341868451",
                "html_url": "https://github.com/trinodb/trino/pull/15337#issuecomment-1341868451",
                "issue_url": "https://api.github.com/repos/trinodb/trino/issues/15337",
                "id": 1341868451,
                "node_id": "IC_kwDOCezRTs5P-0mj",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2022-12-08T02:01:53Z",
                "updated_at": "2022-12-08T02:01:53Z",
                "author_association": "MEMBER",
                "body": "Thanks for the reviews! I've made the suggested changes; @findepi - just let me know whether you're looking for two PRs, or one PR with two commits and I'll do another push.",
                "reactions": {
                    "url": "https://api.github.com/repos/trinodb/trino/issues/comments/1341868451/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2022-12-08T02:01:54Z",
        "org": {
            "id": 34147222,
            "login": "trinodb",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/trinodb",
            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?"
        }
    },
    {
        "id": "25737166211",
        "type": "PullRequestReviewCommentEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 166515022,
            "name": "trinodb/trino",
            "url": "https://api.github.com/repos/trinodb/trino"
        },
        "payload": {
            "action": "created",
            "comment": {
                "url": "https://api.github.com/repos/trinodb/trino/pulls/comments/1042849726",
                "pull_request_review_id": 1209353709,
                "id": 1042849726,
                "node_id": "PRRC_kwDOCezRTs4-KJ--",
                "diff_hunk": "@@ -0,0 +1,353 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.trino.cli;\n+\n+import io.airlift.units.DataSize;\n+import io.airlift.units.Duration;\n+import org.testng.annotations.Test;\n+\n+import static org.testng.Assert.assertEquals;\n+\n+public class TestFormatUtils\n+{\n+    @Test\n+    public void testFormatCount()\n+    {\n+        assertEquals(FormatUtils.formatCount(1L), \"1\");",
                "path": "client/trino-cli/src/test/java/io/trino/cli/TestFormatUtils.java",
                "position": 27,
                "original_position": 27,
                "commit_id": "f88ba0cee83615211a54a7351df5656d7688ae1c",
                "original_commit_id": "f88ba0cee83615211a54a7351df5656d7688ae1c",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "done",
                "created_at": "2022-12-08T02:00:18Z",
                "updated_at": "2022-12-08T02:00:18Z",
                "html_url": "https://github.com/trinodb/trino/pull/15337#discussion_r1042849726",
                "pull_request_url": "https://api.github.com/repos/trinodb/trino/pulls/15337",
                "author_association": "MEMBER",
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/comments/1042849726"
                    },
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15337#discussion_r1042849726"
                    },
                    "pull_request": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337"
                    }
                },
                "reactions": {
                    "url": "https://api.github.com/repos/trinodb/trino/pulls/comments/1042849726/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "start_line": null,
                "original_start_line": null,
                "start_side": null,
                "line": 27,
                "original_line": 27,
                "side": "RIGHT",
                "in_reply_to_id": 1042708426
            },
            "pull_request": {
                "url": "https://api.github.com/repos/trinodb/trino/pulls/15337",
                "id": 1152104129,
                "node_id": "PR_kwDOCezRTs5Eq7bB",
                "html_url": "https://github.com/trinodb/trino/pull/15337",
                "diff_url": "https://github.com/trinodb/trino/pull/15337.diff",
                "patch_url": "https://github.com/trinodb/trino/pull/15337.patch",
                "issue_url": "https://api.github.com/repos/trinodb/trino/issues/15337",
                "number": 15337,
                "state": "open",
                "locked": false,
                "title": "Fix test for invalid rate in FormatUtils.formatDataRate()",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "<!-- Thank you for submitting a pull request! Find more information in our development guide at https://github.com/trinodb/trino/blob/master/.github/DEVELOPMENT.md and contact us on #dev in Slack. -->\r\n<!-- Provide an overview of the PR for maintainers and reviewers. -->\r\n## Description\r\n\r\n`FormatUtils.formatDataRate()` contains the following code:\r\n\r\n```java\r\nlong rate = Math.round(dataSize.toBytes() / duration.getValue(SECONDS));\r\nif (Double.isNaN(rate) || Double.isInfinite(rate)) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nThe test can never evaluate as `true`, since both functions will return false for any `long`.\r\n\r\nThe correct test is:\r\n\r\n```java\r\nif (rate == Long.MAX_VALUE) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nIt's not necessary to test for `Long.MIN_VALUE`, since neither `dataSize` nor `duration` can be negative.\r\n\r\n<!-- Provide details that would help an engineer who is unfamiliar with this part of the code. -->\r\n## Unit Test\r\n\r\nI added a new class, `TestFormatUtils` to test both this fix and the rest of `FormatUtils`. The tests for this change are:\r\n\r\n```java\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), false), \"0B\");\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), true), \"0B/s\");\r\n```\r\n\r\n<!-- Mark the appropriate option with an (x). Propose a release note if you can. -->\r\n## Release notes\r\n\r\n(x) This is not user-visible or docs only and no release notes are required.\r\n( ) Release notes are required, please propose a release note for me.\r\n( ) Release notes are required, with the following suggested text:\r\n\r\n## Related Issue\r\n\r\nFixes #13093",
                "created_at": "2022-12-07T17:54:40Z",
                "updated_at": "2022-12-08T02:00:18Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": "dd4eb7e24625655b4a60619dabe31785fb81f5ab",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [
                    {
                        "id": 1202580151,
                        "node_id": "MDU6TGFiZWwxMjAyNTgwMTUx",
                        "url": "https://api.github.com/repos/trinodb/trino/labels/cla-signed",
                        "name": "cla-signed",
                        "color": "ededed",
                        "default": false,
                        "description": null
                    }
                ],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/trinodb/trino/pulls/15337/commits",
                "review_comments_url": "https://api.github.com/repos/trinodb/trino/pulls/15337/comments",
                "review_comment_url": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/trinodb/trino/issues/15337/comments",
                "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/f88ba0cee83615211a54a7351df5656d7688ae1c",
                "head": {
                    "label": "metadaddy:fix-formatdatarate-test",
                    "ref": "fix-formatdatarate-test",
                    "sha": "f88ba0cee83615211a54a7351df5656d7688ae1c",
                    "user": {
                        "login": "metadaddy",
                        "id": 723517,
                        "node_id": "MDQ6VXNlcjcyMzUxNw==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/metadaddy",
                        "html_url": "https://github.com/metadaddy",
                        "followers_url": "https://api.github.com/users/metadaddy/followers",
                        "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                        "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                        "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                        "repos_url": "https://api.github.com/users/metadaddy/repos",
                        "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 509274784,
                        "node_id": "R_kgDOHlrqoA",
                        "name": "trino",
                        "full_name": "metadaddy/trino",
                        "private": false,
                        "owner": {
                            "login": "metadaddy",
                            "id": 723517,
                            "node_id": "MDQ6VXNlcjcyMzUxNw==",
                            "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/metadaddy",
                            "html_url": "https://github.com/metadaddy",
                            "followers_url": "https://api.github.com/users/metadaddy/followers",
                            "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                            "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                            "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                            "repos_url": "https://api.github.com/users/metadaddy/repos",
                            "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/metadaddy/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": true,
                        "url": "https://api.github.com/repos/metadaddy/trino",
                        "forks_url": "https://api.github.com/repos/metadaddy/trino/forks",
                        "keys_url": "https://api.github.com/repos/metadaddy/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/metadaddy/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/metadaddy/trino/teams",
                        "hooks_url": "https://api.github.com/repos/metadaddy/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/metadaddy/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/metadaddy/trino/events",
                        "assignees_url": "https://api.github.com/repos/metadaddy/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/metadaddy/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/metadaddy/trino/tags",
                        "blobs_url": "https://api.github.com/repos/metadaddy/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/metadaddy/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/metadaddy/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/metadaddy/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/metadaddy/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/metadaddy/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/metadaddy/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/metadaddy/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/metadaddy/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/metadaddy/trino/subscription",
                        "commits_url": "https://api.github.com/repos/metadaddy/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/metadaddy/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/metadaddy/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/metadaddy/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/metadaddy/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/metadaddy/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/metadaddy/trino/merges",
                        "archive_url": "https://api.github.com/repos/metadaddy/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/metadaddy/trino/downloads",
                        "issues_url": "https://api.github.com/repos/metadaddy/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/metadaddy/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/metadaddy/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/metadaddy/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/metadaddy/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/metadaddy/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/metadaddy/trino/deployments",
                        "created_at": "2022-07-01T00:43:32Z",
                        "updated_at": "2022-07-06T01:44:20Z",
                        "pushed_at": "2022-12-07T17:50:11Z",
                        "git_url": "git://github.com/metadaddy/trino.git",
                        "ssh_url": "git@github.com:metadaddy/trino.git",
                        "clone_url": "https://github.com/metadaddy/trino.git",
                        "svn_url": "https://github.com/metadaddy/trino",
                        "homepage": "https://trino.io",
                        "size": 192363,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": "Java",
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "master"
                    }
                },
                "base": {
                    "label": "trinodb:master",
                    "ref": "master",
                    "sha": "4b266700437a87236ad0e0e5cd1db866f4f76dcb",
                    "user": {
                        "login": "trinodb",
                        "id": 34147222,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                        "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/trinodb",
                        "html_url": "https://github.com/trinodb",
                        "followers_url": "https://api.github.com/users/trinodb/followers",
                        "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                        "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                        "organizations_url": "https://api.github.com/users/trinodb/orgs",
                        "repos_url": "https://api.github.com/users/trinodb/repos",
                        "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/trinodb/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 166515022,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNjY1MTUwMjI=",
                        "name": "trino",
                        "full_name": "trinodb/trino",
                        "private": false,
                        "owner": {
                            "login": "trinodb",
                            "id": 34147222,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/trinodb",
                            "html_url": "https://github.com/trinodb",
                            "followers_url": "https://api.github.com/users/trinodb/followers",
                            "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                            "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                            "organizations_url": "https://api.github.com/users/trinodb/orgs",
                            "repos_url": "https://api.github.com/users/trinodb/repos",
                            "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/trinodb/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/trinodb/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": false,
                        "url": "https://api.github.com/repos/trinodb/trino",
                        "forks_url": "https://api.github.com/repos/trinodb/trino/forks",
                        "keys_url": "https://api.github.com/repos/trinodb/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/trinodb/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/trinodb/trino/teams",
                        "hooks_url": "https://api.github.com/repos/trinodb/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/trinodb/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/trinodb/trino/events",
                        "assignees_url": "https://api.github.com/repos/trinodb/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/trinodb/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/trinodb/trino/tags",
                        "blobs_url": "https://api.github.com/repos/trinodb/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/trinodb/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/trinodb/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/trinodb/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/trinodb/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/trinodb/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/trinodb/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/trinodb/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/trinodb/trino/subscription",
                        "commits_url": "https://api.github.com/repos/trinodb/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/trinodb/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/trinodb/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/trinodb/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/trinodb/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/trinodb/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/trinodb/trino/merges",
                        "archive_url": "https://api.github.com/repos/trinodb/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/trinodb/trino/downloads",
                        "issues_url": "https://api.github.com/repos/trinodb/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/trinodb/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/trinodb/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/trinodb/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/trinodb/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/trinodb/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/trinodb/trino/deployments",
                        "created_at": "2019-01-19T06:38:14Z",
                        "updated_at": "2022-12-07T23:23:39Z",
                        "pushed_at": "2022-12-08T01:09:12Z",
                        "git_url": "git://github.com/trinodb/trino.git",
                        "ssh_url": "git@github.com:trinodb/trino.git",
                        "clone_url": "https://github.com/trinodb/trino.git",
                        "svn_url": "https://github.com/trinodb/trino",
                        "homepage": "https://trino.io",
                        "size": 197719,
                        "stargazers_count": 6794,
                        "watchers_count": 6794,
                        "language": "Java",
                        "has_issues": true,
                        "has_projects": false,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": true,
                        "forks_count": 2084,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 2093,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "analytics",
                            "big-data",
                            "data-science",
                            "database",
                            "databases",
                            "datalake",
                            "distributed-database",
                            "distributed-databases",
                            "distributed-systems",
                            "hadoop",
                            "hive",
                            "java",
                            "jdbc",
                            "presto",
                            "prestodb",
                            "query-engine",
                            "sql",
                            "trino"
                        ],
                        "visibility": "public",
                        "forks": 2084,
                        "open_issues": 2093,
                        "watchers": 6794,
                        "default_branch": "master"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337"
                    },
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15337"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15337"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15337/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/trinodb/trino/statuses/f88ba0cee83615211a54a7351df5656d7688ae1c"
                    }
                },
                "author_association": "MEMBER",
                "auto_merge": null,
                "active_lock_reason": null
            }
        },
        "public": true,
        "created_at": "2022-12-08T02:00:18Z",
        "org": {
            "id": 34147222,
            "login": "trinodb",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/trinodb",
            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?"
        }
    },
    {
        "id": "25737166156",
        "type": "PullRequestReviewEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 166515022,
            "name": "trinodb/trino",
            "url": "https://api.github.com/repos/trinodb/trino"
        },
        "payload": {
            "action": "created",
            "review": {
                "id": 1209353709,
                "node_id": "PRR_kwDOCezRTs5IFUXt",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": null,
                "commit_id": "f88ba0cee83615211a54a7351df5656d7688ae1c",
                "submitted_at": "2022-12-08T02:00:18Z",
                "state": "commented",
                "html_url": "https://github.com/trinodb/trino/pull/15337#pullrequestreview-1209353709",
                "pull_request_url": "https://api.github.com/repos/trinodb/trino/pulls/15337",
                "author_association": "MEMBER",
                "_links": {
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15337#pullrequestreview-1209353709"
                    },
                    "pull_request": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337"
                    }
                }
            },
            "pull_request": {
                "url": "https://api.github.com/repos/trinodb/trino/pulls/15337",
                "id": 1152104129,
                "node_id": "PR_kwDOCezRTs5Eq7bB",
                "html_url": "https://github.com/trinodb/trino/pull/15337",
                "diff_url": "https://github.com/trinodb/trino/pull/15337.diff",
                "patch_url": "https://github.com/trinodb/trino/pull/15337.patch",
                "issue_url": "https://api.github.com/repos/trinodb/trino/issues/15337",
                "number": 15337,
                "state": "open",
                "locked": false,
                "title": "Fix test for invalid rate in FormatUtils.formatDataRate()",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "<!-- Thank you for submitting a pull request! Find more information in our development guide at https://github.com/trinodb/trino/blob/master/.github/DEVELOPMENT.md and contact us on #dev in Slack. -->\r\n<!-- Provide an overview of the PR for maintainers and reviewers. -->\r\n## Description\r\n\r\n`FormatUtils.formatDataRate()` contains the following code:\r\n\r\n```java\r\nlong rate = Math.round(dataSize.toBytes() / duration.getValue(SECONDS));\r\nif (Double.isNaN(rate) || Double.isInfinite(rate)) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nThe test can never evaluate as `true`, since both functions will return false for any `long`.\r\n\r\nThe correct test is:\r\n\r\n```java\r\nif (rate == Long.MAX_VALUE) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nIt's not necessary to test for `Long.MIN_VALUE`, since neither `dataSize` nor `duration` can be negative.\r\n\r\n<!-- Provide details that would help an engineer who is unfamiliar with this part of the code. -->\r\n## Unit Test\r\n\r\nI added a new class, `TestFormatUtils` to test both this fix and the rest of `FormatUtils`. The tests for this change are:\r\n\r\n```java\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), false), \"0B\");\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), true), \"0B/s\");\r\n```\r\n\r\n<!-- Mark the appropriate option with an (x). Propose a release note if you can. -->\r\n## Release notes\r\n\r\n(x) This is not user-visible or docs only and no release notes are required.\r\n( ) Release notes are required, please propose a release note for me.\r\n( ) Release notes are required, with the following suggested text:\r\n\r\n## Related Issue\r\n\r\nFixes #13093",
                "created_at": "2022-12-07T17:54:40Z",
                "updated_at": "2022-12-08T02:00:18Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": "dd4eb7e24625655b4a60619dabe31785fb81f5ab",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [
                    {
                        "id": 1202580151,
                        "node_id": "MDU6TGFiZWwxMjAyNTgwMTUx",
                        "url": "https://api.github.com/repos/trinodb/trino/labels/cla-signed",
                        "name": "cla-signed",
                        "color": "ededed",
                        "default": false,
                        "description": null
                    }
                ],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/trinodb/trino/pulls/15337/commits",
                "review_comments_url": "https://api.github.com/repos/trinodb/trino/pulls/15337/comments",
                "review_comment_url": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/trinodb/trino/issues/15337/comments",
                "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/f88ba0cee83615211a54a7351df5656d7688ae1c",
                "head": {
                    "label": "metadaddy:fix-formatdatarate-test",
                    "ref": "fix-formatdatarate-test",
                    "sha": "f88ba0cee83615211a54a7351df5656d7688ae1c",
                    "user": {
                        "login": "metadaddy",
                        "id": 723517,
                        "node_id": "MDQ6VXNlcjcyMzUxNw==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/metadaddy",
                        "html_url": "https://github.com/metadaddy",
                        "followers_url": "https://api.github.com/users/metadaddy/followers",
                        "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                        "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                        "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                        "repos_url": "https://api.github.com/users/metadaddy/repos",
                        "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 509274784,
                        "node_id": "R_kgDOHlrqoA",
                        "name": "trino",
                        "full_name": "metadaddy/trino",
                        "private": false,
                        "owner": {
                            "login": "metadaddy",
                            "id": 723517,
                            "node_id": "MDQ6VXNlcjcyMzUxNw==",
                            "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/metadaddy",
                            "html_url": "https://github.com/metadaddy",
                            "followers_url": "https://api.github.com/users/metadaddy/followers",
                            "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                            "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                            "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                            "repos_url": "https://api.github.com/users/metadaddy/repos",
                            "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/metadaddy/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": true,
                        "url": "https://api.github.com/repos/metadaddy/trino",
                        "forks_url": "https://api.github.com/repos/metadaddy/trino/forks",
                        "keys_url": "https://api.github.com/repos/metadaddy/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/metadaddy/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/metadaddy/trino/teams",
                        "hooks_url": "https://api.github.com/repos/metadaddy/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/metadaddy/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/metadaddy/trino/events",
                        "assignees_url": "https://api.github.com/repos/metadaddy/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/metadaddy/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/metadaddy/trino/tags",
                        "blobs_url": "https://api.github.com/repos/metadaddy/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/metadaddy/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/metadaddy/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/metadaddy/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/metadaddy/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/metadaddy/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/metadaddy/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/metadaddy/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/metadaddy/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/metadaddy/trino/subscription",
                        "commits_url": "https://api.github.com/repos/metadaddy/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/metadaddy/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/metadaddy/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/metadaddy/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/metadaddy/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/metadaddy/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/metadaddy/trino/merges",
                        "archive_url": "https://api.github.com/repos/metadaddy/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/metadaddy/trino/downloads",
                        "issues_url": "https://api.github.com/repos/metadaddy/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/metadaddy/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/metadaddy/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/metadaddy/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/metadaddy/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/metadaddy/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/metadaddy/trino/deployments",
                        "created_at": "2022-07-01T00:43:32Z",
                        "updated_at": "2022-07-06T01:44:20Z",
                        "pushed_at": "2022-12-07T17:50:11Z",
                        "git_url": "git://github.com/metadaddy/trino.git",
                        "ssh_url": "git@github.com:metadaddy/trino.git",
                        "clone_url": "https://github.com/metadaddy/trino.git",
                        "svn_url": "https://github.com/metadaddy/trino",
                        "homepage": "https://trino.io",
                        "size": 192363,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": "Java",
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "master"
                    }
                },
                "base": {
                    "label": "trinodb:master",
                    "ref": "master",
                    "sha": "4b266700437a87236ad0e0e5cd1db866f4f76dcb",
                    "user": {
                        "login": "trinodb",
                        "id": 34147222,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                        "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/trinodb",
                        "html_url": "https://github.com/trinodb",
                        "followers_url": "https://api.github.com/users/trinodb/followers",
                        "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                        "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                        "organizations_url": "https://api.github.com/users/trinodb/orgs",
                        "repos_url": "https://api.github.com/users/trinodb/repos",
                        "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/trinodb/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 166515022,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNjY1MTUwMjI=",
                        "name": "trino",
                        "full_name": "trinodb/trino",
                        "private": false,
                        "owner": {
                            "login": "trinodb",
                            "id": 34147222,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/trinodb",
                            "html_url": "https://github.com/trinodb",
                            "followers_url": "https://api.github.com/users/trinodb/followers",
                            "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                            "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                            "organizations_url": "https://api.github.com/users/trinodb/orgs",
                            "repos_url": "https://api.github.com/users/trinodb/repos",
                            "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/trinodb/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/trinodb/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": false,
                        "url": "https://api.github.com/repos/trinodb/trino",
                        "forks_url": "https://api.github.com/repos/trinodb/trino/forks",
                        "keys_url": "https://api.github.com/repos/trinodb/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/trinodb/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/trinodb/trino/teams",
                        "hooks_url": "https://api.github.com/repos/trinodb/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/trinodb/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/trinodb/trino/events",
                        "assignees_url": "https://api.github.com/repos/trinodb/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/trinodb/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/trinodb/trino/tags",
                        "blobs_url": "https://api.github.com/repos/trinodb/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/trinodb/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/trinodb/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/trinodb/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/trinodb/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/trinodb/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/trinodb/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/trinodb/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/trinodb/trino/subscription",
                        "commits_url": "https://api.github.com/repos/trinodb/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/trinodb/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/trinodb/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/trinodb/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/trinodb/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/trinodb/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/trinodb/trino/merges",
                        "archive_url": "https://api.github.com/repos/trinodb/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/trinodb/trino/downloads",
                        "issues_url": "https://api.github.com/repos/trinodb/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/trinodb/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/trinodb/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/trinodb/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/trinodb/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/trinodb/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/trinodb/trino/deployments",
                        "created_at": "2019-01-19T06:38:14Z",
                        "updated_at": "2022-12-07T23:23:39Z",
                        "pushed_at": "2022-12-08T01:09:12Z",
                        "git_url": "git://github.com/trinodb/trino.git",
                        "ssh_url": "git@github.com:trinodb/trino.git",
                        "clone_url": "https://github.com/trinodb/trino.git",
                        "svn_url": "https://github.com/trinodb/trino",
                        "homepage": "https://trino.io",
                        "size": 197719,
                        "stargazers_count": 6794,
                        "watchers_count": 6794,
                        "language": "Java",
                        "has_issues": true,
                        "has_projects": false,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": true,
                        "forks_count": 2084,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 2093,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "analytics",
                            "big-data",
                            "data-science",
                            "database",
                            "databases",
                            "datalake",
                            "distributed-database",
                            "distributed-databases",
                            "distributed-systems",
                            "hadoop",
                            "hive",
                            "java",
                            "jdbc",
                            "presto",
                            "prestodb",
                            "query-engine",
                            "sql",
                            "trino"
                        ],
                        "visibility": "public",
                        "forks": 2084,
                        "open_issues": 2093,
                        "watchers": 6794,
                        "default_branch": "master"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337"
                    },
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15337"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15337"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15337/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/trinodb/trino/statuses/f88ba0cee83615211a54a7351df5656d7688ae1c"
                    }
                },
                "author_association": "MEMBER",
                "auto_merge": null,
                "active_lock_reason": null
            }
        },
        "public": true,
        "created_at": "2022-12-08T02:00:19Z",
        "org": {
            "id": 34147222,
            "login": "trinodb",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/trinodb",
            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?"
        }
    },
    {
        "id": "25737163407",
        "type": "PullRequestReviewCommentEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 166515022,
            "name": "trinodb/trino",
            "url": "https://api.github.com/repos/trinodb/trino"
        },
        "payload": {
            "action": "created",
            "comment": {
                "url": "https://api.github.com/repos/trinodb/trino/pulls/comments/1042849643",
                "pull_request_review_id": 1209353593,
                "id": 1042849643,
                "node_id": "PRRC_kwDOCezRTs4-KJ9r",
                "diff_hunk": "@@ -0,0 +1,353 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.trino.cli;\n+\n+import io.airlift.units.DataSize;\n+import io.airlift.units.Duration;\n+import org.testng.annotations.Test;\n+\n+import static org.testng.Assert.assertEquals;\n+\n+public class TestFormatUtils\n+{\n+    @Test\n+    public void testFormatCount()\n+    {\n+        assertEquals(FormatUtils.formatCount(1L), \"1\");\n+        assertEquals(FormatUtils.formatCount(12L), \"12\");\n+        assertEquals(FormatUtils.formatCount(123L), \"123\");\n+        assertEquals(FormatUtils.formatCount(1234L), \"1.23K\");\n+        assertEquals(FormatUtils.formatCount(12345L), \"12.3K\");\n+        assertEquals(FormatUtils.formatCount(123456L), \"123K\");\n+        assertEquals(FormatUtils.formatCount(1234567L), \"1.23M\");\n+        assertEquals(FormatUtils.formatCount(12345678L), \"12.3M\");\n+        assertEquals(FormatUtils.formatCount(123456789L), \"123M\");\n+        assertEquals(FormatUtils.formatCount(1234567890L), \"1.23B\");\n+        assertEquals(FormatUtils.formatCount(12345678901L), \"12.3B\");\n+        assertEquals(FormatUtils.formatCount(123456789012L), \"123B\");\n+        assertEquals(FormatUtils.formatCount(1234567890123L), \"1.23T\");\n+        assertEquals(FormatUtils.formatCount(12345678901234L), \"12.3T\");\n+        assertEquals(FormatUtils.formatCount(123456789012345L), \"123T\");\n+        assertEquals(FormatUtils.formatCount(1234567890123456L), \"1.23Q\");\n+        assertEquals(FormatUtils.formatCount(12345678901234567L), \"12.3Q\");\n+        assertEquals(FormatUtils.formatCount(123456789012345678L), \"123Q\");\n+        assertEquals(FormatUtils.formatCount(1234567890123456789L), \"1235Q\");\n+    }\n+\n+    @Test\n+    public void formatCountRate()\n+    {\n+        assertEquals(FormatUtils.formatCountRate(0.0000000001D, Duration.valueOf(\"1ns\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(0.0000000001D, Duration.valueOf(\"1ns\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(0.000000001D, Duration.valueOf(\"1ns\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(0.000000001D, Duration.valueOf(\"1ns\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(0.0000000015D, Duration.valueOf(\"1ns\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(0.0000000015D, Duration.valueOf(\"1ns\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(1D, Duration.valueOf(\"1ns\"), false), \"1000M\");\n+        assertEquals(FormatUtils.formatCountRate(1D, Duration.valueOf(\"1ns\"), true), \"1000M/s\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"1ns\"), false), \"10B\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"1ns\"), true), \"10B/s\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"10ns\"), false), \"1000M\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"10ns\"), true), \"1000M/s\");\n+\n+        assertEquals(FormatUtils.formatCountRate(0.0000001D, Duration.valueOf(\"1us\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(0.0000001D, Duration.valueOf(\"1us\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(0.000001D, Duration.valueOf(\"1us\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(0.000001D, Duration.valueOf(\"1us\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(0.0000015D, Duration.valueOf(\"1us\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(0.0000015D, Duration.valueOf(\"1us\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(1D, Duration.valueOf(\"1us\"), false), \"1000K\");\n+        assertEquals(FormatUtils.formatCountRate(1D, Duration.valueOf(\"1us\"), true), \"1000K/s\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"1us\"), false), \"10M\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"1us\"), true), \"10M/s\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"10us\"), false), \"1000K\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"10us\"), true), \"1000K/s\");\n+\n+        assertEquals(FormatUtils.formatCountRate(0.0001D, Duration.valueOf(\"1ms\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(0.0001D, Duration.valueOf(\"1ms\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(0.001D, Duration.valueOf(\"1ms\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(0.001D, Duration.valueOf(\"1ms\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(0.0015D, Duration.valueOf(\"1ms\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(0.0015D, Duration.valueOf(\"1ms\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(1D, Duration.valueOf(\"1ms\"), false), \"1000\");\n+        assertEquals(FormatUtils.formatCountRate(1D, Duration.valueOf(\"1ms\"), true), \"1000/s\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"1ms\"), false), \"10K\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"1ms\"), true), \"10K/s\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"10ms\"), false), \"1000\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"10ms\"), true), \"1000/s\");\n+\n+        assertEquals(FormatUtils.formatCountRate(0.1D, Duration.valueOf(\"1s\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(0.1D, Duration.valueOf(\"1s\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"1s\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"1s\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"10s\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"10s\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(1.5D, Duration.valueOf(\"1s\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(1.5D, Duration.valueOf(\"1s\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"1s\"), false), \"10\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"1s\"), true), \"10/s\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"10s\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"10s\"), true), \"1/s\");\n+\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"1m\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"1m\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(60.0D, Duration.valueOf(\"1m\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(60.0D, Duration.valueOf(\"1m\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(600.0D, Duration.valueOf(\"1m\"), false), \"10\");\n+        assertEquals(FormatUtils.formatCountRate(600.0D, Duration.valueOf(\"1m\"), true), \"10/s\");\n+        assertEquals(FormatUtils.formatCountRate(100.0D, Duration.valueOf(\"10m\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(100.0D, Duration.valueOf(\"10m\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(600.0D, Duration.valueOf(\"10m\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(600.0D, Duration.valueOf(\"10m\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(6000.0D, Duration.valueOf(\"10m\"), false), \"10\");\n+        assertEquals(FormatUtils.formatCountRate(6000.0D, Duration.valueOf(\"10m\"), true), \"10/s\");\n+\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"1h\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"1h\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(3600.0D, Duration.valueOf(\"1h\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(3600.0D, Duration.valueOf(\"1h\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(36000.0D, Duration.valueOf(\"1h\"), false), \"10\");\n+        assertEquals(FormatUtils.formatCountRate(36000.0D, Duration.valueOf(\"1h\"), true), \"10/s\");\n+        assertEquals(FormatUtils.formatCountRate(100.0D, Duration.valueOf(\"10h\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(100.0D, Duration.valueOf(\"10h\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(36000.0D, Duration.valueOf(\"10h\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(36000.0D, Duration.valueOf(\"10h\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(360000.0D, Duration.valueOf(\"10h\"), false), \"10\");\n+        assertEquals(FormatUtils.formatCountRate(360000.0D, Duration.valueOf(\"10h\"), true), \"10/s\");\n+\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"1d\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"1d\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(86400.0D, Duration.valueOf(\"1d\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(86400.0D, Duration.valueOf(\"1d\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(864000.0D, Duration.valueOf(\"1d\"), false), \"10\");\n+        assertEquals(FormatUtils.formatCountRate(864000.0D, Duration.valueOf(\"1d\"), true), \"10/s\");\n+        assertEquals(FormatUtils.formatCountRate(86400.0D, Duration.valueOf(\"10d\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(86400.0D, Duration.valueOf(\"10d\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(864000.0D, Duration.valueOf(\"10d\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(864000.0D, Duration.valueOf(\"10d\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(8640000.0D, Duration.valueOf(\"10d\"), false), \"10\");\n+        assertEquals(FormatUtils.formatCountRate(8640000.0D, Duration.valueOf(\"10d\"), true), \"10/s\");\n+\n+        assertEquals(FormatUtils.formatCountRate(Double.NaN, Duration.valueOf(\"1s\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(Double.NaN, Duration.valueOf(\"1s\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(Double.POSITIVE_INFINITY, Duration.valueOf(\"1s\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(Double.POSITIVE_INFINITY, Duration.valueOf(\"1s\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(Double.NEGATIVE_INFINITY, Duration.valueOf(\"1s\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(Double.NEGATIVE_INFINITY, Duration.valueOf(\"1s\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"0s\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"0s\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(-1.0D, Duration.valueOf(\"0s\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(-1.0D, Duration.valueOf(\"0s\"), true), \"0/s\");\n+    }\n+\n+    @Test\n+    public void testFormatDataSize()\n+    {\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1L), false), \"1B\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1L), true), \"1B\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12L), false), \"12B\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12L), true), \"12B\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123L), false), \"123B\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123L), true), \"123B\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234L), false), \"1.21K\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234L), true), \"1.21KB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12345L), false), \"12.1K\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12345L), true), \"12.1KB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123456L), false), \"121K\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123456L), true), \"121KB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234567L), false), \"1.18M\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234567L), true), \"1.18MB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12345678L), false), \"11.8M\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12345678L), true), \"11.8MB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123456789L), false), \"118M\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123456789L), true), \"118MB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234567890L), false), \"1.15G\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234567890L), true), \"1.15GB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12345678901L), false), \"11.5G\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12345678901L), true), \"11.5GB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123456789012L), false), \"115G\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123456789012L), true), \"115GB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234567890123L), false), \"1.12T\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234567890123L), true), \"1.12TB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12345678901234L), false), \"11.2T\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12345678901234L), true), \"11.2TB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123456789012345L), false), \"112T\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123456789012345L), true), \"112TB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234567890123456L), false), \"1.1P\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234567890123456L), true), \"1.1PB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12345678901234567L), false), \"11P\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12345678901234567L), true), \"11PB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123456789012345678L), false), \"110P\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123456789012345678L), true), \"110PB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234567890123456789L), false), \"1097P\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234567890123456789L), true), \"1097PB\");\n+    }\n+\n+    @Test\n+    public void testFormatDataRate()\n+    {\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(0), Duration.valueOf(\"1ns\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(0), Duration.valueOf(\"1ns\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1ns\"), false), \"954M\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1ns\"), true), \"954MB/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"1ns\"), false), \"9.31G\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"1ns\"), true), \"9.31GB/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"10ns\"), false), \"954M\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"10ns\"), true), \"954MB/s\");\n+\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(0), Duration.valueOf(\"1us\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(0), Duration.valueOf(\"1us\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1us\"), false), \"977K\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1us\"), true), \"977KB/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"1us\"), false), \"9.54M\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"1us\"), true), \"9.54MB/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"10us\"), false), \"977K\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"10us\"), true), \"977KB/s\");\n+\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(0), Duration.valueOf(\"1ms\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(0), Duration.valueOf(\"1ms\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1ms\"), false), \"1000B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1ms\"), true), \"1000B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"1ms\"), false), \"9.77K\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"1ms\"), true), \"9.77KB/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"10ms\"), false), \"1000B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"10ms\"), true), \"1000B/s\");\n+\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(0), Duration.valueOf(\"1s\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(0), Duration.valueOf(\"1s\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1s\"), false), \"1B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1s\"), true), \"1B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"10s\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"10s\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"1s\"), false), \"10B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"1s\"), true), \"10B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"10s\"), false), \"1B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"10s\"), true), \"1B/s\");\n+\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1m\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1m\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(60), Duration.valueOf(\"1m\"), false), \"1B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(60), Duration.valueOf(\"1m\"), true), \"1B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(600), Duration.valueOf(\"1m\"), false), \"10B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(600), Duration.valueOf(\"1m\"), true), \"10B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(100), Duration.valueOf(\"10m\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(100), Duration.valueOf(\"10m\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(600), Duration.valueOf(\"10m\"), false), \"1B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(600), Duration.valueOf(\"10m\"), true), \"1B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(6000), Duration.valueOf(\"10m\"), false), \"10B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(6000), Duration.valueOf(\"10m\"), true), \"10B/s\");\n+\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1h\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1h\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(3600), Duration.valueOf(\"1h\"), false), \"1B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(3600), Duration.valueOf(\"1h\"), true), \"1B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(36000), Duration.valueOf(\"1h\"), false), \"10B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(36000), Duration.valueOf(\"1h\"), true), \"10B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(100), Duration.valueOf(\"10h\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(100), Duration.valueOf(\"10h\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(36000), Duration.valueOf(\"10h\"), false), \"1B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(36000), Duration.valueOf(\"10h\"), true), \"1B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(360000), Duration.valueOf(\"10h\"), false), \"10B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(360000), Duration.valueOf(\"10h\"), true), \"10B/s\");\n+\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1d\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1d\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(86400), Duration.valueOf(\"1d\"), false), \"1B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(86400), Duration.valueOf(\"1d\"), true), \"1B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(864000), Duration.valueOf(\"1d\"), false), \"10B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(864000), Duration.valueOf(\"1d\"), true), \"10B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(86400), Duration.valueOf(\"10d\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(86400), Duration.valueOf(\"10d\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(864000), Duration.valueOf(\"10d\"), false), \"1B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(864000), Duration.valueOf(\"10d\"), true), \"1B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(8640000), Duration.valueOf(\"10d\"), false), \"10B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(8640000), Duration.valueOf(\"10d\"), true), \"10B/s\");\n+\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), true), \"0B/s\");\n+    }\n+\n+    @Test\n+    public void testPluralize()\n+    {\n+        assertEquals(FormatUtils.pluralize(\"foo\", 0), \"foos\");\n+        assertEquals(FormatUtils.pluralize(\"foo\", 1), \"foo\");\n+        assertEquals(FormatUtils.pluralize(\"foo\", 2), \"foos\");\n+    }\n+\n+    @Test\n+    public void testFormatFinalTime()\n+    {\n+        assertEquals(FormatUtils.formatFinalTime(Duration.valueOf(\"0us\")), \"0.00\");\n+        assertEquals(FormatUtils.formatFinalTime(Duration.valueOf(\"0ns\")), \"0.00\");\n+        assertEquals(FormatUtils.formatFinalTime(Duration.valueOf(\"0ms\")), \"0.00\");\n+        assertEquals(FormatUtils.formatFinalTime(Duration.valueOf(\"0s\")), \"0.00\");\n+        assertEquals(FormatUtils.formatFinalTime(Duration.valueOf(\"0m\")), \"0.00\");\n+        assertEquals(FormatUtils.formatFinalTime(Duration.valueOf(\"0h\")), \"0.00\");\n+        assertEquals(FormatUtils.formatFinalTime(Duration.valueOf(\"0d\")), \"0.00\");\n+        assertEquals(FormatUtils.formatFinalTime(Duration.valueOf(\"1us\")), \"0.00\");\n+        assertEquals(FormatUtils.formatFinalTime(Duration.valueOf(\"1ns\")), \"0.00\");\n+        assertEquals(FormatUtils.formatFinalTime(Duration.valueOf(\"1ms\")), \"0.00\");\n+        assertEquals(FormatUtils.formatFinalTime(Duration.valueOf(\"10ms\")), \"0.01\");\n+        assertEquals(FormatUtils.formatFinalTime(Duration.valueOf(\"100ms\")), \"0.10\");\n+        assertEquals(FormatUtils.formatFinalTime(Duration.valueOf(\"1s\")), \"1.00\");\n+        assertEquals(FormatUtils.formatFinalTime(Duration.valueOf(\"10s\")), \"10.00\");\n+        assertEquals(FormatUtils.formatFinalTime(Duration.valueOf(\"1m\")), \"1:00\");\n+        assertEquals(FormatUtils.formatFinalTime(Duration.valueOf(\"61s\")), \"1:01\");\n+        assertEquals(FormatUtils.formatFinalTime(Duration.valueOf(\"1h\")), \"60:00\");\n+        assertEquals(FormatUtils.formatFinalTime(Duration.valueOf(\"61m\")), \"61:00\");\n+        assertEquals(FormatUtils.formatFinalTime(Duration.valueOf(\"1d\")), \"1440:00\");\n+        assertEquals(FormatUtils.formatFinalTime(Duration.valueOf(\"25h\")), \"1500:00\");\n+    }\n+\n+    @Test\n+    public void testFormatIndeterminateProgressBar()\n+    {\n+        assertEquals(FormatUtils.formatProgressBar(10, 0), \"<=>       \");\n+        assertEquals(FormatUtils.formatProgressBar(10, 1), \" <=>      \");\n+        assertEquals(FormatUtils.formatProgressBar(10, 7), \"       <=>\");\n+        assertEquals(FormatUtils.formatProgressBar(10, 8), \"      <=> \");\n+        assertEquals(FormatUtils.formatProgressBar(10, 13), \" <=>      \");\n+        assertEquals(FormatUtils.formatProgressBar(10, 14), \"<=>       \");\n+    }\n+\n+    @Test(expectedExceptions = IllegalArgumentException.class, expectedExceptionsMessageRegExp = \"invalid count: -1\")\n+    public void testInvalidIndeterminateProgressBar()\n+    {\n+        assertEquals(FormatUtils.formatProgressBar(10, -1), \"<=>       \");",
                "path": "client/trino-cli/src/test/java/io/trino/cli/TestFormatUtils.java",
                "position": 328,
                "original_position": 328,
                "commit_id": "f88ba0cee83615211a54a7351df5656d7688ae1c",
                "original_commit_id": "f88ba0cee83615211a54a7351df5656d7688ae1c",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "correct",
                "created_at": "2022-12-08T02:00:07Z",
                "updated_at": "2022-12-08T02:00:07Z",
                "html_url": "https://github.com/trinodb/trino/pull/15337#discussion_r1042849643",
                "pull_request_url": "https://api.github.com/repos/trinodb/trino/pulls/15337",
                "author_association": "MEMBER",
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/comments/1042849643"
                    },
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15337#discussion_r1042849643"
                    },
                    "pull_request": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337"
                    }
                },
                "reactions": {
                    "url": "https://api.github.com/repos/trinodb/trino/pulls/comments/1042849643/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "start_line": null,
                "original_start_line": null,
                "start_side": null,
                "line": 328,
                "original_line": 328,
                "side": "RIGHT",
                "in_reply_to_id": 1042707788
            },
            "pull_request": {
                "url": "https://api.github.com/repos/trinodb/trino/pulls/15337",
                "id": 1152104129,
                "node_id": "PR_kwDOCezRTs5Eq7bB",
                "html_url": "https://github.com/trinodb/trino/pull/15337",
                "diff_url": "https://github.com/trinodb/trino/pull/15337.diff",
                "patch_url": "https://github.com/trinodb/trino/pull/15337.patch",
                "issue_url": "https://api.github.com/repos/trinodb/trino/issues/15337",
                "number": 15337,
                "state": "open",
                "locked": false,
                "title": "Fix test for invalid rate in FormatUtils.formatDataRate()",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "<!-- Thank you for submitting a pull request! Find more information in our development guide at https://github.com/trinodb/trino/blob/master/.github/DEVELOPMENT.md and contact us on #dev in Slack. -->\r\n<!-- Provide an overview of the PR for maintainers and reviewers. -->\r\n## Description\r\n\r\n`FormatUtils.formatDataRate()` contains the following code:\r\n\r\n```java\r\nlong rate = Math.round(dataSize.toBytes() / duration.getValue(SECONDS));\r\nif (Double.isNaN(rate) || Double.isInfinite(rate)) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nThe test can never evaluate as `true`, since both functions will return false for any `long`.\r\n\r\nThe correct test is:\r\n\r\n```java\r\nif (rate == Long.MAX_VALUE) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nIt's not necessary to test for `Long.MIN_VALUE`, since neither `dataSize` nor `duration` can be negative.\r\n\r\n<!-- Provide details that would help an engineer who is unfamiliar with this part of the code. -->\r\n## Unit Test\r\n\r\nI added a new class, `TestFormatUtils` to test both this fix and the rest of `FormatUtils`. The tests for this change are:\r\n\r\n```java\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), false), \"0B\");\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), true), \"0B/s\");\r\n```\r\n\r\n<!-- Mark the appropriate option with an (x). Propose a release note if you can. -->\r\n## Release notes\r\n\r\n(x) This is not user-visible or docs only and no release notes are required.\r\n( ) Release notes are required, please propose a release note for me.\r\n( ) Release notes are required, with the following suggested text:\r\n\r\n## Related Issue\r\n\r\nFixes #13093",
                "created_at": "2022-12-07T17:54:40Z",
                "updated_at": "2022-12-08T02:00:07Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": "dd4eb7e24625655b4a60619dabe31785fb81f5ab",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [
                    {
                        "id": 1202580151,
                        "node_id": "MDU6TGFiZWwxMjAyNTgwMTUx",
                        "url": "https://api.github.com/repos/trinodb/trino/labels/cla-signed",
                        "name": "cla-signed",
                        "color": "ededed",
                        "default": false,
                        "description": null
                    }
                ],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/trinodb/trino/pulls/15337/commits",
                "review_comments_url": "https://api.github.com/repos/trinodb/trino/pulls/15337/comments",
                "review_comment_url": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/trinodb/trino/issues/15337/comments",
                "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/f88ba0cee83615211a54a7351df5656d7688ae1c",
                "head": {
                    "label": "metadaddy:fix-formatdatarate-test",
                    "ref": "fix-formatdatarate-test",
                    "sha": "f88ba0cee83615211a54a7351df5656d7688ae1c",
                    "user": {
                        "login": "metadaddy",
                        "id": 723517,
                        "node_id": "MDQ6VXNlcjcyMzUxNw==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/metadaddy",
                        "html_url": "https://github.com/metadaddy",
                        "followers_url": "https://api.github.com/users/metadaddy/followers",
                        "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                        "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                        "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                        "repos_url": "https://api.github.com/users/metadaddy/repos",
                        "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 509274784,
                        "node_id": "R_kgDOHlrqoA",
                        "name": "trino",
                        "full_name": "metadaddy/trino",
                        "private": false,
                        "owner": {
                            "login": "metadaddy",
                            "id": 723517,
                            "node_id": "MDQ6VXNlcjcyMzUxNw==",
                            "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/metadaddy",
                            "html_url": "https://github.com/metadaddy",
                            "followers_url": "https://api.github.com/users/metadaddy/followers",
                            "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                            "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                            "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                            "repos_url": "https://api.github.com/users/metadaddy/repos",
                            "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/metadaddy/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": true,
                        "url": "https://api.github.com/repos/metadaddy/trino",
                        "forks_url": "https://api.github.com/repos/metadaddy/trino/forks",
                        "keys_url": "https://api.github.com/repos/metadaddy/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/metadaddy/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/metadaddy/trino/teams",
                        "hooks_url": "https://api.github.com/repos/metadaddy/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/metadaddy/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/metadaddy/trino/events",
                        "assignees_url": "https://api.github.com/repos/metadaddy/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/metadaddy/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/metadaddy/trino/tags",
                        "blobs_url": "https://api.github.com/repos/metadaddy/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/metadaddy/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/metadaddy/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/metadaddy/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/metadaddy/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/metadaddy/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/metadaddy/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/metadaddy/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/metadaddy/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/metadaddy/trino/subscription",
                        "commits_url": "https://api.github.com/repos/metadaddy/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/metadaddy/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/metadaddy/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/metadaddy/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/metadaddy/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/metadaddy/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/metadaddy/trino/merges",
                        "archive_url": "https://api.github.com/repos/metadaddy/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/metadaddy/trino/downloads",
                        "issues_url": "https://api.github.com/repos/metadaddy/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/metadaddy/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/metadaddy/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/metadaddy/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/metadaddy/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/metadaddy/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/metadaddy/trino/deployments",
                        "created_at": "2022-07-01T00:43:32Z",
                        "updated_at": "2022-07-06T01:44:20Z",
                        "pushed_at": "2022-12-07T17:50:11Z",
                        "git_url": "git://github.com/metadaddy/trino.git",
                        "ssh_url": "git@github.com:metadaddy/trino.git",
                        "clone_url": "https://github.com/metadaddy/trino.git",
                        "svn_url": "https://github.com/metadaddy/trino",
                        "homepage": "https://trino.io",
                        "size": 192363,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": "Java",
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "master"
                    }
                },
                "base": {
                    "label": "trinodb:master",
                    "ref": "master",
                    "sha": "4b266700437a87236ad0e0e5cd1db866f4f76dcb",
                    "user": {
                        "login": "trinodb",
                        "id": 34147222,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                        "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/trinodb",
                        "html_url": "https://github.com/trinodb",
                        "followers_url": "https://api.github.com/users/trinodb/followers",
                        "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                        "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                        "organizations_url": "https://api.github.com/users/trinodb/orgs",
                        "repos_url": "https://api.github.com/users/trinodb/repos",
                        "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/trinodb/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 166515022,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNjY1MTUwMjI=",
                        "name": "trino",
                        "full_name": "trinodb/trino",
                        "private": false,
                        "owner": {
                            "login": "trinodb",
                            "id": 34147222,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/trinodb",
                            "html_url": "https://github.com/trinodb",
                            "followers_url": "https://api.github.com/users/trinodb/followers",
                            "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                            "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                            "organizations_url": "https://api.github.com/users/trinodb/orgs",
                            "repos_url": "https://api.github.com/users/trinodb/repos",
                            "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/trinodb/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/trinodb/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": false,
                        "url": "https://api.github.com/repos/trinodb/trino",
                        "forks_url": "https://api.github.com/repos/trinodb/trino/forks",
                        "keys_url": "https://api.github.com/repos/trinodb/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/trinodb/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/trinodb/trino/teams",
                        "hooks_url": "https://api.github.com/repos/trinodb/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/trinodb/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/trinodb/trino/events",
                        "assignees_url": "https://api.github.com/repos/trinodb/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/trinodb/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/trinodb/trino/tags",
                        "blobs_url": "https://api.github.com/repos/trinodb/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/trinodb/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/trinodb/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/trinodb/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/trinodb/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/trinodb/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/trinodb/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/trinodb/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/trinodb/trino/subscription",
                        "commits_url": "https://api.github.com/repos/trinodb/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/trinodb/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/trinodb/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/trinodb/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/trinodb/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/trinodb/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/trinodb/trino/merges",
                        "archive_url": "https://api.github.com/repos/trinodb/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/trinodb/trino/downloads",
                        "issues_url": "https://api.github.com/repos/trinodb/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/trinodb/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/trinodb/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/trinodb/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/trinodb/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/trinodb/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/trinodb/trino/deployments",
                        "created_at": "2019-01-19T06:38:14Z",
                        "updated_at": "2022-12-07T23:23:39Z",
                        "pushed_at": "2022-12-08T01:09:12Z",
                        "git_url": "git://github.com/trinodb/trino.git",
                        "ssh_url": "git@github.com:trinodb/trino.git",
                        "clone_url": "https://github.com/trinodb/trino.git",
                        "svn_url": "https://github.com/trinodb/trino",
                        "homepage": "https://trino.io",
                        "size": 197719,
                        "stargazers_count": 6794,
                        "watchers_count": 6794,
                        "language": "Java",
                        "has_issues": true,
                        "has_projects": false,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": true,
                        "forks_count": 2084,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 2093,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "analytics",
                            "big-data",
                            "data-science",
                            "database",
                            "databases",
                            "datalake",
                            "distributed-database",
                            "distributed-databases",
                            "distributed-systems",
                            "hadoop",
                            "hive",
                            "java",
                            "jdbc",
                            "presto",
                            "prestodb",
                            "query-engine",
                            "sql",
                            "trino"
                        ],
                        "visibility": "public",
                        "forks": 2084,
                        "open_issues": 2093,
                        "watchers": 6794,
                        "default_branch": "master"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337"
                    },
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15337"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15337"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15337/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/trinodb/trino/statuses/f88ba0cee83615211a54a7351df5656d7688ae1c"
                    }
                },
                "author_association": "MEMBER",
                "auto_merge": null,
                "active_lock_reason": null
            }
        },
        "public": true,
        "created_at": "2022-12-08T02:00:07Z",
        "org": {
            "id": 34147222,
            "login": "trinodb",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/trinodb",
            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?"
        }
    },
    {
        "id": "25737163310",
        "type": "PullRequestReviewEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 166515022,
            "name": "trinodb/trino",
            "url": "https://api.github.com/repos/trinodb/trino"
        },
        "payload": {
            "action": "created",
            "review": {
                "id": 1209353593,
                "node_id": "PRR_kwDOCezRTs5IFUV5",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": null,
                "commit_id": "f88ba0cee83615211a54a7351df5656d7688ae1c",
                "submitted_at": "2022-12-08T02:00:07Z",
                "state": "commented",
                "html_url": "https://github.com/trinodb/trino/pull/15337#pullrequestreview-1209353593",
                "pull_request_url": "https://api.github.com/repos/trinodb/trino/pulls/15337",
                "author_association": "MEMBER",
                "_links": {
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15337#pullrequestreview-1209353593"
                    },
                    "pull_request": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337"
                    }
                }
            },
            "pull_request": {
                "url": "https://api.github.com/repos/trinodb/trino/pulls/15337",
                "id": 1152104129,
                "node_id": "PR_kwDOCezRTs5Eq7bB",
                "html_url": "https://github.com/trinodb/trino/pull/15337",
                "diff_url": "https://github.com/trinodb/trino/pull/15337.diff",
                "patch_url": "https://github.com/trinodb/trino/pull/15337.patch",
                "issue_url": "https://api.github.com/repos/trinodb/trino/issues/15337",
                "number": 15337,
                "state": "open",
                "locked": false,
                "title": "Fix test for invalid rate in FormatUtils.formatDataRate()",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "<!-- Thank you for submitting a pull request! Find more information in our development guide at https://github.com/trinodb/trino/blob/master/.github/DEVELOPMENT.md and contact us on #dev in Slack. -->\r\n<!-- Provide an overview of the PR for maintainers and reviewers. -->\r\n## Description\r\n\r\n`FormatUtils.formatDataRate()` contains the following code:\r\n\r\n```java\r\nlong rate = Math.round(dataSize.toBytes() / duration.getValue(SECONDS));\r\nif (Double.isNaN(rate) || Double.isInfinite(rate)) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nThe test can never evaluate as `true`, since both functions will return false for any `long`.\r\n\r\nThe correct test is:\r\n\r\n```java\r\nif (rate == Long.MAX_VALUE) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nIt's not necessary to test for `Long.MIN_VALUE`, since neither `dataSize` nor `duration` can be negative.\r\n\r\n<!-- Provide details that would help an engineer who is unfamiliar with this part of the code. -->\r\n## Unit Test\r\n\r\nI added a new class, `TestFormatUtils` to test both this fix and the rest of `FormatUtils`. The tests for this change are:\r\n\r\n```java\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), false), \"0B\");\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), true), \"0B/s\");\r\n```\r\n\r\n<!-- Mark the appropriate option with an (x). Propose a release note if you can. -->\r\n## Release notes\r\n\r\n(x) This is not user-visible or docs only and no release notes are required.\r\n( ) Release notes are required, please propose a release note for me.\r\n( ) Release notes are required, with the following suggested text:\r\n\r\n## Related Issue\r\n\r\nFixes #13093",
                "created_at": "2022-12-07T17:54:40Z",
                "updated_at": "2022-12-08T02:00:07Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": "dd4eb7e24625655b4a60619dabe31785fb81f5ab",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [
                    {
                        "id": 1202580151,
                        "node_id": "MDU6TGFiZWwxMjAyNTgwMTUx",
                        "url": "https://api.github.com/repos/trinodb/trino/labels/cla-signed",
                        "name": "cla-signed",
                        "color": "ededed",
                        "default": false,
                        "description": null
                    }
                ],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/trinodb/trino/pulls/15337/commits",
                "review_comments_url": "https://api.github.com/repos/trinodb/trino/pulls/15337/comments",
                "review_comment_url": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/trinodb/trino/issues/15337/comments",
                "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/f88ba0cee83615211a54a7351df5656d7688ae1c",
                "head": {
                    "label": "metadaddy:fix-formatdatarate-test",
                    "ref": "fix-formatdatarate-test",
                    "sha": "f88ba0cee83615211a54a7351df5656d7688ae1c",
                    "user": {
                        "login": "metadaddy",
                        "id": 723517,
                        "node_id": "MDQ6VXNlcjcyMzUxNw==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/metadaddy",
                        "html_url": "https://github.com/metadaddy",
                        "followers_url": "https://api.github.com/users/metadaddy/followers",
                        "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                        "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                        "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                        "repos_url": "https://api.github.com/users/metadaddy/repos",
                        "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 509274784,
                        "node_id": "R_kgDOHlrqoA",
                        "name": "trino",
                        "full_name": "metadaddy/trino",
                        "private": false,
                        "owner": {
                            "login": "metadaddy",
                            "id": 723517,
                            "node_id": "MDQ6VXNlcjcyMzUxNw==",
                            "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/metadaddy",
                            "html_url": "https://github.com/metadaddy",
                            "followers_url": "https://api.github.com/users/metadaddy/followers",
                            "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                            "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                            "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                            "repos_url": "https://api.github.com/users/metadaddy/repos",
                            "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/metadaddy/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": true,
                        "url": "https://api.github.com/repos/metadaddy/trino",
                        "forks_url": "https://api.github.com/repos/metadaddy/trino/forks",
                        "keys_url": "https://api.github.com/repos/metadaddy/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/metadaddy/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/metadaddy/trino/teams",
                        "hooks_url": "https://api.github.com/repos/metadaddy/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/metadaddy/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/metadaddy/trino/events",
                        "assignees_url": "https://api.github.com/repos/metadaddy/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/metadaddy/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/metadaddy/trino/tags",
                        "blobs_url": "https://api.github.com/repos/metadaddy/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/metadaddy/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/metadaddy/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/metadaddy/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/metadaddy/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/metadaddy/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/metadaddy/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/metadaddy/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/metadaddy/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/metadaddy/trino/subscription",
                        "commits_url": "https://api.github.com/repos/metadaddy/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/metadaddy/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/metadaddy/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/metadaddy/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/metadaddy/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/metadaddy/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/metadaddy/trino/merges",
                        "archive_url": "https://api.github.com/repos/metadaddy/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/metadaddy/trino/downloads",
                        "issues_url": "https://api.github.com/repos/metadaddy/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/metadaddy/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/metadaddy/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/metadaddy/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/metadaddy/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/metadaddy/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/metadaddy/trino/deployments",
                        "created_at": "2022-07-01T00:43:32Z",
                        "updated_at": "2022-07-06T01:44:20Z",
                        "pushed_at": "2022-12-07T17:50:11Z",
                        "git_url": "git://github.com/metadaddy/trino.git",
                        "ssh_url": "git@github.com:metadaddy/trino.git",
                        "clone_url": "https://github.com/metadaddy/trino.git",
                        "svn_url": "https://github.com/metadaddy/trino",
                        "homepage": "https://trino.io",
                        "size": 192363,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": "Java",
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "master"
                    }
                },
                "base": {
                    "label": "trinodb:master",
                    "ref": "master",
                    "sha": "4b266700437a87236ad0e0e5cd1db866f4f76dcb",
                    "user": {
                        "login": "trinodb",
                        "id": 34147222,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                        "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/trinodb",
                        "html_url": "https://github.com/trinodb",
                        "followers_url": "https://api.github.com/users/trinodb/followers",
                        "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                        "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                        "organizations_url": "https://api.github.com/users/trinodb/orgs",
                        "repos_url": "https://api.github.com/users/trinodb/repos",
                        "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/trinodb/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 166515022,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNjY1MTUwMjI=",
                        "name": "trino",
                        "full_name": "trinodb/trino",
                        "private": false,
                        "owner": {
                            "login": "trinodb",
                            "id": 34147222,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/trinodb",
                            "html_url": "https://github.com/trinodb",
                            "followers_url": "https://api.github.com/users/trinodb/followers",
                            "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                            "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                            "organizations_url": "https://api.github.com/users/trinodb/orgs",
                            "repos_url": "https://api.github.com/users/trinodb/repos",
                            "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/trinodb/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/trinodb/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": false,
                        "url": "https://api.github.com/repos/trinodb/trino",
                        "forks_url": "https://api.github.com/repos/trinodb/trino/forks",
                        "keys_url": "https://api.github.com/repos/trinodb/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/trinodb/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/trinodb/trino/teams",
                        "hooks_url": "https://api.github.com/repos/trinodb/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/trinodb/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/trinodb/trino/events",
                        "assignees_url": "https://api.github.com/repos/trinodb/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/trinodb/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/trinodb/trino/tags",
                        "blobs_url": "https://api.github.com/repos/trinodb/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/trinodb/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/trinodb/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/trinodb/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/trinodb/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/trinodb/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/trinodb/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/trinodb/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/trinodb/trino/subscription",
                        "commits_url": "https://api.github.com/repos/trinodb/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/trinodb/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/trinodb/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/trinodb/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/trinodb/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/trinodb/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/trinodb/trino/merges",
                        "archive_url": "https://api.github.com/repos/trinodb/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/trinodb/trino/downloads",
                        "issues_url": "https://api.github.com/repos/trinodb/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/trinodb/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/trinodb/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/trinodb/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/trinodb/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/trinodb/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/trinodb/trino/deployments",
                        "created_at": "2019-01-19T06:38:14Z",
                        "updated_at": "2022-12-07T23:23:39Z",
                        "pushed_at": "2022-12-08T01:09:12Z",
                        "git_url": "git://github.com/trinodb/trino.git",
                        "ssh_url": "git@github.com:trinodb/trino.git",
                        "clone_url": "https://github.com/trinodb/trino.git",
                        "svn_url": "https://github.com/trinodb/trino",
                        "homepage": "https://trino.io",
                        "size": 197719,
                        "stargazers_count": 6794,
                        "watchers_count": 6794,
                        "language": "Java",
                        "has_issues": true,
                        "has_projects": false,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": true,
                        "forks_count": 2084,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 2093,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "analytics",
                            "big-data",
                            "data-science",
                            "database",
                            "databases",
                            "datalake",
                            "distributed-database",
                            "distributed-databases",
                            "distributed-systems",
                            "hadoop",
                            "hive",
                            "java",
                            "jdbc",
                            "presto",
                            "prestodb",
                            "query-engine",
                            "sql",
                            "trino"
                        ],
                        "visibility": "public",
                        "forks": 2084,
                        "open_issues": 2093,
                        "watchers": 6794,
                        "default_branch": "master"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337"
                    },
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15337"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15337"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15337/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/trinodb/trino/statuses/f88ba0cee83615211a54a7351df5656d7688ae1c"
                    }
                },
                "author_association": "MEMBER",
                "auto_merge": null,
                "active_lock_reason": null
            }
        },
        "public": true,
        "created_at": "2022-12-08T02:00:10Z",
        "org": {
            "id": 34147222,
            "login": "trinodb",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/trinodb",
            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?"
        }
    },
    {
        "id": "25737159492",
        "type": "PullRequestReviewCommentEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 166515022,
            "name": "trinodb/trino",
            "url": "https://api.github.com/repos/trinodb/trino"
        },
        "payload": {
            "action": "created",
            "comment": {
                "url": "https://api.github.com/repos/trinodb/trino/pulls/comments/1042849580",
                "pull_request_review_id": 1209353494,
                "id": 1042849580,
                "node_id": "PRRC_kwDOCezRTs4-KJ8s",
                "diff_hunk": "@@ -0,0 +1,353 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.trino.cli;\n+\n+import io.airlift.units.DataSize;\n+import io.airlift.units.Duration;\n+import org.testng.annotations.Test;\n+\n+import static org.testng.Assert.assertEquals;\n+\n+public class TestFormatUtils\n+{\n+    @Test\n+    public void testFormatCount()\n+    {\n+        assertEquals(FormatUtils.formatCount(1L), \"1\");\n+        assertEquals(FormatUtils.formatCount(12L), \"12\");\n+        assertEquals(FormatUtils.formatCount(123L), \"123\");\n+        assertEquals(FormatUtils.formatCount(1234L), \"1.23K\");\n+        assertEquals(FormatUtils.formatCount(12345L), \"12.3K\");\n+        assertEquals(FormatUtils.formatCount(123456L), \"123K\");\n+        assertEquals(FormatUtils.formatCount(1234567L), \"1.23M\");\n+        assertEquals(FormatUtils.formatCount(12345678L), \"12.3M\");\n+        assertEquals(FormatUtils.formatCount(123456789L), \"123M\");\n+        assertEquals(FormatUtils.formatCount(1234567890L), \"1.23B\");\n+        assertEquals(FormatUtils.formatCount(12345678901L), \"12.3B\");\n+        assertEquals(FormatUtils.formatCount(123456789012L), \"123B\");\n+        assertEquals(FormatUtils.formatCount(1234567890123L), \"1.23T\");\n+        assertEquals(FormatUtils.formatCount(12345678901234L), \"12.3T\");\n+        assertEquals(FormatUtils.formatCount(123456789012345L), \"123T\");\n+        assertEquals(FormatUtils.formatCount(1234567890123456L), \"1.23Q\");\n+        assertEquals(FormatUtils.formatCount(12345678901234567L), \"12.3Q\");\n+        assertEquals(FormatUtils.formatCount(123456789012345678L), \"123Q\");\n+        assertEquals(FormatUtils.formatCount(1234567890123456789L), \"1235Q\");\n+    }\n+\n+    @Test\n+    public void formatCountRate()\n+    {\n+        assertEquals(FormatUtils.formatCountRate(0.0000000001D, Duration.valueOf(\"1ns\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(0.0000000001D, Duration.valueOf(\"1ns\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(0.000000001D, Duration.valueOf(\"1ns\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(0.000000001D, Duration.valueOf(\"1ns\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(0.0000000015D, Duration.valueOf(\"1ns\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(0.0000000015D, Duration.valueOf(\"1ns\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(1D, Duration.valueOf(\"1ns\"), false), \"1000M\");\n+        assertEquals(FormatUtils.formatCountRate(1D, Duration.valueOf(\"1ns\"), true), \"1000M/s\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"1ns\"), false), \"10B\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"1ns\"), true), \"10B/s\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"10ns\"), false), \"1000M\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"10ns\"), true), \"1000M/s\");\n+\n+        assertEquals(FormatUtils.formatCountRate(0.0000001D, Duration.valueOf(\"1us\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(0.0000001D, Duration.valueOf(\"1us\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(0.000001D, Duration.valueOf(\"1us\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(0.000001D, Duration.valueOf(\"1us\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(0.0000015D, Duration.valueOf(\"1us\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(0.0000015D, Duration.valueOf(\"1us\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(1D, Duration.valueOf(\"1us\"), false), \"1000K\");\n+        assertEquals(FormatUtils.formatCountRate(1D, Duration.valueOf(\"1us\"), true), \"1000K/s\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"1us\"), false), \"10M\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"1us\"), true), \"10M/s\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"10us\"), false), \"1000K\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"10us\"), true), \"1000K/s\");\n+\n+        assertEquals(FormatUtils.formatCountRate(0.0001D, Duration.valueOf(\"1ms\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(0.0001D, Duration.valueOf(\"1ms\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(0.001D, Duration.valueOf(\"1ms\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(0.001D, Duration.valueOf(\"1ms\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(0.0015D, Duration.valueOf(\"1ms\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(0.0015D, Duration.valueOf(\"1ms\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(1D, Duration.valueOf(\"1ms\"), false), \"1000\");\n+        assertEquals(FormatUtils.formatCountRate(1D, Duration.valueOf(\"1ms\"), true), \"1000/s\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"1ms\"), false), \"10K\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"1ms\"), true), \"10K/s\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"10ms\"), false), \"1000\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"10ms\"), true), \"1000/s\");\n+\n+        assertEquals(FormatUtils.formatCountRate(0.1D, Duration.valueOf(\"1s\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(0.1D, Duration.valueOf(\"1s\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"1s\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"1s\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"10s\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"10s\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(1.5D, Duration.valueOf(\"1s\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(1.5D, Duration.valueOf(\"1s\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"1s\"), false), \"10\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"1s\"), true), \"10/s\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"10s\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"10s\"), true), \"1/s\");\n+\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"1m\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"1m\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(60.0D, Duration.valueOf(\"1m\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(60.0D, Duration.valueOf(\"1m\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(600.0D, Duration.valueOf(\"1m\"), false), \"10\");\n+        assertEquals(FormatUtils.formatCountRate(600.0D, Duration.valueOf(\"1m\"), true), \"10/s\");\n+        assertEquals(FormatUtils.formatCountRate(100.0D, Duration.valueOf(\"10m\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(100.0D, Duration.valueOf(\"10m\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(600.0D, Duration.valueOf(\"10m\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(600.0D, Duration.valueOf(\"10m\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(6000.0D, Duration.valueOf(\"10m\"), false), \"10\");\n+        assertEquals(FormatUtils.formatCountRate(6000.0D, Duration.valueOf(\"10m\"), true), \"10/s\");\n+\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"1h\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"1h\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(3600.0D, Duration.valueOf(\"1h\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(3600.0D, Duration.valueOf(\"1h\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(36000.0D, Duration.valueOf(\"1h\"), false), \"10\");\n+        assertEquals(FormatUtils.formatCountRate(36000.0D, Duration.valueOf(\"1h\"), true), \"10/s\");\n+        assertEquals(FormatUtils.formatCountRate(100.0D, Duration.valueOf(\"10h\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(100.0D, Duration.valueOf(\"10h\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(36000.0D, Duration.valueOf(\"10h\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(36000.0D, Duration.valueOf(\"10h\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(360000.0D, Duration.valueOf(\"10h\"), false), \"10\");\n+        assertEquals(FormatUtils.formatCountRate(360000.0D, Duration.valueOf(\"10h\"), true), \"10/s\");\n+\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"1d\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"1d\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(86400.0D, Duration.valueOf(\"1d\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(86400.0D, Duration.valueOf(\"1d\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(864000.0D, Duration.valueOf(\"1d\"), false), \"10\");\n+        assertEquals(FormatUtils.formatCountRate(864000.0D, Duration.valueOf(\"1d\"), true), \"10/s\");\n+        assertEquals(FormatUtils.formatCountRate(86400.0D, Duration.valueOf(\"10d\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(86400.0D, Duration.valueOf(\"10d\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(864000.0D, Duration.valueOf(\"10d\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(864000.0D, Duration.valueOf(\"10d\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(8640000.0D, Duration.valueOf(\"10d\"), false), \"10\");\n+        assertEquals(FormatUtils.formatCountRate(8640000.0D, Duration.valueOf(\"10d\"), true), \"10/s\");\n+\n+        assertEquals(FormatUtils.formatCountRate(Double.NaN, Duration.valueOf(\"1s\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(Double.NaN, Duration.valueOf(\"1s\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(Double.POSITIVE_INFINITY, Duration.valueOf(\"1s\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(Double.POSITIVE_INFINITY, Duration.valueOf(\"1s\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(Double.NEGATIVE_INFINITY, Duration.valueOf(\"1s\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(Double.NEGATIVE_INFINITY, Duration.valueOf(\"1s\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"0s\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"0s\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(-1.0D, Duration.valueOf(\"0s\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(-1.0D, Duration.valueOf(\"0s\"), true), \"0/s\");\n+    }\n+\n+    @Test\n+    public void testFormatDataSize()\n+    {\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1L), false), \"1B\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1L), true), \"1B\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12L), false), \"12B\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12L), true), \"12B\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123L), false), \"123B\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123L), true), \"123B\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234L), false), \"1.21K\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234L), true), \"1.21KB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12345L), false), \"12.1K\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12345L), true), \"12.1KB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123456L), false), \"121K\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123456L), true), \"121KB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234567L), false), \"1.18M\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234567L), true), \"1.18MB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12345678L), false), \"11.8M\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12345678L), true), \"11.8MB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123456789L), false), \"118M\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123456789L), true), \"118MB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234567890L), false), \"1.15G\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234567890L), true), \"1.15GB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12345678901L), false), \"11.5G\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12345678901L), true), \"11.5GB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123456789012L), false), \"115G\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123456789012L), true), \"115GB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234567890123L), false), \"1.12T\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234567890123L), true), \"1.12TB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12345678901234L), false), \"11.2T\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12345678901234L), true), \"11.2TB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123456789012345L), false), \"112T\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123456789012345L), true), \"112TB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234567890123456L), false), \"1.1P\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234567890123456L), true), \"1.1PB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12345678901234567L), false), \"11P\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12345678901234567L), true), \"11PB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123456789012345678L), false), \"110P\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123456789012345678L), true), \"110PB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234567890123456789L), false), \"1097P\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234567890123456789L), true), \"1097PB\");\n+    }\n+\n+    @Test\n+    public void testFormatDataRate()\n+    {\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(0), Duration.valueOf(\"1ns\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(0), Duration.valueOf(\"1ns\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1ns\"), false), \"954M\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1ns\"), true), \"954MB/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"1ns\"), false), \"9.31G\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"1ns\"), true), \"9.31GB/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"10ns\"), false), \"954M\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"10ns\"), true), \"954MB/s\");\n+\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(0), Duration.valueOf(\"1us\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(0), Duration.valueOf(\"1us\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1us\"), false), \"977K\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1us\"), true), \"977KB/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"1us\"), false), \"9.54M\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"1us\"), true), \"9.54MB/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"10us\"), false), \"977K\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"10us\"), true), \"977KB/s\");\n+\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(0), Duration.valueOf(\"1ms\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(0), Duration.valueOf(\"1ms\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1ms\"), false), \"1000B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1ms\"), true), \"1000B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"1ms\"), false), \"9.77K\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"1ms\"), true), \"9.77KB/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"10ms\"), false), \"1000B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"10ms\"), true), \"1000B/s\");\n+\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(0), Duration.valueOf(\"1s\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(0), Duration.valueOf(\"1s\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1s\"), false), \"1B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1s\"), true), \"1B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"10s\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"10s\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"1s\"), false), \"10B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"1s\"), true), \"10B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"10s\"), false), \"1B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"10s\"), true), \"1B/s\");\n+\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1m\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1m\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(60), Duration.valueOf(\"1m\"), false), \"1B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(60), Duration.valueOf(\"1m\"), true), \"1B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(600), Duration.valueOf(\"1m\"), false), \"10B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(600), Duration.valueOf(\"1m\"), true), \"10B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(100), Duration.valueOf(\"10m\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(100), Duration.valueOf(\"10m\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(600), Duration.valueOf(\"10m\"), false), \"1B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(600), Duration.valueOf(\"10m\"), true), \"1B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(6000), Duration.valueOf(\"10m\"), false), \"10B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(6000), Duration.valueOf(\"10m\"), true), \"10B/s\");\n+\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1h\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1h\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(3600), Duration.valueOf(\"1h\"), false), \"1B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(3600), Duration.valueOf(\"1h\"), true), \"1B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(36000), Duration.valueOf(\"1h\"), false), \"10B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(36000), Duration.valueOf(\"1h\"), true), \"10B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(100), Duration.valueOf(\"10h\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(100), Duration.valueOf(\"10h\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(36000), Duration.valueOf(\"10h\"), false), \"1B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(36000), Duration.valueOf(\"10h\"), true), \"1B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(360000), Duration.valueOf(\"10h\"), false), \"10B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(360000), Duration.valueOf(\"10h\"), true), \"10B/s\");\n+\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1d\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1d\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(86400), Duration.valueOf(\"1d\"), false), \"1B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(86400), Duration.valueOf(\"1d\"), true), \"1B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(864000), Duration.valueOf(\"1d\"), false), \"10B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(864000), Duration.valueOf(\"1d\"), true), \"10B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(86400), Duration.valueOf(\"10d\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(86400), Duration.valueOf(\"10d\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(864000), Duration.valueOf(\"10d\"), false), \"1B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(864000), Duration.valueOf(\"10d\"), true), \"1B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(8640000), Duration.valueOf(\"10d\"), false), \"10B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(8640000), Duration.valueOf(\"10d\"), true), \"10B/s\");\n+\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), true), \"0B/s\");\n+    }\n+\n+    @Test\n+    public void testPluralize()\n+    {\n+        assertEquals(FormatUtils.pluralize(\"foo\", 0), \"foos\");\n+        assertEquals(FormatUtils.pluralize(\"foo\", 1), \"foo\");\n+        assertEquals(FormatUtils.pluralize(\"foo\", 2), \"foos\");\n+    }\n+\n+    @Test\n+    public void testFormatFinalTime()\n+    {\n+        assertEquals(FormatUtils.formatFinalTime(Duration.valueOf(\"0us\")), \"0.00\");\n+        assertEquals(FormatUtils.formatFinalTime(Duration.valueOf(\"0ns\")), \"0.00\");\n+        assertEquals(FormatUtils.formatFinalTime(Duration.valueOf(\"0ms\")), \"0.00\");\n+        assertEquals(FormatUtils.formatFinalTime(Duration.valueOf(\"0s\")), \"0.00\");\n+        assertEquals(FormatUtils.formatFinalTime(Duration.valueOf(\"0m\")), \"0.00\");\n+        assertEquals(FormatUtils.formatFinalTime(Duration.valueOf(\"0h\")), \"0.00\");\n+        assertEquals(FormatUtils.formatFinalTime(Duration.valueOf(\"0d\")), \"0.00\");\n+        assertEquals(FormatUtils.formatFinalTime(Duration.valueOf(\"1us\")), \"0.00\");\n+        assertEquals(FormatUtils.formatFinalTime(Duration.valueOf(\"1ns\")), \"0.00\");\n+        assertEquals(FormatUtils.formatFinalTime(Duration.valueOf(\"1ms\")), \"0.00\");\n+        assertEquals(FormatUtils.formatFinalTime(Duration.valueOf(\"10ms\")), \"0.01\");\n+        assertEquals(FormatUtils.formatFinalTime(Duration.valueOf(\"100ms\")), \"0.10\");\n+        assertEquals(FormatUtils.formatFinalTime(Duration.valueOf(\"1s\")), \"1.00\");\n+        assertEquals(FormatUtils.formatFinalTime(Duration.valueOf(\"10s\")), \"10.00\");\n+        assertEquals(FormatUtils.formatFinalTime(Duration.valueOf(\"1m\")), \"1:00\");\n+        assertEquals(FormatUtils.formatFinalTime(Duration.valueOf(\"61s\")), \"1:01\");\n+        assertEquals(FormatUtils.formatFinalTime(Duration.valueOf(\"1h\")), \"60:00\");\n+        assertEquals(FormatUtils.formatFinalTime(Duration.valueOf(\"61m\")), \"61:00\");\n+        assertEquals(FormatUtils.formatFinalTime(Duration.valueOf(\"1d\")), \"1440:00\");\n+        assertEquals(FormatUtils.formatFinalTime(Duration.valueOf(\"25h\")), \"1500:00\");\n+    }\n+\n+    @Test\n+    public void testFormatIndeterminateProgressBar()\n+    {\n+        assertEquals(FormatUtils.formatProgressBar(10, 0), \"<=>       \");\n+        assertEquals(FormatUtils.formatProgressBar(10, 1), \" <=>      \");\n+        assertEquals(FormatUtils.formatProgressBar(10, 7), \"       <=>\");\n+        assertEquals(FormatUtils.formatProgressBar(10, 8), \"      <=> \");\n+        assertEquals(FormatUtils.formatProgressBar(10, 13), \" <=>      \");\n+        assertEquals(FormatUtils.formatProgressBar(10, 14), \"<=>       \");\n+    }\n+\n+    @Test(expectedExceptions = IllegalArgumentException.class, expectedExceptionsMessageRegExp = \"invalid count: -1\")",
                "path": "client/trino-cli/src/test/java/io/trino/cli/TestFormatUtils.java",
                "position": 325,
                "original_position": 325,
                "commit_id": "f88ba0cee83615211a54a7351df5656d7688ae1c",
                "original_commit_id": "f88ba0cee83615211a54a7351df5656d7688ae1c",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "Done:\r\n\r\n```java\r\n    @Test\r\n    public void testInvalidIndeterminateProgressBar()\r\n    {\r\n        assertThatThrownBy(() -> formatProgressBar(10, -1))\r\n                .isInstanceOf(IllegalArgumentException.class)\r\n                .hasMessageContaining(\"invalid count: -1\");\r\n    }\r\n```",
                "created_at": "2022-12-08T01:59:56Z",
                "updated_at": "2022-12-08T01:59:56Z",
                "html_url": "https://github.com/trinodb/trino/pull/15337#discussion_r1042849580",
                "pull_request_url": "https://api.github.com/repos/trinodb/trino/pulls/15337",
                "author_association": "MEMBER",
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/comments/1042849580"
                    },
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15337#discussion_r1042849580"
                    },
                    "pull_request": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337"
                    }
                },
                "reactions": {
                    "url": "https://api.github.com/repos/trinodb/trino/pulls/comments/1042849580/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "start_line": null,
                "original_start_line": null,
                "start_side": null,
                "line": 325,
                "original_line": 325,
                "side": "RIGHT",
                "in_reply_to_id": 1042707547
            },
            "pull_request": {
                "url": "https://api.github.com/repos/trinodb/trino/pulls/15337",
                "id": 1152104129,
                "node_id": "PR_kwDOCezRTs5Eq7bB",
                "html_url": "https://github.com/trinodb/trino/pull/15337",
                "diff_url": "https://github.com/trinodb/trino/pull/15337.diff",
                "patch_url": "https://github.com/trinodb/trino/pull/15337.patch",
                "issue_url": "https://api.github.com/repos/trinodb/trino/issues/15337",
                "number": 15337,
                "state": "open",
                "locked": false,
                "title": "Fix test for invalid rate in FormatUtils.formatDataRate()",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "<!-- Thank you for submitting a pull request! Find more information in our development guide at https://github.com/trinodb/trino/blob/master/.github/DEVELOPMENT.md and contact us on #dev in Slack. -->\r\n<!-- Provide an overview of the PR for maintainers and reviewers. -->\r\n## Description\r\n\r\n`FormatUtils.formatDataRate()` contains the following code:\r\n\r\n```java\r\nlong rate = Math.round(dataSize.toBytes() / duration.getValue(SECONDS));\r\nif (Double.isNaN(rate) || Double.isInfinite(rate)) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nThe test can never evaluate as `true`, since both functions will return false for any `long`.\r\n\r\nThe correct test is:\r\n\r\n```java\r\nif (rate == Long.MAX_VALUE) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nIt's not necessary to test for `Long.MIN_VALUE`, since neither `dataSize` nor `duration` can be negative.\r\n\r\n<!-- Provide details that would help an engineer who is unfamiliar with this part of the code. -->\r\n## Unit Test\r\n\r\nI added a new class, `TestFormatUtils` to test both this fix and the rest of `FormatUtils`. The tests for this change are:\r\n\r\n```java\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), false), \"0B\");\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), true), \"0B/s\");\r\n```\r\n\r\n<!-- Mark the appropriate option with an (x). Propose a release note if you can. -->\r\n## Release notes\r\n\r\n(x) This is not user-visible or docs only and no release notes are required.\r\n( ) Release notes are required, please propose a release note for me.\r\n( ) Release notes are required, with the following suggested text:\r\n\r\n## Related Issue\r\n\r\nFixes #13093",
                "created_at": "2022-12-07T17:54:40Z",
                "updated_at": "2022-12-08T01:59:56Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": "dd4eb7e24625655b4a60619dabe31785fb81f5ab",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [
                    {
                        "id": 1202580151,
                        "node_id": "MDU6TGFiZWwxMjAyNTgwMTUx",
                        "url": "https://api.github.com/repos/trinodb/trino/labels/cla-signed",
                        "name": "cla-signed",
                        "color": "ededed",
                        "default": false,
                        "description": null
                    }
                ],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/trinodb/trino/pulls/15337/commits",
                "review_comments_url": "https://api.github.com/repos/trinodb/trino/pulls/15337/comments",
                "review_comment_url": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/trinodb/trino/issues/15337/comments",
                "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/f88ba0cee83615211a54a7351df5656d7688ae1c",
                "head": {
                    "label": "metadaddy:fix-formatdatarate-test",
                    "ref": "fix-formatdatarate-test",
                    "sha": "f88ba0cee83615211a54a7351df5656d7688ae1c",
                    "user": {
                        "login": "metadaddy",
                        "id": 723517,
                        "node_id": "MDQ6VXNlcjcyMzUxNw==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/metadaddy",
                        "html_url": "https://github.com/metadaddy",
                        "followers_url": "https://api.github.com/users/metadaddy/followers",
                        "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                        "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                        "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                        "repos_url": "https://api.github.com/users/metadaddy/repos",
                        "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 509274784,
                        "node_id": "R_kgDOHlrqoA",
                        "name": "trino",
                        "full_name": "metadaddy/trino",
                        "private": false,
                        "owner": {
                            "login": "metadaddy",
                            "id": 723517,
                            "node_id": "MDQ6VXNlcjcyMzUxNw==",
                            "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/metadaddy",
                            "html_url": "https://github.com/metadaddy",
                            "followers_url": "https://api.github.com/users/metadaddy/followers",
                            "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                            "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                            "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                            "repos_url": "https://api.github.com/users/metadaddy/repos",
                            "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/metadaddy/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": true,
                        "url": "https://api.github.com/repos/metadaddy/trino",
                        "forks_url": "https://api.github.com/repos/metadaddy/trino/forks",
                        "keys_url": "https://api.github.com/repos/metadaddy/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/metadaddy/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/metadaddy/trino/teams",
                        "hooks_url": "https://api.github.com/repos/metadaddy/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/metadaddy/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/metadaddy/trino/events",
                        "assignees_url": "https://api.github.com/repos/metadaddy/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/metadaddy/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/metadaddy/trino/tags",
                        "blobs_url": "https://api.github.com/repos/metadaddy/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/metadaddy/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/metadaddy/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/metadaddy/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/metadaddy/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/metadaddy/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/metadaddy/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/metadaddy/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/metadaddy/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/metadaddy/trino/subscription",
                        "commits_url": "https://api.github.com/repos/metadaddy/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/metadaddy/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/metadaddy/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/metadaddy/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/metadaddy/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/metadaddy/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/metadaddy/trino/merges",
                        "archive_url": "https://api.github.com/repos/metadaddy/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/metadaddy/trino/downloads",
                        "issues_url": "https://api.github.com/repos/metadaddy/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/metadaddy/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/metadaddy/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/metadaddy/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/metadaddy/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/metadaddy/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/metadaddy/trino/deployments",
                        "created_at": "2022-07-01T00:43:32Z",
                        "updated_at": "2022-07-06T01:44:20Z",
                        "pushed_at": "2022-12-07T17:50:11Z",
                        "git_url": "git://github.com/metadaddy/trino.git",
                        "ssh_url": "git@github.com:metadaddy/trino.git",
                        "clone_url": "https://github.com/metadaddy/trino.git",
                        "svn_url": "https://github.com/metadaddy/trino",
                        "homepage": "https://trino.io",
                        "size": 192363,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": "Java",
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "master"
                    }
                },
                "base": {
                    "label": "trinodb:master",
                    "ref": "master",
                    "sha": "4b266700437a87236ad0e0e5cd1db866f4f76dcb",
                    "user": {
                        "login": "trinodb",
                        "id": 34147222,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                        "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/trinodb",
                        "html_url": "https://github.com/trinodb",
                        "followers_url": "https://api.github.com/users/trinodb/followers",
                        "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                        "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                        "organizations_url": "https://api.github.com/users/trinodb/orgs",
                        "repos_url": "https://api.github.com/users/trinodb/repos",
                        "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/trinodb/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 166515022,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNjY1MTUwMjI=",
                        "name": "trino",
                        "full_name": "trinodb/trino",
                        "private": false,
                        "owner": {
                            "login": "trinodb",
                            "id": 34147222,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/trinodb",
                            "html_url": "https://github.com/trinodb",
                            "followers_url": "https://api.github.com/users/trinodb/followers",
                            "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                            "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                            "organizations_url": "https://api.github.com/users/trinodb/orgs",
                            "repos_url": "https://api.github.com/users/trinodb/repos",
                            "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/trinodb/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/trinodb/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": false,
                        "url": "https://api.github.com/repos/trinodb/trino",
                        "forks_url": "https://api.github.com/repos/trinodb/trino/forks",
                        "keys_url": "https://api.github.com/repos/trinodb/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/trinodb/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/trinodb/trino/teams",
                        "hooks_url": "https://api.github.com/repos/trinodb/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/trinodb/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/trinodb/trino/events",
                        "assignees_url": "https://api.github.com/repos/trinodb/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/trinodb/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/trinodb/trino/tags",
                        "blobs_url": "https://api.github.com/repos/trinodb/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/trinodb/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/trinodb/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/trinodb/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/trinodb/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/trinodb/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/trinodb/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/trinodb/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/trinodb/trino/subscription",
                        "commits_url": "https://api.github.com/repos/trinodb/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/trinodb/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/trinodb/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/trinodb/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/trinodb/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/trinodb/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/trinodb/trino/merges",
                        "archive_url": "https://api.github.com/repos/trinodb/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/trinodb/trino/downloads",
                        "issues_url": "https://api.github.com/repos/trinodb/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/trinodb/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/trinodb/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/trinodb/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/trinodb/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/trinodb/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/trinodb/trino/deployments",
                        "created_at": "2019-01-19T06:38:14Z",
                        "updated_at": "2022-12-07T23:23:39Z",
                        "pushed_at": "2022-12-08T01:09:12Z",
                        "git_url": "git://github.com/trinodb/trino.git",
                        "ssh_url": "git@github.com:trinodb/trino.git",
                        "clone_url": "https://github.com/trinodb/trino.git",
                        "svn_url": "https://github.com/trinodb/trino",
                        "homepage": "https://trino.io",
                        "size": 197719,
                        "stargazers_count": 6794,
                        "watchers_count": 6794,
                        "language": "Java",
                        "has_issues": true,
                        "has_projects": false,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": true,
                        "forks_count": 2084,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 2093,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "analytics",
                            "big-data",
                            "data-science",
                            "database",
                            "databases",
                            "datalake",
                            "distributed-database",
                            "distributed-databases",
                            "distributed-systems",
                            "hadoop",
                            "hive",
                            "java",
                            "jdbc",
                            "presto",
                            "prestodb",
                            "query-engine",
                            "sql",
                            "trino"
                        ],
                        "visibility": "public",
                        "forks": 2084,
                        "open_issues": 2093,
                        "watchers": 6794,
                        "default_branch": "master"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337"
                    },
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15337"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15337"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15337/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/trinodb/trino/statuses/f88ba0cee83615211a54a7351df5656d7688ae1c"
                    }
                },
                "author_association": "MEMBER",
                "auto_merge": null,
                "active_lock_reason": null
            }
        },
        "public": true,
        "created_at": "2022-12-08T01:59:56Z",
        "org": {
            "id": 34147222,
            "login": "trinodb",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/trinodb",
            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?"
        }
    },
    {
        "id": "25737159462",
        "type": "PullRequestReviewEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 166515022,
            "name": "trinodb/trino",
            "url": "https://api.github.com/repos/trinodb/trino"
        },
        "payload": {
            "action": "created",
            "review": {
                "id": 1209353494,
                "node_id": "PRR_kwDOCezRTs5IFUUW",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": null,
                "commit_id": "f88ba0cee83615211a54a7351df5656d7688ae1c",
                "submitted_at": "2022-12-08T01:59:56Z",
                "state": "commented",
                "html_url": "https://github.com/trinodb/trino/pull/15337#pullrequestreview-1209353494",
                "pull_request_url": "https://api.github.com/repos/trinodb/trino/pulls/15337",
                "author_association": "MEMBER",
                "_links": {
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15337#pullrequestreview-1209353494"
                    },
                    "pull_request": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337"
                    }
                }
            },
            "pull_request": {
                "url": "https://api.github.com/repos/trinodb/trino/pulls/15337",
                "id": 1152104129,
                "node_id": "PR_kwDOCezRTs5Eq7bB",
                "html_url": "https://github.com/trinodb/trino/pull/15337",
                "diff_url": "https://github.com/trinodb/trino/pull/15337.diff",
                "patch_url": "https://github.com/trinodb/trino/pull/15337.patch",
                "issue_url": "https://api.github.com/repos/trinodb/trino/issues/15337",
                "number": 15337,
                "state": "open",
                "locked": false,
                "title": "Fix test for invalid rate in FormatUtils.formatDataRate()",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "<!-- Thank you for submitting a pull request! Find more information in our development guide at https://github.com/trinodb/trino/blob/master/.github/DEVELOPMENT.md and contact us on #dev in Slack. -->\r\n<!-- Provide an overview of the PR for maintainers and reviewers. -->\r\n## Description\r\n\r\n`FormatUtils.formatDataRate()` contains the following code:\r\n\r\n```java\r\nlong rate = Math.round(dataSize.toBytes() / duration.getValue(SECONDS));\r\nif (Double.isNaN(rate) || Double.isInfinite(rate)) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nThe test can never evaluate as `true`, since both functions will return false for any `long`.\r\n\r\nThe correct test is:\r\n\r\n```java\r\nif (rate == Long.MAX_VALUE) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nIt's not necessary to test for `Long.MIN_VALUE`, since neither `dataSize` nor `duration` can be negative.\r\n\r\n<!-- Provide details that would help an engineer who is unfamiliar with this part of the code. -->\r\n## Unit Test\r\n\r\nI added a new class, `TestFormatUtils` to test both this fix and the rest of `FormatUtils`. The tests for this change are:\r\n\r\n```java\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), false), \"0B\");\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), true), \"0B/s\");\r\n```\r\n\r\n<!-- Mark the appropriate option with an (x). Propose a release note if you can. -->\r\n## Release notes\r\n\r\n(x) This is not user-visible or docs only and no release notes are required.\r\n( ) Release notes are required, please propose a release note for me.\r\n( ) Release notes are required, with the following suggested text:\r\n\r\n## Related Issue\r\n\r\nFixes #13093",
                "created_at": "2022-12-07T17:54:40Z",
                "updated_at": "2022-12-08T01:59:56Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": "dd4eb7e24625655b4a60619dabe31785fb81f5ab",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [
                    {
                        "id": 1202580151,
                        "node_id": "MDU6TGFiZWwxMjAyNTgwMTUx",
                        "url": "https://api.github.com/repos/trinodb/trino/labels/cla-signed",
                        "name": "cla-signed",
                        "color": "ededed",
                        "default": false,
                        "description": null
                    }
                ],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/trinodb/trino/pulls/15337/commits",
                "review_comments_url": "https://api.github.com/repos/trinodb/trino/pulls/15337/comments",
                "review_comment_url": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/trinodb/trino/issues/15337/comments",
                "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/f88ba0cee83615211a54a7351df5656d7688ae1c",
                "head": {
                    "label": "metadaddy:fix-formatdatarate-test",
                    "ref": "fix-formatdatarate-test",
                    "sha": "f88ba0cee83615211a54a7351df5656d7688ae1c",
                    "user": {
                        "login": "metadaddy",
                        "id": 723517,
                        "node_id": "MDQ6VXNlcjcyMzUxNw==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/metadaddy",
                        "html_url": "https://github.com/metadaddy",
                        "followers_url": "https://api.github.com/users/metadaddy/followers",
                        "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                        "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                        "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                        "repos_url": "https://api.github.com/users/metadaddy/repos",
                        "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 509274784,
                        "node_id": "R_kgDOHlrqoA",
                        "name": "trino",
                        "full_name": "metadaddy/trino",
                        "private": false,
                        "owner": {
                            "login": "metadaddy",
                            "id": 723517,
                            "node_id": "MDQ6VXNlcjcyMzUxNw==",
                            "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/metadaddy",
                            "html_url": "https://github.com/metadaddy",
                            "followers_url": "https://api.github.com/users/metadaddy/followers",
                            "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                            "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                            "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                            "repos_url": "https://api.github.com/users/metadaddy/repos",
                            "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/metadaddy/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": true,
                        "url": "https://api.github.com/repos/metadaddy/trino",
                        "forks_url": "https://api.github.com/repos/metadaddy/trino/forks",
                        "keys_url": "https://api.github.com/repos/metadaddy/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/metadaddy/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/metadaddy/trino/teams",
                        "hooks_url": "https://api.github.com/repos/metadaddy/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/metadaddy/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/metadaddy/trino/events",
                        "assignees_url": "https://api.github.com/repos/metadaddy/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/metadaddy/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/metadaddy/trino/tags",
                        "blobs_url": "https://api.github.com/repos/metadaddy/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/metadaddy/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/metadaddy/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/metadaddy/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/metadaddy/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/metadaddy/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/metadaddy/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/metadaddy/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/metadaddy/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/metadaddy/trino/subscription",
                        "commits_url": "https://api.github.com/repos/metadaddy/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/metadaddy/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/metadaddy/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/metadaddy/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/metadaddy/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/metadaddy/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/metadaddy/trino/merges",
                        "archive_url": "https://api.github.com/repos/metadaddy/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/metadaddy/trino/downloads",
                        "issues_url": "https://api.github.com/repos/metadaddy/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/metadaddy/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/metadaddy/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/metadaddy/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/metadaddy/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/metadaddy/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/metadaddy/trino/deployments",
                        "created_at": "2022-07-01T00:43:32Z",
                        "updated_at": "2022-07-06T01:44:20Z",
                        "pushed_at": "2022-12-07T17:50:11Z",
                        "git_url": "git://github.com/metadaddy/trino.git",
                        "ssh_url": "git@github.com:metadaddy/trino.git",
                        "clone_url": "https://github.com/metadaddy/trino.git",
                        "svn_url": "https://github.com/metadaddy/trino",
                        "homepage": "https://trino.io",
                        "size": 192363,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": "Java",
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "master"
                    }
                },
                "base": {
                    "label": "trinodb:master",
                    "ref": "master",
                    "sha": "4b266700437a87236ad0e0e5cd1db866f4f76dcb",
                    "user": {
                        "login": "trinodb",
                        "id": 34147222,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                        "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/trinodb",
                        "html_url": "https://github.com/trinodb",
                        "followers_url": "https://api.github.com/users/trinodb/followers",
                        "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                        "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                        "organizations_url": "https://api.github.com/users/trinodb/orgs",
                        "repos_url": "https://api.github.com/users/trinodb/repos",
                        "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/trinodb/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 166515022,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNjY1MTUwMjI=",
                        "name": "trino",
                        "full_name": "trinodb/trino",
                        "private": false,
                        "owner": {
                            "login": "trinodb",
                            "id": 34147222,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/trinodb",
                            "html_url": "https://github.com/trinodb",
                            "followers_url": "https://api.github.com/users/trinodb/followers",
                            "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                            "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                            "organizations_url": "https://api.github.com/users/trinodb/orgs",
                            "repos_url": "https://api.github.com/users/trinodb/repos",
                            "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/trinodb/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/trinodb/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": false,
                        "url": "https://api.github.com/repos/trinodb/trino",
                        "forks_url": "https://api.github.com/repos/trinodb/trino/forks",
                        "keys_url": "https://api.github.com/repos/trinodb/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/trinodb/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/trinodb/trino/teams",
                        "hooks_url": "https://api.github.com/repos/trinodb/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/trinodb/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/trinodb/trino/events",
                        "assignees_url": "https://api.github.com/repos/trinodb/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/trinodb/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/trinodb/trino/tags",
                        "blobs_url": "https://api.github.com/repos/trinodb/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/trinodb/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/trinodb/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/trinodb/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/trinodb/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/trinodb/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/trinodb/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/trinodb/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/trinodb/trino/subscription",
                        "commits_url": "https://api.github.com/repos/trinodb/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/trinodb/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/trinodb/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/trinodb/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/trinodb/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/trinodb/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/trinodb/trino/merges",
                        "archive_url": "https://api.github.com/repos/trinodb/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/trinodb/trino/downloads",
                        "issues_url": "https://api.github.com/repos/trinodb/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/trinodb/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/trinodb/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/trinodb/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/trinodb/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/trinodb/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/trinodb/trino/deployments",
                        "created_at": "2019-01-19T06:38:14Z",
                        "updated_at": "2022-12-07T23:23:39Z",
                        "pushed_at": "2022-12-08T01:09:12Z",
                        "git_url": "git://github.com/trinodb/trino.git",
                        "ssh_url": "git@github.com:trinodb/trino.git",
                        "clone_url": "https://github.com/trinodb/trino.git",
                        "svn_url": "https://github.com/trinodb/trino",
                        "homepage": "https://trino.io",
                        "size": 197719,
                        "stargazers_count": 6794,
                        "watchers_count": 6794,
                        "language": "Java",
                        "has_issues": true,
                        "has_projects": false,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": true,
                        "forks_count": 2084,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 2093,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "analytics",
                            "big-data",
                            "data-science",
                            "database",
                            "databases",
                            "datalake",
                            "distributed-database",
                            "distributed-databases",
                            "distributed-systems",
                            "hadoop",
                            "hive",
                            "java",
                            "jdbc",
                            "presto",
                            "prestodb",
                            "query-engine",
                            "sql",
                            "trino"
                        ],
                        "visibility": "public",
                        "forks": 2084,
                        "open_issues": 2093,
                        "watchers": 6794,
                        "default_branch": "master"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337"
                    },
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15337"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15337"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15337/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/trinodb/trino/statuses/f88ba0cee83615211a54a7351df5656d7688ae1c"
                    }
                },
                "author_association": "MEMBER",
                "auto_merge": null,
                "active_lock_reason": null
            }
        },
        "public": true,
        "created_at": "2022-12-08T01:59:57Z",
        "org": {
            "id": 34147222,
            "login": "trinodb",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/trinodb",
            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?"
        }
    },
    {
        "id": "25737145244",
        "type": "PullRequestReviewCommentEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 166515022,
            "name": "trinodb/trino",
            "url": "https://api.github.com/repos/trinodb/trino"
        },
        "payload": {
            "action": "created",
            "comment": {
                "url": "https://api.github.com/repos/trinodb/trino/pulls/comments/1042849228",
                "pull_request_review_id": 1209352752,
                "id": 1042849228,
                "node_id": "PRRC_kwDOCezRTs4-KJ3M",
                "diff_hunk": "@@ -0,0 +1,353 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.trino.cli;\n+\n+import io.airlift.units.DataSize;\n+import io.airlift.units.Duration;\n+import org.testng.annotations.Test;\n+\n+import static org.testng.Assert.assertEquals;\n+\n+public class TestFormatUtils\n+{\n+    @Test\n+    public void testFormatCount()\n+    {\n+        assertEquals(FormatUtils.formatCount(1L), \"1\");\n+        assertEquals(FormatUtils.formatCount(12L), \"12\");\n+        assertEquals(FormatUtils.formatCount(123L), \"123\");\n+        assertEquals(FormatUtils.formatCount(1234L), \"1.23K\");\n+        assertEquals(FormatUtils.formatCount(12345L), \"12.3K\");\n+        assertEquals(FormatUtils.formatCount(123456L), \"123K\");\n+        assertEquals(FormatUtils.formatCount(1234567L), \"1.23M\");\n+        assertEquals(FormatUtils.formatCount(12345678L), \"12.3M\");\n+        assertEquals(FormatUtils.formatCount(123456789L), \"123M\");\n+        assertEquals(FormatUtils.formatCount(1234567890L), \"1.23B\");\n+        assertEquals(FormatUtils.formatCount(12345678901L), \"12.3B\");\n+        assertEquals(FormatUtils.formatCount(123456789012L), \"123B\");\n+        assertEquals(FormatUtils.formatCount(1234567890123L), \"1.23T\");\n+        assertEquals(FormatUtils.formatCount(12345678901234L), \"12.3T\");\n+        assertEquals(FormatUtils.formatCount(123456789012345L), \"123T\");\n+        assertEquals(FormatUtils.formatCount(1234567890123456L), \"1.23Q\");\n+        assertEquals(FormatUtils.formatCount(12345678901234567L), \"12.3Q\");\n+        assertEquals(FormatUtils.formatCount(123456789012345678L), \"123Q\");\n+        assertEquals(FormatUtils.formatCount(1234567890123456789L), \"1235Q\");\n+    }\n+\n+    @Test\n+    public void formatCountRate()\n+    {\n+        assertEquals(FormatUtils.formatCountRate(0.0000000001D, Duration.valueOf(\"1ns\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(0.0000000001D, Duration.valueOf(\"1ns\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(0.000000001D, Duration.valueOf(\"1ns\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(0.000000001D, Duration.valueOf(\"1ns\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(0.0000000015D, Duration.valueOf(\"1ns\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(0.0000000015D, Duration.valueOf(\"1ns\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(1D, Duration.valueOf(\"1ns\"), false), \"1000M\");\n+        assertEquals(FormatUtils.formatCountRate(1D, Duration.valueOf(\"1ns\"), true), \"1000M/s\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"1ns\"), false), \"10B\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"1ns\"), true), \"10B/s\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"10ns\"), false), \"1000M\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"10ns\"), true), \"1000M/s\");\n+\n+        assertEquals(FormatUtils.formatCountRate(0.0000001D, Duration.valueOf(\"1us\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(0.0000001D, Duration.valueOf(\"1us\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(0.000001D, Duration.valueOf(\"1us\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(0.000001D, Duration.valueOf(\"1us\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(0.0000015D, Duration.valueOf(\"1us\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(0.0000015D, Duration.valueOf(\"1us\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(1D, Duration.valueOf(\"1us\"), false), \"1000K\");\n+        assertEquals(FormatUtils.formatCountRate(1D, Duration.valueOf(\"1us\"), true), \"1000K/s\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"1us\"), false), \"10M\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"1us\"), true), \"10M/s\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"10us\"), false), \"1000K\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"10us\"), true), \"1000K/s\");\n+\n+        assertEquals(FormatUtils.formatCountRate(0.0001D, Duration.valueOf(\"1ms\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(0.0001D, Duration.valueOf(\"1ms\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(0.001D, Duration.valueOf(\"1ms\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(0.001D, Duration.valueOf(\"1ms\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(0.0015D, Duration.valueOf(\"1ms\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(0.0015D, Duration.valueOf(\"1ms\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(1D, Duration.valueOf(\"1ms\"), false), \"1000\");\n+        assertEquals(FormatUtils.formatCountRate(1D, Duration.valueOf(\"1ms\"), true), \"1000/s\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"1ms\"), false), \"10K\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"1ms\"), true), \"10K/s\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"10ms\"), false), \"1000\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"10ms\"), true), \"1000/s\");\n+\n+        assertEquals(FormatUtils.formatCountRate(0.1D, Duration.valueOf(\"1s\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(0.1D, Duration.valueOf(\"1s\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"1s\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"1s\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"10s\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"10s\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(1.5D, Duration.valueOf(\"1s\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(1.5D, Duration.valueOf(\"1s\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"1s\"), false), \"10\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"1s\"), true), \"10/s\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"10s\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"10s\"), true), \"1/s\");\n+\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"1m\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"1m\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(60.0D, Duration.valueOf(\"1m\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(60.0D, Duration.valueOf(\"1m\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(600.0D, Duration.valueOf(\"1m\"), false), \"10\");\n+        assertEquals(FormatUtils.formatCountRate(600.0D, Duration.valueOf(\"1m\"), true), \"10/s\");\n+        assertEquals(FormatUtils.formatCountRate(100.0D, Duration.valueOf(\"10m\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(100.0D, Duration.valueOf(\"10m\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(600.0D, Duration.valueOf(\"10m\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(600.0D, Duration.valueOf(\"10m\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(6000.0D, Duration.valueOf(\"10m\"), false), \"10\");\n+        assertEquals(FormatUtils.formatCountRate(6000.0D, Duration.valueOf(\"10m\"), true), \"10/s\");\n+\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"1h\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"1h\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(3600.0D, Duration.valueOf(\"1h\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(3600.0D, Duration.valueOf(\"1h\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(36000.0D, Duration.valueOf(\"1h\"), false), \"10\");\n+        assertEquals(FormatUtils.formatCountRate(36000.0D, Duration.valueOf(\"1h\"), true), \"10/s\");\n+        assertEquals(FormatUtils.formatCountRate(100.0D, Duration.valueOf(\"10h\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(100.0D, Duration.valueOf(\"10h\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(36000.0D, Duration.valueOf(\"10h\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(36000.0D, Duration.valueOf(\"10h\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(360000.0D, Duration.valueOf(\"10h\"), false), \"10\");\n+        assertEquals(FormatUtils.formatCountRate(360000.0D, Duration.valueOf(\"10h\"), true), \"10/s\");\n+\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"1d\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"1d\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(86400.0D, Duration.valueOf(\"1d\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(86400.0D, Duration.valueOf(\"1d\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(864000.0D, Duration.valueOf(\"1d\"), false), \"10\");\n+        assertEquals(FormatUtils.formatCountRate(864000.0D, Duration.valueOf(\"1d\"), true), \"10/s\");\n+        assertEquals(FormatUtils.formatCountRate(86400.0D, Duration.valueOf(\"10d\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(86400.0D, Duration.valueOf(\"10d\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(864000.0D, Duration.valueOf(\"10d\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(864000.0D, Duration.valueOf(\"10d\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(8640000.0D, Duration.valueOf(\"10d\"), false), \"10\");\n+        assertEquals(FormatUtils.formatCountRate(8640000.0D, Duration.valueOf(\"10d\"), true), \"10/s\");\n+\n+        assertEquals(FormatUtils.formatCountRate(Double.NaN, Duration.valueOf(\"1s\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(Double.NaN, Duration.valueOf(\"1s\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(Double.POSITIVE_INFINITY, Duration.valueOf(\"1s\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(Double.POSITIVE_INFINITY, Duration.valueOf(\"1s\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(Double.NEGATIVE_INFINITY, Duration.valueOf(\"1s\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(Double.NEGATIVE_INFINITY, Duration.valueOf(\"1s\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"0s\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"0s\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(-1.0D, Duration.valueOf(\"0s\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(-1.0D, Duration.valueOf(\"0s\"), true), \"0/s\");\n+    }\n+\n+    @Test\n+    public void testFormatDataSize()\n+    {\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1L), false), \"1B\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1L), true), \"1B\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12L), false), \"12B\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12L), true), \"12B\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123L), false), \"123B\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123L), true), \"123B\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234L), false), \"1.21K\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234L), true), \"1.21KB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12345L), false), \"12.1K\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12345L), true), \"12.1KB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123456L), false), \"121K\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123456L), true), \"121KB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234567L), false), \"1.18M\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234567L), true), \"1.18MB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12345678L), false), \"11.8M\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12345678L), true), \"11.8MB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123456789L), false), \"118M\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123456789L), true), \"118MB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234567890L), false), \"1.15G\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234567890L), true), \"1.15GB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12345678901L), false), \"11.5G\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12345678901L), true), \"11.5GB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123456789012L), false), \"115G\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123456789012L), true), \"115GB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234567890123L), false), \"1.12T\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234567890123L), true), \"1.12TB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12345678901234L), false), \"11.2T\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12345678901234L), true), \"11.2TB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123456789012345L), false), \"112T\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123456789012345L), true), \"112TB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234567890123456L), false), \"1.1P\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234567890123456L), true), \"1.1PB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12345678901234567L), false), \"11P\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12345678901234567L), true), \"11PB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123456789012345678L), false), \"110P\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123456789012345678L), true), \"110PB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234567890123456789L), false), \"1097P\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234567890123456789L), true), \"1097PB\");\n+    }\n+\n+    @Test\n+    public void testFormatDataRate()\n+    {\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(0), Duration.valueOf(\"1ns\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(0), Duration.valueOf(\"1ns\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1ns\"), false), \"954M\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1ns\"), true), \"954MB/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"1ns\"), false), \"9.31G\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"1ns\"), true), \"9.31GB/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"10ns\"), false), \"954M\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"10ns\"), true), \"954MB/s\");\n+\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(0), Duration.valueOf(\"1us\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(0), Duration.valueOf(\"1us\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1us\"), false), \"977K\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1us\"), true), \"977KB/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"1us\"), false), \"9.54M\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"1us\"), true), \"9.54MB/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"10us\"), false), \"977K\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"10us\"), true), \"977KB/s\");\n+\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(0), Duration.valueOf(\"1ms\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(0), Duration.valueOf(\"1ms\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1ms\"), false), \"1000B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1ms\"), true), \"1000B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"1ms\"), false), \"9.77K\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"1ms\"), true), \"9.77KB/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"10ms\"), false), \"1000B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"10ms\"), true), \"1000B/s\");\n+\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(0), Duration.valueOf(\"1s\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(0), Duration.valueOf(\"1s\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1s\"), false), \"1B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1s\"), true), \"1B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"10s\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"10s\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"1s\"), false), \"10B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"1s\"), true), \"10B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"10s\"), false), \"1B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"10s\"), true), \"1B/s\");\n+\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1m\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1m\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(60), Duration.valueOf(\"1m\"), false), \"1B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(60), Duration.valueOf(\"1m\"), true), \"1B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(600), Duration.valueOf(\"1m\"), false), \"10B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(600), Duration.valueOf(\"1m\"), true), \"10B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(100), Duration.valueOf(\"10m\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(100), Duration.valueOf(\"10m\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(600), Duration.valueOf(\"10m\"), false), \"1B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(600), Duration.valueOf(\"10m\"), true), \"1B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(6000), Duration.valueOf(\"10m\"), false), \"10B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(6000), Duration.valueOf(\"10m\"), true), \"10B/s\");\n+\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1h\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1h\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(3600), Duration.valueOf(\"1h\"), false), \"1B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(3600), Duration.valueOf(\"1h\"), true), \"1B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(36000), Duration.valueOf(\"1h\"), false), \"10B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(36000), Duration.valueOf(\"1h\"), true), \"10B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(100), Duration.valueOf(\"10h\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(100), Duration.valueOf(\"10h\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(36000), Duration.valueOf(\"10h\"), false), \"1B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(36000), Duration.valueOf(\"10h\"), true), \"1B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(360000), Duration.valueOf(\"10h\"), false), \"10B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(360000), Duration.valueOf(\"10h\"), true), \"10B/s\");\n+\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1d\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1d\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(86400), Duration.valueOf(\"1d\"), false), \"1B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(86400), Duration.valueOf(\"1d\"), true), \"1B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(864000), Duration.valueOf(\"1d\"), false), \"10B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(864000), Duration.valueOf(\"1d\"), true), \"10B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(86400), Duration.valueOf(\"10d\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(86400), Duration.valueOf(\"10d\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(864000), Duration.valueOf(\"10d\"), false), \"1B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(864000), Duration.valueOf(\"10d\"), true), \"1B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(8640000), Duration.valueOf(\"10d\"), false), \"10B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(8640000), Duration.valueOf(\"10d\"), true), \"10B/s\");\n+\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), true), \"0B/s\");\n+    }\n+\n+    @Test\n+    public void testPluralize()",
                "path": "client/trino-cli/src/test/java/io/trino/cli/TestFormatUtils.java",
                "position": 282,
                "original_position": 282,
                "commit_id": "f88ba0cee83615211a54a7351df5656d7688ae1c",
                "original_commit_id": "f88ba0cee83615211a54a7351df5656d7688ae1c",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "@findepi Two PRs, or one PR containing two commits?",
                "created_at": "2022-12-08T01:59:04Z",
                "updated_at": "2022-12-08T01:59:05Z",
                "html_url": "https://github.com/trinodb/trino/pull/15337#discussion_r1042849228",
                "pull_request_url": "https://api.github.com/repos/trinodb/trino/pulls/15337",
                "author_association": "MEMBER",
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/comments/1042849228"
                    },
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15337#discussion_r1042849228"
                    },
                    "pull_request": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337"
                    }
                },
                "reactions": {
                    "url": "https://api.github.com/repos/trinodb/trino/pulls/comments/1042849228/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "start_line": null,
                "original_start_line": null,
                "start_side": null,
                "line": 282,
                "original_line": 282,
                "side": "RIGHT",
                "in_reply_to_id": 1042707167
            },
            "pull_request": {
                "url": "https://api.github.com/repos/trinodb/trino/pulls/15337",
                "id": 1152104129,
                "node_id": "PR_kwDOCezRTs5Eq7bB",
                "html_url": "https://github.com/trinodb/trino/pull/15337",
                "diff_url": "https://github.com/trinodb/trino/pull/15337.diff",
                "patch_url": "https://github.com/trinodb/trino/pull/15337.patch",
                "issue_url": "https://api.github.com/repos/trinodb/trino/issues/15337",
                "number": 15337,
                "state": "open",
                "locked": false,
                "title": "Fix test for invalid rate in FormatUtils.formatDataRate()",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "<!-- Thank you for submitting a pull request! Find more information in our development guide at https://github.com/trinodb/trino/blob/master/.github/DEVELOPMENT.md and contact us on #dev in Slack. -->\r\n<!-- Provide an overview of the PR for maintainers and reviewers. -->\r\n## Description\r\n\r\n`FormatUtils.formatDataRate()` contains the following code:\r\n\r\n```java\r\nlong rate = Math.round(dataSize.toBytes() / duration.getValue(SECONDS));\r\nif (Double.isNaN(rate) || Double.isInfinite(rate)) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nThe test can never evaluate as `true`, since both functions will return false for any `long`.\r\n\r\nThe correct test is:\r\n\r\n```java\r\nif (rate == Long.MAX_VALUE) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nIt's not necessary to test for `Long.MIN_VALUE`, since neither `dataSize` nor `duration` can be negative.\r\n\r\n<!-- Provide details that would help an engineer who is unfamiliar with this part of the code. -->\r\n## Unit Test\r\n\r\nI added a new class, `TestFormatUtils` to test both this fix and the rest of `FormatUtils`. The tests for this change are:\r\n\r\n```java\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), false), \"0B\");\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), true), \"0B/s\");\r\n```\r\n\r\n<!-- Mark the appropriate option with an (x). Propose a release note if you can. -->\r\n## Release notes\r\n\r\n(x) This is not user-visible or docs only and no release notes are required.\r\n( ) Release notes are required, please propose a release note for me.\r\n( ) Release notes are required, with the following suggested text:\r\n\r\n## Related Issue\r\n\r\nFixes #13093",
                "created_at": "2022-12-07T17:54:40Z",
                "updated_at": "2022-12-08T01:59:05Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": "dd4eb7e24625655b4a60619dabe31785fb81f5ab",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [
                    {
                        "id": 1202580151,
                        "node_id": "MDU6TGFiZWwxMjAyNTgwMTUx",
                        "url": "https://api.github.com/repos/trinodb/trino/labels/cla-signed",
                        "name": "cla-signed",
                        "color": "ededed",
                        "default": false,
                        "description": null
                    }
                ],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/trinodb/trino/pulls/15337/commits",
                "review_comments_url": "https://api.github.com/repos/trinodb/trino/pulls/15337/comments",
                "review_comment_url": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/trinodb/trino/issues/15337/comments",
                "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/f88ba0cee83615211a54a7351df5656d7688ae1c",
                "head": {
                    "label": "metadaddy:fix-formatdatarate-test",
                    "ref": "fix-formatdatarate-test",
                    "sha": "f88ba0cee83615211a54a7351df5656d7688ae1c",
                    "user": {
                        "login": "metadaddy",
                        "id": 723517,
                        "node_id": "MDQ6VXNlcjcyMzUxNw==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/metadaddy",
                        "html_url": "https://github.com/metadaddy",
                        "followers_url": "https://api.github.com/users/metadaddy/followers",
                        "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                        "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                        "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                        "repos_url": "https://api.github.com/users/metadaddy/repos",
                        "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 509274784,
                        "node_id": "R_kgDOHlrqoA",
                        "name": "trino",
                        "full_name": "metadaddy/trino",
                        "private": false,
                        "owner": {
                            "login": "metadaddy",
                            "id": 723517,
                            "node_id": "MDQ6VXNlcjcyMzUxNw==",
                            "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/metadaddy",
                            "html_url": "https://github.com/metadaddy",
                            "followers_url": "https://api.github.com/users/metadaddy/followers",
                            "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                            "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                            "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                            "repos_url": "https://api.github.com/users/metadaddy/repos",
                            "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/metadaddy/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": true,
                        "url": "https://api.github.com/repos/metadaddy/trino",
                        "forks_url": "https://api.github.com/repos/metadaddy/trino/forks",
                        "keys_url": "https://api.github.com/repos/metadaddy/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/metadaddy/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/metadaddy/trino/teams",
                        "hooks_url": "https://api.github.com/repos/metadaddy/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/metadaddy/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/metadaddy/trino/events",
                        "assignees_url": "https://api.github.com/repos/metadaddy/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/metadaddy/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/metadaddy/trino/tags",
                        "blobs_url": "https://api.github.com/repos/metadaddy/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/metadaddy/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/metadaddy/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/metadaddy/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/metadaddy/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/metadaddy/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/metadaddy/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/metadaddy/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/metadaddy/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/metadaddy/trino/subscription",
                        "commits_url": "https://api.github.com/repos/metadaddy/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/metadaddy/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/metadaddy/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/metadaddy/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/metadaddy/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/metadaddy/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/metadaddy/trino/merges",
                        "archive_url": "https://api.github.com/repos/metadaddy/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/metadaddy/trino/downloads",
                        "issues_url": "https://api.github.com/repos/metadaddy/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/metadaddy/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/metadaddy/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/metadaddy/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/metadaddy/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/metadaddy/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/metadaddy/trino/deployments",
                        "created_at": "2022-07-01T00:43:32Z",
                        "updated_at": "2022-07-06T01:44:20Z",
                        "pushed_at": "2022-12-07T17:50:11Z",
                        "git_url": "git://github.com/metadaddy/trino.git",
                        "ssh_url": "git@github.com:metadaddy/trino.git",
                        "clone_url": "https://github.com/metadaddy/trino.git",
                        "svn_url": "https://github.com/metadaddy/trino",
                        "homepage": "https://trino.io",
                        "size": 192363,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": "Java",
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "master"
                    }
                },
                "base": {
                    "label": "trinodb:master",
                    "ref": "master",
                    "sha": "4b266700437a87236ad0e0e5cd1db866f4f76dcb",
                    "user": {
                        "login": "trinodb",
                        "id": 34147222,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                        "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/trinodb",
                        "html_url": "https://github.com/trinodb",
                        "followers_url": "https://api.github.com/users/trinodb/followers",
                        "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                        "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                        "organizations_url": "https://api.github.com/users/trinodb/orgs",
                        "repos_url": "https://api.github.com/users/trinodb/repos",
                        "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/trinodb/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 166515022,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNjY1MTUwMjI=",
                        "name": "trino",
                        "full_name": "trinodb/trino",
                        "private": false,
                        "owner": {
                            "login": "trinodb",
                            "id": 34147222,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/trinodb",
                            "html_url": "https://github.com/trinodb",
                            "followers_url": "https://api.github.com/users/trinodb/followers",
                            "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                            "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                            "organizations_url": "https://api.github.com/users/trinodb/orgs",
                            "repos_url": "https://api.github.com/users/trinodb/repos",
                            "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/trinodb/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/trinodb/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": false,
                        "url": "https://api.github.com/repos/trinodb/trino",
                        "forks_url": "https://api.github.com/repos/trinodb/trino/forks",
                        "keys_url": "https://api.github.com/repos/trinodb/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/trinodb/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/trinodb/trino/teams",
                        "hooks_url": "https://api.github.com/repos/trinodb/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/trinodb/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/trinodb/trino/events",
                        "assignees_url": "https://api.github.com/repos/trinodb/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/trinodb/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/trinodb/trino/tags",
                        "blobs_url": "https://api.github.com/repos/trinodb/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/trinodb/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/trinodb/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/trinodb/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/trinodb/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/trinodb/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/trinodb/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/trinodb/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/trinodb/trino/subscription",
                        "commits_url": "https://api.github.com/repos/trinodb/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/trinodb/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/trinodb/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/trinodb/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/trinodb/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/trinodb/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/trinodb/trino/merges",
                        "archive_url": "https://api.github.com/repos/trinodb/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/trinodb/trino/downloads",
                        "issues_url": "https://api.github.com/repos/trinodb/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/trinodb/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/trinodb/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/trinodb/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/trinodb/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/trinodb/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/trinodb/trino/deployments",
                        "created_at": "2019-01-19T06:38:14Z",
                        "updated_at": "2022-12-07T23:23:39Z",
                        "pushed_at": "2022-12-08T01:09:12Z",
                        "git_url": "git://github.com/trinodb/trino.git",
                        "ssh_url": "git@github.com:trinodb/trino.git",
                        "clone_url": "https://github.com/trinodb/trino.git",
                        "svn_url": "https://github.com/trinodb/trino",
                        "homepage": "https://trino.io",
                        "size": 197719,
                        "stargazers_count": 6794,
                        "watchers_count": 6794,
                        "language": "Java",
                        "has_issues": true,
                        "has_projects": false,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": true,
                        "forks_count": 2084,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 2093,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "analytics",
                            "big-data",
                            "data-science",
                            "database",
                            "databases",
                            "datalake",
                            "distributed-database",
                            "distributed-databases",
                            "distributed-systems",
                            "hadoop",
                            "hive",
                            "java",
                            "jdbc",
                            "presto",
                            "prestodb",
                            "query-engine",
                            "sql",
                            "trino"
                        ],
                        "visibility": "public",
                        "forks": 2084,
                        "open_issues": 2093,
                        "watchers": 6794,
                        "default_branch": "master"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337"
                    },
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15337"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15337"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15337/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/trinodb/trino/statuses/f88ba0cee83615211a54a7351df5656d7688ae1c"
                    }
                },
                "author_association": "MEMBER",
                "auto_merge": null,
                "active_lock_reason": null
            }
        },
        "public": true,
        "created_at": "2022-12-08T01:59:04Z",
        "org": {
            "id": 34147222,
            "login": "trinodb",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/trinodb",
            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?"
        }
    },
    {
        "id": "25737145179",
        "type": "PullRequestReviewEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 166515022,
            "name": "trinodb/trino",
            "url": "https://api.github.com/repos/trinodb/trino"
        },
        "payload": {
            "action": "created",
            "review": {
                "id": 1209352752,
                "node_id": "PRR_kwDOCezRTs5IFUIw",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": null,
                "commit_id": "f88ba0cee83615211a54a7351df5656d7688ae1c",
                "submitted_at": "2022-12-08T01:59:05Z",
                "state": "commented",
                "html_url": "https://github.com/trinodb/trino/pull/15337#pullrequestreview-1209352752",
                "pull_request_url": "https://api.github.com/repos/trinodb/trino/pulls/15337",
                "author_association": "MEMBER",
                "_links": {
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15337#pullrequestreview-1209352752"
                    },
                    "pull_request": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337"
                    }
                }
            },
            "pull_request": {
                "url": "https://api.github.com/repos/trinodb/trino/pulls/15337",
                "id": 1152104129,
                "node_id": "PR_kwDOCezRTs5Eq7bB",
                "html_url": "https://github.com/trinodb/trino/pull/15337",
                "diff_url": "https://github.com/trinodb/trino/pull/15337.diff",
                "patch_url": "https://github.com/trinodb/trino/pull/15337.patch",
                "issue_url": "https://api.github.com/repos/trinodb/trino/issues/15337",
                "number": 15337,
                "state": "open",
                "locked": false,
                "title": "Fix test for invalid rate in FormatUtils.formatDataRate()",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "<!-- Thank you for submitting a pull request! Find more information in our development guide at https://github.com/trinodb/trino/blob/master/.github/DEVELOPMENT.md and contact us on #dev in Slack. -->\r\n<!-- Provide an overview of the PR for maintainers and reviewers. -->\r\n## Description\r\n\r\n`FormatUtils.formatDataRate()` contains the following code:\r\n\r\n```java\r\nlong rate = Math.round(dataSize.toBytes() / duration.getValue(SECONDS));\r\nif (Double.isNaN(rate) || Double.isInfinite(rate)) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nThe test can never evaluate as `true`, since both functions will return false for any `long`.\r\n\r\nThe correct test is:\r\n\r\n```java\r\nif (rate == Long.MAX_VALUE) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nIt's not necessary to test for `Long.MIN_VALUE`, since neither `dataSize` nor `duration` can be negative.\r\n\r\n<!-- Provide details that would help an engineer who is unfamiliar with this part of the code. -->\r\n## Unit Test\r\n\r\nI added a new class, `TestFormatUtils` to test both this fix and the rest of `FormatUtils`. The tests for this change are:\r\n\r\n```java\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), false), \"0B\");\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), true), \"0B/s\");\r\n```\r\n\r\n<!-- Mark the appropriate option with an (x). Propose a release note if you can. -->\r\n## Release notes\r\n\r\n(x) This is not user-visible or docs only and no release notes are required.\r\n( ) Release notes are required, please propose a release note for me.\r\n( ) Release notes are required, with the following suggested text:\r\n\r\n## Related Issue\r\n\r\nFixes #13093",
                "created_at": "2022-12-07T17:54:40Z",
                "updated_at": "2022-12-08T01:59:05Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": "dd4eb7e24625655b4a60619dabe31785fb81f5ab",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [
                    {
                        "id": 1202580151,
                        "node_id": "MDU6TGFiZWwxMjAyNTgwMTUx",
                        "url": "https://api.github.com/repos/trinodb/trino/labels/cla-signed",
                        "name": "cla-signed",
                        "color": "ededed",
                        "default": false,
                        "description": null
                    }
                ],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/trinodb/trino/pulls/15337/commits",
                "review_comments_url": "https://api.github.com/repos/trinodb/trino/pulls/15337/comments",
                "review_comment_url": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/trinodb/trino/issues/15337/comments",
                "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/f88ba0cee83615211a54a7351df5656d7688ae1c",
                "head": {
                    "label": "metadaddy:fix-formatdatarate-test",
                    "ref": "fix-formatdatarate-test",
                    "sha": "f88ba0cee83615211a54a7351df5656d7688ae1c",
                    "user": {
                        "login": "metadaddy",
                        "id": 723517,
                        "node_id": "MDQ6VXNlcjcyMzUxNw==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/metadaddy",
                        "html_url": "https://github.com/metadaddy",
                        "followers_url": "https://api.github.com/users/metadaddy/followers",
                        "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                        "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                        "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                        "repos_url": "https://api.github.com/users/metadaddy/repos",
                        "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 509274784,
                        "node_id": "R_kgDOHlrqoA",
                        "name": "trino",
                        "full_name": "metadaddy/trino",
                        "private": false,
                        "owner": {
                            "login": "metadaddy",
                            "id": 723517,
                            "node_id": "MDQ6VXNlcjcyMzUxNw==",
                            "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/metadaddy",
                            "html_url": "https://github.com/metadaddy",
                            "followers_url": "https://api.github.com/users/metadaddy/followers",
                            "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                            "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                            "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                            "repos_url": "https://api.github.com/users/metadaddy/repos",
                            "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/metadaddy/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": true,
                        "url": "https://api.github.com/repos/metadaddy/trino",
                        "forks_url": "https://api.github.com/repos/metadaddy/trino/forks",
                        "keys_url": "https://api.github.com/repos/metadaddy/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/metadaddy/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/metadaddy/trino/teams",
                        "hooks_url": "https://api.github.com/repos/metadaddy/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/metadaddy/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/metadaddy/trino/events",
                        "assignees_url": "https://api.github.com/repos/metadaddy/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/metadaddy/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/metadaddy/trino/tags",
                        "blobs_url": "https://api.github.com/repos/metadaddy/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/metadaddy/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/metadaddy/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/metadaddy/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/metadaddy/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/metadaddy/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/metadaddy/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/metadaddy/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/metadaddy/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/metadaddy/trino/subscription",
                        "commits_url": "https://api.github.com/repos/metadaddy/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/metadaddy/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/metadaddy/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/metadaddy/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/metadaddy/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/metadaddy/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/metadaddy/trino/merges",
                        "archive_url": "https://api.github.com/repos/metadaddy/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/metadaddy/trino/downloads",
                        "issues_url": "https://api.github.com/repos/metadaddy/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/metadaddy/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/metadaddy/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/metadaddy/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/metadaddy/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/metadaddy/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/metadaddy/trino/deployments",
                        "created_at": "2022-07-01T00:43:32Z",
                        "updated_at": "2022-07-06T01:44:20Z",
                        "pushed_at": "2022-12-07T17:50:11Z",
                        "git_url": "git://github.com/metadaddy/trino.git",
                        "ssh_url": "git@github.com:metadaddy/trino.git",
                        "clone_url": "https://github.com/metadaddy/trino.git",
                        "svn_url": "https://github.com/metadaddy/trino",
                        "homepage": "https://trino.io",
                        "size": 192363,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": "Java",
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "master"
                    }
                },
                "base": {
                    "label": "trinodb:master",
                    "ref": "master",
                    "sha": "4b266700437a87236ad0e0e5cd1db866f4f76dcb",
                    "user": {
                        "login": "trinodb",
                        "id": 34147222,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                        "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/trinodb",
                        "html_url": "https://github.com/trinodb",
                        "followers_url": "https://api.github.com/users/trinodb/followers",
                        "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                        "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                        "organizations_url": "https://api.github.com/users/trinodb/orgs",
                        "repos_url": "https://api.github.com/users/trinodb/repos",
                        "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/trinodb/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 166515022,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNjY1MTUwMjI=",
                        "name": "trino",
                        "full_name": "trinodb/trino",
                        "private": false,
                        "owner": {
                            "login": "trinodb",
                            "id": 34147222,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/trinodb",
                            "html_url": "https://github.com/trinodb",
                            "followers_url": "https://api.github.com/users/trinodb/followers",
                            "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                            "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                            "organizations_url": "https://api.github.com/users/trinodb/orgs",
                            "repos_url": "https://api.github.com/users/trinodb/repos",
                            "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/trinodb/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/trinodb/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": false,
                        "url": "https://api.github.com/repos/trinodb/trino",
                        "forks_url": "https://api.github.com/repos/trinodb/trino/forks",
                        "keys_url": "https://api.github.com/repos/trinodb/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/trinodb/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/trinodb/trino/teams",
                        "hooks_url": "https://api.github.com/repos/trinodb/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/trinodb/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/trinodb/trino/events",
                        "assignees_url": "https://api.github.com/repos/trinodb/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/trinodb/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/trinodb/trino/tags",
                        "blobs_url": "https://api.github.com/repos/trinodb/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/trinodb/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/trinodb/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/trinodb/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/trinodb/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/trinodb/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/trinodb/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/trinodb/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/trinodb/trino/subscription",
                        "commits_url": "https://api.github.com/repos/trinodb/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/trinodb/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/trinodb/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/trinodb/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/trinodb/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/trinodb/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/trinodb/trino/merges",
                        "archive_url": "https://api.github.com/repos/trinodb/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/trinodb/trino/downloads",
                        "issues_url": "https://api.github.com/repos/trinodb/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/trinodb/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/trinodb/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/trinodb/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/trinodb/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/trinodb/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/trinodb/trino/deployments",
                        "created_at": "2019-01-19T06:38:14Z",
                        "updated_at": "2022-12-07T23:23:39Z",
                        "pushed_at": "2022-12-08T01:09:12Z",
                        "git_url": "git://github.com/trinodb/trino.git",
                        "ssh_url": "git@github.com:trinodb/trino.git",
                        "clone_url": "https://github.com/trinodb/trino.git",
                        "svn_url": "https://github.com/trinodb/trino",
                        "homepage": "https://trino.io",
                        "size": 197719,
                        "stargazers_count": 6794,
                        "watchers_count": 6794,
                        "language": "Java",
                        "has_issues": true,
                        "has_projects": false,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": true,
                        "forks_count": 2084,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 2093,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "analytics",
                            "big-data",
                            "data-science",
                            "database",
                            "databases",
                            "datalake",
                            "distributed-database",
                            "distributed-databases",
                            "distributed-systems",
                            "hadoop",
                            "hive",
                            "java",
                            "jdbc",
                            "presto",
                            "prestodb",
                            "query-engine",
                            "sql",
                            "trino"
                        ],
                        "visibility": "public",
                        "forks": 2084,
                        "open_issues": 2093,
                        "watchers": 6794,
                        "default_branch": "master"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337"
                    },
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15337"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15337"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15337/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/trinodb/trino/statuses/f88ba0cee83615211a54a7351df5656d7688ae1c"
                    }
                },
                "author_association": "MEMBER",
                "auto_merge": null,
                "active_lock_reason": null
            }
        },
        "public": true,
        "created_at": "2022-12-08T01:59:05Z",
        "org": {
            "id": 34147222,
            "login": "trinodb",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/trinodb",
            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?"
        }
    },
    {
        "id": "25737138380",
        "type": "PullRequestReviewEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 166515022,
            "name": "trinodb/trino",
            "url": "https://api.github.com/repos/trinodb/trino"
        },
        "payload": {
            "action": "created",
            "review": {
                "id": 1209352152,
                "node_id": "PRR_kwDOCezRTs5IFT_Y",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": null,
                "commit_id": "f88ba0cee83615211a54a7351df5656d7688ae1c",
                "submitted_at": "2022-12-08T01:58:34Z",
                "state": "commented",
                "html_url": "https://github.com/trinodb/trino/pull/15337#pullrequestreview-1209352152",
                "pull_request_url": "https://api.github.com/repos/trinodb/trino/pulls/15337",
                "author_association": "MEMBER",
                "_links": {
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15337#pullrequestreview-1209352152"
                    },
                    "pull_request": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337"
                    }
                }
            },
            "pull_request": {
                "url": "https://api.github.com/repos/trinodb/trino/pulls/15337",
                "id": 1152104129,
                "node_id": "PR_kwDOCezRTs5Eq7bB",
                "html_url": "https://github.com/trinodb/trino/pull/15337",
                "diff_url": "https://github.com/trinodb/trino/pull/15337.diff",
                "patch_url": "https://github.com/trinodb/trino/pull/15337.patch",
                "issue_url": "https://api.github.com/repos/trinodb/trino/issues/15337",
                "number": 15337,
                "state": "open",
                "locked": false,
                "title": "Fix test for invalid rate in FormatUtils.formatDataRate()",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "<!-- Thank you for submitting a pull request! Find more information in our development guide at https://github.com/trinodb/trino/blob/master/.github/DEVELOPMENT.md and contact us on #dev in Slack. -->\r\n<!-- Provide an overview of the PR for maintainers and reviewers. -->\r\n## Description\r\n\r\n`FormatUtils.formatDataRate()` contains the following code:\r\n\r\n```java\r\nlong rate = Math.round(dataSize.toBytes() / duration.getValue(SECONDS));\r\nif (Double.isNaN(rate) || Double.isInfinite(rate)) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nThe test can never evaluate as `true`, since both functions will return false for any `long`.\r\n\r\nThe correct test is:\r\n\r\n```java\r\nif (rate == Long.MAX_VALUE) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nIt's not necessary to test for `Long.MIN_VALUE`, since neither `dataSize` nor `duration` can be negative.\r\n\r\n<!-- Provide details that would help an engineer who is unfamiliar with this part of the code. -->\r\n## Unit Test\r\n\r\nI added a new class, `TestFormatUtils` to test both this fix and the rest of `FormatUtils`. The tests for this change are:\r\n\r\n```java\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), false), \"0B\");\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), true), \"0B/s\");\r\n```\r\n\r\n<!-- Mark the appropriate option with an (x). Propose a release note if you can. -->\r\n## Release notes\r\n\r\n(x) This is not user-visible or docs only and no release notes are required.\r\n( ) Release notes are required, please propose a release note for me.\r\n( ) Release notes are required, with the following suggested text:\r\n\r\n## Related Issue\r\n\r\nFixes #13093",
                "created_at": "2022-12-07T17:54:40Z",
                "updated_at": "2022-12-08T01:58:34Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": "dd4eb7e24625655b4a60619dabe31785fb81f5ab",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [
                    {
                        "id": 1202580151,
                        "node_id": "MDU6TGFiZWwxMjAyNTgwMTUx",
                        "url": "https://api.github.com/repos/trinodb/trino/labels/cla-signed",
                        "name": "cla-signed",
                        "color": "ededed",
                        "default": false,
                        "description": null
                    }
                ],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/trinodb/trino/pulls/15337/commits",
                "review_comments_url": "https://api.github.com/repos/trinodb/trino/pulls/15337/comments",
                "review_comment_url": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/trinodb/trino/issues/15337/comments",
                "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/f88ba0cee83615211a54a7351df5656d7688ae1c",
                "head": {
                    "label": "metadaddy:fix-formatdatarate-test",
                    "ref": "fix-formatdatarate-test",
                    "sha": "f88ba0cee83615211a54a7351df5656d7688ae1c",
                    "user": {
                        "login": "metadaddy",
                        "id": 723517,
                        "node_id": "MDQ6VXNlcjcyMzUxNw==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/metadaddy",
                        "html_url": "https://github.com/metadaddy",
                        "followers_url": "https://api.github.com/users/metadaddy/followers",
                        "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                        "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                        "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                        "repos_url": "https://api.github.com/users/metadaddy/repos",
                        "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 509274784,
                        "node_id": "R_kgDOHlrqoA",
                        "name": "trino",
                        "full_name": "metadaddy/trino",
                        "private": false,
                        "owner": {
                            "login": "metadaddy",
                            "id": 723517,
                            "node_id": "MDQ6VXNlcjcyMzUxNw==",
                            "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/metadaddy",
                            "html_url": "https://github.com/metadaddy",
                            "followers_url": "https://api.github.com/users/metadaddy/followers",
                            "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                            "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                            "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                            "repos_url": "https://api.github.com/users/metadaddy/repos",
                            "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/metadaddy/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": true,
                        "url": "https://api.github.com/repos/metadaddy/trino",
                        "forks_url": "https://api.github.com/repos/metadaddy/trino/forks",
                        "keys_url": "https://api.github.com/repos/metadaddy/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/metadaddy/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/metadaddy/trino/teams",
                        "hooks_url": "https://api.github.com/repos/metadaddy/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/metadaddy/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/metadaddy/trino/events",
                        "assignees_url": "https://api.github.com/repos/metadaddy/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/metadaddy/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/metadaddy/trino/tags",
                        "blobs_url": "https://api.github.com/repos/metadaddy/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/metadaddy/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/metadaddy/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/metadaddy/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/metadaddy/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/metadaddy/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/metadaddy/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/metadaddy/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/metadaddy/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/metadaddy/trino/subscription",
                        "commits_url": "https://api.github.com/repos/metadaddy/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/metadaddy/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/metadaddy/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/metadaddy/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/metadaddy/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/metadaddy/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/metadaddy/trino/merges",
                        "archive_url": "https://api.github.com/repos/metadaddy/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/metadaddy/trino/downloads",
                        "issues_url": "https://api.github.com/repos/metadaddy/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/metadaddy/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/metadaddy/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/metadaddy/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/metadaddy/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/metadaddy/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/metadaddy/trino/deployments",
                        "created_at": "2022-07-01T00:43:32Z",
                        "updated_at": "2022-07-06T01:44:20Z",
                        "pushed_at": "2022-12-07T17:50:11Z",
                        "git_url": "git://github.com/metadaddy/trino.git",
                        "ssh_url": "git@github.com:metadaddy/trino.git",
                        "clone_url": "https://github.com/metadaddy/trino.git",
                        "svn_url": "https://github.com/metadaddy/trino",
                        "homepage": "https://trino.io",
                        "size": 192363,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": "Java",
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "master"
                    }
                },
                "base": {
                    "label": "trinodb:master",
                    "ref": "master",
                    "sha": "4b266700437a87236ad0e0e5cd1db866f4f76dcb",
                    "user": {
                        "login": "trinodb",
                        "id": 34147222,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                        "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/trinodb",
                        "html_url": "https://github.com/trinodb",
                        "followers_url": "https://api.github.com/users/trinodb/followers",
                        "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                        "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                        "organizations_url": "https://api.github.com/users/trinodb/orgs",
                        "repos_url": "https://api.github.com/users/trinodb/repos",
                        "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/trinodb/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 166515022,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNjY1MTUwMjI=",
                        "name": "trino",
                        "full_name": "trinodb/trino",
                        "private": false,
                        "owner": {
                            "login": "trinodb",
                            "id": 34147222,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/trinodb",
                            "html_url": "https://github.com/trinodb",
                            "followers_url": "https://api.github.com/users/trinodb/followers",
                            "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                            "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                            "organizations_url": "https://api.github.com/users/trinodb/orgs",
                            "repos_url": "https://api.github.com/users/trinodb/repos",
                            "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/trinodb/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/trinodb/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": false,
                        "url": "https://api.github.com/repos/trinodb/trino",
                        "forks_url": "https://api.github.com/repos/trinodb/trino/forks",
                        "keys_url": "https://api.github.com/repos/trinodb/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/trinodb/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/trinodb/trino/teams",
                        "hooks_url": "https://api.github.com/repos/trinodb/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/trinodb/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/trinodb/trino/events",
                        "assignees_url": "https://api.github.com/repos/trinodb/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/trinodb/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/trinodb/trino/tags",
                        "blobs_url": "https://api.github.com/repos/trinodb/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/trinodb/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/trinodb/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/trinodb/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/trinodb/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/trinodb/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/trinodb/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/trinodb/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/trinodb/trino/subscription",
                        "commits_url": "https://api.github.com/repos/trinodb/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/trinodb/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/trinodb/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/trinodb/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/trinodb/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/trinodb/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/trinodb/trino/merges",
                        "archive_url": "https://api.github.com/repos/trinodb/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/trinodb/trino/downloads",
                        "issues_url": "https://api.github.com/repos/trinodb/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/trinodb/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/trinodb/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/trinodb/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/trinodb/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/trinodb/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/trinodb/trino/deployments",
                        "created_at": "2019-01-19T06:38:14Z",
                        "updated_at": "2022-12-07T23:23:39Z",
                        "pushed_at": "2022-12-08T01:09:12Z",
                        "git_url": "git://github.com/trinodb/trino.git",
                        "ssh_url": "git@github.com:trinodb/trino.git",
                        "clone_url": "https://github.com/trinodb/trino.git",
                        "svn_url": "https://github.com/trinodb/trino",
                        "homepage": "https://trino.io",
                        "size": 197719,
                        "stargazers_count": 6794,
                        "watchers_count": 6794,
                        "language": "Java",
                        "has_issues": true,
                        "has_projects": false,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": true,
                        "forks_count": 2084,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 2093,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "analytics",
                            "big-data",
                            "data-science",
                            "database",
                            "databases",
                            "datalake",
                            "distributed-database",
                            "distributed-databases",
                            "distributed-systems",
                            "hadoop",
                            "hive",
                            "java",
                            "jdbc",
                            "presto",
                            "prestodb",
                            "query-engine",
                            "sql",
                            "trino"
                        ],
                        "visibility": "public",
                        "forks": 2084,
                        "open_issues": 2093,
                        "watchers": 6794,
                        "default_branch": "master"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337"
                    },
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15337"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15337"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15337/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/trinodb/trino/statuses/f88ba0cee83615211a54a7351df5656d7688ae1c"
                    }
                },
                "author_association": "MEMBER",
                "auto_merge": null,
                "active_lock_reason": null
            }
        },
        "public": true,
        "created_at": "2022-12-08T01:58:35Z",
        "org": {
            "id": 34147222,
            "login": "trinodb",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/trinodb",
            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?"
        }
    },
    {
        "id": "25737138158",
        "type": "PullRequestReviewCommentEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 166515022,
            "name": "trinodb/trino",
            "url": "https://api.github.com/repos/trinodb/trino"
        },
        "payload": {
            "action": "created",
            "comment": {
                "url": "https://api.github.com/repos/trinodb/trino/pulls/comments/1042849016",
                "pull_request_review_id": 1209352152,
                "id": 1042849016,
                "node_id": "PRRC_kwDOCezRTs4-KJz4",
                "diff_hunk": "@@ -115,7 +115,7 @@ else if (longForm) {\n     public static String formatDataRate(DataSize dataSize, Duration duration, boolean longForm)\n     {\n         long rate = Math.round(dataSize.toBytes() / duration.getValue(SECONDS));\n-        if (Double.isNaN(rate) || Double.isInfinite(rate)) {\n+        if (rate == Long.MAX_VALUE) {",
                "path": "client/trino-cli/src/main/java/io/trino/cli/FormatUtils.java",
                "position": 5,
                "original_position": 5,
                "commit_id": "f88ba0cee83615211a54a7351df5656d7688ae1c",
                "original_commit_id": "f88ba0cee83615211a54a7351df5656d7688ae1c",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "The check against `Long.MAX_VALUE` preserves the intended semantics (and mirrors those of `formatCountRate()`) - if the rate calculation results in 'infinity', then set it to zero.",
                "created_at": "2022-12-08T01:58:33Z",
                "updated_at": "2022-12-08T01:58:34Z",
                "html_url": "https://github.com/trinodb/trino/pull/15337#discussion_r1042849016",
                "pull_request_url": "https://api.github.com/repos/trinodb/trino/pulls/15337",
                "author_association": "MEMBER",
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/comments/1042849016"
                    },
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15337#discussion_r1042849016"
                    },
                    "pull_request": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337"
                    }
                },
                "reactions": {
                    "url": "https://api.github.com/repos/trinodb/trino/pulls/comments/1042849016/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "start_line": null,
                "original_start_line": null,
                "start_side": null,
                "line": 118,
                "original_line": 118,
                "side": "RIGHT",
                "in_reply_to_id": 1042706109
            },
            "pull_request": {
                "url": "https://api.github.com/repos/trinodb/trino/pulls/15337",
                "id": 1152104129,
                "node_id": "PR_kwDOCezRTs5Eq7bB",
                "html_url": "https://github.com/trinodb/trino/pull/15337",
                "diff_url": "https://github.com/trinodb/trino/pull/15337.diff",
                "patch_url": "https://github.com/trinodb/trino/pull/15337.patch",
                "issue_url": "https://api.github.com/repos/trinodb/trino/issues/15337",
                "number": 15337,
                "state": "open",
                "locked": false,
                "title": "Fix test for invalid rate in FormatUtils.formatDataRate()",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "<!-- Thank you for submitting a pull request! Find more information in our development guide at https://github.com/trinodb/trino/blob/master/.github/DEVELOPMENT.md and contact us on #dev in Slack. -->\r\n<!-- Provide an overview of the PR for maintainers and reviewers. -->\r\n## Description\r\n\r\n`FormatUtils.formatDataRate()` contains the following code:\r\n\r\n```java\r\nlong rate = Math.round(dataSize.toBytes() / duration.getValue(SECONDS));\r\nif (Double.isNaN(rate) || Double.isInfinite(rate)) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nThe test can never evaluate as `true`, since both functions will return false for any `long`.\r\n\r\nThe correct test is:\r\n\r\n```java\r\nif (rate == Long.MAX_VALUE) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nIt's not necessary to test for `Long.MIN_VALUE`, since neither `dataSize` nor `duration` can be negative.\r\n\r\n<!-- Provide details that would help an engineer who is unfamiliar with this part of the code. -->\r\n## Unit Test\r\n\r\nI added a new class, `TestFormatUtils` to test both this fix and the rest of `FormatUtils`. The tests for this change are:\r\n\r\n```java\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), false), \"0B\");\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), true), \"0B/s\");\r\n```\r\n\r\n<!-- Mark the appropriate option with an (x). Propose a release note if you can. -->\r\n## Release notes\r\n\r\n(x) This is not user-visible or docs only and no release notes are required.\r\n( ) Release notes are required, please propose a release note for me.\r\n( ) Release notes are required, with the following suggested text:\r\n\r\n## Related Issue\r\n\r\nFixes #13093",
                "created_at": "2022-12-07T17:54:40Z",
                "updated_at": "2022-12-08T01:58:34Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": "dd4eb7e24625655b4a60619dabe31785fb81f5ab",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [
                    {
                        "id": 1202580151,
                        "node_id": "MDU6TGFiZWwxMjAyNTgwMTUx",
                        "url": "https://api.github.com/repos/trinodb/trino/labels/cla-signed",
                        "name": "cla-signed",
                        "color": "ededed",
                        "default": false,
                        "description": null
                    }
                ],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/trinodb/trino/pulls/15337/commits",
                "review_comments_url": "https://api.github.com/repos/trinodb/trino/pulls/15337/comments",
                "review_comment_url": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/trinodb/trino/issues/15337/comments",
                "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/f88ba0cee83615211a54a7351df5656d7688ae1c",
                "head": {
                    "label": "metadaddy:fix-formatdatarate-test",
                    "ref": "fix-formatdatarate-test",
                    "sha": "f88ba0cee83615211a54a7351df5656d7688ae1c",
                    "user": {
                        "login": "metadaddy",
                        "id": 723517,
                        "node_id": "MDQ6VXNlcjcyMzUxNw==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/metadaddy",
                        "html_url": "https://github.com/metadaddy",
                        "followers_url": "https://api.github.com/users/metadaddy/followers",
                        "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                        "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                        "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                        "repos_url": "https://api.github.com/users/metadaddy/repos",
                        "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 509274784,
                        "node_id": "R_kgDOHlrqoA",
                        "name": "trino",
                        "full_name": "metadaddy/trino",
                        "private": false,
                        "owner": {
                            "login": "metadaddy",
                            "id": 723517,
                            "node_id": "MDQ6VXNlcjcyMzUxNw==",
                            "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/metadaddy",
                            "html_url": "https://github.com/metadaddy",
                            "followers_url": "https://api.github.com/users/metadaddy/followers",
                            "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                            "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                            "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                            "repos_url": "https://api.github.com/users/metadaddy/repos",
                            "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/metadaddy/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": true,
                        "url": "https://api.github.com/repos/metadaddy/trino",
                        "forks_url": "https://api.github.com/repos/metadaddy/trino/forks",
                        "keys_url": "https://api.github.com/repos/metadaddy/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/metadaddy/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/metadaddy/trino/teams",
                        "hooks_url": "https://api.github.com/repos/metadaddy/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/metadaddy/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/metadaddy/trino/events",
                        "assignees_url": "https://api.github.com/repos/metadaddy/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/metadaddy/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/metadaddy/trino/tags",
                        "blobs_url": "https://api.github.com/repos/metadaddy/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/metadaddy/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/metadaddy/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/metadaddy/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/metadaddy/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/metadaddy/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/metadaddy/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/metadaddy/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/metadaddy/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/metadaddy/trino/subscription",
                        "commits_url": "https://api.github.com/repos/metadaddy/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/metadaddy/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/metadaddy/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/metadaddy/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/metadaddy/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/metadaddy/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/metadaddy/trino/merges",
                        "archive_url": "https://api.github.com/repos/metadaddy/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/metadaddy/trino/downloads",
                        "issues_url": "https://api.github.com/repos/metadaddy/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/metadaddy/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/metadaddy/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/metadaddy/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/metadaddy/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/metadaddy/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/metadaddy/trino/deployments",
                        "created_at": "2022-07-01T00:43:32Z",
                        "updated_at": "2022-07-06T01:44:20Z",
                        "pushed_at": "2022-12-07T17:50:11Z",
                        "git_url": "git://github.com/metadaddy/trino.git",
                        "ssh_url": "git@github.com:metadaddy/trino.git",
                        "clone_url": "https://github.com/metadaddy/trino.git",
                        "svn_url": "https://github.com/metadaddy/trino",
                        "homepage": "https://trino.io",
                        "size": 192363,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": "Java",
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "master"
                    }
                },
                "base": {
                    "label": "trinodb:master",
                    "ref": "master",
                    "sha": "4b266700437a87236ad0e0e5cd1db866f4f76dcb",
                    "user": {
                        "login": "trinodb",
                        "id": 34147222,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                        "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/trinodb",
                        "html_url": "https://github.com/trinodb",
                        "followers_url": "https://api.github.com/users/trinodb/followers",
                        "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                        "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                        "organizations_url": "https://api.github.com/users/trinodb/orgs",
                        "repos_url": "https://api.github.com/users/trinodb/repos",
                        "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/trinodb/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 166515022,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNjY1MTUwMjI=",
                        "name": "trino",
                        "full_name": "trinodb/trino",
                        "private": false,
                        "owner": {
                            "login": "trinodb",
                            "id": 34147222,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/trinodb",
                            "html_url": "https://github.com/trinodb",
                            "followers_url": "https://api.github.com/users/trinodb/followers",
                            "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                            "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                            "organizations_url": "https://api.github.com/users/trinodb/orgs",
                            "repos_url": "https://api.github.com/users/trinodb/repos",
                            "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/trinodb/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/trinodb/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": false,
                        "url": "https://api.github.com/repos/trinodb/trino",
                        "forks_url": "https://api.github.com/repos/trinodb/trino/forks",
                        "keys_url": "https://api.github.com/repos/trinodb/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/trinodb/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/trinodb/trino/teams",
                        "hooks_url": "https://api.github.com/repos/trinodb/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/trinodb/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/trinodb/trino/events",
                        "assignees_url": "https://api.github.com/repos/trinodb/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/trinodb/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/trinodb/trino/tags",
                        "blobs_url": "https://api.github.com/repos/trinodb/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/trinodb/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/trinodb/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/trinodb/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/trinodb/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/trinodb/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/trinodb/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/trinodb/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/trinodb/trino/subscription",
                        "commits_url": "https://api.github.com/repos/trinodb/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/trinodb/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/trinodb/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/trinodb/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/trinodb/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/trinodb/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/trinodb/trino/merges",
                        "archive_url": "https://api.github.com/repos/trinodb/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/trinodb/trino/downloads",
                        "issues_url": "https://api.github.com/repos/trinodb/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/trinodb/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/trinodb/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/trinodb/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/trinodb/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/trinodb/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/trinodb/trino/deployments",
                        "created_at": "2019-01-19T06:38:14Z",
                        "updated_at": "2022-12-07T23:23:39Z",
                        "pushed_at": "2022-12-08T01:09:12Z",
                        "git_url": "git://github.com/trinodb/trino.git",
                        "ssh_url": "git@github.com:trinodb/trino.git",
                        "clone_url": "https://github.com/trinodb/trino.git",
                        "svn_url": "https://github.com/trinodb/trino",
                        "homepage": "https://trino.io",
                        "size": 197719,
                        "stargazers_count": 6794,
                        "watchers_count": 6794,
                        "language": "Java",
                        "has_issues": true,
                        "has_projects": false,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": true,
                        "forks_count": 2084,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 2093,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "analytics",
                            "big-data",
                            "data-science",
                            "database",
                            "databases",
                            "datalake",
                            "distributed-database",
                            "distributed-databases",
                            "distributed-systems",
                            "hadoop",
                            "hive",
                            "java",
                            "jdbc",
                            "presto",
                            "prestodb",
                            "query-engine",
                            "sql",
                            "trino"
                        ],
                        "visibility": "public",
                        "forks": 2084,
                        "open_issues": 2093,
                        "watchers": 6794,
                        "default_branch": "master"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337"
                    },
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15337"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15337"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15337/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/trinodb/trino/statuses/f88ba0cee83615211a54a7351df5656d7688ae1c"
                    }
                },
                "author_association": "MEMBER",
                "auto_merge": null,
                "active_lock_reason": null
            }
        },
        "public": true,
        "created_at": "2022-12-08T01:58:33Z",
        "org": {
            "id": 34147222,
            "login": "trinodb",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/trinodb",
            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?"
        }
    },
    {
        "id": "25737015143",
        "type": "PullRequestReviewCommentEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 166515022,
            "name": "trinodb/trino",
            "url": "https://api.github.com/repos/trinodb/trino"
        },
        "payload": {
            "action": "created",
            "comment": {
                "url": "https://api.github.com/repos/trinodb/trino/pulls/comments/1042842469",
                "pull_request_review_id": 1209344719,
                "id": 1042842469,
                "node_id": "PRRC_kwDOCezRTs4-KINl",
                "diff_hunk": "@@ -115,7 +115,7 @@ else if (longForm) {\n     public static String formatDataRate(DataSize dataSize, Duration duration, boolean longForm)\n     {\n         long rate = Math.round(dataSize.toBytes() / duration.getValue(SECONDS));\n-        if (Double.isNaN(rate) || Double.isInfinite(rate)) {",
                "path": "client/trino-cli/src/main/java/io/trino/cli/FormatUtils.java",
                "position": 4,
                "original_position": 4,
                "commit_id": "f88ba0cee83615211a54a7351df5656d7688ae1c",
                "original_commit_id": "f88ba0cee83615211a54a7351df5656d7688ae1c",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "Nice!",
                "created_at": "2022-12-08T01:49:58Z",
                "updated_at": "2022-12-08T01:49:59Z",
                "html_url": "https://github.com/trinodb/trino/pull/15337#discussion_r1042842469",
                "pull_request_url": "https://api.github.com/repos/trinodb/trino/pulls/15337",
                "author_association": "MEMBER",
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/comments/1042842469"
                    },
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15337#discussion_r1042842469"
                    },
                    "pull_request": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337"
                    }
                },
                "reactions": {
                    "url": "https://api.github.com/repos/trinodb/trino/pulls/comments/1042842469/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "start_line": null,
                "original_start_line": null,
                "start_side": null,
                "line": 118,
                "original_line": 118,
                "side": "LEFT",
                "in_reply_to_id": 1042704594
            },
            "pull_request": {
                "url": "https://api.github.com/repos/trinodb/trino/pulls/15337",
                "id": 1152104129,
                "node_id": "PR_kwDOCezRTs5Eq7bB",
                "html_url": "https://github.com/trinodb/trino/pull/15337",
                "diff_url": "https://github.com/trinodb/trino/pull/15337.diff",
                "patch_url": "https://github.com/trinodb/trino/pull/15337.patch",
                "issue_url": "https://api.github.com/repos/trinodb/trino/issues/15337",
                "number": 15337,
                "state": "open",
                "locked": false,
                "title": "Fix test for invalid rate in FormatUtils.formatDataRate()",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "<!-- Thank you for submitting a pull request! Find more information in our development guide at https://github.com/trinodb/trino/blob/master/.github/DEVELOPMENT.md and contact us on #dev in Slack. -->\r\n<!-- Provide an overview of the PR for maintainers and reviewers. -->\r\n## Description\r\n\r\n`FormatUtils.formatDataRate()` contains the following code:\r\n\r\n```java\r\nlong rate = Math.round(dataSize.toBytes() / duration.getValue(SECONDS));\r\nif (Double.isNaN(rate) || Double.isInfinite(rate)) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nThe test can never evaluate as `true`, since both functions will return false for any `long`.\r\n\r\nThe correct test is:\r\n\r\n```java\r\nif (rate == Long.MAX_VALUE) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nIt's not necessary to test for `Long.MIN_VALUE`, since neither `dataSize` nor `duration` can be negative.\r\n\r\n<!-- Provide details that would help an engineer who is unfamiliar with this part of the code. -->\r\n## Unit Test\r\n\r\nI added a new class, `TestFormatUtils` to test both this fix and the rest of `FormatUtils`. The tests for this change are:\r\n\r\n```java\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), false), \"0B\");\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), true), \"0B/s\");\r\n```\r\n\r\n<!-- Mark the appropriate option with an (x). Propose a release note if you can. -->\r\n## Release notes\r\n\r\n(x) This is not user-visible or docs only and no release notes are required.\r\n( ) Release notes are required, please propose a release note for me.\r\n( ) Release notes are required, with the following suggested text:\r\n\r\n## Related Issue\r\n\r\nFixes #13093",
                "created_at": "2022-12-07T17:54:40Z",
                "updated_at": "2022-12-08T01:49:59Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": "dd4eb7e24625655b4a60619dabe31785fb81f5ab",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [
                    {
                        "id": 1202580151,
                        "node_id": "MDU6TGFiZWwxMjAyNTgwMTUx",
                        "url": "https://api.github.com/repos/trinodb/trino/labels/cla-signed",
                        "name": "cla-signed",
                        "color": "ededed",
                        "default": false,
                        "description": null
                    }
                ],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/trinodb/trino/pulls/15337/commits",
                "review_comments_url": "https://api.github.com/repos/trinodb/trino/pulls/15337/comments",
                "review_comment_url": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/trinodb/trino/issues/15337/comments",
                "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/f88ba0cee83615211a54a7351df5656d7688ae1c",
                "head": {
                    "label": "metadaddy:fix-formatdatarate-test",
                    "ref": "fix-formatdatarate-test",
                    "sha": "f88ba0cee83615211a54a7351df5656d7688ae1c",
                    "user": {
                        "login": "metadaddy",
                        "id": 723517,
                        "node_id": "MDQ6VXNlcjcyMzUxNw==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/metadaddy",
                        "html_url": "https://github.com/metadaddy",
                        "followers_url": "https://api.github.com/users/metadaddy/followers",
                        "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                        "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                        "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                        "repos_url": "https://api.github.com/users/metadaddy/repos",
                        "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 509274784,
                        "node_id": "R_kgDOHlrqoA",
                        "name": "trino",
                        "full_name": "metadaddy/trino",
                        "private": false,
                        "owner": {
                            "login": "metadaddy",
                            "id": 723517,
                            "node_id": "MDQ6VXNlcjcyMzUxNw==",
                            "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/metadaddy",
                            "html_url": "https://github.com/metadaddy",
                            "followers_url": "https://api.github.com/users/metadaddy/followers",
                            "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                            "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                            "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                            "repos_url": "https://api.github.com/users/metadaddy/repos",
                            "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/metadaddy/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": true,
                        "url": "https://api.github.com/repos/metadaddy/trino",
                        "forks_url": "https://api.github.com/repos/metadaddy/trino/forks",
                        "keys_url": "https://api.github.com/repos/metadaddy/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/metadaddy/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/metadaddy/trino/teams",
                        "hooks_url": "https://api.github.com/repos/metadaddy/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/metadaddy/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/metadaddy/trino/events",
                        "assignees_url": "https://api.github.com/repos/metadaddy/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/metadaddy/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/metadaddy/trino/tags",
                        "blobs_url": "https://api.github.com/repos/metadaddy/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/metadaddy/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/metadaddy/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/metadaddy/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/metadaddy/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/metadaddy/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/metadaddy/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/metadaddy/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/metadaddy/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/metadaddy/trino/subscription",
                        "commits_url": "https://api.github.com/repos/metadaddy/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/metadaddy/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/metadaddy/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/metadaddy/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/metadaddy/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/metadaddy/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/metadaddy/trino/merges",
                        "archive_url": "https://api.github.com/repos/metadaddy/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/metadaddy/trino/downloads",
                        "issues_url": "https://api.github.com/repos/metadaddy/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/metadaddy/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/metadaddy/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/metadaddy/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/metadaddy/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/metadaddy/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/metadaddy/trino/deployments",
                        "created_at": "2022-07-01T00:43:32Z",
                        "updated_at": "2022-07-06T01:44:20Z",
                        "pushed_at": "2022-12-07T17:50:11Z",
                        "git_url": "git://github.com/metadaddy/trino.git",
                        "ssh_url": "git@github.com:metadaddy/trino.git",
                        "clone_url": "https://github.com/metadaddy/trino.git",
                        "svn_url": "https://github.com/metadaddy/trino",
                        "homepage": "https://trino.io",
                        "size": 192363,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": "Java",
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "master"
                    }
                },
                "base": {
                    "label": "trinodb:master",
                    "ref": "master",
                    "sha": "4b266700437a87236ad0e0e5cd1db866f4f76dcb",
                    "user": {
                        "login": "trinodb",
                        "id": 34147222,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                        "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/trinodb",
                        "html_url": "https://github.com/trinodb",
                        "followers_url": "https://api.github.com/users/trinodb/followers",
                        "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                        "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                        "organizations_url": "https://api.github.com/users/trinodb/orgs",
                        "repos_url": "https://api.github.com/users/trinodb/repos",
                        "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/trinodb/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 166515022,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNjY1MTUwMjI=",
                        "name": "trino",
                        "full_name": "trinodb/trino",
                        "private": false,
                        "owner": {
                            "login": "trinodb",
                            "id": 34147222,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/trinodb",
                            "html_url": "https://github.com/trinodb",
                            "followers_url": "https://api.github.com/users/trinodb/followers",
                            "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                            "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                            "organizations_url": "https://api.github.com/users/trinodb/orgs",
                            "repos_url": "https://api.github.com/users/trinodb/repos",
                            "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/trinodb/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/trinodb/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": false,
                        "url": "https://api.github.com/repos/trinodb/trino",
                        "forks_url": "https://api.github.com/repos/trinodb/trino/forks",
                        "keys_url": "https://api.github.com/repos/trinodb/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/trinodb/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/trinodb/trino/teams",
                        "hooks_url": "https://api.github.com/repos/trinodb/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/trinodb/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/trinodb/trino/events",
                        "assignees_url": "https://api.github.com/repos/trinodb/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/trinodb/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/trinodb/trino/tags",
                        "blobs_url": "https://api.github.com/repos/trinodb/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/trinodb/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/trinodb/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/trinodb/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/trinodb/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/trinodb/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/trinodb/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/trinodb/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/trinodb/trino/subscription",
                        "commits_url": "https://api.github.com/repos/trinodb/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/trinodb/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/trinodb/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/trinodb/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/trinodb/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/trinodb/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/trinodb/trino/merges",
                        "archive_url": "https://api.github.com/repos/trinodb/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/trinodb/trino/downloads",
                        "issues_url": "https://api.github.com/repos/trinodb/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/trinodb/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/trinodb/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/trinodb/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/trinodb/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/trinodb/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/trinodb/trino/deployments",
                        "created_at": "2019-01-19T06:38:14Z",
                        "updated_at": "2022-12-07T23:23:39Z",
                        "pushed_at": "2022-12-08T01:09:12Z",
                        "git_url": "git://github.com/trinodb/trino.git",
                        "ssh_url": "git@github.com:trinodb/trino.git",
                        "clone_url": "https://github.com/trinodb/trino.git",
                        "svn_url": "https://github.com/trinodb/trino",
                        "homepage": "https://trino.io",
                        "size": 197719,
                        "stargazers_count": 6794,
                        "watchers_count": 6794,
                        "language": "Java",
                        "has_issues": true,
                        "has_projects": false,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": true,
                        "forks_count": 2084,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 2093,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "analytics",
                            "big-data",
                            "data-science",
                            "database",
                            "databases",
                            "datalake",
                            "distributed-database",
                            "distributed-databases",
                            "distributed-systems",
                            "hadoop",
                            "hive",
                            "java",
                            "jdbc",
                            "presto",
                            "prestodb",
                            "query-engine",
                            "sql",
                            "trino"
                        ],
                        "visibility": "public",
                        "forks": 2084,
                        "open_issues": 2093,
                        "watchers": 6794,
                        "default_branch": "master"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337"
                    },
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15337"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15337"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15337/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/trinodb/trino/statuses/f88ba0cee83615211a54a7351df5656d7688ae1c"
                    }
                },
                "author_association": "MEMBER",
                "auto_merge": null,
                "active_lock_reason": null
            }
        },
        "public": true,
        "created_at": "2022-12-08T01:49:58Z",
        "org": {
            "id": 34147222,
            "login": "trinodb",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/trinodb",
            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?"
        }
    },
    {
        "id": "25737015084",
        "type": "PullRequestReviewEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 166515022,
            "name": "trinodb/trino",
            "url": "https://api.github.com/repos/trinodb/trino"
        },
        "payload": {
            "action": "created",
            "review": {
                "id": 1209344719,
                "node_id": "PRR_kwDOCezRTs5IFSLP",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": null,
                "commit_id": "f88ba0cee83615211a54a7351df5656d7688ae1c",
                "submitted_at": "2022-12-08T01:49:58Z",
                "state": "commented",
                "html_url": "https://github.com/trinodb/trino/pull/15337#pullrequestreview-1209344719",
                "pull_request_url": "https://api.github.com/repos/trinodb/trino/pulls/15337",
                "author_association": "MEMBER",
                "_links": {
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15337#pullrequestreview-1209344719"
                    },
                    "pull_request": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337"
                    }
                }
            },
            "pull_request": {
                "url": "https://api.github.com/repos/trinodb/trino/pulls/15337",
                "id": 1152104129,
                "node_id": "PR_kwDOCezRTs5Eq7bB",
                "html_url": "https://github.com/trinodb/trino/pull/15337",
                "diff_url": "https://github.com/trinodb/trino/pull/15337.diff",
                "patch_url": "https://github.com/trinodb/trino/pull/15337.patch",
                "issue_url": "https://api.github.com/repos/trinodb/trino/issues/15337",
                "number": 15337,
                "state": "open",
                "locked": false,
                "title": "Fix test for invalid rate in FormatUtils.formatDataRate()",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "<!-- Thank you for submitting a pull request! Find more information in our development guide at https://github.com/trinodb/trino/blob/master/.github/DEVELOPMENT.md and contact us on #dev in Slack. -->\r\n<!-- Provide an overview of the PR for maintainers and reviewers. -->\r\n## Description\r\n\r\n`FormatUtils.formatDataRate()` contains the following code:\r\n\r\n```java\r\nlong rate = Math.round(dataSize.toBytes() / duration.getValue(SECONDS));\r\nif (Double.isNaN(rate) || Double.isInfinite(rate)) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nThe test can never evaluate as `true`, since both functions will return false for any `long`.\r\n\r\nThe correct test is:\r\n\r\n```java\r\nif (rate == Long.MAX_VALUE) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nIt's not necessary to test for `Long.MIN_VALUE`, since neither `dataSize` nor `duration` can be negative.\r\n\r\n<!-- Provide details that would help an engineer who is unfamiliar with this part of the code. -->\r\n## Unit Test\r\n\r\nI added a new class, `TestFormatUtils` to test both this fix and the rest of `FormatUtils`. The tests for this change are:\r\n\r\n```java\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), false), \"0B\");\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), true), \"0B/s\");\r\n```\r\n\r\n<!-- Mark the appropriate option with an (x). Propose a release note if you can. -->\r\n## Release notes\r\n\r\n(x) This is not user-visible or docs only and no release notes are required.\r\n( ) Release notes are required, please propose a release note for me.\r\n( ) Release notes are required, with the following suggested text:\r\n\r\n## Related Issue\r\n\r\nFixes #13093",
                "created_at": "2022-12-07T17:54:40Z",
                "updated_at": "2022-12-08T01:49:59Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": "dd4eb7e24625655b4a60619dabe31785fb81f5ab",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [
                    {
                        "id": 1202580151,
                        "node_id": "MDU6TGFiZWwxMjAyNTgwMTUx",
                        "url": "https://api.github.com/repos/trinodb/trino/labels/cla-signed",
                        "name": "cla-signed",
                        "color": "ededed",
                        "default": false,
                        "description": null
                    }
                ],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/trinodb/trino/pulls/15337/commits",
                "review_comments_url": "https://api.github.com/repos/trinodb/trino/pulls/15337/comments",
                "review_comment_url": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/trinodb/trino/issues/15337/comments",
                "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/f88ba0cee83615211a54a7351df5656d7688ae1c",
                "head": {
                    "label": "metadaddy:fix-formatdatarate-test",
                    "ref": "fix-formatdatarate-test",
                    "sha": "f88ba0cee83615211a54a7351df5656d7688ae1c",
                    "user": {
                        "login": "metadaddy",
                        "id": 723517,
                        "node_id": "MDQ6VXNlcjcyMzUxNw==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/metadaddy",
                        "html_url": "https://github.com/metadaddy",
                        "followers_url": "https://api.github.com/users/metadaddy/followers",
                        "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                        "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                        "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                        "repos_url": "https://api.github.com/users/metadaddy/repos",
                        "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 509274784,
                        "node_id": "R_kgDOHlrqoA",
                        "name": "trino",
                        "full_name": "metadaddy/trino",
                        "private": false,
                        "owner": {
                            "login": "metadaddy",
                            "id": 723517,
                            "node_id": "MDQ6VXNlcjcyMzUxNw==",
                            "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/metadaddy",
                            "html_url": "https://github.com/metadaddy",
                            "followers_url": "https://api.github.com/users/metadaddy/followers",
                            "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                            "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                            "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                            "repos_url": "https://api.github.com/users/metadaddy/repos",
                            "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/metadaddy/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": true,
                        "url": "https://api.github.com/repos/metadaddy/trino",
                        "forks_url": "https://api.github.com/repos/metadaddy/trino/forks",
                        "keys_url": "https://api.github.com/repos/metadaddy/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/metadaddy/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/metadaddy/trino/teams",
                        "hooks_url": "https://api.github.com/repos/metadaddy/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/metadaddy/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/metadaddy/trino/events",
                        "assignees_url": "https://api.github.com/repos/metadaddy/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/metadaddy/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/metadaddy/trino/tags",
                        "blobs_url": "https://api.github.com/repos/metadaddy/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/metadaddy/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/metadaddy/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/metadaddy/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/metadaddy/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/metadaddy/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/metadaddy/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/metadaddy/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/metadaddy/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/metadaddy/trino/subscription",
                        "commits_url": "https://api.github.com/repos/metadaddy/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/metadaddy/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/metadaddy/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/metadaddy/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/metadaddy/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/metadaddy/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/metadaddy/trino/merges",
                        "archive_url": "https://api.github.com/repos/metadaddy/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/metadaddy/trino/downloads",
                        "issues_url": "https://api.github.com/repos/metadaddy/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/metadaddy/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/metadaddy/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/metadaddy/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/metadaddy/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/metadaddy/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/metadaddy/trino/deployments",
                        "created_at": "2022-07-01T00:43:32Z",
                        "updated_at": "2022-07-06T01:44:20Z",
                        "pushed_at": "2022-12-07T17:50:11Z",
                        "git_url": "git://github.com/metadaddy/trino.git",
                        "ssh_url": "git@github.com:metadaddy/trino.git",
                        "clone_url": "https://github.com/metadaddy/trino.git",
                        "svn_url": "https://github.com/metadaddy/trino",
                        "homepage": "https://trino.io",
                        "size": 192363,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": "Java",
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "master"
                    }
                },
                "base": {
                    "label": "trinodb:master",
                    "ref": "master",
                    "sha": "4b266700437a87236ad0e0e5cd1db866f4f76dcb",
                    "user": {
                        "login": "trinodb",
                        "id": 34147222,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                        "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/trinodb",
                        "html_url": "https://github.com/trinodb",
                        "followers_url": "https://api.github.com/users/trinodb/followers",
                        "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                        "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                        "organizations_url": "https://api.github.com/users/trinodb/orgs",
                        "repos_url": "https://api.github.com/users/trinodb/repos",
                        "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/trinodb/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 166515022,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNjY1MTUwMjI=",
                        "name": "trino",
                        "full_name": "trinodb/trino",
                        "private": false,
                        "owner": {
                            "login": "trinodb",
                            "id": 34147222,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/trinodb",
                            "html_url": "https://github.com/trinodb",
                            "followers_url": "https://api.github.com/users/trinodb/followers",
                            "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                            "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                            "organizations_url": "https://api.github.com/users/trinodb/orgs",
                            "repos_url": "https://api.github.com/users/trinodb/repos",
                            "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/trinodb/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/trinodb/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": false,
                        "url": "https://api.github.com/repos/trinodb/trino",
                        "forks_url": "https://api.github.com/repos/trinodb/trino/forks",
                        "keys_url": "https://api.github.com/repos/trinodb/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/trinodb/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/trinodb/trino/teams",
                        "hooks_url": "https://api.github.com/repos/trinodb/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/trinodb/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/trinodb/trino/events",
                        "assignees_url": "https://api.github.com/repos/trinodb/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/trinodb/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/trinodb/trino/tags",
                        "blobs_url": "https://api.github.com/repos/trinodb/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/trinodb/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/trinodb/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/trinodb/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/trinodb/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/trinodb/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/trinodb/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/trinodb/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/trinodb/trino/subscription",
                        "commits_url": "https://api.github.com/repos/trinodb/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/trinodb/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/trinodb/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/trinodb/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/trinodb/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/trinodb/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/trinodb/trino/merges",
                        "archive_url": "https://api.github.com/repos/trinodb/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/trinodb/trino/downloads",
                        "issues_url": "https://api.github.com/repos/trinodb/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/trinodb/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/trinodb/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/trinodb/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/trinodb/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/trinodb/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/trinodb/trino/deployments",
                        "created_at": "2019-01-19T06:38:14Z",
                        "updated_at": "2022-12-07T23:23:39Z",
                        "pushed_at": "2022-12-08T01:09:12Z",
                        "git_url": "git://github.com/trinodb/trino.git",
                        "ssh_url": "git@github.com:trinodb/trino.git",
                        "clone_url": "https://github.com/trinodb/trino.git",
                        "svn_url": "https://github.com/trinodb/trino",
                        "homepage": "https://trino.io",
                        "size": 197719,
                        "stargazers_count": 6794,
                        "watchers_count": 6794,
                        "language": "Java",
                        "has_issues": true,
                        "has_projects": false,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": true,
                        "forks_count": 2084,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 2093,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "analytics",
                            "big-data",
                            "data-science",
                            "database",
                            "databases",
                            "datalake",
                            "distributed-database",
                            "distributed-databases",
                            "distributed-systems",
                            "hadoop",
                            "hive",
                            "java",
                            "jdbc",
                            "presto",
                            "prestodb",
                            "query-engine",
                            "sql",
                            "trino"
                        ],
                        "visibility": "public",
                        "forks": 2084,
                        "open_issues": 2093,
                        "watchers": 6794,
                        "default_branch": "master"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337"
                    },
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15337"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15337"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15337/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/trinodb/trino/statuses/f88ba0cee83615211a54a7351df5656d7688ae1c"
                    }
                },
                "author_association": "MEMBER",
                "auto_merge": null,
                "active_lock_reason": null
            }
        },
        "public": true,
        "created_at": "2022-12-08T01:49:59Z",
        "org": {
            "id": 34147222,
            "login": "trinodb",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/trinodb",
            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?"
        }
    },
    {
        "id": "25727868247",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 166515022,
            "name": "trinodb/trino",
            "url": "https://api.github.com/repos/trinodb/trino"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/trinodb/trino/issues/13093",
                "repository_url": "https://api.github.com/repos/trinodb/trino",
                "labels_url": "https://api.github.com/repos/trinodb/trino/issues/13093/labels{/name}",
                "comments_url": "https://api.github.com/repos/trinodb/trino/issues/13093/comments",
                "events_url": "https://api.github.com/repos/trinodb/trino/issues/13093/events",
                "html_url": "https://github.com/trinodb/trino/issues/13093",
                "id": 1294946685,
                "node_id": "I_kwDOCezRTs5NL1F9",
                "number": 13093,
                "title": "io.trino.cli.FormatUtils.formatDataRate incorrectly tests long rate with Double functions",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 2,
                "created_at": "2022-07-06T00:50:24Z",
                "updated_at": "2022-12-07T17:55:24Z",
                "closed_at": null,
                "author_association": "MEMBER",
                "active_lock_reason": null,
                "body": "Test code:\r\n\r\n```java\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), false), \"0B\");\r\n```\r\n\r\nAssertion fails:\r\n\r\n```\r\nTestFormatUtils.formatDataRate:287 expected [0B] but found [9223P]\r\n```\r\n\r\nThe issue is that `formatDataRate` calculates its `rate` local variable as a `long`:\r\n\r\n```java\r\nlong rate = Math.round(dataSize.toBytes() / duration.getValue(SECONDS));\r\n```\r\n\r\nbut then this test can never succeed, since both functions will return false for any `long`\r\n\r\n```java\r\n        if (Double.isNaN(rate) || Double.isInfinite(rate)) {\r\n            rate = 0;\r\n        }\r\n```\r\n\r\nThe test should instead be:\r\n\r\n```java\r\n        if (rate == Long.MAX_VALUE) {\r\n            rate = 0;\r\n        }\r\n```",
                "reactions": {
                    "url": "https://api.github.com/repos/trinodb/trino/issues/13093/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/trinodb/trino/issues/13093/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/trinodb/trino/issues/comments/1341350968",
                "html_url": "https://github.com/trinodb/trino/issues/13093#issuecomment-1341350968",
                "issue_url": "https://api.github.com/repos/trinodb/trino/issues/13093",
                "id": 1341350968,
                "node_id": "IC_kwDOCezRTs5P82Q4",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2022-12-07T17:55:24Z",
                "updated_at": "2022-12-07T17:55:24Z",
                "author_association": "MEMBER",
                "body": "@findepi I finally got round to this one: https://github.com/trinodb/trino/pull/15337",
                "reactions": {
                    "url": "https://api.github.com/repos/trinodb/trino/issues/comments/1341350968/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2022-12-07T17:55:24Z",
        "org": {
            "id": 34147222,
            "login": "trinodb",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/trinodb",
            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?"
        }
    },
    {
        "id": "25727850495",
        "type": "PullRequestEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 166515022,
            "name": "trinodb/trino",
            "url": "https://api.github.com/repos/trinodb/trino"
        },
        "payload": {
            "action": "opened",
            "number": 15337,
            "pull_request": {
                "url": "https://api.github.com/repos/trinodb/trino/pulls/15337",
                "id": 1152104129,
                "node_id": "PR_kwDOCezRTs5Eq7bB",
                "html_url": "https://github.com/trinodb/trino/pull/15337",
                "diff_url": "https://github.com/trinodb/trino/pull/15337.diff",
                "patch_url": "https://github.com/trinodb/trino/pull/15337.patch",
                "issue_url": "https://api.github.com/repos/trinodb/trino/issues/15337",
                "number": 15337,
                "state": "open",
                "locked": false,
                "title": "Fix test for invalid rate in FormatUtils.formatDataRate()",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "<!-- Thank you for submitting a pull request! Find more information in our development guide at https://github.com/trinodb/trino/blob/master/.github/DEVELOPMENT.md and contact us on #dev in Slack. -->\r\n<!-- Provide an overview of the PR for maintainers and reviewers. -->\r\n## Description\r\n\r\n`FormatUtils.formatDataRate()` contains the following code:\r\n\r\n```java\r\nlong rate = Math.round(dataSize.toBytes() / duration.getValue(SECONDS));\r\nif (Double.isNaN(rate) || Double.isInfinite(rate)) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nThe test can never evaluate as `true`, since both functions will return false for any `long`.\r\n\r\nThe correct test is:\r\n\r\n```java\r\nif (rate == Long.MAX_VALUE) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nIt's not necessary to test for `Long.MIN_VALUE`, since neither `dataSize` nor `duration` can be negative.\r\n\r\n<!-- Provide details that would help an engineer who is unfamiliar with this part of the code. -->\r\n## Unit Test\r\n\r\nI added a new class, `TestFormatUtils` to test both this fix and the rest of `FormatUtils`. The tests for this change are:\r\n\r\n```java\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), false), \"0B\");\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), true), \"0B/s\");\r\n```\r\n\r\n<!-- Mark the appropriate option with an (x). Propose a release note if you can. -->\r\n## Release notes\r\n\r\n(x) This is not user-visible or docs only and no release notes are required.\r\n( ) Release notes are required, please propose a release note for me.\r\n( ) Release notes are required, with the following suggested text:\r\n\r\n## Related Issue\r\n\r\nFixes #13093",
                "created_at": "2022-12-07T17:54:40Z",
                "updated_at": "2022-12-07T17:54:40Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": null,
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/trinodb/trino/pulls/15337/commits",
                "review_comments_url": "https://api.github.com/repos/trinodb/trino/pulls/15337/comments",
                "review_comment_url": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/trinodb/trino/issues/15337/comments",
                "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/f88ba0cee83615211a54a7351df5656d7688ae1c",
                "head": {
                    "label": "metadaddy:fix-formatdatarate-test",
                    "ref": "fix-formatdatarate-test",
                    "sha": "f88ba0cee83615211a54a7351df5656d7688ae1c",
                    "user": {
                        "login": "metadaddy",
                        "id": 723517,
                        "node_id": "MDQ6VXNlcjcyMzUxNw==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/metadaddy",
                        "html_url": "https://github.com/metadaddy",
                        "followers_url": "https://api.github.com/users/metadaddy/followers",
                        "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                        "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                        "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                        "repos_url": "https://api.github.com/users/metadaddy/repos",
                        "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 509274784,
                        "node_id": "R_kgDOHlrqoA",
                        "name": "trino",
                        "full_name": "metadaddy/trino",
                        "private": false,
                        "owner": {
                            "login": "metadaddy",
                            "id": 723517,
                            "node_id": "MDQ6VXNlcjcyMzUxNw==",
                            "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/metadaddy",
                            "html_url": "https://github.com/metadaddy",
                            "followers_url": "https://api.github.com/users/metadaddy/followers",
                            "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                            "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                            "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                            "repos_url": "https://api.github.com/users/metadaddy/repos",
                            "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/metadaddy/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": true,
                        "url": "https://api.github.com/repos/metadaddy/trino",
                        "forks_url": "https://api.github.com/repos/metadaddy/trino/forks",
                        "keys_url": "https://api.github.com/repos/metadaddy/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/metadaddy/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/metadaddy/trino/teams",
                        "hooks_url": "https://api.github.com/repos/metadaddy/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/metadaddy/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/metadaddy/trino/events",
                        "assignees_url": "https://api.github.com/repos/metadaddy/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/metadaddy/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/metadaddy/trino/tags",
                        "blobs_url": "https://api.github.com/repos/metadaddy/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/metadaddy/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/metadaddy/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/metadaddy/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/metadaddy/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/metadaddy/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/metadaddy/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/metadaddy/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/metadaddy/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/metadaddy/trino/subscription",
                        "commits_url": "https://api.github.com/repos/metadaddy/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/metadaddy/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/metadaddy/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/metadaddy/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/metadaddy/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/metadaddy/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/metadaddy/trino/merges",
                        "archive_url": "https://api.github.com/repos/metadaddy/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/metadaddy/trino/downloads",
                        "issues_url": "https://api.github.com/repos/metadaddy/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/metadaddy/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/metadaddy/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/metadaddy/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/metadaddy/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/metadaddy/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/metadaddy/trino/deployments",
                        "created_at": "2022-07-01T00:43:32Z",
                        "updated_at": "2022-07-06T01:44:20Z",
                        "pushed_at": "2022-12-07T17:50:11Z",
                        "git_url": "git://github.com/metadaddy/trino.git",
                        "ssh_url": "git@github.com:metadaddy/trino.git",
                        "clone_url": "https://github.com/metadaddy/trino.git",
                        "svn_url": "https://github.com/metadaddy/trino",
                        "homepage": "https://trino.io",
                        "size": 192368,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": "Java",
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "master"
                    }
                },
                "base": {
                    "label": "trinodb:master",
                    "ref": "master",
                    "sha": "4b266700437a87236ad0e0e5cd1db866f4f76dcb",
                    "user": {
                        "login": "trinodb",
                        "id": 34147222,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                        "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/trinodb",
                        "html_url": "https://github.com/trinodb",
                        "followers_url": "https://api.github.com/users/trinodb/followers",
                        "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                        "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                        "organizations_url": "https://api.github.com/users/trinodb/orgs",
                        "repos_url": "https://api.github.com/users/trinodb/repos",
                        "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/trinodb/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 166515022,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNjY1MTUwMjI=",
                        "name": "trino",
                        "full_name": "trinodb/trino",
                        "private": false,
                        "owner": {
                            "login": "trinodb",
                            "id": 34147222,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/trinodb",
                            "html_url": "https://github.com/trinodb",
                            "followers_url": "https://api.github.com/users/trinodb/followers",
                            "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                            "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                            "organizations_url": "https://api.github.com/users/trinodb/orgs",
                            "repos_url": "https://api.github.com/users/trinodb/repos",
                            "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/trinodb/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/trinodb/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": false,
                        "url": "https://api.github.com/repos/trinodb/trino",
                        "forks_url": "https://api.github.com/repos/trinodb/trino/forks",
                        "keys_url": "https://api.github.com/repos/trinodb/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/trinodb/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/trinodb/trino/teams",
                        "hooks_url": "https://api.github.com/repos/trinodb/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/trinodb/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/trinodb/trino/events",
                        "assignees_url": "https://api.github.com/repos/trinodb/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/trinodb/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/trinodb/trino/tags",
                        "blobs_url": "https://api.github.com/repos/trinodb/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/trinodb/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/trinodb/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/trinodb/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/trinodb/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/trinodb/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/trinodb/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/trinodb/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/trinodb/trino/subscription",
                        "commits_url": "https://api.github.com/repos/trinodb/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/trinodb/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/trinodb/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/trinodb/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/trinodb/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/trinodb/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/trinodb/trino/merges",
                        "archive_url": "https://api.github.com/repos/trinodb/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/trinodb/trino/downloads",
                        "issues_url": "https://api.github.com/repos/trinodb/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/trinodb/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/trinodb/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/trinodb/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/trinodb/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/trinodb/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/trinodb/trino/deployments",
                        "created_at": "2019-01-19T06:38:14Z",
                        "updated_at": "2022-12-07T15:05:28Z",
                        "pushed_at": "2022-12-07T17:54:40Z",
                        "git_url": "git://github.com/trinodb/trino.git",
                        "ssh_url": "git@github.com:trinodb/trino.git",
                        "clone_url": "https://github.com/trinodb/trino.git",
                        "svn_url": "https://github.com/trinodb/trino",
                        "homepage": "https://trino.io",
                        "size": 197717,
                        "stargazers_count": 6791,
                        "watchers_count": 6791,
                        "language": "Java",
                        "has_issues": true,
                        "has_projects": false,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": true,
                        "forks_count": 2083,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 2092,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "analytics",
                            "big-data",
                            "data-science",
                            "database",
                            "databases",
                            "datalake",
                            "distributed-database",
                            "distributed-databases",
                            "distributed-systems",
                            "hadoop",
                            "hive",
                            "java",
                            "jdbc",
                            "presto",
                            "prestodb",
                            "query-engine",
                            "sql",
                            "trino"
                        ],
                        "visibility": "public",
                        "forks": 2083,
                        "open_issues": 2092,
                        "watchers": 6791,
                        "default_branch": "master"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337"
                    },
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15337"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15337"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15337/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/trinodb/trino/statuses/f88ba0cee83615211a54a7351df5656d7688ae1c"
                    }
                },
                "author_association": "MEMBER",
                "auto_merge": null,
                "active_lock_reason": null,
                "merged": false,
                "mergeable": null,
                "rebaseable": null,
                "mergeable_state": "unknown",
                "merged_by": null,
                "comments": 0,
                "review_comments": 0,
                "maintainer_can_modify": true,
                "commits": 1,
                "additions": 354,
                "deletions": 1,
                "changed_files": 2
            }
        },
        "public": true,
        "created_at": "2022-12-07T17:54:41Z",
        "org": {
            "id": 34147222,
            "login": "trinodb",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/trinodb",
            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?"
        }
    },
    {
        "id": "25727745214",
        "type": "PushEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 509274784,
            "name": "metadaddy/trino",
            "url": "https://api.github.com/repos/metadaddy/trino"
        },
        "payload": {
            "push_id": 11917788963,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/fix-formatdatarate-test",
            "head": "f88ba0cee83615211a54a7351df5656d7688ae1c",
            "before": "a8ca5fe5f1f6a4ed9b00988d1f9db1d06a9d3bf0",
            "commits": [
                {
                    "sha": "f88ba0cee83615211a54a7351df5656d7688ae1c",
                    "author": {
                        "email": "pat@backblaze.com",
                        "name": "Pat Patterson"
                    },
                    "message": "Fix test for invalid rate in FormatUtils.formatDataRate()",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/f88ba0cee83615211a54a7351df5656d7688ae1c"
                }
            ]
        },
        "public": true,
        "created_at": "2022-12-07T17:50:12Z"
    },
    {
        "id": "25727428214",
        "type": "PushEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 509274784,
            "name": "metadaddy/trino",
            "url": "https://api.github.com/repos/metadaddy/trino"
        },
        "payload": {
            "push_id": 11917639194,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/fix-formatdatarate-test",
            "head": "a8ca5fe5f1f6a4ed9b00988d1f9db1d06a9d3bf0",
            "before": "3fa5fb40530b65f9c54c1e5bfd7778be41de9a90",
            "commits": [
                {
                    "sha": "a8ca5fe5f1f6a4ed9b00988d1f9db1d06a9d3bf0",
                    "author": {
                        "email": "pat@backblaze.com",
                        "name": "Pat Patterson"
                    },
                    "message": "Fix test for invalid rate in FormatUtils.formatDataRate()",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/a8ca5fe5f1f6a4ed9b00988d1f9db1d06a9d3bf0"
                }
            ]
        },
        "public": true,
        "created_at": "2022-12-07T17:37:02Z"
    },
    {
        "id": "25727169150",
        "type": "CreateEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 509274784,
            "name": "metadaddy/trino",
            "url": "https://api.github.com/repos/metadaddy/trino"
        },
        "payload": {
            "ref": "fix-formatdatarate-test",
            "ref_type": "branch",
            "master_branch": "master",
            "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
            "pusher_type": "user"
        },
        "public": true,
        "created_at": "2022-12-07T17:26:34Z"
    },
    {
        "id": "25604456116",
        "type": "PullRequestEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 294804856,
            "name": "appwrite/demos-for-react",
            "url": "https://api.github.com/repos/appwrite/demos-for-react"
        },
        "payload": {
            "action": "opened",
            "number": 23,
            "pull_request": {
                "url": "https://api.github.com/repos/appwrite/demos-for-react/pulls/23",
                "id": 1142564849,
                "node_id": "PR_kwDOEZJdeM5EGifx",
                "html_url": "https://github.com/appwrite/demos-for-react/pull/23",
                "diff_url": "https://github.com/appwrite/demos-for-react/pull/23.diff",
                "patch_url": "https://github.com/appwrite/demos-for-react/pull/23.patch",
                "issue_url": "https://api.github.com/repos/appwrite/demos-for-react/issues/23",
                "number": 23,
                "state": "open",
                "locked": false,
                "title": "Add Images with React sample",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "<!--\r\nThank you for sending the PR! We appreciate you spending the time to work on these changes.\r\n\r\nHelp us understand your motivation by explaining why you decided to make this change.\r\n\r\nYou can learn more about contributing to appwrite here: https://github.com/appwrite/appwrite/blob/master/CONTRIBUTING.md\r\n\r\nHappy contributing!\r\n\r\n-->\r\n\r\n## What does this PR do?\r\n\r\nThis PR adds a new sample React app and tutorial showing how to use Appwrite Storage.\r\n\r\n## Test Plan\r\n\r\nAt present, in common with the [Todo with React](https://github.com/appwrite/demo-todo-with-react) sample that this app is based on, there is no test code.\r\n\r\n### Have you read the [Contributing Guidelines on issues](https://github.com/appwrite/appwrite/blob/master/CONTRIBUTING.md)?\r\n\r\nYes!",
                "created_at": "2022-12-01T23:44:44Z",
                "updated_at": "2022-12-01T23:44:44Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": null,
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/appwrite/demos-for-react/pulls/23/commits",
                "review_comments_url": "https://api.github.com/repos/appwrite/demos-for-react/pulls/23/comments",
                "review_comment_url": "https://api.github.com/repos/appwrite/demos-for-react/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/appwrite/demos-for-react/issues/23/comments",
                "statuses_url": "https://api.github.com/repos/appwrite/demos-for-react/statuses/4a226a8bc97d8e739b1915f9199477433ff36d3b",
                "head": {
                    "label": "metadaddy:master",
                    "ref": "master",
                    "sha": "4a226a8bc97d8e739b1915f9199477433ff36d3b",
                    "user": {
                        "login": "metadaddy",
                        "id": 723517,
                        "node_id": "MDQ6VXNlcjcyMzUxNw==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/metadaddy",
                        "html_url": "https://github.com/metadaddy",
                        "followers_url": "https://api.github.com/users/metadaddy/followers",
                        "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                        "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                        "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                        "repos_url": "https://api.github.com/users/metadaddy/repos",
                        "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 573059111,
                        "node_id": "R_kgDOIigwJw",
                        "name": "demos-for-react",
                        "full_name": "metadaddy/demos-for-react",
                        "private": false,
                        "owner": {
                            "login": "metadaddy",
                            "id": 723517,
                            "node_id": "MDQ6VXNlcjcyMzUxNw==",
                            "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/metadaddy",
                            "html_url": "https://github.com/metadaddy",
                            "followers_url": "https://api.github.com/users/metadaddy/followers",
                            "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                            "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                            "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                            "repos_url": "https://api.github.com/users/metadaddy/repos",
                            "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/metadaddy/demos-for-react",
                        "description": "Demos and tutorials for getting started with Appwrite + React JS",
                        "fork": true,
                        "url": "https://api.github.com/repos/metadaddy/demos-for-react",
                        "forks_url": "https://api.github.com/repos/metadaddy/demos-for-react/forks",
                        "keys_url": "https://api.github.com/repos/metadaddy/demos-for-react/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/metadaddy/demos-for-react/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/metadaddy/demos-for-react/teams",
                        "hooks_url": "https://api.github.com/repos/metadaddy/demos-for-react/hooks",
                        "issue_events_url": "https://api.github.com/repos/metadaddy/demos-for-react/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/metadaddy/demos-for-react/events",
                        "assignees_url": "https://api.github.com/repos/metadaddy/demos-for-react/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/metadaddy/demos-for-react/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/metadaddy/demos-for-react/tags",
                        "blobs_url": "https://api.github.com/repos/metadaddy/demos-for-react/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/metadaddy/demos-for-react/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/metadaddy/demos-for-react/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/metadaddy/demos-for-react/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/metadaddy/demos-for-react/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/metadaddy/demos-for-react/languages",
                        "stargazers_url": "https://api.github.com/repos/metadaddy/demos-for-react/stargazers",
                        "contributors_url": "https://api.github.com/repos/metadaddy/demos-for-react/contributors",
                        "subscribers_url": "https://api.github.com/repos/metadaddy/demos-for-react/subscribers",
                        "subscription_url": "https://api.github.com/repos/metadaddy/demos-for-react/subscription",
                        "commits_url": "https://api.github.com/repos/metadaddy/demos-for-react/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/metadaddy/demos-for-react/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/metadaddy/demos-for-react/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/metadaddy/demos-for-react/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/metadaddy/demos-for-react/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/metadaddy/demos-for-react/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/metadaddy/demos-for-react/merges",
                        "archive_url": "https://api.github.com/repos/metadaddy/demos-for-react/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/metadaddy/demos-for-react/downloads",
                        "issues_url": "https://api.github.com/repos/metadaddy/demos-for-react/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/metadaddy/demos-for-react/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/metadaddy/demos-for-react/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/metadaddy/demos-for-react/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/metadaddy/demos-for-react/labels{/name}",
                        "releases_url": "https://api.github.com/repos/metadaddy/demos-for-react/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/metadaddy/demos-for-react/deployments",
                        "created_at": "2022-12-01T15:58:10Z",
                        "updated_at": "2022-12-01T23:29:50Z",
                        "pushed_at": "2022-12-01T23:37:47Z",
                        "git_url": "git://github.com/metadaddy/demos-for-react.git",
                        "ssh_url": "git@github.com:metadaddy/demos-for-react.git",
                        "clone_url": "https://github.com/metadaddy/demos-for-react.git",
                        "svn_url": "https://github.com/metadaddy/demos-for-react",
                        "homepage": "https://appwrite.io",
                        "size": 15299,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": "JavaScript",
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "mit",
                            "name": "MIT License",
                            "spdx_id": "MIT",
                            "url": "https://api.github.com/licenses/mit",
                            "node_id": "MDc6TGljZW5zZTEz"
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "master"
                    }
                },
                "base": {
                    "label": "appwrite:master",
                    "ref": "master",
                    "sha": "24405590c3f7d460b69b2df9c3c80c77d8a05674",
                    "user": {
                        "login": "appwrite",
                        "id": 25003669,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjI1MDAzNjY5",
                        "avatar_url": "https://avatars.githubusercontent.com/u/25003669?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/appwrite",
                        "html_url": "https://github.com/appwrite",
                        "followers_url": "https://api.github.com/users/appwrite/followers",
                        "following_url": "https://api.github.com/users/appwrite/following{/other_user}",
                        "gists_url": "https://api.github.com/users/appwrite/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/appwrite/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/appwrite/subscriptions",
                        "organizations_url": "https://api.github.com/users/appwrite/orgs",
                        "repos_url": "https://api.github.com/users/appwrite/repos",
                        "events_url": "https://api.github.com/users/appwrite/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/appwrite/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 294804856,
                        "node_id": "MDEwOlJlcG9zaXRvcnkyOTQ4MDQ4NTY=",
                        "name": "demos-for-react",
                        "full_name": "appwrite/demos-for-react",
                        "private": false,
                        "owner": {
                            "login": "appwrite",
                            "id": 25003669,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjI1MDAzNjY5",
                            "avatar_url": "https://avatars.githubusercontent.com/u/25003669?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/appwrite",
                            "html_url": "https://github.com/appwrite",
                            "followers_url": "https://api.github.com/users/appwrite/followers",
                            "following_url": "https://api.github.com/users/appwrite/following{/other_user}",
                            "gists_url": "https://api.github.com/users/appwrite/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/appwrite/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/appwrite/subscriptions",
                            "organizations_url": "https://api.github.com/users/appwrite/orgs",
                            "repos_url": "https://api.github.com/users/appwrite/repos",
                            "events_url": "https://api.github.com/users/appwrite/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/appwrite/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/appwrite/demos-for-react",
                        "description": "Demos and tutorials for getting started with Appwrite + React JS",
                        "fork": false,
                        "url": "https://api.github.com/repos/appwrite/demos-for-react",
                        "forks_url": "https://api.github.com/repos/appwrite/demos-for-react/forks",
                        "keys_url": "https://api.github.com/repos/appwrite/demos-for-react/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/appwrite/demos-for-react/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/appwrite/demos-for-react/teams",
                        "hooks_url": "https://api.github.com/repos/appwrite/demos-for-react/hooks",
                        "issue_events_url": "https://api.github.com/repos/appwrite/demos-for-react/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/appwrite/demos-for-react/events",
                        "assignees_url": "https://api.github.com/repos/appwrite/demos-for-react/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/appwrite/demos-for-react/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/appwrite/demos-for-react/tags",
                        "blobs_url": "https://api.github.com/repos/appwrite/demos-for-react/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/appwrite/demos-for-react/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/appwrite/demos-for-react/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/appwrite/demos-for-react/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/appwrite/demos-for-react/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/appwrite/demos-for-react/languages",
                        "stargazers_url": "https://api.github.com/repos/appwrite/demos-for-react/stargazers",
                        "contributors_url": "https://api.github.com/repos/appwrite/demos-for-react/contributors",
                        "subscribers_url": "https://api.github.com/repos/appwrite/demos-for-react/subscribers",
                        "subscription_url": "https://api.github.com/repos/appwrite/demos-for-react/subscription",
                        "commits_url": "https://api.github.com/repos/appwrite/demos-for-react/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/appwrite/demos-for-react/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/appwrite/demos-for-react/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/appwrite/demos-for-react/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/appwrite/demos-for-react/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/appwrite/demos-for-react/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/appwrite/demos-for-react/merges",
                        "archive_url": "https://api.github.com/repos/appwrite/demos-for-react/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/appwrite/demos-for-react/downloads",
                        "issues_url": "https://api.github.com/repos/appwrite/demos-for-react/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/appwrite/demos-for-react/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/appwrite/demos-for-react/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/appwrite/demos-for-react/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/appwrite/demos-for-react/labels{/name}",
                        "releases_url": "https://api.github.com/repos/appwrite/demos-for-react/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/appwrite/demos-for-react/deployments",
                        "created_at": "2020-09-11T20:21:55Z",
                        "updated_at": "2022-11-22T14:03:03Z",
                        "pushed_at": "2022-12-01T23:44:45Z",
                        "git_url": "git://github.com/appwrite/demos-for-react.git",
                        "ssh_url": "git@github.com:appwrite/demos-for-react.git",
                        "clone_url": "https://github.com/appwrite/demos-for-react.git",
                        "svn_url": "https://github.com/appwrite/demos-for-react",
                        "homepage": "https://appwrite.io",
                        "size": 15299,
                        "stargazers_count": 46,
                        "watchers_count": 46,
                        "language": "JavaScript",
                        "has_issues": true,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 26,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 6,
                        "license": {
                            "key": "mit",
                            "name": "MIT License",
                            "spdx_id": "MIT",
                            "url": "https://api.github.com/licenses/mit",
                            "node_id": "MDc6TGljZW5zZTEz"
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "appwrite",
                            "hacktoberfest",
                            "react",
                            "reactjs"
                        ],
                        "visibility": "public",
                        "forks": 26,
                        "open_issues": 6,
                        "watchers": 46,
                        "default_branch": "master"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/appwrite/demos-for-react/pulls/23"
                    },
                    "html": {
                        "href": "https://github.com/appwrite/demos-for-react/pull/23"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/appwrite/demos-for-react/issues/23"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/appwrite/demos-for-react/issues/23/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/appwrite/demos-for-react/pulls/23/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/appwrite/demos-for-react/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/appwrite/demos-for-react/pulls/23/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/appwrite/demos-for-react/statuses/4a226a8bc97d8e739b1915f9199477433ff36d3b"
                    }
                },
                "author_association": "NONE",
                "auto_merge": null,
                "active_lock_reason": null,
                "merged": false,
                "mergeable": null,
                "rebaseable": null,
                "mergeable_state": "unknown",
                "merged_by": null,
                "comments": 0,
                "review_comments": 0,
                "maintainer_can_modify": true,
                "commits": 1,
                "additions": 41352,
                "deletions": 2,
                "changed_files": 37
            }
        },
        "public": true,
        "created_at": "2022-12-01T23:44:45Z",
        "org": {
            "id": 25003669,
            "login": "appwrite",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/appwrite",
            "avatar_url": "https://avatars.githubusercontent.com/u/25003669?"
        }
    },
    {
        "id": "25604373520",
        "type": "PushEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 573059111,
            "name": "metadaddy/demos-for-react",
            "url": "https://api.github.com/repos/metadaddy/demos-for-react"
        },
        "payload": {
            "push_id": 11854639616,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/master",
            "head": "4a226a8bc97d8e739b1915f9199477433ff36d3b",
            "before": "0162e33140f1342dbfb9b8cb3a700b7e9bc50536",
            "commits": [
                {
                    "sha": "4a226a8bc97d8e739b1915f9199477433ff36d3b",
                    "author": {
                        "email": "pat@backblaze.com",
                        "name": "Pat Patterson"
                    },
                    "message": "Add Images with React sample",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/demos-for-react/commits/4a226a8bc97d8e739b1915f9199477433ff36d3b"
                }
            ]
        },
        "public": true,
        "created_at": "2022-12-01T23:37:47Z"
    },
    {
        "id": "25604361672",
        "type": "PushEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 573059111,
            "name": "metadaddy/demos-for-react",
            "url": "https://api.github.com/repos/metadaddy/demos-for-react"
        },
        "payload": {
            "push_id": 11854633166,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/master",
            "head": "0162e33140f1342dbfb9b8cb3a700b7e9bc50536",
            "before": "4461553bf33da9b01dd0cd3507b87c87b1e15c3e",
            "commits": [
                {
                    "sha": "0162e33140f1342dbfb9b8cb3a700b7e9bc50536",
                    "author": {
                        "email": "pat@backblaze.com",
                        "name": "Pat Patterson"
                    },
                    "message": "Add Images with React sample",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/demos-for-react/commits/0162e33140f1342dbfb9b8cb3a700b7e9bc50536"
                }
            ]
        },
        "public": true,
        "created_at": "2022-12-01T23:36:47Z"
    },
    {
        "id": "25604294607",
        "type": "PushEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 573059111,
            "name": "metadaddy/demos-for-react",
            "url": "https://api.github.com/repos/metadaddy/demos-for-react"
        },
        "payload": {
            "push_id": 11854596843,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/master",
            "head": "4461553bf33da9b01dd0cd3507b87c87b1e15c3e",
            "before": "7f467b41101e883ff580d8adb5775d6f1e9e7860",
            "commits": [
                {
                    "sha": "4461553bf33da9b01dd0cd3507b87c87b1e15c3e",
                    "author": {
                        "email": "pat@backblaze.com",
                        "name": "Pat Patterson"
                    },
                    "message": "Add Images with React sample",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/demos-for-react/commits/4461553bf33da9b01dd0cd3507b87c87b1e15c3e"
                }
            ]
        },
        "public": true,
        "created_at": "2022-12-01T23:31:12Z"
    },
    {
        "id": "25604277199",
        "type": "PushEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 573059111,
            "name": "metadaddy/demos-for-react",
            "url": "https://api.github.com/repos/metadaddy/demos-for-react"
        },
        "payload": {
            "push_id": 11854587308,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/master",
            "head": "7f467b41101e883ff580d8adb5775d6f1e9e7860",
            "before": "24405590c3f7d460b69b2df9c3c80c77d8a05674",
            "commits": [
                {
                    "sha": "7f467b41101e883ff580d8adb5775d6f1e9e7860",
                    "author": {
                        "email": "pat@backblaze.com",
                        "name": "Pat Patterson"
                    },
                    "message": "Add Images with React sample",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/demos-for-react/commits/7f467b41101e883ff580d8adb5775d6f1e9e7860"
                }
            ]
        },
        "public": true,
        "created_at": "2022-12-01T23:29:47Z"
    },
    {
        "id": "25595578683",
        "type": "ForkEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 294804856,
            "name": "appwrite/demos-for-react",
            "url": "https://api.github.com/repos/appwrite/demos-for-react"
        },
        "payload": {
            "forkee": {
                "id": 573059111,
                "node_id": "R_kgDOIigwJw",
                "name": "demos-for-react",
                "full_name": "metadaddy/demos-for-react",
                "private": false,
                "owner": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "html_url": "https://github.com/metadaddy/demos-for-react",
                "description": "Demos and tutorials for getting started with Appwrite + React JS",
                "fork": true,
                "url": "https://api.github.com/repos/metadaddy/demos-for-react",
                "forks_url": "https://api.github.com/repos/metadaddy/demos-for-react/forks",
                "keys_url": "https://api.github.com/repos/metadaddy/demos-for-react/keys{/key_id}",
                "collaborators_url": "https://api.github.com/repos/metadaddy/demos-for-react/collaborators{/collaborator}",
                "teams_url": "https://api.github.com/repos/metadaddy/demos-for-react/teams",
                "hooks_url": "https://api.github.com/repos/metadaddy/demos-for-react/hooks",
                "issue_events_url": "https://api.github.com/repos/metadaddy/demos-for-react/issues/events{/number}",
                "events_url": "https://api.github.com/repos/metadaddy/demos-for-react/events",
                "assignees_url": "https://api.github.com/repos/metadaddy/demos-for-react/assignees{/user}",
                "branches_url": "https://api.github.com/repos/metadaddy/demos-for-react/branches{/branch}",
                "tags_url": "https://api.github.com/repos/metadaddy/demos-for-react/tags",
                "blobs_url": "https://api.github.com/repos/metadaddy/demos-for-react/git/blobs{/sha}",
                "git_tags_url": "https://api.github.com/repos/metadaddy/demos-for-react/git/tags{/sha}",
                "git_refs_url": "https://api.github.com/repos/metadaddy/demos-for-react/git/refs{/sha}",
                "trees_url": "https://api.github.com/repos/metadaddy/demos-for-react/git/trees{/sha}",
                "statuses_url": "https://api.github.com/repos/metadaddy/demos-for-react/statuses/{sha}",
                "languages_url": "https://api.github.com/repos/metadaddy/demos-for-react/languages",
                "stargazers_url": "https://api.github.com/repos/metadaddy/demos-for-react/stargazers",
                "contributors_url": "https://api.github.com/repos/metadaddy/demos-for-react/contributors",
                "subscribers_url": "https://api.github.com/repos/metadaddy/demos-for-react/subscribers",
                "subscription_url": "https://api.github.com/repos/metadaddy/demos-for-react/subscription",
                "commits_url": "https://api.github.com/repos/metadaddy/demos-for-react/commits{/sha}",
                "git_commits_url": "https://api.github.com/repos/metadaddy/demos-for-react/git/commits{/sha}",
                "comments_url": "https://api.github.com/repos/metadaddy/demos-for-react/comments{/number}",
                "issue_comment_url": "https://api.github.com/repos/metadaddy/demos-for-react/issues/comments{/number}",
                "contents_url": "https://api.github.com/repos/metadaddy/demos-for-react/contents/{+path}",
                "compare_url": "https://api.github.com/repos/metadaddy/demos-for-react/compare/{base}...{head}",
                "merges_url": "https://api.github.com/repos/metadaddy/demos-for-react/merges",
                "archive_url": "https://api.github.com/repos/metadaddy/demos-for-react/{archive_format}{/ref}",
                "downloads_url": "https://api.github.com/repos/metadaddy/demos-for-react/downloads",
                "issues_url": "https://api.github.com/repos/metadaddy/demos-for-react/issues{/number}",
                "pulls_url": "https://api.github.com/repos/metadaddy/demos-for-react/pulls{/number}",
                "milestones_url": "https://api.github.com/repos/metadaddy/demos-for-react/milestones{/number}",
                "notifications_url": "https://api.github.com/repos/metadaddy/demos-for-react/notifications{?since,all,participating}",
                "labels_url": "https://api.github.com/repos/metadaddy/demos-for-react/labels{/name}",
                "releases_url": "https://api.github.com/repos/metadaddy/demos-for-react/releases{/id}",
                "deployments_url": "https://api.github.com/repos/metadaddy/demos-for-react/deployments",
                "created_at": "2022-12-01T15:58:10Z",
                "updated_at": "2022-11-22T14:03:03Z",
                "pushed_at": "2022-11-18T01:07:58Z",
                "git_url": "git://github.com/metadaddy/demos-for-react.git",
                "ssh_url": "git@github.com:metadaddy/demos-for-react.git",
                "clone_url": "https://github.com/metadaddy/demos-for-react.git",
                "svn_url": "https://github.com/metadaddy/demos-for-react",
                "homepage": "https://appwrite.io",
                "size": 15299,
                "stargazers_count": 0,
                "watchers_count": 0,
                "language": null,
                "has_issues": false,
                "has_projects": true,
                "has_downloads": true,
                "has_wiki": true,
                "has_pages": false,
                "has_discussions": false,
                "forks_count": 0,
                "mirror_url": null,
                "archived": false,
                "disabled": false,
                "open_issues_count": 0,
                "license": {
                    "key": "mit",
                    "name": "MIT License",
                    "spdx_id": "MIT",
                    "url": "https://api.github.com/licenses/mit",
                    "node_id": "MDc6TGljZW5zZTEz"
                },
                "allow_forking": true,
                "is_template": false,
                "web_commit_signoff_required": false,
                "topics": [],
                "visibility": "public",
                "forks": 0,
                "open_issues": 0,
                "watchers": 0,
                "default_branch": "master",
                "public": true
            }
        },
        "public": true,
        "created_at": "2022-12-01T15:58:11Z",
        "org": {
            "id": 25003669,
            "login": "appwrite",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/appwrite",
            "avatar_url": "https://avatars.githubusercontent.com/u/25003669?"
        }
    },
    {
        "id": "25577124268",
        "type": "PushEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 567902821,
            "name": "backblaze-b2-samples/cloudflare-b2",
            "url": "https://api.github.com/repos/backblaze-b2-samples/cloudflare-b2"
        },
        "payload": {
            "push_id": 11841034209,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/main",
            "head": "289e15eac44d52ba1592fbeca3a69cd472142aa2",
            "before": "ff556be29f8e8295fb9672a4aa4b0db4ba962444",
            "commits": [
                {
                    "sha": "289e15eac44d52ba1592fbeca3a69cd472142aa2",
                    "author": {
                        "email": "pat@backblaze.com",
                        "name": "Pat Patterson"
                    },
                    "message": "Add ALLOW_LIST_BUCKET",
                    "distinct": true,
                    "url": "https://api.github.com/repos/backblaze-b2-samples/cloudflare-b2/commits/289e15eac44d52ba1592fbeca3a69cd472142aa2"
                }
            ]
        },
        "public": true,
        "created_at": "2022-11-30T23:24:21Z",
        "org": {
            "id": 17604039,
            "login": "backblaze-b2-samples",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/backblaze-b2-samples",
            "avatar_url": "https://avatars.githubusercontent.com/u/17604039?"
        }
    },
    {
        "id": "25573284296",
        "type": "IssuesEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 166515022,
            "name": "trinodb/trino",
            "url": "https://api.github.com/repos/trinodb/trino"
        },
        "payload": {
            "action": "opened",
            "issue": {
                "url": "https://api.github.com/repos/trinodb/trino/issues/15259",
                "repository_url": "https://api.github.com/repos/trinodb/trino",
                "labels_url": "https://api.github.com/repos/trinodb/trino/issues/15259/labels{/name}",
                "comments_url": "https://api.github.com/repos/trinodb/trino/issues/15259/comments",
                "events_url": "https://api.github.com/repos/trinodb/trino/issues/15259/events",
                "html_url": "https://github.com/trinodb/trino/issues/15259",
                "id": 1470129150,
                "node_id": "I_kwDOCezRTs5XoGP-",
                "number": 15259,
                "title": "Document how the Hive connector can anonymously access a public S3 bucket",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 0,
                "created_at": "2022-11-30T19:37:12Z",
                "updated_at": "2022-11-30T19:37:12Z",
                "closed_at": null,
                "author_association": "MEMBER",
                "active_lock_reason": null,
                "body": "Issue #6127 requested a mechanism to allow the Hive connector to anonymously access a public S3 bucket. It turns out that it is possible to achieve this via configuration:\r\n\r\nIn the catalog properties, specify the `NoOpSigner` for anonymous S3 requests from the connector:\r\n\r\n```\r\nhive.s3.signer-class=com.amazonaws.auth.NoOpSigner\r\n```\r\n\r\nAnd, in `conf/metastore-site.xml`, specify the `AnonymousAWSCredentialsProvider`, either globally or on a per-bucket basis:\r\n\r\n```xml\r\n<!-- Global configuration -->\r\n<property>\r\n    <name>fs.s3a.aws.credentials.provider</name>\r\n    <value>org.apache.hadoop.fs.s3a.AnonymousAWSCredentialsProvider</value>\r\n</property>\r\n```\r\n\r\nor\r\n\r\n```xml\r\n<!-- Per-bucket configuration -->\r\n<property>\r\n    <name>fs.s3a.bucket.BUCKETNAME.aws.credentials.provider</name>\r\n    <value>org.apache.hadoop.fs.s3a.AnonymousAWSCredentialsProvider</value>\r\n</property>\r\n```",
                "reactions": {
                    "url": "https://api.github.com/repos/trinodb/trino/issues/15259/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/trinodb/trino/issues/15259/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            }
        },
        "public": true,
        "created_at": "2022-11-30T19:37:12Z",
        "org": {
            "id": 34147222,
            "login": "trinodb",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/trinodb",
            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?"
        }
    },
    {
        "id": "25572758687",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 166515022,
            "name": "trinodb/trino",
            "url": "https://api.github.com/repos/trinodb/trino"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/trinodb/trino/issues/6127",
                "repository_url": "https://api.github.com/repos/trinodb/trino",
                "labels_url": "https://api.github.com/repos/trinodb/trino/issues/6127/labels{/name}",
                "comments_url": "https://api.github.com/repos/trinodb/trino/issues/6127/comments",
                "events_url": "https://api.github.com/repos/trinodb/trino/issues/6127/events",
                "html_url": "https://github.com/trinodb/trino/issues/6127",
                "id": 752511898,
                "node_id": "MDU6SXNzdWU3NTI1MTE4OTg=",
                "number": 6127,
                "title": "Support public S3 bucket access (unsigned requests/anonymousCredentials)",
                "user": {
                    "login": "tooptoop4",
                    "id": 33283496,
                    "node_id": "MDQ6VXNlcjMzMjgzNDk2",
                    "avatar_url": "https://avatars.githubusercontent.com/u/33283496?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/tooptoop4",
                    "html_url": "https://github.com/tooptoop4",
                    "followers_url": "https://api.github.com/users/tooptoop4/followers",
                    "following_url": "https://api.github.com/users/tooptoop4/following{/other_user}",
                    "gists_url": "https://api.github.com/users/tooptoop4/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/tooptoop4/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/tooptoop4/subscriptions",
                    "organizations_url": "https://api.github.com/users/tooptoop4/orgs",
                    "repos_url": "https://api.github.com/users/tooptoop4/repos",
                    "events_url": "https://api.github.com/users/tooptoop4/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/tooptoop4/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 1,
                "created_at": "2020-11-28T00:14:35Z",
                "updated_at": "2022-11-30T19:08:26Z",
                "closed_at": null,
                "author_association": "CONTRIBUTOR",
                "active_lock_reason": null,
                "body": "1. - https://github.com/prestosql/presto/pull/6131  for below:\r\n\r\nhow to make presto read data from a public s3 bucket? ie the details on https://registry.opendata.aws/deutsche-boerse-pds/.  when I try to create external table it complains that s3 access key/secret key must be provided. But AWS CLI commands work\r\n\r\n\"We would need equivalent of --no-sign-request probably\"\r\n\r\nSome research:\r\nhttps://issues.apache.org/jira/browse/HADOOP-13237\r\nhttps://github.com/aws/aws-sdk-java/issues/1122\r\n\r\nMy guess would be https://github.com/prestosql/presto/blob/347/presto-hive/src/main/java/io/prestosql/plugin/hive/s3/PrestoS3FileSystem.java#L891 adding a check if certain config set then use AnonymousAWSCredentialsProvider\r\n\r\n2. hive.s3.endpoint=https://s3.amazonaws.com or not setting hive.s3.endpoint solves below:\r\n\r\nDifferent public datasets are in different regions. ie https://registry.opendata.aws/rapid7-fdns-any/ and https://registry.opendata.aws/fsf-flood-risk/\r\na) creating a separate presto catalog per s3 region does not feel right. It can lead to a clutter of catalogs being setup (with less than 5 tables each catalog), need to bounce presto server and users will need to lookup system.jdbc.tables to know which public dataset belongs to each catalog, whereas if CREATE TABLE syntax accepted s3 region argument then there could be single presto catalog for all s3 datasets. Or 2nd-best would be one presto catalog for company's private s3 (let's assume its single region) and a different catalog for public s3 (can be across many regions, ie us-west-2, us-east-1, eu-central-1..etc)\r\nb) perhaps defining region can be completely optional? ie aws s3 ls s3://deutsche-boerse-eurex-pds/ --no-sign-request works without specifying any region\r\n\r\n3. - https://github.com/prestosql/presto/pull/6182 for below:\r\n\r\nthis particular dataset does not follow hive style partitioning ie it uses s3://deutsche-boerse-eurex-pds/2020-11-26/ instead of s3://deutsche-boerse-eurex-pds/mystringcolumnname=2020-11-26/\r\ncan presto still interpret all these partitions positionally ie if it is one folder deep and my table DDL has partitioned_by = ARRAY['mystringcolumnname']? using single command to sync all partitions, else I can fallback to manual ADD PARTITION for each one with full path\r\n\r\n\r\nAPPENDIX for point 1\r\n1. trying to create table in hiveserver2\r\nError: org.apache.hive.service.cli.HiveSQLException: Error while processing statement: FAILED: Execution Error, return code 1 from org.apache.hadoop.hive.ql.exec.DDLTask. MetaException(message:com.amazonaws.AmazonClientException: Unable to load AWS credentials from any provider in the chain)\r\n\tat org.apache.hive.service.cli.operation.Operation.toSQLException(Operation.java:380)\r\n\tat org.apache.hive.service.cli.operation.SQLOperation.runQuery(SQLOperation.java:257)\r\n\tat org.apache.hive.service.cli.operation.SQLOperation.access$800(SQLOperation.java:91)\r\n\tat org.apache.hive.service.cli.operation.SQLOperation$BackgroundWork$1.run(SQLOperation.java:348)\r\n\tat java.security.AccessController.doPrivileged(Native Method)\r\n\tat javax.security.auth.Subject.doAs(Subject.java:422)\r\n\tat org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1657)\r\n\tat org.apache.hive.service.cli.operation.SQLOperation$BackgroundWork.run(SQLOperation.java:362)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.hadoop.hive.ql.metadata.HiveException: MetaException(message:com.amazonaws.AmazonClientException: Unable to load AWS credentials from any provider in the chain)\r\n\tat org.apache.hadoop.hive.ql.metadata.Hive.createTable(Hive.java:862)\r\n\tat org.apache.hadoop.hive.ql.metadata.Hive.createTable(Hive.java:867)\r\n\tat org.apache.hadoop.hive.ql.exec.DDLTask.createTable(DDLTask.java:4356)\r\n\tat org.apache.hadoop.hive.ql.exec.DDLTask.execute(DDLTask.java:354)\r\n\tat org.apache.hadoop.hive.ql.exec.Task.executeTask(Task.java:199)\r\n\tat org.apache.hadoop.hive.ql.exec.TaskRunner.runSequential(TaskRunner.java:100)\r\n\tat org.apache.hadoop.hive.ql.Driver.launchTask(Driver.java:2183)\r\n\tat org.apache.hadoop.hive.ql.Driver.execute(Driver.java:1839)\r\n\tat org.apache.hadoop.hive.ql.Driver.runInternal(Driver.java:1526)\r\n\tat org.apache.hadoop.hive.ql.Driver.run(Driver.java:1237)\r\n\tat org.apache.hadoop.hive.ql.Driver.run(Driver.java:1232)\r\n\tat org.apache.hive.service.cli.operation.SQLOperation.runQuery(SQLOperation.java:255)\r\n\t... 11 more\r\nCaused by: MetaException(message:com.amazonaws.AmazonClientException: Unable to load AWS credentials from any provider in the chain)\r\n\tat org.apache.hadoop.hive.metastore.api.ThriftHiveMetastore$create_table_with_environment_context_result$create_table_with_environment_context_resultStandardScheme.read(ThriftHiveMetastore.java:42070)\r\n\tat org.apache.hadoop.hive.metastore.api.ThriftHiveMetastore$create_table_with_environment_context_result$create_table_with_environment_context_resultStandardScheme.read(ThriftHiveMetastore.java:42038)\r\n\tat org.apache.hadoop.hive.metastore.api.ThriftHiveMetastore$create_table_with_environment_context_result.read(ThriftHiveMetastore.java:41964)\r\n\tat org.apache.thrift.TServiceClient.receiveBase(TServiceClient.java:86)\r\n\tat org.apache.hadoop.hive.metastore.api.ThriftHiveMetastore$Client.recv_create_table_with_environment_context(ThriftHiveMetastore.java:1199)\r\n\tat org.apache.hadoop.hive.metastore.api.ThriftHiveMetastore$Client.create_table_with_environment_context(ThriftHiveMetastore.java:1185)\r\n\tat org.apache.hadoop.hive.metastore.HiveMetaStoreClient.create_table_with_environment_context(HiveMetaStoreClient.java:2399)\r\n\tat org.apache.hadoop.hive.ql.metadata.SessionHiveMetaStoreClient.create_table_with_environment_context(SessionHiveMetaStoreClient.java:93)\r\n\tat org.apache.hadoop.hive.metastore.HiveMetaStoreClient.createTable(HiveMetaStoreClient.java:752)\r\n\tat org.apache.hadoop.hive.metastore.HiveMetaStoreClient.createTable(HiveMetaStoreClient.java:740)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.apache.hadoop.hive.metastore.RetryingMetaStoreClient.invoke(RetryingMetaStoreClient.java:173)\r\n\tat com.sun.proxy.$Proxy27.createTable(Unknown Source)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.apache.hadoop.hive.metastore.HiveMetaStoreClient$SynchronizedHandler.invoke(HiveMetaStoreClient.java:2330)\r\n\tat com.sun.proxy.$Proxy27.createTable(Unknown Source)\r\n\tat org.apache.hadoop.hive.ql.metadata.Hive.createTable(Hive.java:852)\r\n\t... 22 more (state=08S01,code=1)\r\n2. add <property>\r\n        <name>fs.s3a.aws.credentials.provider</name>\r\n        <value>org.apache.hadoop.fs.s3a.AnonymousAWSCredentialsProvider</value>\r\n      </property> to hive-site.xml\r\n3. create table in hiveserver2 and select from table in hiveserver2 works\r\n4. select from table in presto gives this error:\r\nio.prestosql.spi.PrestoException: Unable to load AWS credentials from any provider in the chain: [EnvironmentVariableCredentialsProvider: Unable to load AWS credentials from environment variables (AWS_ACCESS_KEY_ID (or AWS_ACCESS_KEY) and AWS_SECRET_KEY (or AWS_SECRET_ACCESS_KEY)), SystemPropertiesCredentialsProvider: Unable to load AWS credentials from Java system properties (aws.accessKeyId and aws.secretKey), com.amazonaws.auth.profile.ProfileCredentialsProvider@1037c40f: profile file cannot be null, com.amazonaws.auth.EC2ContainerCredentialsProviderWrapper@28877425: Unable to load credentials from service endpoint]\r\n        \tat io.prestosql.plugin.hive.BackgroundHiveSplitLoader$HiveSplitLoaderTask.process(BackgroundHiveSplitLoader.java:207)\r\n        \tat io.prestosql.plugin.hive.util.ResumableTasks.safeProcessTask(ResumableTasks.java:47)\r\n        \tat io.prestosql.plugin.hive.util.ResumableTasks.access$000(ResumableTasks.java:20)\r\n        \tat io.prestosql.plugin.hive.util.ResumableTasks$1.run(ResumableTasks.java:35)\r\n        \tat io.prestosql.$gen.Presto_318____20201128_084331_1.run(Unknown Source)\r\n        \tat io.airlift.concurrent.BoundedExecutor.drainQueue(BoundedExecutor.java:78)\r\n        \tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n        \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n        \tat java.lang.Thread.run(Thread.java:748)\r\n        Caused by: com.amazonaws.SdkClientException: Unable to load AWS credentials from any provider in the chain: [EnvironmentVariableCredentialsProvider: Unable to load AWS credentials from environment variables (AWS_ACCESS_KEY_ID (or AWS_ACCESS_KEY) and AWS_SECRET_KEY (or AWS_SECRET_ACCESS_KEY)), SystemPropertiesCredentialsProvider: Unable to load AWS credentials from Java system properties (aws.accessKeyId and aws.secretKey), com.amazonaws.auth.profile.ProfileCredentialsProvider@1037c40f: profile file cannot be null, com.amazonaws.auth.EC2ContainerCredentialsProviderWrapper@28877425: Unable to load credentials from service endpoint]\r\n        \tat com.amazonaws.auth.AWSCredentialsProviderChain.getCredentials(AWSCredentialsProviderChain.java:136)\r\n        \tat com.amazonaws.http.AmazonHttpClient$RequestExecutor.getCredentialsFromContext(AmazonHttpClient.java:1225)\r\n        \tat com.amazonaws.http.AmazonHttpClient$RequestExecutor.runBeforeRequestHandlers(AmazonHttpClient.java:801)\r\n        \tat com.amazonaws.http.AmazonHttpClient$RequestExecutor.doExecute(AmazonHttpClient.java:751)\r\n        \tat com.amazonaws.http.AmazonHttpClient$RequestExecutor.executeWithTimer(AmazonHttpClient.java:744)\r\n        \tat com.amazonaws.http.AmazonHttpClient$RequestExecutor.execute(AmazonHttpClient.java:726)\r\n        \tat com.amazonaws.http.AmazonHttpClient$RequestExecutor.access$500(AmazonHttpClient.java:686)\r\n        \tat com.amazonaws.http.AmazonHttpClient$RequestExecutionBuilderImpl.execute(AmazonHttpClient.java:668)\r\n        \tat com.amazonaws.http.AmazonHttpClient.execute(AmazonHttpClient.java:532)\r\n        \tat com.amazonaws.http.AmazonHttpClient.execute(AmazonHttpClient.java:512)\r\n        \tat com.amazonaws.services.s3.AmazonS3Client.invoke(AmazonS3Client.java:4921)\r\n        \tat com.amazonaws.services.s3.AmazonS3Client.invoke(AmazonS3Client.java:4867)\r\n        \tat com.amazonaws.services.s3.AmazonS3Client.invoke(AmazonS3Client.java:4861)\r\n        \tat com.amazonaws.services.s3.AmazonS3Client.listObjects(AmazonS3Client.java:880)\r\n        \tat io.prestosql.plugin.hive.s3.PrestoS3FileSystem.listPrefix(PrestoS3FileSystem.java:524)\r\n        \tat io.prestosql.plugin.hive.s3.PrestoS3FileSystem.access$000(PrestoS3FileSystem.java:132)\r\n        \tat io.prestosql.plugin.hive.s3.PrestoS3FileSystem$1.<init>(PrestoS3FileSystem.java:304)\r\n        \tat io.prestosql.plugin.hive.s3.PrestoS3FileSystem.listLocatedStatus(PrestoS3FileSystem.java:302)\r\n        \tat org.apache.hadoop.fs.FilterFileSystem.listLocatedStatus(FilterFileSystem.java:283)\r\n        \tat io.prestosql.plugin.hive.CachingDirectoryLister.list(CachingDirectoryLister.java:81)\r\n        \tat io.prestosql.plugin.hive.util.HiveFileIterator$FileStatusIterator.<init>(HiveFileIterator.java:134)\r\n        \tat io.prestosql.plugin.hive.util.HiveFileIterator$FileStatusIterator.<init>(HiveFileIterator.java:122)\r\n        \tat io.prestosql.plugin.hive.util.HiveFileIterator.getLocatedFileStatusRemoteIterator(HiveFileIterator.java:111)\r\n        \tat io.prestosql.plugin.hive.util.HiveFileIterator.computeNext(HiveFileIterator.java:104)\r\n        \tat io.prestosql.plugin.hive.util.HiveFileIterator.computeNext(HiveFileIterator.java:38)\r\n        \tat com.google.common.collect.AbstractIterator.tryToComputeNext(AbstractIterator.java:141)\r\n        \tat com.google.common.collect.AbstractIterator.hasNext(AbstractIterator.java:136)\r\n        \tat java.util.Spliterators$IteratorSpliterator.tryAdvance(Spliterators.java:1811)\r\n        \tat java.util.stream.StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0(StreamSpliterators.java:295)\r\n        \tat java.util.stream.StreamSpliterators$AbstractWrappingSpliterator.fillBuffer(StreamSpliterators.java:207)\r\n        \tat java.util.stream.StreamSpliterators$AbstractWrappingSpliterator.doAdvance(StreamSpliterators.java:162)\r\n        \tat java.util.stream.StreamSpliterators$WrappingSpliterator.tryAdvance(StreamSpliterators.java:301)\r\n        \tat java.util.Spliterators$1Adapter.hasNext(Spliterators.java:681)\r\n        \tat io.prestosql.plugin.hive.BackgroundHiveSplitLoader.loadSplits(BackgroundHiveSplitLoader.java:274)\r\n        \tat io.prestosql.plugin.hive.BackgroundHiveSplitLoader.access$300(BackgroundHiveSplitLoader.java:100)\r\n        \tat io.prestosql.plugin.hive.BackgroundHiveSplitLoader$HiveSplitLoaderTask.process(BackgroundHiveSplitLoader.java:200)\r\n        \t... 8 more\r\n5. try create within presto gives:\r\n      io.prestosql.spi.PrestoException: java.lang.IllegalArgumentException: AWS Access Key ID and Secret Access Key must be specified by setting the fs.s3.awsAccessKeyId and fs.s3.awsSecretAccessKey properties (respectively).\r\n\tat io.prestosql.plugin.hive.metastore.thrift.ThriftHiveMetastore.createTable(ThriftHiveMetastore.java:862)\r\n\tat io.prestosql.plugin.hive.metastore.thrift.BridgingHiveMetastore.createTable(BridgingHiveMetastore.java:164)\r\n\tat io.prestosql.plugin.hive.metastore.cache.CachingHiveMetastore.createTable(CachingHiveMetastore.java:431)\r\n\tat io.prestosql.plugin.hive.metastore.cache.CachingHiveMetastore.createTable(CachingHiveMetastore.java:431)\r\n\tat io.prestosql.plugin.hive.metastore.SemiTransactionalHiveMetastore$CreateTableOperation.run(SemiTransactionalHiveMetastore.java:2404)\r\n\tat io.prestosql.plugin.hive.metastore.SemiTransactionalHiveMetastore$Committer.executeAddTableOperations(SemiTransactionalHiveMetastore.java:1424)\r\n\tat io.prestosql.plugin.hive.metastore.SemiTransactionalHiveMetastore$Committer.access$1000(SemiTransactionalHiveMetastore.java:1043)\r\n\tat io.prestosql.plugin.hive.metastore.SemiTransactionalHiveMetastore.commitShared(SemiTransactionalHiveMetastore.java:986)\r\n\tat io.prestosql.plugin.hive.metastore.SemiTransactionalHiveMetastore.commit(SemiTransactionalHiveMetastore.java:891)\r\n\tat io.prestosql.plugin.hive.HiveMetadata.commit(HiveMetadata.java:2212)\r\n\tat io.prestosql.plugin.hive.HiveConnector.commit(HiveConnector.java:198)\r\n\tat io.prestosql.transaction.InMemoryTransactionManager$TransactionMetadata$ConnectorTransactionMetadata.commit(InMemoryTransactionManager.java:595)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat com.google.common.util.concurrent.TrustedListenableFutureTask$TrustedFutureInterruptibleTask.runInterruptibly(TrustedListenableFutureTask.java:125)\r\n\tat com.google.common.util.concurrent.InterruptibleTask.run(InterruptibleTask.java:57)\r\n\tat com.google.common.util.concurrent.TrustedListenableFutureTask.run(TrustedListenableFutureTask.java:78)\r\n\tat io.airlift.concurrent.BoundedExecutor.drainQueue(BoundedExecutor.java:78)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.hadoop.hive.metastore.api.MetaException: java.lang.IllegalArgumentException: AWS Access Key ID and Secret Access Key must be specified by setting the fs.s3.awsAccessKeyId and fs.s3.awsSecretAccessKey properties (respectively).\r\n\tat org.apache.hadoop.hive.metastore.api.ThriftHiveMetastore$create_table_result$create_table_resultStandardScheme.read(ThriftHiveMetastore.java:52658)\r\n\tat org.apache.hadoop.hive.metastore.api.ThriftHiveMetastore$create_table_result$create_table_resultStandardScheme.read(ThriftHiveMetastore.java:52626)\r\n\tat org.apache.hadoop.hive.metastore.api.ThriftHiveMetastore$create_table_result.read(ThriftHiveMetastore.java:52552)\r\n\tat org.apache.thrift.TServiceClient.receiveBase(TServiceClient.java:86)\r\n\tat org.apache.hadoop.hive.metastore.api.ThriftHiveMetastore$Client.recv_create_table(ThriftHiveMetastore.java:1490)\r\n\tat org.apache.hadoop.hive.metastore.api.ThriftHiveMetastore$Client.create_table(ThriftHiveMetastore.java:1477)\r\n\tat io.prestosql.plugin.hive.metastore.thrift.ThriftHiveMetastoreClient.createTable(ThriftHiveMetastoreClient.java:135)\r\n\tat io.prestosql.plugin.hive.metastore.thrift.ThriftHiveMetastore.lambda$createTable$36(ThriftHiveMetastore.java:850)\r\n\tat io.prestosql.plugin.hive.metastore.thrift.ThriftMetastoreApiStats.lambda$wrap$0(ThriftMetastoreApiStats.java:42)\r\n\tat io.prestosql.plugin.hive.util.RetryDriver.run(RetryDriver.java:130)\r\n\tat io.prestosql.plugin.hive.metastore.thrift.ThriftHiveMetastore.createTable(ThriftHiveMetastore.java:848)\r\n\t... 19 more\r\n\r\nhttps://github.com/verdict-project/docker-presto-with-hadoop used for the experiments since Hadoop 2.8 minimum required",
                "reactions": {
                    "url": "https://api.github.com/repos/trinodb/trino/issues/6127/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/trinodb/trino/issues/6127/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/trinodb/trino/issues/comments/1332611575",
                "html_url": "https://github.com/trinodb/trino/issues/6127#issuecomment-1332611575",
                "issue_url": "https://api.github.com/repos/trinodb/trino/issues/6127",
                "id": 1332611575,
                "node_id": "IC_kwDOCezRTs5Pbgn3",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2022-11-30T19:08:26Z",
                "updated_at": "2022-11-30T19:08:26Z",
                "author_association": "MEMBER",
                "body": "@tooptoop4 I discovered a configuration that allows anonymous access to public S3 buckets, no code changes required:\r\n\r\nhttps://github.com/trinodb/trino/pull/15246#issuecomment-1332607435\r\n\r\nIf this works for you, I think we can close this issue. I'll open an issue and create a PR at https://github.com/trinodb/docs.trino.io",
                "reactions": {
                    "url": "https://api.github.com/repos/trinodb/trino/issues/comments/1332611575/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2022-11-30T19:08:26Z",
        "org": {
            "id": 34147222,
            "login": "trinodb",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/trinodb",
            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?"
        }
    },
    {
        "id": "25572683237",
        "type": "PullRequestEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 166515022,
            "name": "trinodb/trino",
            "url": "https://api.github.com/repos/trinodb/trino"
        },
        "payload": {
            "action": "closed",
            "number": 15246,
            "pull_request": {
                "url": "https://api.github.com/repos/trinodb/trino/pulls/15246",
                "id": 1139513259,
                "node_id": "PR_kwDOCezRTs5D65er",
                "html_url": "https://github.com/trinodb/trino/pull/15246",
                "diff_url": "https://github.com/trinodb/trino/pull/15246.diff",
                "patch_url": "https://github.com/trinodb/trino/pull/15246.patch",
                "issue_url": "https://api.github.com/repos/trinodb/trino/issues/15246",
                "number": 15246,
                "state": "closed",
                "locked": false,
                "title": "Allow Hive connector to read files from public S3 buckets",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "## Description\r\n\r\nAllow Hive connector to read files from public S3 buckets. Fixes #6127\r\n\r\nAdds boolean connector property `hive.s3.anonymous-requests.enabled` to access a public bucket (no AWS access key or secret key is required).\r\n\r\n<!-- Provide details that would help an engineer who is unfamiliar with this part of the code. -->\r\n## Additional context\r\n\r\nBefore this change, attempts to access a public S3 bucket fail with `AccessDeniedException`. Now, when `hive.s3.anonymous-requests.enabled` is set to `true`, `TrinoS3FileSystem` creates the appropriate `AWSCredentialsProvider` to access the public bucket anonymously.\r\n\r\n<!-- Mark the appropriate option with an (x). Propose a release note if you can. -->\r\n## Release notes\r\n\r\n( ) This is not user-visible or docs only and no release notes are required.\r\n( ) Release notes are required, please propose a release note for me.\r\n(x) Release notes are required, with the following suggested text:\r\n\r\nAllow Hive connector to read data from public S3 buckets via a new `hive.s3.anonymous-requests.enabled` connector property. (#6127)\r\n\r\n## Acknowledgements\r\n\r\nMany thanks to @tooptoop4 for the bulk of the work. I just rebased their changes and added tests and docs.",
                "created_at": "2022-11-29T20:44:22Z",
                "updated_at": "2022-11-30T19:04:30Z",
                "closed_at": "2022-11-30T19:04:29Z",
                "merged_at": null,
                "merge_commit_sha": "caf079a4861801dd77ff5b5f8b5447bb8313b365",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [
                    {
                        "login": "electrum",
                        "id": 9230,
                        "node_id": "MDQ6VXNlcjkyMzA=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/9230?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/electrum",
                        "html_url": "https://github.com/electrum",
                        "followers_url": "https://api.github.com/users/electrum/followers",
                        "following_url": "https://api.github.com/users/electrum/following{/other_user}",
                        "gists_url": "https://api.github.com/users/electrum/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/electrum/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/electrum/subscriptions",
                        "organizations_url": "https://api.github.com/users/electrum/orgs",
                        "repos_url": "https://api.github.com/users/electrum/repos",
                        "events_url": "https://api.github.com/users/electrum/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/electrum/received_events",
                        "type": "User",
                        "site_admin": false
                    }
                ],
                "requested_teams": [],
                "labels": [
                    {
                        "id": 1202580151,
                        "node_id": "MDU6TGFiZWwxMjAyNTgwMTUx",
                        "url": "https://api.github.com/repos/trinodb/trino/labels/cla-signed",
                        "name": "cla-signed",
                        "color": "ededed",
                        "default": false,
                        "description": null
                    },
                    {
                        "id": 1754928339,
                        "node_id": "MDU6TGFiZWwxNzU0OTI4MzM5",
                        "url": "https://api.github.com/repos/trinodb/trino/labels/docs",
                        "name": "docs",
                        "color": "ebf49a",
                        "default": false,
                        "description": ""
                    },
                    {
                        "id": 2848487174,
                        "node_id": "MDU6TGFiZWwyODQ4NDg3MTc0",
                        "url": "https://api.github.com/repos/trinodb/trino/labels/tests:hive",
                        "name": "tests:hive",
                        "color": "FBCA04",
                        "default": false,
                        "description": "Run Hive tests on all tested Hive distributions"
                    }
                ],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/trinodb/trino/pulls/15246/commits",
                "review_comments_url": "https://api.github.com/repos/trinodb/trino/pulls/15246/comments",
                "review_comment_url": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/trinodb/trino/issues/15246/comments",
                "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/a88eab9b966d9482404eca0938b37ee82d6e582e",
                "head": {
                    "label": "metadaddy:support-public-bucket",
                    "ref": "support-public-bucket",
                    "sha": "a88eab9b966d9482404eca0938b37ee82d6e582e",
                    "user": {
                        "login": "metadaddy",
                        "id": 723517,
                        "node_id": "MDQ6VXNlcjcyMzUxNw==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/metadaddy",
                        "html_url": "https://github.com/metadaddy",
                        "followers_url": "https://api.github.com/users/metadaddy/followers",
                        "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                        "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                        "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                        "repos_url": "https://api.github.com/users/metadaddy/repos",
                        "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 509274784,
                        "node_id": "R_kgDOHlrqoA",
                        "name": "trino",
                        "full_name": "metadaddy/trino",
                        "private": false,
                        "owner": {
                            "login": "metadaddy",
                            "id": 723517,
                            "node_id": "MDQ6VXNlcjcyMzUxNw==",
                            "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/metadaddy",
                            "html_url": "https://github.com/metadaddy",
                            "followers_url": "https://api.github.com/users/metadaddy/followers",
                            "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                            "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                            "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                            "repos_url": "https://api.github.com/users/metadaddy/repos",
                            "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/metadaddy/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": true,
                        "url": "https://api.github.com/repos/metadaddy/trino",
                        "forks_url": "https://api.github.com/repos/metadaddy/trino/forks",
                        "keys_url": "https://api.github.com/repos/metadaddy/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/metadaddy/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/metadaddy/trino/teams",
                        "hooks_url": "https://api.github.com/repos/metadaddy/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/metadaddy/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/metadaddy/trino/events",
                        "assignees_url": "https://api.github.com/repos/metadaddy/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/metadaddy/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/metadaddy/trino/tags",
                        "blobs_url": "https://api.github.com/repos/metadaddy/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/metadaddy/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/metadaddy/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/metadaddy/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/metadaddy/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/metadaddy/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/metadaddy/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/metadaddy/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/metadaddy/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/metadaddy/trino/subscription",
                        "commits_url": "https://api.github.com/repos/metadaddy/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/metadaddy/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/metadaddy/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/metadaddy/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/metadaddy/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/metadaddy/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/metadaddy/trino/merges",
                        "archive_url": "https://api.github.com/repos/metadaddy/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/metadaddy/trino/downloads",
                        "issues_url": "https://api.github.com/repos/metadaddy/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/metadaddy/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/metadaddy/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/metadaddy/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/metadaddy/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/metadaddy/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/metadaddy/trino/deployments",
                        "created_at": "2022-07-01T00:43:32Z",
                        "updated_at": "2022-07-06T01:44:20Z",
                        "pushed_at": "2022-11-29T23:15:19Z",
                        "git_url": "git://github.com/metadaddy/trino.git",
                        "ssh_url": "git@github.com:metadaddy/trino.git",
                        "clone_url": "https://github.com/metadaddy/trino.git",
                        "svn_url": "https://github.com/metadaddy/trino",
                        "homepage": "https://trino.io",
                        "size": 192368,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": "Java",
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "master"
                    }
                },
                "base": {
                    "label": "trinodb:master",
                    "ref": "master",
                    "sha": "861d51c8b8047d43f017e887231edf01d1561c65",
                    "user": {
                        "login": "trinodb",
                        "id": 34147222,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                        "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/trinodb",
                        "html_url": "https://github.com/trinodb",
                        "followers_url": "https://api.github.com/users/trinodb/followers",
                        "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                        "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                        "organizations_url": "https://api.github.com/users/trinodb/orgs",
                        "repos_url": "https://api.github.com/users/trinodb/repos",
                        "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/trinodb/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 166515022,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNjY1MTUwMjI=",
                        "name": "trino",
                        "full_name": "trinodb/trino",
                        "private": false,
                        "owner": {
                            "login": "trinodb",
                            "id": 34147222,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/trinodb",
                            "html_url": "https://github.com/trinodb",
                            "followers_url": "https://api.github.com/users/trinodb/followers",
                            "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                            "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                            "organizations_url": "https://api.github.com/users/trinodb/orgs",
                            "repos_url": "https://api.github.com/users/trinodb/repos",
                            "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/trinodb/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/trinodb/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": false,
                        "url": "https://api.github.com/repos/trinodb/trino",
                        "forks_url": "https://api.github.com/repos/trinodb/trino/forks",
                        "keys_url": "https://api.github.com/repos/trinodb/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/trinodb/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/trinodb/trino/teams",
                        "hooks_url": "https://api.github.com/repos/trinodb/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/trinodb/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/trinodb/trino/events",
                        "assignees_url": "https://api.github.com/repos/trinodb/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/trinodb/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/trinodb/trino/tags",
                        "blobs_url": "https://api.github.com/repos/trinodb/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/trinodb/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/trinodb/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/trinodb/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/trinodb/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/trinodb/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/trinodb/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/trinodb/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/trinodb/trino/subscription",
                        "commits_url": "https://api.github.com/repos/trinodb/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/trinodb/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/trinodb/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/trinodb/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/trinodb/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/trinodb/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/trinodb/trino/merges",
                        "archive_url": "https://api.github.com/repos/trinodb/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/trinodb/trino/downloads",
                        "issues_url": "https://api.github.com/repos/trinodb/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/trinodb/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/trinodb/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/trinodb/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/trinodb/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/trinodb/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/trinodb/trino/deployments",
                        "created_at": "2019-01-19T06:38:14Z",
                        "updated_at": "2022-11-30T15:00:26Z",
                        "pushed_at": "2022-11-30T18:44:47Z",
                        "git_url": "git://github.com/trinodb/trino.git",
                        "ssh_url": "git@github.com:trinodb/trino.git",
                        "clone_url": "https://github.com/trinodb/trino.git",
                        "svn_url": "https://github.com/trinodb/trino",
                        "homepage": "https://trino.io",
                        "size": 192628,
                        "stargazers_count": 6740,
                        "watchers_count": 6740,
                        "language": "Java",
                        "has_issues": true,
                        "has_projects": false,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": true,
                        "forks_count": 2080,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 2130,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "analytics",
                            "big-data",
                            "data-science",
                            "database",
                            "databases",
                            "datalake",
                            "distributed-database",
                            "distributed-databases",
                            "distributed-systems",
                            "hadoop",
                            "hive",
                            "java",
                            "jdbc",
                            "presto",
                            "prestodb",
                            "query-engine",
                            "sql",
                            "trino"
                        ],
                        "visibility": "public",
                        "forks": 2080,
                        "open_issues": 2130,
                        "watchers": 6740,
                        "default_branch": "master"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15246"
                    },
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15246"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15246"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15246/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15246/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15246/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/trinodb/trino/statuses/a88eab9b966d9482404eca0938b37ee82d6e582e"
                    }
                },
                "author_association": "MEMBER",
                "auto_merge": null,
                "active_lock_reason": null,
                "merged": false,
                "mergeable": true,
                "rebaseable": false,
                "mergeable_state": "clean",
                "merged_by": null,
                "comments": 1,
                "review_comments": 5,
                "maintainer_can_modify": false,
                "commits": 2,
                "additions": 84,
                "deletions": 2,
                "changed_files": 6
            }
        },
        "public": true,
        "created_at": "2022-11-30T19:04:30Z",
        "org": {
            "id": 34147222,
            "login": "trinodb",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/trinodb",
            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?"
        }
    },
    {
        "id": "25572683062",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 166515022,
            "name": "trinodb/trino",
            "url": "https://api.github.com/repos/trinodb/trino"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/trinodb/trino/issues/15246",
                "repository_url": "https://api.github.com/repos/trinodb/trino",
                "labels_url": "https://api.github.com/repos/trinodb/trino/issues/15246/labels{/name}",
                "comments_url": "https://api.github.com/repos/trinodb/trino/issues/15246/comments",
                "events_url": "https://api.github.com/repos/trinodb/trino/issues/15246/events",
                "html_url": "https://github.com/trinodb/trino/pull/15246",
                "id": 1468674025,
                "node_id": "PR_kwDOCezRTs5D65er",
                "number": 15246,
                "title": "Allow Hive connector to read files from public S3 buckets",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 1202580151,
                        "node_id": "MDU6TGFiZWwxMjAyNTgwMTUx",
                        "url": "https://api.github.com/repos/trinodb/trino/labels/cla-signed",
                        "name": "cla-signed",
                        "color": "ededed",
                        "default": false,
                        "description": null
                    },
                    {
                        "id": 1754928339,
                        "node_id": "MDU6TGFiZWwxNzU0OTI4MzM5",
                        "url": "https://api.github.com/repos/trinodb/trino/labels/docs",
                        "name": "docs",
                        "color": "ebf49a",
                        "default": false,
                        "description": ""
                    },
                    {
                        "id": 2848487174,
                        "node_id": "MDU6TGFiZWwyODQ4NDg3MTc0",
                        "url": "https://api.github.com/repos/trinodb/trino/labels/tests:hive",
                        "name": "tests:hive",
                        "color": "FBCA04",
                        "default": false,
                        "description": "Run Hive tests on all tested Hive distributions"
                    }
                ],
                "state": "closed",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 1,
                "created_at": "2022-11-29T20:44:22Z",
                "updated_at": "2022-11-30T19:04:30Z",
                "closed_at": "2022-11-30T19:04:29Z",
                "author_association": "MEMBER",
                "active_lock_reason": null,
                "draft": false,
                "pull_request": {
                    "url": "https://api.github.com/repos/trinodb/trino/pulls/15246",
                    "html_url": "https://github.com/trinodb/trino/pull/15246",
                    "diff_url": "https://github.com/trinodb/trino/pull/15246.diff",
                    "patch_url": "https://github.com/trinodb/trino/pull/15246.patch",
                    "merged_at": null
                },
                "body": "## Description\r\n\r\nAllow Hive connector to read files from public S3 buckets. Fixes #6127\r\n\r\nAdds boolean connector property `hive.s3.anonymous-requests.enabled` to access a public bucket (no AWS access key or secret key is required).\r\n\r\n<!-- Provide details that would help an engineer who is unfamiliar with this part of the code. -->\r\n## Additional context\r\n\r\nBefore this change, attempts to access a public S3 bucket fail with `AccessDeniedException`. Now, when `hive.s3.anonymous-requests.enabled` is set to `true`, `TrinoS3FileSystem` creates the appropriate `AWSCredentialsProvider` to access the public bucket anonymously.\r\n\r\n<!-- Mark the appropriate option with an (x). Propose a release note if you can. -->\r\n## Release notes\r\n\r\n( ) This is not user-visible or docs only and no release notes are required.\r\n( ) Release notes are required, please propose a release note for me.\r\n(x) Release notes are required, with the following suggested text:\r\n\r\nAllow Hive connector to read data from public S3 buckets via a new `hive.s3.anonymous-requests.enabled` connector property. (#6127)\r\n\r\n## Acknowledgements\r\n\r\nMany thanks to @tooptoop4 for the bulk of the work. I just rebased their changes and added tests and docs.",
                "reactions": {
                    "url": "https://api.github.com/repos/trinodb/trino/issues/15246/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/trinodb/trino/issues/15246/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/trinodb/trino/issues/comments/1332607435",
                "html_url": "https://github.com/trinodb/trino/pull/15246#issuecomment-1332607435",
                "issue_url": "https://api.github.com/repos/trinodb/trino/issues/15246",
                "id": 1332607435,
                "node_id": "IC_kwDOCezRTs5PbfnL",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2022-11-30T19:04:29Z",
                "updated_at": "2022-11-30T19:04:29Z",
                "author_association": "MEMBER",
                "body": "Closing this PR, since it is possible for the Hive connector to anonymously access public S3 buckets with the following catalog configuration:\r\n\r\n```\r\nhive.s3.signer-class=com.amazonaws.auth.NoOpSigner\r\n```\r\n\r\nAnd, in `conf/metastore-site.xml`:\r\n\r\n```xml\r\n<!-- Global configuration -->\r\n<property>\r\n    <name>fs.s3a.aws.credentials.provider</name>\r\n    <value>org.apache.hadoop.fs.s3a.AnonymousAWSCredentialsProvider</value>\r\n</property>\r\n```\r\n\r\nor\r\n\r\n```xml\r\n<!-- Per-bucket configuration -->\r\n<property>\r\n    <name>fs.s3a.bucket.BUCKETNAME.aws.credentials.provider</name>\r\n    <value>org.apache.hadoop.fs.s3a.AnonymousAWSCredentialsProvider</value>\r\n</property>\r\n```",
                "reactions": {
                    "url": "https://api.github.com/repos/trinodb/trino/issues/comments/1332607435/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2022-11-30T19:04:30Z",
        "org": {
            "id": 34147222,
            "login": "trinodb",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/trinodb",
            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?"
        }
    },
    {
        "id": "25572560662",
        "type": "PullRequestReviewCommentEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 166515022,
            "name": "trinodb/trino",
            "url": "https://api.github.com/repos/trinodb/trino"
        },
        "payload": {
            "action": "created",
            "comment": {
                "url": "https://api.github.com/repos/trinodb/trino/pulls/comments/1036340715",
                "pull_request_review_id": 1199865851,
                "id": 1036340715,
                "node_id": "PRRC_kwDOCezRTs49xU3r",
                "diff_hunk": "@@ -1016,6 +1020,10 @@ private static Optional<EncryptionMaterialsProvider> createEncryptionMaterialsPr\n \n     private AWSCredentialsProvider createAwsCredentialsProvider(URI uri, Configuration conf)\n     {\n+        if (anonymousRequestsEnabled) {",
                "path": "plugin/trino-hive/src/main/java/io/trino/plugin/hive/s3/TrinoS3FileSystem.java",
                "position": 36,
                "original_position": 36,
                "commit_id": "a88eab9b966d9482404eca0938b37ee82d6e582e",
                "original_commit_id": "a88eab9b966d9482404eca0938b37ee82d6e582e",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "@ebyhr `org.apache.hadoop.fs.s3a.AnonymousAWSCredentialsProvider` wouldn't work, since the class specified by `trino.s3.credentials-provider` needs to:\r\n\r\n> provide a two-argument constructor that takes a `java.net.URI` and a Hadoop `org.apache.hadoop.conf.Configuration` as arguments\r\n\r\n(from the [Trino Hive/S3 docs](https://trino.io/docs/current/connector/hive-s3.html#custom-s3-credentials-provider)).\r\n\r\nHowever, I just discovered a configuration change that _does_ work, with no code change required:\r\n\r\n```\r\nhive.s3.signer-class=com.amazonaws.auth.NoOpSigner\r\n```\r\n\r\nThis simply replaces the default S3 signer with one that does nothing - exactly what we need for anonymous access to public buckets!\r\n\r\nNote that you also need the following in `conf/metastore-site.xml`:\r\n\r\n```xml\r\n<property>\r\n    <name>fs.s3a.aws.credentials.provider</name>\r\n    <value>org.apache.hadoop.fs.s3a.AnonymousAWSCredentialsProvider</value>\r\n</property>\r\n```\r\n\r\nI'll open a ticket and file a PR over at https://github.com/trinodb/docs.trino.io\r\n\r\n@hashhar The problem is, `TrinoS3FileSystem` doesn't know if the configured credentials will work until it later tries to use them. The way the connector is currently written, all buckets accessed by the connector have to be accessible with the same set of credentials.",
                "created_at": "2022-11-30T18:58:16Z",
                "updated_at": "2022-11-30T18:58:17Z",
                "html_url": "https://github.com/trinodb/trino/pull/15246#discussion_r1036340715",
                "pull_request_url": "https://api.github.com/repos/trinodb/trino/pulls/15246",
                "author_association": "MEMBER",
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/comments/1036340715"
                    },
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15246#discussion_r1036340715"
                    },
                    "pull_request": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15246"
                    }
                },
                "reactions": {
                    "url": "https://api.github.com/repos/trinodb/trino/pulls/comments/1036340715/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "start_line": null,
                "original_start_line": null,
                "start_side": null,
                "line": 1023,
                "original_line": 1023,
                "side": "RIGHT",
                "in_reply_to_id": 1035439256
            },
            "pull_request": {
                "url": "https://api.github.com/repos/trinodb/trino/pulls/15246",
                "id": 1139513259,
                "node_id": "PR_kwDOCezRTs5D65er",
                "html_url": "https://github.com/trinodb/trino/pull/15246",
                "diff_url": "https://github.com/trinodb/trino/pull/15246.diff",
                "patch_url": "https://github.com/trinodb/trino/pull/15246.patch",
                "issue_url": "https://api.github.com/repos/trinodb/trino/issues/15246",
                "number": 15246,
                "state": "open",
                "locked": false,
                "title": "Allow Hive connector to read files from public S3 buckets",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "## Description\r\n\r\nAllow Hive connector to read files from public S3 buckets. Fixes #6127\r\n\r\nAdds boolean connector property `hive.s3.anonymous-requests.enabled` to access a public bucket (no AWS access key or secret key is required).\r\n\r\n<!-- Provide details that would help an engineer who is unfamiliar with this part of the code. -->\r\n## Additional context\r\n\r\nBefore this change, attempts to access a public S3 bucket fail with `AccessDeniedException`. Now, when `hive.s3.anonymous-requests.enabled` is set to `true`, `TrinoS3FileSystem` creates the appropriate `AWSCredentialsProvider` to access the public bucket anonymously.\r\n\r\n<!-- Mark the appropriate option with an (x). Propose a release note if you can. -->\r\n## Release notes\r\n\r\n( ) This is not user-visible or docs only and no release notes are required.\r\n( ) Release notes are required, please propose a release note for me.\r\n(x) Release notes are required, with the following suggested text:\r\n\r\nAllow Hive connector to read data from public S3 buckets via a new `hive.s3.anonymous-requests.enabled` connector property. (#6127)\r\n\r\n## Acknowledgements\r\n\r\nMany thanks to @tooptoop4 for the bulk of the work. I just rebased their changes and added tests and docs.",
                "created_at": "2022-11-29T20:44:22Z",
                "updated_at": "2022-11-30T18:58:17Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": "caf079a4861801dd77ff5b5f8b5447bb8313b365",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [
                    {
                        "login": "electrum",
                        "id": 9230,
                        "node_id": "MDQ6VXNlcjkyMzA=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/9230?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/electrum",
                        "html_url": "https://github.com/electrum",
                        "followers_url": "https://api.github.com/users/electrum/followers",
                        "following_url": "https://api.github.com/users/electrum/following{/other_user}",
                        "gists_url": "https://api.github.com/users/electrum/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/electrum/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/electrum/subscriptions",
                        "organizations_url": "https://api.github.com/users/electrum/orgs",
                        "repos_url": "https://api.github.com/users/electrum/repos",
                        "events_url": "https://api.github.com/users/electrum/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/electrum/received_events",
                        "type": "User",
                        "site_admin": false
                    }
                ],
                "requested_teams": [],
                "labels": [
                    {
                        "id": 1202580151,
                        "node_id": "MDU6TGFiZWwxMjAyNTgwMTUx",
                        "url": "https://api.github.com/repos/trinodb/trino/labels/cla-signed",
                        "name": "cla-signed",
                        "color": "ededed",
                        "default": false,
                        "description": null
                    },
                    {
                        "id": 1754928339,
                        "node_id": "MDU6TGFiZWwxNzU0OTI4MzM5",
                        "url": "https://api.github.com/repos/trinodb/trino/labels/docs",
                        "name": "docs",
                        "color": "ebf49a",
                        "default": false,
                        "description": ""
                    },
                    {
                        "id": 2848487174,
                        "node_id": "MDU6TGFiZWwyODQ4NDg3MTc0",
                        "url": "https://api.github.com/repos/trinodb/trino/labels/tests:hive",
                        "name": "tests:hive",
                        "color": "FBCA04",
                        "default": false,
                        "description": "Run Hive tests on all tested Hive distributions"
                    }
                ],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/trinodb/trino/pulls/15246/commits",
                "review_comments_url": "https://api.github.com/repos/trinodb/trino/pulls/15246/comments",
                "review_comment_url": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/trinodb/trino/issues/15246/comments",
                "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/a88eab9b966d9482404eca0938b37ee82d6e582e",
                "head": {
                    "label": "metadaddy:support-public-bucket",
                    "ref": "support-public-bucket",
                    "sha": "a88eab9b966d9482404eca0938b37ee82d6e582e",
                    "user": {
                        "login": "metadaddy",
                        "id": 723517,
                        "node_id": "MDQ6VXNlcjcyMzUxNw==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/metadaddy",
                        "html_url": "https://github.com/metadaddy",
                        "followers_url": "https://api.github.com/users/metadaddy/followers",
                        "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                        "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                        "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                        "repos_url": "https://api.github.com/users/metadaddy/repos",
                        "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 509274784,
                        "node_id": "R_kgDOHlrqoA",
                        "name": "trino",
                        "full_name": "metadaddy/trino",
                        "private": false,
                        "owner": {
                            "login": "metadaddy",
                            "id": 723517,
                            "node_id": "MDQ6VXNlcjcyMzUxNw==",
                            "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/metadaddy",
                            "html_url": "https://github.com/metadaddy",
                            "followers_url": "https://api.github.com/users/metadaddy/followers",
                            "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                            "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                            "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                            "repos_url": "https://api.github.com/users/metadaddy/repos",
                            "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/metadaddy/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": true,
                        "url": "https://api.github.com/repos/metadaddy/trino",
                        "forks_url": "https://api.github.com/repos/metadaddy/trino/forks",
                        "keys_url": "https://api.github.com/repos/metadaddy/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/metadaddy/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/metadaddy/trino/teams",
                        "hooks_url": "https://api.github.com/repos/metadaddy/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/metadaddy/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/metadaddy/trino/events",
                        "assignees_url": "https://api.github.com/repos/metadaddy/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/metadaddy/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/metadaddy/trino/tags",
                        "blobs_url": "https://api.github.com/repos/metadaddy/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/metadaddy/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/metadaddy/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/metadaddy/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/metadaddy/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/metadaddy/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/metadaddy/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/metadaddy/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/metadaddy/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/metadaddy/trino/subscription",
                        "commits_url": "https://api.github.com/repos/metadaddy/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/metadaddy/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/metadaddy/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/metadaddy/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/metadaddy/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/metadaddy/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/metadaddy/trino/merges",
                        "archive_url": "https://api.github.com/repos/metadaddy/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/metadaddy/trino/downloads",
                        "issues_url": "https://api.github.com/repos/metadaddy/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/metadaddy/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/metadaddy/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/metadaddy/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/metadaddy/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/metadaddy/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/metadaddy/trino/deployments",
                        "created_at": "2022-07-01T00:43:32Z",
                        "updated_at": "2022-07-06T01:44:20Z",
                        "pushed_at": "2022-11-29T23:15:19Z",
                        "git_url": "git://github.com/metadaddy/trino.git",
                        "ssh_url": "git@github.com:metadaddy/trino.git",
                        "clone_url": "https://github.com/metadaddy/trino.git",
                        "svn_url": "https://github.com/metadaddy/trino",
                        "homepage": "https://trino.io",
                        "size": 192368,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": "Java",
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "master"
                    }
                },
                "base": {
                    "label": "trinodb:master",
                    "ref": "master",
                    "sha": "861d51c8b8047d43f017e887231edf01d1561c65",
                    "user": {
                        "login": "trinodb",
                        "id": 34147222,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                        "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/trinodb",
                        "html_url": "https://github.com/trinodb",
                        "followers_url": "https://api.github.com/users/trinodb/followers",
                        "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                        "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                        "organizations_url": "https://api.github.com/users/trinodb/orgs",
                        "repos_url": "https://api.github.com/users/trinodb/repos",
                        "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/trinodb/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 166515022,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNjY1MTUwMjI=",
                        "name": "trino",
                        "full_name": "trinodb/trino",
                        "private": false,
                        "owner": {
                            "login": "trinodb",
                            "id": 34147222,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/trinodb",
                            "html_url": "https://github.com/trinodb",
                            "followers_url": "https://api.github.com/users/trinodb/followers",
                            "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                            "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                            "organizations_url": "https://api.github.com/users/trinodb/orgs",
                            "repos_url": "https://api.github.com/users/trinodb/repos",
                            "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/trinodb/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/trinodb/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": false,
                        "url": "https://api.github.com/repos/trinodb/trino",
                        "forks_url": "https://api.github.com/repos/trinodb/trino/forks",
                        "keys_url": "https://api.github.com/repos/trinodb/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/trinodb/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/trinodb/trino/teams",
                        "hooks_url": "https://api.github.com/repos/trinodb/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/trinodb/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/trinodb/trino/events",
                        "assignees_url": "https://api.github.com/repos/trinodb/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/trinodb/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/trinodb/trino/tags",
                        "blobs_url": "https://api.github.com/repos/trinodb/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/trinodb/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/trinodb/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/trinodb/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/trinodb/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/trinodb/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/trinodb/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/trinodb/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/trinodb/trino/subscription",
                        "commits_url": "https://api.github.com/repos/trinodb/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/trinodb/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/trinodb/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/trinodb/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/trinodb/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/trinodb/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/trinodb/trino/merges",
                        "archive_url": "https://api.github.com/repos/trinodb/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/trinodb/trino/downloads",
                        "issues_url": "https://api.github.com/repos/trinodb/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/trinodb/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/trinodb/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/trinodb/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/trinodb/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/trinodb/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/trinodb/trino/deployments",
                        "created_at": "2019-01-19T06:38:14Z",
                        "updated_at": "2022-11-30T15:00:26Z",
                        "pushed_at": "2022-11-30T18:44:47Z",
                        "git_url": "git://github.com/trinodb/trino.git",
                        "ssh_url": "git@github.com:trinodb/trino.git",
                        "clone_url": "https://github.com/trinodb/trino.git",
                        "svn_url": "https://github.com/trinodb/trino",
                        "homepage": "https://trino.io",
                        "size": 192628,
                        "stargazers_count": 6740,
                        "watchers_count": 6740,
                        "language": "Java",
                        "has_issues": true,
                        "has_projects": false,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": true,
                        "forks_count": 2080,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 2131,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "analytics",
                            "big-data",
                            "data-science",
                            "database",
                            "databases",
                            "datalake",
                            "distributed-database",
                            "distributed-databases",
                            "distributed-systems",
                            "hadoop",
                            "hive",
                            "java",
                            "jdbc",
                            "presto",
                            "prestodb",
                            "query-engine",
                            "sql",
                            "trino"
                        ],
                        "visibility": "public",
                        "forks": 2080,
                        "open_issues": 2131,
                        "watchers": 6740,
                        "default_branch": "master"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15246"
                    },
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15246"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15246"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15246/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15246/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15246/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/trinodb/trino/statuses/a88eab9b966d9482404eca0938b37ee82d6e582e"
                    }
                },
                "author_association": "MEMBER",
                "auto_merge": null,
                "active_lock_reason": null
            }
        },
        "public": true,
        "created_at": "2022-11-30T18:58:16Z",
        "org": {
            "id": 34147222,
            "login": "trinodb",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/trinodb",
            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?"
        }
    },
    {
        "id": "25572560605",
        "type": "PullRequestReviewEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 166515022,
            "name": "trinodb/trino",
            "url": "https://api.github.com/repos/trinodb/trino"
        },
        "payload": {
            "action": "created",
            "review": {
                "id": 1199865851,
                "node_id": "PRR_kwDOCezRTs5HhH_7",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": null,
                "commit_id": "a88eab9b966d9482404eca0938b37ee82d6e582e",
                "submitted_at": "2022-11-30T18:58:17Z",
                "state": "commented",
                "html_url": "https://github.com/trinodb/trino/pull/15246#pullrequestreview-1199865851",
                "pull_request_url": "https://api.github.com/repos/trinodb/trino/pulls/15246",
                "author_association": "MEMBER",
                "_links": {
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15246#pullrequestreview-1199865851"
                    },
                    "pull_request": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15246"
                    }
                }
            },
            "pull_request": {
                "url": "https://api.github.com/repos/trinodb/trino/pulls/15246",
                "id": 1139513259,
                "node_id": "PR_kwDOCezRTs5D65er",
                "html_url": "https://github.com/trinodb/trino/pull/15246",
                "diff_url": "https://github.com/trinodb/trino/pull/15246.diff",
                "patch_url": "https://github.com/trinodb/trino/pull/15246.patch",
                "issue_url": "https://api.github.com/repos/trinodb/trino/issues/15246",
                "number": 15246,
                "state": "open",
                "locked": false,
                "title": "Allow Hive connector to read files from public S3 buckets",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "## Description\r\n\r\nAllow Hive connector to read files from public S3 buckets. Fixes #6127\r\n\r\nAdds boolean connector property `hive.s3.anonymous-requests.enabled` to access a public bucket (no AWS access key or secret key is required).\r\n\r\n<!-- Provide details that would help an engineer who is unfamiliar with this part of the code. -->\r\n## Additional context\r\n\r\nBefore this change, attempts to access a public S3 bucket fail with `AccessDeniedException`. Now, when `hive.s3.anonymous-requests.enabled` is set to `true`, `TrinoS3FileSystem` creates the appropriate `AWSCredentialsProvider` to access the public bucket anonymously.\r\n\r\n<!-- Mark the appropriate option with an (x). Propose a release note if you can. -->\r\n## Release notes\r\n\r\n( ) This is not user-visible or docs only and no release notes are required.\r\n( ) Release notes are required, please propose a release note for me.\r\n(x) Release notes are required, with the following suggested text:\r\n\r\nAllow Hive connector to read data from public S3 buckets via a new `hive.s3.anonymous-requests.enabled` connector property. (#6127)\r\n\r\n## Acknowledgements\r\n\r\nMany thanks to @tooptoop4 for the bulk of the work. I just rebased their changes and added tests and docs.",
                "created_at": "2022-11-29T20:44:22Z",
                "updated_at": "2022-11-30T18:58:17Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": "caf079a4861801dd77ff5b5f8b5447bb8313b365",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [
                    {
                        "login": "electrum",
                        "id": 9230,
                        "node_id": "MDQ6VXNlcjkyMzA=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/9230?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/electrum",
                        "html_url": "https://github.com/electrum",
                        "followers_url": "https://api.github.com/users/electrum/followers",
                        "following_url": "https://api.github.com/users/electrum/following{/other_user}",
                        "gists_url": "https://api.github.com/users/electrum/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/electrum/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/electrum/subscriptions",
                        "organizations_url": "https://api.github.com/users/electrum/orgs",
                        "repos_url": "https://api.github.com/users/electrum/repos",
                        "events_url": "https://api.github.com/users/electrum/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/electrum/received_events",
                        "type": "User",
                        "site_admin": false
                    }
                ],
                "requested_teams": [],
                "labels": [
                    {
                        "id": 1202580151,
                        "node_id": "MDU6TGFiZWwxMjAyNTgwMTUx",
                        "url": "https://api.github.com/repos/trinodb/trino/labels/cla-signed",
                        "name": "cla-signed",
                        "color": "ededed",
                        "default": false,
                        "description": null
                    },
                    {
                        "id": 1754928339,
                        "node_id": "MDU6TGFiZWwxNzU0OTI4MzM5",
                        "url": "https://api.github.com/repos/trinodb/trino/labels/docs",
                        "name": "docs",
                        "color": "ebf49a",
                        "default": false,
                        "description": ""
                    },
                    {
                        "id": 2848487174,
                        "node_id": "MDU6TGFiZWwyODQ4NDg3MTc0",
                        "url": "https://api.github.com/repos/trinodb/trino/labels/tests:hive",
                        "name": "tests:hive",
                        "color": "FBCA04",
                        "default": false,
                        "description": "Run Hive tests on all tested Hive distributions"
                    }
                ],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/trinodb/trino/pulls/15246/commits",
                "review_comments_url": "https://api.github.com/repos/trinodb/trino/pulls/15246/comments",
                "review_comment_url": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/trinodb/trino/issues/15246/comments",
                "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/a88eab9b966d9482404eca0938b37ee82d6e582e",
                "head": {
                    "label": "metadaddy:support-public-bucket",
                    "ref": "support-public-bucket",
                    "sha": "a88eab9b966d9482404eca0938b37ee82d6e582e",
                    "user": {
                        "login": "metadaddy",
                        "id": 723517,
                        "node_id": "MDQ6VXNlcjcyMzUxNw==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/metadaddy",
                        "html_url": "https://github.com/metadaddy",
                        "followers_url": "https://api.github.com/users/metadaddy/followers",
                        "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                        "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                        "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                        "repos_url": "https://api.github.com/users/metadaddy/repos",
                        "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 509274784,
                        "node_id": "R_kgDOHlrqoA",
                        "name": "trino",
                        "full_name": "metadaddy/trino",
                        "private": false,
                        "owner": {
                            "login": "metadaddy",
                            "id": 723517,
                            "node_id": "MDQ6VXNlcjcyMzUxNw==",
                            "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/metadaddy",
                            "html_url": "https://github.com/metadaddy",
                            "followers_url": "https://api.github.com/users/metadaddy/followers",
                            "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                            "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                            "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                            "repos_url": "https://api.github.com/users/metadaddy/repos",
                            "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/metadaddy/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": true,
                        "url": "https://api.github.com/repos/metadaddy/trino",
                        "forks_url": "https://api.github.com/repos/metadaddy/trino/forks",
                        "keys_url": "https://api.github.com/repos/metadaddy/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/metadaddy/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/metadaddy/trino/teams",
                        "hooks_url": "https://api.github.com/repos/metadaddy/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/metadaddy/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/metadaddy/trino/events",
                        "assignees_url": "https://api.github.com/repos/metadaddy/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/metadaddy/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/metadaddy/trino/tags",
                        "blobs_url": "https://api.github.com/repos/metadaddy/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/metadaddy/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/metadaddy/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/metadaddy/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/metadaddy/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/metadaddy/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/metadaddy/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/metadaddy/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/metadaddy/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/metadaddy/trino/subscription",
                        "commits_url": "https://api.github.com/repos/metadaddy/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/metadaddy/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/metadaddy/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/metadaddy/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/metadaddy/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/metadaddy/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/metadaddy/trino/merges",
                        "archive_url": "https://api.github.com/repos/metadaddy/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/metadaddy/trino/downloads",
                        "issues_url": "https://api.github.com/repos/metadaddy/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/metadaddy/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/metadaddy/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/metadaddy/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/metadaddy/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/metadaddy/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/metadaddy/trino/deployments",
                        "created_at": "2022-07-01T00:43:32Z",
                        "updated_at": "2022-07-06T01:44:20Z",
                        "pushed_at": "2022-11-29T23:15:19Z",
                        "git_url": "git://github.com/metadaddy/trino.git",
                        "ssh_url": "git@github.com:metadaddy/trino.git",
                        "clone_url": "https://github.com/metadaddy/trino.git",
                        "svn_url": "https://github.com/metadaddy/trino",
                        "homepage": "https://trino.io",
                        "size": 192368,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": "Java",
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "master"
                    }
                },
                "base": {
                    "label": "trinodb:master",
                    "ref": "master",
                    "sha": "861d51c8b8047d43f017e887231edf01d1561c65",
                    "user": {
                        "login": "trinodb",
                        "id": 34147222,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                        "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/trinodb",
                        "html_url": "https://github.com/trinodb",
                        "followers_url": "https://api.github.com/users/trinodb/followers",
                        "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                        "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                        "organizations_url": "https://api.github.com/users/trinodb/orgs",
                        "repos_url": "https://api.github.com/users/trinodb/repos",
                        "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/trinodb/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 166515022,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNjY1MTUwMjI=",
                        "name": "trino",
                        "full_name": "trinodb/trino",
                        "private": false,
                        "owner": {
                            "login": "trinodb",
                            "id": 34147222,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/trinodb",
                            "html_url": "https://github.com/trinodb",
                            "followers_url": "https://api.github.com/users/trinodb/followers",
                            "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                            "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                            "organizations_url": "https://api.github.com/users/trinodb/orgs",
                            "repos_url": "https://api.github.com/users/trinodb/repos",
                            "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/trinodb/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/trinodb/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": false,
                        "url": "https://api.github.com/repos/trinodb/trino",
                        "forks_url": "https://api.github.com/repos/trinodb/trino/forks",
                        "keys_url": "https://api.github.com/repos/trinodb/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/trinodb/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/trinodb/trino/teams",
                        "hooks_url": "https://api.github.com/repos/trinodb/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/trinodb/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/trinodb/trino/events",
                        "assignees_url": "https://api.github.com/repos/trinodb/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/trinodb/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/trinodb/trino/tags",
                        "blobs_url": "https://api.github.com/repos/trinodb/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/trinodb/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/trinodb/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/trinodb/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/trinodb/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/trinodb/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/trinodb/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/trinodb/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/trinodb/trino/subscription",
                        "commits_url": "https://api.github.com/repos/trinodb/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/trinodb/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/trinodb/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/trinodb/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/trinodb/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/trinodb/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/trinodb/trino/merges",
                        "archive_url": "https://api.github.com/repos/trinodb/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/trinodb/trino/downloads",
                        "issues_url": "https://api.github.com/repos/trinodb/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/trinodb/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/trinodb/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/trinodb/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/trinodb/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/trinodb/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/trinodb/trino/deployments",
                        "created_at": "2019-01-19T06:38:14Z",
                        "updated_at": "2022-11-30T15:00:26Z",
                        "pushed_at": "2022-11-30T18:44:47Z",
                        "git_url": "git://github.com/trinodb/trino.git",
                        "ssh_url": "git@github.com:trinodb/trino.git",
                        "clone_url": "https://github.com/trinodb/trino.git",
                        "svn_url": "https://github.com/trinodb/trino",
                        "homepage": "https://trino.io",
                        "size": 192628,
                        "stargazers_count": 6740,
                        "watchers_count": 6740,
                        "language": "Java",
                        "has_issues": true,
                        "has_projects": false,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": true,
                        "forks_count": 2080,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 2131,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "analytics",
                            "big-data",
                            "data-science",
                            "database",
                            "databases",
                            "datalake",
                            "distributed-database",
                            "distributed-databases",
                            "distributed-systems",
                            "hadoop",
                            "hive",
                            "java",
                            "jdbc",
                            "presto",
                            "prestodb",
                            "query-engine",
                            "sql",
                            "trino"
                        ],
                        "visibility": "public",
                        "forks": 2080,
                        "open_issues": 2131,
                        "watchers": 6740,
                        "default_branch": "master"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15246"
                    },
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15246"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15246"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15246/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15246/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15246/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/trinodb/trino/statuses/a88eab9b966d9482404eca0938b37ee82d6e582e"
                    }
                },
                "author_association": "MEMBER",
                "auto_merge": null,
                "active_lock_reason": null
            }
        },
        "public": true,
        "created_at": "2022-11-30T18:58:17Z",
        "org": {
            "id": 34147222,
            "login": "trinodb",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/trinodb",
            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?"
        }
    },
    {
        "id": "25551642090",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 166515022,
            "name": "trinodb/trino",
            "url": "https://api.github.com/repos/trinodb/trino"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/trinodb/trino/issues/14859",
                "repository_url": "https://api.github.com/repos/trinodb/trino",
                "labels_url": "https://api.github.com/repos/trinodb/trino/issues/14859/labels{/name}",
                "comments_url": "https://api.github.com/repos/trinodb/trino/issues/14859/comments",
                "events_url": "https://api.github.com/repos/trinodb/trino/issues/14859/events",
                "html_url": "https://github.com/trinodb/trino/pull/14859",
                "id": 1431822188,
                "node_id": "PR_kwDOCezRTs5B_M_I",
                "number": 14859,
                "title": "Use correct abbreviations for data quantities. Fixes #13054",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 1202580151,
                        "node_id": "MDU6TGFiZWwxMjAyNTgwMTUx",
                        "url": "https://api.github.com/repos/trinodb/trino/labels/cla-signed",
                        "name": "cla-signed",
                        "color": "ededed",
                        "default": false,
                        "description": null
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 2,
                "created_at": "2022-11-01T17:41:35Z",
                "updated_at": "2022-11-30T00:35:32Z",
                "closed_at": null,
                "author_association": "MEMBER",
                "active_lock_reason": null,
                "draft": false,
                "pull_request": {
                    "url": "https://api.github.com/repos/trinodb/trino/pulls/14859",
                    "html_url": "https://github.com/trinodb/trino/pull/14859",
                    "diff_url": "https://github.com/trinodb/trino/pull/14859.diff",
                    "patch_url": "https://github.com/trinodb/trino/pull/14859.patch",
                    "merged_at": null
                },
                "body": "<!-- Thank you for submitting a pull request! Find more information in our development guide at https://github.com/trinodb/trino/blob/master/.github/DEVELOPMENT.md and contact us on #dev in Slack. -->\r\n<!-- Provide an overview of the PR for maintainers and reviewers. -->\r\n## Description\r\n\r\nThe Trino CLI currently reports data size incorrectly, using the legacy, 1,024-based, values for K, M, G etc rather than the modern 1,000-based values.\r\n\r\n> Is this change a fix, improvement, new feature, refactoring, or other?\r\n\r\nFix\r\n\r\n> Is this a change to the core query engine, a connector, client library, or the SPI interfaces? (be specific)\r\n\r\nCLI\r\n\r\n<!-- Provide a user-friendly explanation, keep it brief if it isn't user-visible. -->\r\n## Non-technical explanation\r\n\r\nThis change corrects the display of data sizes in the CLI to use KiB, MiB for 1,024-based values and adds a command option, `--decimal-data-size` to display data sizes in 1,000-based units.\r\n\r\n<!-- Mark the appropriate option with an (x). Propose a release note if you can. -->\r\n## Release notes\r\n\r\n( ) This is not user-visible or docs only and no release notes are required.\r\n( ) Release notes are required, please propose a release note for me.\r\n(x) Release notes are required, with the following suggested text:\r\n\r\nThe CLI now shows data sizes and rates with binary (1024-based) abbreviations: KiB, MiB, etc. A new command option, `--decimal-data-size`, shows decimal (1000-based) values and abbreviations: KB, MB, etc. (#13054)\r\n\r\n## Related issues, pull requests, and links\r\n\r\n* Fixes #13054\r\n* Replaces #13095 ",
                "reactions": {
                    "url": "https://api.github.com/repos/trinodb/trino/issues/14859/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/trinodb/trino/issues/14859/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/trinodb/trino/issues/comments/1331496588",
                "html_url": "https://github.com/trinodb/trino/pull/14859#issuecomment-1331496588",
                "issue_url": "https://api.github.com/repos/trinodb/trino/issues/14859",
                "id": 1331496588,
                "node_id": "IC_kwDOCezRTs5PXQaM",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2022-11-30T00:35:32Z",
                "updated_at": "2022-11-30T00:35:32Z",
                "author_association": "MEMBER",
                "body": "The impact on the formatting of the CLI is minimal:\r\n\r\n```\r\ntrino:ds> select count(*) from drivestats;\r\n   _col0   \r\n-----------\r\n 346006813 \r\n(1 row)\r\n\r\nQuery 20221129_225226_00008_9q4rt, FINISHED, 1 node\r\nSplits: 420 total, 420 done (100.00%)\r\n12.27 [346M rows, 4.66MiB] [28.2M rows/s, 389KiB/s]\r\n```\r\n\r\nSame query with `--decimal-data-size `:\r\n\r\n```\r\ntrino:ds> select count(*) from drivestats;\r\n   _col0   \r\n-----------\r\n 346006813 \r\n(1 row)\r\n\r\nQuery 20221129_225715_00012_9q4rt, FINISHED, 1 node\r\nSplits: 421 total, 421 done (100.00%)\r\n11.02 [346M rows, 4.89MB] [31.4M rows/s, 443KB/s]\r\n```",
                "reactions": {
                    "url": "https://api.github.com/repos/trinodb/trino/issues/comments/1331496588/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2022-11-30T00:35:32Z",
        "org": {
            "id": 34147222,
            "login": "trinodb",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/trinodb",
            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?"
        }
    },
    {
        "id": "25551317564",
        "type": "PushEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 572285370,
            "name": "metadaddy/blazer",
            "url": "https://api.github.com/repos/metadaddy/blazer"
        },
        "payload": {
            "push_id": 11828041512,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/master",
            "head": "b7a0f71d776b6d011833f7a8f2991ec87c44c76c",
            "before": "33365de0f2390cd5c67560303706a9d7e39043a2",
            "commits": [
                {
                    "sha": "b7a0f71d776b6d011833f7a8f2991ec87c44c76c",
                    "author": {
                        "email": "pat@backblaze.com",
                        "name": "Pat Patterson"
                    },
                    "message": "Remove Travic build status",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/blazer/commits/b7a0f71d776b6d011833f7a8f2991ec87c44c76c"
                }
            ]
        },
        "public": true,
        "created_at": "2022-11-30T00:09:12Z"
    },
    {
        "id": "25551286746",
        "type": "PullRequestEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 572276134,
            "name": "Backblaze/blazer",
            "url": "https://api.github.com/repos/Backblaze/blazer"
        },
        "payload": {
            "action": "opened",
            "number": 1,
            "pull_request": {
                "url": "https://api.github.com/repos/Backblaze/blazer/pulls/1",
                "id": 1139682845,
                "node_id": "PR_kwDOIhw9ps5D7i4d",
                "html_url": "https://github.com/Backblaze/blazer/pull/1",
                "diff_url": "https://github.com/Backblaze/blazer/pull/1.diff",
                "patch_url": "https://github.com/Backblaze/blazer/pull/1.patch",
                "issue_url": "https://api.github.com/repos/Backblaze/blazer/issues/1",
                "number": 1,
                "state": "open",
                "locked": false,
                "title": "Update README",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "Updated README:\r\n* Credit @kurin as the original creator\r\n* Remove Travis CI build status\r\n* Change the example from using account id/master key to application key id/application key",
                "created_at": "2022-11-30T00:06:44Z",
                "updated_at": "2022-11-30T00:06:44Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": null,
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/Backblaze/blazer/pulls/1/commits",
                "review_comments_url": "https://api.github.com/repos/Backblaze/blazer/pulls/1/comments",
                "review_comment_url": "https://api.github.com/repos/Backblaze/blazer/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/Backblaze/blazer/issues/1/comments",
                "statuses_url": "https://api.github.com/repos/Backblaze/blazer/statuses/33365de0f2390cd5c67560303706a9d7e39043a2",
                "head": {
                    "label": "metadaddy:master",
                    "ref": "master",
                    "sha": "33365de0f2390cd5c67560303706a9d7e39043a2",
                    "user": {
                        "login": "metadaddy",
                        "id": 723517,
                        "node_id": "MDQ6VXNlcjcyMzUxNw==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/metadaddy",
                        "html_url": "https://github.com/metadaddy",
                        "followers_url": "https://api.github.com/users/metadaddy/followers",
                        "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                        "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                        "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                        "repos_url": "https://api.github.com/users/metadaddy/repos",
                        "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 572285370,
                        "node_id": "R_kgDOIhxhug",
                        "name": "blazer",
                        "full_name": "metadaddy/blazer",
                        "private": false,
                        "owner": {
                            "login": "metadaddy",
                            "id": 723517,
                            "node_id": "MDQ6VXNlcjcyMzUxNw==",
                            "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/metadaddy",
                            "html_url": "https://github.com/metadaddy",
                            "followers_url": "https://api.github.com/users/metadaddy/followers",
                            "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                            "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                            "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                            "repos_url": "https://api.github.com/users/metadaddy/repos",
                            "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/metadaddy/blazer",
                        "description": "A Go library for Backblaze's B2.",
                        "fork": true,
                        "url": "https://api.github.com/repos/metadaddy/blazer",
                        "forks_url": "https://api.github.com/repos/metadaddy/blazer/forks",
                        "keys_url": "https://api.github.com/repos/metadaddy/blazer/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/metadaddy/blazer/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/metadaddy/blazer/teams",
                        "hooks_url": "https://api.github.com/repos/metadaddy/blazer/hooks",
                        "issue_events_url": "https://api.github.com/repos/metadaddy/blazer/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/metadaddy/blazer/events",
                        "assignees_url": "https://api.github.com/repos/metadaddy/blazer/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/metadaddy/blazer/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/metadaddy/blazer/tags",
                        "blobs_url": "https://api.github.com/repos/metadaddy/blazer/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/metadaddy/blazer/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/metadaddy/blazer/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/metadaddy/blazer/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/metadaddy/blazer/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/metadaddy/blazer/languages",
                        "stargazers_url": "https://api.github.com/repos/metadaddy/blazer/stargazers",
                        "contributors_url": "https://api.github.com/repos/metadaddy/blazer/contributors",
                        "subscribers_url": "https://api.github.com/repos/metadaddy/blazer/subscribers",
                        "subscription_url": "https://api.github.com/repos/metadaddy/blazer/subscription",
                        "commits_url": "https://api.github.com/repos/metadaddy/blazer/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/metadaddy/blazer/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/metadaddy/blazer/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/metadaddy/blazer/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/metadaddy/blazer/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/metadaddy/blazer/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/metadaddy/blazer/merges",
                        "archive_url": "https://api.github.com/repos/metadaddy/blazer/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/metadaddy/blazer/downloads",
                        "issues_url": "https://api.github.com/repos/metadaddy/blazer/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/metadaddy/blazer/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/metadaddy/blazer/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/metadaddy/blazer/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/metadaddy/blazer/labels{/name}",
                        "releases_url": "https://api.github.com/repos/metadaddy/blazer/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/metadaddy/blazer/deployments",
                        "created_at": "2022-11-30T00:02:22Z",
                        "updated_at": "2022-11-30T00:03:02Z",
                        "pushed_at": "2022-11-30T00:02:57Z",
                        "git_url": "git://github.com/metadaddy/blazer.git",
                        "ssh_url": "git@github.com:metadaddy/blazer.git",
                        "clone_url": "https://github.com/metadaddy/blazer.git",
                        "svn_url": "https://github.com/metadaddy/blazer",
                        "homepage": "",
                        "size": 615,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": "Go",
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "other",
                            "name": "Other",
                            "spdx_id": "NOASSERTION",
                            "url": null,
                            "node_id": "MDc6TGljZW5zZTA="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "master"
                    }
                },
                "base": {
                    "label": "Backblaze:master",
                    "ref": "master",
                    "sha": "ba894c124ac6006bd739246ed772ba2fe5d68620",
                    "user": {
                        "login": "Backblaze",
                        "id": 10283486,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjEwMjgzNDg2",
                        "avatar_url": "https://avatars.githubusercontent.com/u/10283486?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/Backblaze",
                        "html_url": "https://github.com/Backblaze",
                        "followers_url": "https://api.github.com/users/Backblaze/followers",
                        "following_url": "https://api.github.com/users/Backblaze/following{/other_user}",
                        "gists_url": "https://api.github.com/users/Backblaze/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/Backblaze/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/Backblaze/subscriptions",
                        "organizations_url": "https://api.github.com/users/Backblaze/orgs",
                        "repos_url": "https://api.github.com/users/Backblaze/repos",
                        "events_url": "https://api.github.com/users/Backblaze/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/Backblaze/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 572276134,
                        "node_id": "R_kgDOIhw9pg",
                        "name": "blazer",
                        "full_name": "Backblaze/blazer",
                        "private": false,
                        "owner": {
                            "login": "Backblaze",
                            "id": 10283486,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjEwMjgzNDg2",
                            "avatar_url": "https://avatars.githubusercontent.com/u/10283486?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/Backblaze",
                            "html_url": "https://github.com/Backblaze",
                            "followers_url": "https://api.github.com/users/Backblaze/followers",
                            "following_url": "https://api.github.com/users/Backblaze/following{/other_user}",
                            "gists_url": "https://api.github.com/users/Backblaze/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/Backblaze/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/Backblaze/subscriptions",
                            "organizations_url": "https://api.github.com/users/Backblaze/orgs",
                            "repos_url": "https://api.github.com/users/Backblaze/repos",
                            "events_url": "https://api.github.com/users/Backblaze/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/Backblaze/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/Backblaze/blazer",
                        "description": "A Go library for Backblaze's B2.",
                        "fork": true,
                        "url": "https://api.github.com/repos/Backblaze/blazer",
                        "forks_url": "https://api.github.com/repos/Backblaze/blazer/forks",
                        "keys_url": "https://api.github.com/repos/Backblaze/blazer/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/Backblaze/blazer/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/Backblaze/blazer/teams",
                        "hooks_url": "https://api.github.com/repos/Backblaze/blazer/hooks",
                        "issue_events_url": "https://api.github.com/repos/Backblaze/blazer/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/Backblaze/blazer/events",
                        "assignees_url": "https://api.github.com/repos/Backblaze/blazer/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/Backblaze/blazer/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/Backblaze/blazer/tags",
                        "blobs_url": "https://api.github.com/repos/Backblaze/blazer/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/Backblaze/blazer/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/Backblaze/blazer/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/Backblaze/blazer/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/Backblaze/blazer/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/Backblaze/blazer/languages",
                        "stargazers_url": "https://api.github.com/repos/Backblaze/blazer/stargazers",
                        "contributors_url": "https://api.github.com/repos/Backblaze/blazer/contributors",
                        "subscribers_url": "https://api.github.com/repos/Backblaze/blazer/subscribers",
                        "subscription_url": "https://api.github.com/repos/Backblaze/blazer/subscription",
                        "commits_url": "https://api.github.com/repos/Backblaze/blazer/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/Backblaze/blazer/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/Backblaze/blazer/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/Backblaze/blazer/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/Backblaze/blazer/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/Backblaze/blazer/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/Backblaze/blazer/merges",
                        "archive_url": "https://api.github.com/repos/Backblaze/blazer/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/Backblaze/blazer/downloads",
                        "issues_url": "https://api.github.com/repos/Backblaze/blazer/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/Backblaze/blazer/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/Backblaze/blazer/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/Backblaze/blazer/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/Backblaze/blazer/labels{/name}",
                        "releases_url": "https://api.github.com/repos/Backblaze/blazer/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/Backblaze/blazer/deployments",
                        "created_at": "2022-11-29T23:22:18Z",
                        "updated_at": "2022-09-15T03:28:49Z",
                        "pushed_at": "2022-05-11T18:58:16Z",
                        "git_url": "git://github.com/Backblaze/blazer.git",
                        "ssh_url": "git@github.com:Backblaze/blazer.git",
                        "clone_url": "https://github.com/Backblaze/blazer.git",
                        "svn_url": "https://github.com/Backblaze/blazer",
                        "homepage": "",
                        "size": 615,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": null,
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 1,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 1,
                        "license": {
                            "key": "other",
                            "name": "Other",
                            "spdx_id": "NOASSERTION",
                            "url": null,
                            "node_id": "MDc6TGljZW5zZTA="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 1,
                        "open_issues": 1,
                        "watchers": 0,
                        "default_branch": "master"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/Backblaze/blazer/pulls/1"
                    },
                    "html": {
                        "href": "https://github.com/Backblaze/blazer/pull/1"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/Backblaze/blazer/issues/1"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/Backblaze/blazer/issues/1/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/Backblaze/blazer/pulls/1/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/Backblaze/blazer/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/Backblaze/blazer/pulls/1/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/Backblaze/blazer/statuses/33365de0f2390cd5c67560303706a9d7e39043a2"
                    }
                },
                "author_association": "MEMBER",
                "auto_merge": null,
                "active_lock_reason": null,
                "merged": false,
                "mergeable": null,
                "rebaseable": null,
                "mergeable_state": "unknown",
                "merged_by": null,
                "comments": 0,
                "review_comments": 0,
                "maintainer_can_modify": true,
                "commits": 1,
                "additions": 11,
                "deletions": 16,
                "changed_files": 1
            }
        },
        "public": true,
        "created_at": "2022-11-30T00:06:44Z",
        "org": {
            "id": 10283486,
            "login": "Backblaze",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/Backblaze",
            "avatar_url": "https://avatars.githubusercontent.com/u/10283486?"
        }
    },
    {
        "id": "25551238562",
        "type": "PushEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 572285370,
            "name": "metadaddy/blazer",
            "url": "https://api.github.com/repos/metadaddy/blazer"
        },
        "payload": {
            "push_id": 11827999289,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/master",
            "head": "33365de0f2390cd5c67560303706a9d7e39043a2",
            "before": "ba894c124ac6006bd739246ed772ba2fe5d68620",
            "commits": [
                {
                    "sha": "33365de0f2390cd5c67560303706a9d7e39043a2",
                    "author": {
                        "email": "pat@backblaze.com",
                        "name": "Pat Patterson"
                    },
                    "message": "Update README",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/blazer/commits/33365de0f2390cd5c67560303706a9d7e39043a2"
                }
            ]
        },
        "public": true,
        "created_at": "2022-11-30T00:02:57Z"
    },
    {
        "id": "25551231420",
        "type": "ForkEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 572276134,
            "name": "Backblaze/blazer",
            "url": "https://api.github.com/repos/Backblaze/blazer"
        },
        "payload": {
            "forkee": {
                "id": 572285370,
                "node_id": "R_kgDOIhxhug",
                "name": "blazer",
                "full_name": "metadaddy/blazer",
                "private": false,
                "owner": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "html_url": "https://github.com/metadaddy/blazer",
                "description": "A Go library for Backblaze's B2.",
                "fork": true,
                "url": "https://api.github.com/repos/metadaddy/blazer",
                "forks_url": "https://api.github.com/repos/metadaddy/blazer/forks",
                "keys_url": "https://api.github.com/repos/metadaddy/blazer/keys{/key_id}",
                "collaborators_url": "https://api.github.com/repos/metadaddy/blazer/collaborators{/collaborator}",
                "teams_url": "https://api.github.com/repos/metadaddy/blazer/teams",
                "hooks_url": "https://api.github.com/repos/metadaddy/blazer/hooks",
                "issue_events_url": "https://api.github.com/repos/metadaddy/blazer/issues/events{/number}",
                "events_url": "https://api.github.com/repos/metadaddy/blazer/events",
                "assignees_url": "https://api.github.com/repos/metadaddy/blazer/assignees{/user}",
                "branches_url": "https://api.github.com/repos/metadaddy/blazer/branches{/branch}",
                "tags_url": "https://api.github.com/repos/metadaddy/blazer/tags",
                "blobs_url": "https://api.github.com/repos/metadaddy/blazer/git/blobs{/sha}",
                "git_tags_url": "https://api.github.com/repos/metadaddy/blazer/git/tags{/sha}",
                "git_refs_url": "https://api.github.com/repos/metadaddy/blazer/git/refs{/sha}",
                "trees_url": "https://api.github.com/repos/metadaddy/blazer/git/trees{/sha}",
                "statuses_url": "https://api.github.com/repos/metadaddy/blazer/statuses/{sha}",
                "languages_url": "https://api.github.com/repos/metadaddy/blazer/languages",
                "stargazers_url": "https://api.github.com/repos/metadaddy/blazer/stargazers",
                "contributors_url": "https://api.github.com/repos/metadaddy/blazer/contributors",
                "subscribers_url": "https://api.github.com/repos/metadaddy/blazer/subscribers",
                "subscription_url": "https://api.github.com/repos/metadaddy/blazer/subscription",
                "commits_url": "https://api.github.com/repos/metadaddy/blazer/commits{/sha}",
                "git_commits_url": "https://api.github.com/repos/metadaddy/blazer/git/commits{/sha}",
                "comments_url": "https://api.github.com/repos/metadaddy/blazer/comments{/number}",
                "issue_comment_url": "https://api.github.com/repos/metadaddy/blazer/issues/comments{/number}",
                "contents_url": "https://api.github.com/repos/metadaddy/blazer/contents/{+path}",
                "compare_url": "https://api.github.com/repos/metadaddy/blazer/compare/{base}...{head}",
                "merges_url": "https://api.github.com/repos/metadaddy/blazer/merges",
                "archive_url": "https://api.github.com/repos/metadaddy/blazer/{archive_format}{/ref}",
                "downloads_url": "https://api.github.com/repos/metadaddy/blazer/downloads",
                "issues_url": "https://api.github.com/repos/metadaddy/blazer/issues{/number}",
                "pulls_url": "https://api.github.com/repos/metadaddy/blazer/pulls{/number}",
                "milestones_url": "https://api.github.com/repos/metadaddy/blazer/milestones{/number}",
                "notifications_url": "https://api.github.com/repos/metadaddy/blazer/notifications{?since,all,participating}",
                "labels_url": "https://api.github.com/repos/metadaddy/blazer/labels{/name}",
                "releases_url": "https://api.github.com/repos/metadaddy/blazer/releases{/id}",
                "deployments_url": "https://api.github.com/repos/metadaddy/blazer/deployments",
                "created_at": "2022-11-30T00:02:22Z",
                "updated_at": "2022-09-15T03:28:49Z",
                "pushed_at": "2022-05-11T18:58:16Z",
                "git_url": "git://github.com/metadaddy/blazer.git",
                "ssh_url": "git@github.com:metadaddy/blazer.git",
                "clone_url": "https://github.com/metadaddy/blazer.git",
                "svn_url": "https://github.com/metadaddy/blazer",
                "homepage": "",
                "size": 615,
                "stargazers_count": 0,
                "watchers_count": 0,
                "language": null,
                "has_issues": false,
                "has_projects": true,
                "has_downloads": true,
                "has_wiki": true,
                "has_pages": false,
                "has_discussions": false,
                "forks_count": 0,
                "mirror_url": null,
                "archived": false,
                "disabled": false,
                "open_issues_count": 0,
                "license": {
                    "key": "other",
                    "name": "Other",
                    "spdx_id": "NOASSERTION",
                    "url": null,
                    "node_id": "MDc6TGljZW5zZTA="
                },
                "allow_forking": true,
                "is_template": false,
                "web_commit_signoff_required": false,
                "topics": [],
                "visibility": "public",
                "forks": 0,
                "open_issues": 0,
                "watchers": 0,
                "default_branch": "master",
                "public": true
            }
        },
        "public": true,
        "created_at": "2022-11-30T00:02:24Z",
        "org": {
            "id": 10283486,
            "login": "Backblaze",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/Backblaze",
            "avatar_url": "https://avatars.githubusercontent.com/u/10283486?"
        }
    },
    {
        "id": "25550618758",
        "type": "PushEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 509274784,
            "name": "metadaddy/trino",
            "url": "https://api.github.com/repos/metadaddy/trino"
        },
        "payload": {
            "push_id": 11827673037,
            "size": 400,
            "distinct_size": 2,
            "ref": "refs/heads/cli-wrong-units",
            "head": "affc258106e74e4ec67b39a29fd78174b3f75e70",
            "before": "9a8ab094ee16249b0c601aedb0c364b300c19c55",
            "commits": [
                {
                    "sha": "f78923b19e63788afb6005e99a5094c5376712ed",
                    "author": {
                        "email": "ashhar.hasan@starburstdata.com",
                        "name": "Ashhar Hasan"
                    },
                    "message": "Update Druid JDBC driver version",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/f78923b19e63788afb6005e99a5094c5376712ed"
                },
                {
                    "sha": "c8f2949d6233c2df1023248c85ba38e61417159c",
                    "author": {
                        "email": "ashhar.hasan@starburstdata.com",
                        "name": "Ashhar Hasan"
                    },
                    "message": "Update protobuf-java version in Pinot connector",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/c8f2949d6233c2df1023248c85ba38e61417159c"
                },
                {
                    "sha": "89ee3a3b5461d2695b3b6a79aae7850195f44be2",
                    "author": {
                        "email": "ashhar.hasan@starburstdata.com",
                        "name": "Ashhar Hasan"
                    },
                    "message": "Update Redshift JDBC driver\n\nThe newer driver fixes some issues with metadata queries where incorrect\ndata type or precision/decimal digits can be returned",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/89ee3a3b5461d2695b3b6a79aae7850195f44be2"
                },
                {
                    "sha": "e98e17ad9199ae85862d95731dbb7d8288fb4ef5",
                    "author": {
                        "email": "ashhar.hasan@starburstdata.com",
                        "name": "Ashhar Hasan"
                    },
                    "message": "Update AWS Java SDK to address CVE-2022-31159\n\nNote that Trino doesn't use TransferManager and is not actually affected.",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/e98e17ad9199ae85862d95731dbb7d8288fb4ef5"
                },
                {
                    "sha": "f9e51977aad684e16a715dcd5e5f25354f7f185b",
                    "author": {
                        "email": "surpass.simple@gmail.com",
                        "name": "tangjiangling"
                    },
                    "message": "Use arrays to initialize the member variables of MultilevelSplitQueue\n\nPreviously in `MultilevelSplitQueue`, `levelScheduledTime` and\n`levelMinPriority` were initialized using arrays, while\n`levelWaitingSplits` and `selectedLevelCounters` were initialized using\n`List`, this commit unifies the style by making all these variables\ninitialized using array style.",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/f9e51977aad684e16a715dcd5e5f25354f7f185b"
                },
                {
                    "sha": "4f5bc7c236f786a6890a10e504ef21f68ca78388",
                    "author": {
                        "email": "surpass.simple@gmail.com",
                        "name": "tangjiangling"
                    },
                    "message": "Rename variables for readability\n\nThe indexes of these arrays are all \"level\" related, so we can rename\nthem.",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/4f5bc7c236f786a6890a10e504ef21f68ca78388"
                },
                {
                    "sha": "c3ebf6e4c94a622878bf80b38629ab565776c715",
                    "author": {
                        "email": "surpass.simple@gmail.com",
                        "name": "tangjiangling"
                    },
                    "message": "Replace `Stream#toArray` with `toArray`",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/c3ebf6e4c94a622878bf80b38629ab565776c715"
                },
                {
                    "sha": "40711d82f43a3b43a4217683843f893cfa470573",
                    "author": {
                        "email": "surpass.simple@gmail.com",
                        "name": "tangjiangling"
                    },
                    "message": "Replace lambda with method reference",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/40711d82f43a3b43a4217683843f893cfa470573"
                },
                {
                    "sha": "b52e31860893f67f9626d7ab38abd4fe1f2b957c",
                    "author": {
                        "email": "surpass.simple@gmail.com",
                        "name": "tangjiangling"
                    },
                    "message": "Simplify with functional style expression",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/b52e31860893f67f9626d7ab38abd4fe1f2b957c"
                },
                {
                    "sha": "b012d610796a6a434f9b1b772cc317ee02e5d96e",
                    "author": {
                        "email": "surpass.simple@gmail.com",
                        "name": "tangjiangling"
                    },
                    "message": "Fix typos",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/b012d610796a6a434f9b1b772cc317ee02e5d96e"
                },
                {
                    "sha": "a1e87ba3de9e55cc2aec9590836142e0cac932bd",
                    "author": {
                        "email": "surpass.simple@gmail.com",
                        "name": "tangjiangling"
                    },
                    "message": "Remove unnecessary boxing",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/a1e87ba3de9e55cc2aec9590836142e0cac932bd"
                },
                {
                    "sha": "3f4771cee916ca244b049eeeb505a541015cb176",
                    "author": {
                        "email": "jacob.baskin@gmail.com",
                        "name": "Jacob Baskin"
                    },
                    "message": "Ensure concurrency/write parallelism for product tests",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/3f4771cee916ca244b049eeeb505a541015cb176"
                },
                {
                    "sha": "0ae69d20d2b9e9ca3e4acd9dadab6a2ae6d69f1c",
                    "author": {
                        "email": "mtraverso@gmail.com",
                        "name": "Martin Traverso"
                    },
                    "message": "Migrate TestRowOperators to new assertions",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/0ae69d20d2b9e9ca3e4acd9dadab6a2ae6d69f1c"
                },
                {
                    "sha": "993b0f18f506d28721c5e98932608740167e7e80",
                    "author": {
                        "email": "mtraverso@gmail.com",
                        "name": "Martin Traverso"
                    },
                    "message": "Migrate TestDateTimeFunctions to new assertions",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/993b0f18f506d28721c5e98932608740167e7e80"
                },
                {
                    "sha": "fdec4b93bde0103588659eafa585a95ede135518",
                    "author": {
                        "email": "mtraverso@gmail.com",
                        "name": "Martin Traverso"
                    },
                    "message": "Use switch expression",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/fdec4b93bde0103588659eafa585a95ede135518"
                },
                {
                    "sha": "49aa6f04ddd57907d89e5017643fdf4ab19ed527",
                    "author": {
                        "email": "mtraverso@gmail.com",
                        "name": "Martin Traverso"
                    },
                    "message": "Migrate TestExpressionCompiler to new assertions",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/49aa6f04ddd57907d89e5017643fdf4ab19ed527"
                },
                {
                    "sha": "fda40d421c0669e055d8cb172296f6820804081a",
                    "author": {
                        "email": "mtraverso@gmail.com",
                        "name": "Martin Traverso"
                    },
                    "message": "Remove support for parallel execution in TestExpressioCompiler\n\nIt's already disabled, it doesn't actually work (tests fail if enabled),\nand the whole suite takes under two minutes to run, so it seems unnecessary.",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/fda40d421c0669e055d8cb172296f6820804081a"
                },
                {
                    "sha": "bd143ce94700dce802289a65a5cc1ef48bcfd6b4",
                    "author": {
                        "email": "mtraverso@gmail.com",
                        "name": "Martin Traverso"
                    },
                    "message": "Migrate test to JUnit 5",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/bd143ce94700dce802289a65a5cc1ef48bcfd6b4"
                },
                {
                    "sha": "ac8f435bc9065d9ab5bc9e8a15dd19014519daed",
                    "author": {
                        "email": "mtraverso@gmail.com",
                        "name": "Martin Traverso"
                    },
                    "message": "Rename methods",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/ac8f435bc9065d9ab5bc9e8a15dd19014519daed"
                },
                {
                    "sha": "29f1c9258d9a7bff185b6516c26da72bd14bb2cb",
                    "author": {
                        "email": "mtraverso@gmail.com",
                        "name": "Martin Traverso"
                    },
                    "message": "Remove unused methods",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/29f1c9258d9a7bff185b6516c26da72bd14bb2cb"
                }
            ]
        },
        "public": true,
        "created_at": "2022-11-29T23:15:20Z"
    },
    {
        "id": "25550505281",
        "type": "PushEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 509274784,
            "name": "metadaddy/trino",
            "url": "https://api.github.com/repos/metadaddy/trino"
        },
        "payload": {
            "push_id": 11827616407,
            "size": 399,
            "distinct_size": 399,
            "ref": "refs/heads/cli-wrong-units",
            "head": "9a8ab094ee16249b0c601aedb0c364b300c19c55",
            "before": "3f602f00ac8f1e2dc2f365791b58e5b9db6f6693",
            "commits": [
                {
                    "sha": "f5d2a223f9ba4bd1498dfd2bdc36c6c9a13e2d7e",
                    "author": {
                        "email": "ashhar.hasan@starburstdata.com",
                        "name": "Ashhar Hasan"
                    },
                    "message": "Update Druid JDBC driver version",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/f5d2a223f9ba4bd1498dfd2bdc36c6c9a13e2d7e"
                },
                {
                    "sha": "c6f707f6e4fed5bd7d5b97e493768af551e57f84",
                    "author": {
                        "email": "ashhar.hasan@starburstdata.com",
                        "name": "Ashhar Hasan"
                    },
                    "message": "Update protobuf-java version in Pinot connector",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/c6f707f6e4fed5bd7d5b97e493768af551e57f84"
                },
                {
                    "sha": "5008a5fe136bb90232cdf0ee8306fe1d3192ff24",
                    "author": {
                        "email": "ashhar.hasan@starburstdata.com",
                        "name": "Ashhar Hasan"
                    },
                    "message": "Update Redshift JDBC driver\n\nThe newer driver fixes some issues with metadata queries where incorrect\ndata type or precision/decimal digits can be returned",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/5008a5fe136bb90232cdf0ee8306fe1d3192ff24"
                },
                {
                    "sha": "a97e00590c978bab03db04a68bdce4fa5acbfe65",
                    "author": {
                        "email": "ashhar.hasan@starburstdata.com",
                        "name": "Ashhar Hasan"
                    },
                    "message": "Update AWS Java SDK to address CVE-2022-31159\n\nNote that Trino doesn't use TransferManager and is not actually affected.",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/a97e00590c978bab03db04a68bdce4fa5acbfe65"
                },
                {
                    "sha": "50bae1409e13447fd70440ecff9323d58d7e8e20",
                    "author": {
                        "email": "surpass.simple@gmail.com",
                        "name": "tangjiangling"
                    },
                    "message": "Use arrays to initialize the member variables of MultilevelSplitQueue\n\nPreviously in `MultilevelSplitQueue`, `levelScheduledTime` and\n`levelMinPriority` were initialized using arrays, while\n`levelWaitingSplits` and `selectedLevelCounters` were initialized using\n`List`, this commit unifies the style by making all these variables\ninitialized using array style.",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/50bae1409e13447fd70440ecff9323d58d7e8e20"
                },
                {
                    "sha": "4d5f4e8d820807baba61582534dbbf574fe5156d",
                    "author": {
                        "email": "surpass.simple@gmail.com",
                        "name": "tangjiangling"
                    },
                    "message": "Rename variables for readability\n\nThe indexes of these arrays are all \"level\" related, so we can rename\nthem.",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/4d5f4e8d820807baba61582534dbbf574fe5156d"
                },
                {
                    "sha": "fd835de13fbafaff34b249a692214ace48ecbbbe",
                    "author": {
                        "email": "surpass.simple@gmail.com",
                        "name": "tangjiangling"
                    },
                    "message": "Replace `Stream#toArray` with `toArray`",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/fd835de13fbafaff34b249a692214ace48ecbbbe"
                },
                {
                    "sha": "e4493906ff6d694a0e5d3bd77c15e5ccc70cc5f5",
                    "author": {
                        "email": "surpass.simple@gmail.com",
                        "name": "tangjiangling"
                    },
                    "message": "Replace lambda with method reference",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/e4493906ff6d694a0e5d3bd77c15e5ccc70cc5f5"
                },
                {
                    "sha": "5eeef2a7feb6ff4a7bcd785e2472f408572032db",
                    "author": {
                        "email": "surpass.simple@gmail.com",
                        "name": "tangjiangling"
                    },
                    "message": "Simplify with functional style expression",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/5eeef2a7feb6ff4a7bcd785e2472f408572032db"
                },
                {
                    "sha": "7bb006265b5ce7351a82fa6003b5945696da7608",
                    "author": {
                        "email": "surpass.simple@gmail.com",
                        "name": "tangjiangling"
                    },
                    "message": "Fix typos",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/7bb006265b5ce7351a82fa6003b5945696da7608"
                },
                {
                    "sha": "36de654dd86df8bc87a88329793d144649b94be0",
                    "author": {
                        "email": "surpass.simple@gmail.com",
                        "name": "tangjiangling"
                    },
                    "message": "Remove unnecessary boxing",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/36de654dd86df8bc87a88329793d144649b94be0"
                },
                {
                    "sha": "bef4b9b1272a2be017ed254186d4686df2421b15",
                    "author": {
                        "email": "jacob.baskin@gmail.com",
                        "name": "Jacob Baskin"
                    },
                    "message": "Ensure concurrency/write parallelism for product tests",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/bef4b9b1272a2be017ed254186d4686df2421b15"
                },
                {
                    "sha": "fd440d593728599c8baa1c967c9b727098fe28ac",
                    "author": {
                        "email": "mtraverso@gmail.com",
                        "name": "Martin Traverso"
                    },
                    "message": "Migrate TestRowOperators to new assertions",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/fd440d593728599c8baa1c967c9b727098fe28ac"
                },
                {
                    "sha": "683a5e12bed678624f319c46b19c6413606ba0d5",
                    "author": {
                        "email": "mtraverso@gmail.com",
                        "name": "Martin Traverso"
                    },
                    "message": "Migrate TestDateTimeFunctions to new assertions",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/683a5e12bed678624f319c46b19c6413606ba0d5"
                },
                {
                    "sha": "26174812c71c85c1461946f2e23f57c14fe1f36a",
                    "author": {
                        "email": "mtraverso@gmail.com",
                        "name": "Martin Traverso"
                    },
                    "message": "Use switch expression",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/26174812c71c85c1461946f2e23f57c14fe1f36a"
                },
                {
                    "sha": "46409d52483ca204fd95e540b4d28df83b957e11",
                    "author": {
                        "email": "mtraverso@gmail.com",
                        "name": "Martin Traverso"
                    },
                    "message": "Migrate TestExpressionCompiler to new assertions",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/46409d52483ca204fd95e540b4d28df83b957e11"
                },
                {
                    "sha": "c4e8860750075f07f362cac41fe0d3319a855a7a",
                    "author": {
                        "email": "mtraverso@gmail.com",
                        "name": "Martin Traverso"
                    },
                    "message": "Remove support for parallel execution in TestExpressioCompiler\n\nIt's already disabled, it doesn't actually work (tests fail if enabled),\nand the whole suite takes under two minutes to run, so it seems unnecessary.",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/c4e8860750075f07f362cac41fe0d3319a855a7a"
                },
                {
                    "sha": "7d770b22c47437eba0a288e95b910e32ae099153",
                    "author": {
                        "email": "mtraverso@gmail.com",
                        "name": "Martin Traverso"
                    },
                    "message": "Migrate test to JUnit 5",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/7d770b22c47437eba0a288e95b910e32ae099153"
                },
                {
                    "sha": "dddaa265c8c2783b8756cedaae5c24290443c8f4",
                    "author": {
                        "email": "mtraverso@gmail.com",
                        "name": "Martin Traverso"
                    },
                    "message": "Rename methods",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/dddaa265c8c2783b8756cedaae5c24290443c8f4"
                },
                {
                    "sha": "e472dc67565d5e04439ae75b575bcff8085121e2",
                    "author": {
                        "email": "mtraverso@gmail.com",
                        "name": "Martin Traverso"
                    },
                    "message": "Remove unused methods",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/e472dc67565d5e04439ae75b575bcff8085121e2"
                }
            ]
        },
        "public": true,
        "created_at": "2022-11-29T23:08:01Z"
    },
    {
        "id": "25548103926",
        "type": "PullRequestEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 166515022,
            "name": "trinodb/trino",
            "url": "https://api.github.com/repos/trinodb/trino"
        },
        "payload": {
            "action": "opened",
            "number": 15246,
            "pull_request": {
                "url": "https://api.github.com/repos/trinodb/trino/pulls/15246",
                "id": 1139513259,
                "node_id": "PR_kwDOCezRTs5D65er",
                "html_url": "https://github.com/trinodb/trino/pull/15246",
                "diff_url": "https://github.com/trinodb/trino/pull/15246.diff",
                "patch_url": "https://github.com/trinodb/trino/pull/15246.patch",
                "issue_url": "https://api.github.com/repos/trinodb/trino/issues/15246",
                "number": 15246,
                "state": "open",
                "locked": false,
                "title": "Support public bucket",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "## Description\r\n\r\nAllow Hive connector to read files from public S3 buckets. Fixes #6127\r\n\r\nAdds boolean connector property `hive.s3.anonymous-requests.enabled` to access a public bucket (no AWS access key or secret key is required).\r\n\r\n<!-- Provide details that would help an engineer who is unfamiliar with this part of the code. -->\r\n## Additional context\r\n\r\nBefore this change, attempts to access a public S3 bucket fail with `AccessDeniedException`. Now, when `hive.s3.anonymous-requests.enabled` is set to `true`, `TrinoS3FileSystem` creates the appropriate `AWSCredentialsProvider` to access the public bucket anonymously.\r\n\r\n<!-- Mark the appropriate option with an (x). Propose a release note if you can. -->\r\n## Release notes\r\n\r\n( ) This is not user-visible or docs only and no release notes are required.\r\n( ) Release notes are required, please propose a release note for me.\r\n(x) Release notes are required, with the following suggested text:\r\n\r\nAllow Hive connector to read data from public S3 buckets via a new `hive.s3.anonymous-requests.enabled` connector property. (#6127)\r\n\r\n## Acknowledgements\r\n\r\nMany thanks to @tooptoop4 for the bulk of the work. I just rebased their changes and added tests and docs.",
                "created_at": "2022-11-29T20:44:22Z",
                "updated_at": "2022-11-29T20:44:22Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": null,
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/trinodb/trino/pulls/15246/commits",
                "review_comments_url": "https://api.github.com/repos/trinodb/trino/pulls/15246/comments",
                "review_comment_url": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/trinodb/trino/issues/15246/comments",
                "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/a88eab9b966d9482404eca0938b37ee82d6e582e",
                "head": {
                    "label": "metadaddy:support-public-bucket",
                    "ref": "support-public-bucket",
                    "sha": "a88eab9b966d9482404eca0938b37ee82d6e582e",
                    "user": {
                        "login": "metadaddy",
                        "id": 723517,
                        "node_id": "MDQ6VXNlcjcyMzUxNw==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/metadaddy",
                        "html_url": "https://github.com/metadaddy",
                        "followers_url": "https://api.github.com/users/metadaddy/followers",
                        "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                        "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                        "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                        "repos_url": "https://api.github.com/users/metadaddy/repos",
                        "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 509274784,
                        "node_id": "R_kgDOHlrqoA",
                        "name": "trino",
                        "full_name": "metadaddy/trino",
                        "private": false,
                        "owner": {
                            "login": "metadaddy",
                            "id": 723517,
                            "node_id": "MDQ6VXNlcjcyMzUxNw==",
                            "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/metadaddy",
                            "html_url": "https://github.com/metadaddy",
                            "followers_url": "https://api.github.com/users/metadaddy/followers",
                            "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                            "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                            "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                            "repos_url": "https://api.github.com/users/metadaddy/repos",
                            "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/metadaddy/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": true,
                        "url": "https://api.github.com/repos/metadaddy/trino",
                        "forks_url": "https://api.github.com/repos/metadaddy/trino/forks",
                        "keys_url": "https://api.github.com/repos/metadaddy/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/metadaddy/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/metadaddy/trino/teams",
                        "hooks_url": "https://api.github.com/repos/metadaddy/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/metadaddy/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/metadaddy/trino/events",
                        "assignees_url": "https://api.github.com/repos/metadaddy/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/metadaddy/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/metadaddy/trino/tags",
                        "blobs_url": "https://api.github.com/repos/metadaddy/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/metadaddy/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/metadaddy/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/metadaddy/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/metadaddy/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/metadaddy/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/metadaddy/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/metadaddy/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/metadaddy/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/metadaddy/trino/subscription",
                        "commits_url": "https://api.github.com/repos/metadaddy/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/metadaddy/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/metadaddy/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/metadaddy/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/metadaddy/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/metadaddy/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/metadaddy/trino/merges",
                        "archive_url": "https://api.github.com/repos/metadaddy/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/metadaddy/trino/downloads",
                        "issues_url": "https://api.github.com/repos/metadaddy/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/metadaddy/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/metadaddy/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/metadaddy/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/metadaddy/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/metadaddy/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/metadaddy/trino/deployments",
                        "created_at": "2022-07-01T00:43:32Z",
                        "updated_at": "2022-07-06T01:44:20Z",
                        "pushed_at": "2022-11-29T20:31:06Z",
                        "git_url": "git://github.com/metadaddy/trino.git",
                        "ssh_url": "git@github.com:metadaddy/trino.git",
                        "clone_url": "https://github.com/metadaddy/trino.git",
                        "svn_url": "https://github.com/metadaddy/trino",
                        "homepage": "https://trino.io",
                        "size": 179144,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": "Java",
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "master"
                    }
                },
                "base": {
                    "label": "trinodb:master",
                    "ref": "master",
                    "sha": "861d51c8b8047d43f017e887231edf01d1561c65",
                    "user": {
                        "login": "trinodb",
                        "id": 34147222,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                        "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/trinodb",
                        "html_url": "https://github.com/trinodb",
                        "followers_url": "https://api.github.com/users/trinodb/followers",
                        "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                        "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                        "organizations_url": "https://api.github.com/users/trinodb/orgs",
                        "repos_url": "https://api.github.com/users/trinodb/repos",
                        "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/trinodb/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 166515022,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNjY1MTUwMjI=",
                        "name": "trino",
                        "full_name": "trinodb/trino",
                        "private": false,
                        "owner": {
                            "login": "trinodb",
                            "id": 34147222,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/trinodb",
                            "html_url": "https://github.com/trinodb",
                            "followers_url": "https://api.github.com/users/trinodb/followers",
                            "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                            "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                            "organizations_url": "https://api.github.com/users/trinodb/orgs",
                            "repos_url": "https://api.github.com/users/trinodb/repos",
                            "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/trinodb/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/trinodb/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": false,
                        "url": "https://api.github.com/repos/trinodb/trino",
                        "forks_url": "https://api.github.com/repos/trinodb/trino/forks",
                        "keys_url": "https://api.github.com/repos/trinodb/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/trinodb/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/trinodb/trino/teams",
                        "hooks_url": "https://api.github.com/repos/trinodb/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/trinodb/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/trinodb/trino/events",
                        "assignees_url": "https://api.github.com/repos/trinodb/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/trinodb/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/trinodb/trino/tags",
                        "blobs_url": "https://api.github.com/repos/trinodb/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/trinodb/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/trinodb/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/trinodb/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/trinodb/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/trinodb/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/trinodb/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/trinodb/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/trinodb/trino/subscription",
                        "commits_url": "https://api.github.com/repos/trinodb/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/trinodb/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/trinodb/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/trinodb/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/trinodb/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/trinodb/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/trinodb/trino/merges",
                        "archive_url": "https://api.github.com/repos/trinodb/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/trinodb/trino/downloads",
                        "issues_url": "https://api.github.com/repos/trinodb/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/trinodb/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/trinodb/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/trinodb/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/trinodb/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/trinodb/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/trinodb/trino/deployments",
                        "created_at": "2019-01-19T06:38:14Z",
                        "updated_at": "2022-11-29T19:42:12Z",
                        "pushed_at": "2022-11-29T20:24:16Z",
                        "git_url": "git://github.com/trinodb/trino.git",
                        "ssh_url": "git@github.com:trinodb/trino.git",
                        "clone_url": "https://github.com/trinodb/trino.git",
                        "svn_url": "https://github.com/trinodb/trino",
                        "homepage": "https://trino.io",
                        "size": 192385,
                        "stargazers_count": 6732,
                        "watchers_count": 6732,
                        "language": "Java",
                        "has_issues": true,
                        "has_projects": false,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": true,
                        "forks_count": 2081,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 2136,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "analytics",
                            "big-data",
                            "data-science",
                            "database",
                            "databases",
                            "datalake",
                            "distributed-database",
                            "distributed-databases",
                            "distributed-systems",
                            "hadoop",
                            "hive",
                            "java",
                            "jdbc",
                            "presto",
                            "prestodb",
                            "query-engine",
                            "sql",
                            "trino"
                        ],
                        "visibility": "public",
                        "forks": 2081,
                        "open_issues": 2136,
                        "watchers": 6732,
                        "default_branch": "master"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15246"
                    },
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15246"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15246"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15246/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15246/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15246/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/trinodb/trino/statuses/a88eab9b966d9482404eca0938b37ee82d6e582e"
                    }
                },
                "author_association": "MEMBER",
                "auto_merge": null,
                "active_lock_reason": null,
                "merged": false,
                "mergeable": null,
                "rebaseable": null,
                "mergeable_state": "unknown",
                "merged_by": null,
                "comments": 0,
                "review_comments": 0,
                "maintainer_can_modify": true,
                "commits": 2,
                "additions": 84,
                "deletions": 2,
                "changed_files": 6
            }
        },
        "public": true,
        "created_at": "2022-11-29T20:44:22Z",
        "org": {
            "id": 34147222,
            "login": "trinodb",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/trinodb",
            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?"
        }
    },
    {
        "id": "25547870741",
        "type": "PushEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 509274784,
            "name": "metadaddy/trino",
            "url": "https://api.github.com/repos/metadaddy/trino"
        },
        "payload": {
            "push_id": 11826293121,
            "size": 400,
            "distinct_size": 2,
            "ref": "refs/heads/support-public-bucket",
            "head": "a88eab9b966d9482404eca0938b37ee82d6e582e",
            "before": "269b16abe95d5016bb844b8f65d3f225e4a350a4",
            "commits": [
                {
                    "sha": "f78923b19e63788afb6005e99a5094c5376712ed",
                    "author": {
                        "email": "ashhar.hasan@starburstdata.com",
                        "name": "Ashhar Hasan"
                    },
                    "message": "Update Druid JDBC driver version",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/f78923b19e63788afb6005e99a5094c5376712ed"
                },
                {
                    "sha": "c8f2949d6233c2df1023248c85ba38e61417159c",
                    "author": {
                        "email": "ashhar.hasan@starburstdata.com",
                        "name": "Ashhar Hasan"
                    },
                    "message": "Update protobuf-java version in Pinot connector",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/c8f2949d6233c2df1023248c85ba38e61417159c"
                },
                {
                    "sha": "89ee3a3b5461d2695b3b6a79aae7850195f44be2",
                    "author": {
                        "email": "ashhar.hasan@starburstdata.com",
                        "name": "Ashhar Hasan"
                    },
                    "message": "Update Redshift JDBC driver\n\nThe newer driver fixes some issues with metadata queries where incorrect\ndata type or precision/decimal digits can be returned",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/89ee3a3b5461d2695b3b6a79aae7850195f44be2"
                },
                {
                    "sha": "e98e17ad9199ae85862d95731dbb7d8288fb4ef5",
                    "author": {
                        "email": "ashhar.hasan@starburstdata.com",
                        "name": "Ashhar Hasan"
                    },
                    "message": "Update AWS Java SDK to address CVE-2022-31159\n\nNote that Trino doesn't use TransferManager and is not actually affected.",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/e98e17ad9199ae85862d95731dbb7d8288fb4ef5"
                },
                {
                    "sha": "f9e51977aad684e16a715dcd5e5f25354f7f185b",
                    "author": {
                        "email": "surpass.simple@gmail.com",
                        "name": "tangjiangling"
                    },
                    "message": "Use arrays to initialize the member variables of MultilevelSplitQueue\n\nPreviously in `MultilevelSplitQueue`, `levelScheduledTime` and\n`levelMinPriority` were initialized using arrays, while\n`levelWaitingSplits` and `selectedLevelCounters` were initialized using\n`List`, this commit unifies the style by making all these variables\ninitialized using array style.",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/f9e51977aad684e16a715dcd5e5f25354f7f185b"
                },
                {
                    "sha": "4f5bc7c236f786a6890a10e504ef21f68ca78388",
                    "author": {
                        "email": "surpass.simple@gmail.com",
                        "name": "tangjiangling"
                    },
                    "message": "Rename variables for readability\n\nThe indexes of these arrays are all \"level\" related, so we can rename\nthem.",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/4f5bc7c236f786a6890a10e504ef21f68ca78388"
                },
                {
                    "sha": "c3ebf6e4c94a622878bf80b38629ab565776c715",
                    "author": {
                        "email": "surpass.simple@gmail.com",
                        "name": "tangjiangling"
                    },
                    "message": "Replace `Stream#toArray` with `toArray`",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/c3ebf6e4c94a622878bf80b38629ab565776c715"
                },
                {
                    "sha": "40711d82f43a3b43a4217683843f893cfa470573",
                    "author": {
                        "email": "surpass.simple@gmail.com",
                        "name": "tangjiangling"
                    },
                    "message": "Replace lambda with method reference",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/40711d82f43a3b43a4217683843f893cfa470573"
                },
                {
                    "sha": "b52e31860893f67f9626d7ab38abd4fe1f2b957c",
                    "author": {
                        "email": "surpass.simple@gmail.com",
                        "name": "tangjiangling"
                    },
                    "message": "Simplify with functional style expression",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/b52e31860893f67f9626d7ab38abd4fe1f2b957c"
                },
                {
                    "sha": "b012d610796a6a434f9b1b772cc317ee02e5d96e",
                    "author": {
                        "email": "surpass.simple@gmail.com",
                        "name": "tangjiangling"
                    },
                    "message": "Fix typos",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/b012d610796a6a434f9b1b772cc317ee02e5d96e"
                },
                {
                    "sha": "a1e87ba3de9e55cc2aec9590836142e0cac932bd",
                    "author": {
                        "email": "surpass.simple@gmail.com",
                        "name": "tangjiangling"
                    },
                    "message": "Remove unnecessary boxing",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/a1e87ba3de9e55cc2aec9590836142e0cac932bd"
                },
                {
                    "sha": "3f4771cee916ca244b049eeeb505a541015cb176",
                    "author": {
                        "email": "jacob.baskin@gmail.com",
                        "name": "Jacob Baskin"
                    },
                    "message": "Ensure concurrency/write parallelism for product tests",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/3f4771cee916ca244b049eeeb505a541015cb176"
                },
                {
                    "sha": "0ae69d20d2b9e9ca3e4acd9dadab6a2ae6d69f1c",
                    "author": {
                        "email": "mtraverso@gmail.com",
                        "name": "Martin Traverso"
                    },
                    "message": "Migrate TestRowOperators to new assertions",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/0ae69d20d2b9e9ca3e4acd9dadab6a2ae6d69f1c"
                },
                {
                    "sha": "993b0f18f506d28721c5e98932608740167e7e80",
                    "author": {
                        "email": "mtraverso@gmail.com",
                        "name": "Martin Traverso"
                    },
                    "message": "Migrate TestDateTimeFunctions to new assertions",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/993b0f18f506d28721c5e98932608740167e7e80"
                },
                {
                    "sha": "fdec4b93bde0103588659eafa585a95ede135518",
                    "author": {
                        "email": "mtraverso@gmail.com",
                        "name": "Martin Traverso"
                    },
                    "message": "Use switch expression",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/fdec4b93bde0103588659eafa585a95ede135518"
                },
                {
                    "sha": "49aa6f04ddd57907d89e5017643fdf4ab19ed527",
                    "author": {
                        "email": "mtraverso@gmail.com",
                        "name": "Martin Traverso"
                    },
                    "message": "Migrate TestExpressionCompiler to new assertions",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/49aa6f04ddd57907d89e5017643fdf4ab19ed527"
                },
                {
                    "sha": "fda40d421c0669e055d8cb172296f6820804081a",
                    "author": {
                        "email": "mtraverso@gmail.com",
                        "name": "Martin Traverso"
                    },
                    "message": "Remove support for parallel execution in TestExpressioCompiler\n\nIt's already disabled, it doesn't actually work (tests fail if enabled),\nand the whole suite takes under two minutes to run, so it seems unnecessary.",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/fda40d421c0669e055d8cb172296f6820804081a"
                },
                {
                    "sha": "bd143ce94700dce802289a65a5cc1ef48bcfd6b4",
                    "author": {
                        "email": "mtraverso@gmail.com",
                        "name": "Martin Traverso"
                    },
                    "message": "Migrate test to JUnit 5",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/bd143ce94700dce802289a65a5cc1ef48bcfd6b4"
                },
                {
                    "sha": "ac8f435bc9065d9ab5bc9e8a15dd19014519daed",
                    "author": {
                        "email": "mtraverso@gmail.com",
                        "name": "Martin Traverso"
                    },
                    "message": "Rename methods",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/ac8f435bc9065d9ab5bc9e8a15dd19014519daed"
                },
                {
                    "sha": "29f1c9258d9a7bff185b6516c26da72bd14bb2cb",
                    "author": {
                        "email": "mtraverso@gmail.com",
                        "name": "Martin Traverso"
                    },
                    "message": "Remove unused methods",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/29f1c9258d9a7bff185b6516c26da72bd14bb2cb"
                }
            ]
        },
        "public": true,
        "created_at": "2022-11-29T20:31:07Z"
    },
    {
        "id": "25547826392",
        "type": "PushEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 509274784,
            "name": "metadaddy/trino",
            "url": "https://api.github.com/repos/metadaddy/trino"
        },
        "payload": {
            "push_id": 11826270030,
            "size": 398,
            "distinct_size": 398,
            "ref": "refs/heads/master",
            "head": "861d51c8b8047d43f017e887231edf01d1561c65",
            "before": "62349751f1c337bee4b93c290cbd1ae563d75a3b",
            "commits": [
                {
                    "sha": "f78923b19e63788afb6005e99a5094c5376712ed",
                    "author": {
                        "email": "ashhar.hasan@starburstdata.com",
                        "name": "Ashhar Hasan"
                    },
                    "message": "Update Druid JDBC driver version",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/f78923b19e63788afb6005e99a5094c5376712ed"
                },
                {
                    "sha": "c8f2949d6233c2df1023248c85ba38e61417159c",
                    "author": {
                        "email": "ashhar.hasan@starburstdata.com",
                        "name": "Ashhar Hasan"
                    },
                    "message": "Update protobuf-java version in Pinot connector",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/c8f2949d6233c2df1023248c85ba38e61417159c"
                },
                {
                    "sha": "89ee3a3b5461d2695b3b6a79aae7850195f44be2",
                    "author": {
                        "email": "ashhar.hasan@starburstdata.com",
                        "name": "Ashhar Hasan"
                    },
                    "message": "Update Redshift JDBC driver\n\nThe newer driver fixes some issues with metadata queries where incorrect\ndata type or precision/decimal digits can be returned",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/89ee3a3b5461d2695b3b6a79aae7850195f44be2"
                },
                {
                    "sha": "e98e17ad9199ae85862d95731dbb7d8288fb4ef5",
                    "author": {
                        "email": "ashhar.hasan@starburstdata.com",
                        "name": "Ashhar Hasan"
                    },
                    "message": "Update AWS Java SDK to address CVE-2022-31159\n\nNote that Trino doesn't use TransferManager and is not actually affected.",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/e98e17ad9199ae85862d95731dbb7d8288fb4ef5"
                },
                {
                    "sha": "f9e51977aad684e16a715dcd5e5f25354f7f185b",
                    "author": {
                        "email": "surpass.simple@gmail.com",
                        "name": "tangjiangling"
                    },
                    "message": "Use arrays to initialize the member variables of MultilevelSplitQueue\n\nPreviously in `MultilevelSplitQueue`, `levelScheduledTime` and\n`levelMinPriority` were initialized using arrays, while\n`levelWaitingSplits` and `selectedLevelCounters` were initialized using\n`List`, this commit unifies the style by making all these variables\ninitialized using array style.",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/f9e51977aad684e16a715dcd5e5f25354f7f185b"
                },
                {
                    "sha": "4f5bc7c236f786a6890a10e504ef21f68ca78388",
                    "author": {
                        "email": "surpass.simple@gmail.com",
                        "name": "tangjiangling"
                    },
                    "message": "Rename variables for readability\n\nThe indexes of these arrays are all \"level\" related, so we can rename\nthem.",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/4f5bc7c236f786a6890a10e504ef21f68ca78388"
                },
                {
                    "sha": "c3ebf6e4c94a622878bf80b38629ab565776c715",
                    "author": {
                        "email": "surpass.simple@gmail.com",
                        "name": "tangjiangling"
                    },
                    "message": "Replace `Stream#toArray` with `toArray`",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/c3ebf6e4c94a622878bf80b38629ab565776c715"
                },
                {
                    "sha": "40711d82f43a3b43a4217683843f893cfa470573",
                    "author": {
                        "email": "surpass.simple@gmail.com",
                        "name": "tangjiangling"
                    },
                    "message": "Replace lambda with method reference",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/40711d82f43a3b43a4217683843f893cfa470573"
                },
                {
                    "sha": "b52e31860893f67f9626d7ab38abd4fe1f2b957c",
                    "author": {
                        "email": "surpass.simple@gmail.com",
                        "name": "tangjiangling"
                    },
                    "message": "Simplify with functional style expression",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/b52e31860893f67f9626d7ab38abd4fe1f2b957c"
                },
                {
                    "sha": "b012d610796a6a434f9b1b772cc317ee02e5d96e",
                    "author": {
                        "email": "surpass.simple@gmail.com",
                        "name": "tangjiangling"
                    },
                    "message": "Fix typos",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/b012d610796a6a434f9b1b772cc317ee02e5d96e"
                },
                {
                    "sha": "a1e87ba3de9e55cc2aec9590836142e0cac932bd",
                    "author": {
                        "email": "surpass.simple@gmail.com",
                        "name": "tangjiangling"
                    },
                    "message": "Remove unnecessary boxing",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/a1e87ba3de9e55cc2aec9590836142e0cac932bd"
                },
                {
                    "sha": "3f4771cee916ca244b049eeeb505a541015cb176",
                    "author": {
                        "email": "jacob.baskin@gmail.com",
                        "name": "Jacob Baskin"
                    },
                    "message": "Ensure concurrency/write parallelism for product tests",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/3f4771cee916ca244b049eeeb505a541015cb176"
                },
                {
                    "sha": "0ae69d20d2b9e9ca3e4acd9dadab6a2ae6d69f1c",
                    "author": {
                        "email": "mtraverso@gmail.com",
                        "name": "Martin Traverso"
                    },
                    "message": "Migrate TestRowOperators to new assertions",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/0ae69d20d2b9e9ca3e4acd9dadab6a2ae6d69f1c"
                },
                {
                    "sha": "993b0f18f506d28721c5e98932608740167e7e80",
                    "author": {
                        "email": "mtraverso@gmail.com",
                        "name": "Martin Traverso"
                    },
                    "message": "Migrate TestDateTimeFunctions to new assertions",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/993b0f18f506d28721c5e98932608740167e7e80"
                },
                {
                    "sha": "fdec4b93bde0103588659eafa585a95ede135518",
                    "author": {
                        "email": "mtraverso@gmail.com",
                        "name": "Martin Traverso"
                    },
                    "message": "Use switch expression",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/fdec4b93bde0103588659eafa585a95ede135518"
                },
                {
                    "sha": "49aa6f04ddd57907d89e5017643fdf4ab19ed527",
                    "author": {
                        "email": "mtraverso@gmail.com",
                        "name": "Martin Traverso"
                    },
                    "message": "Migrate TestExpressionCompiler to new assertions",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/49aa6f04ddd57907d89e5017643fdf4ab19ed527"
                },
                {
                    "sha": "fda40d421c0669e055d8cb172296f6820804081a",
                    "author": {
                        "email": "mtraverso@gmail.com",
                        "name": "Martin Traverso"
                    },
                    "message": "Remove support for parallel execution in TestExpressioCompiler\n\nIt's already disabled, it doesn't actually work (tests fail if enabled),\nand the whole suite takes under two minutes to run, so it seems unnecessary.",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/fda40d421c0669e055d8cb172296f6820804081a"
                },
                {
                    "sha": "bd143ce94700dce802289a65a5cc1ef48bcfd6b4",
                    "author": {
                        "email": "mtraverso@gmail.com",
                        "name": "Martin Traverso"
                    },
                    "message": "Migrate test to JUnit 5",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/bd143ce94700dce802289a65a5cc1ef48bcfd6b4"
                },
                {
                    "sha": "ac8f435bc9065d9ab5bc9e8a15dd19014519daed",
                    "author": {
                        "email": "mtraverso@gmail.com",
                        "name": "Martin Traverso"
                    },
                    "message": "Rename methods",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/ac8f435bc9065d9ab5bc9e8a15dd19014519daed"
                },
                {
                    "sha": "29f1c9258d9a7bff185b6516c26da72bd14bb2cb",
                    "author": {
                        "email": "mtraverso@gmail.com",
                        "name": "Martin Traverso"
                    },
                    "message": "Remove unused methods",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/29f1c9258d9a7bff185b6516c26da72bd14bb2cb"
                }
            ]
        },
        "public": true,
        "created_at": "2022-11-29T20:28:37Z"
    },
    {
        "id": "25547773914",
        "type": "CreateEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 509274784,
            "name": "metadaddy/trino",
            "url": "https://api.github.com/repos/metadaddy/trino"
        },
        "payload": {
            "ref": "support-public-bucket",
            "ref_type": "branch",
            "master_branch": "master",
            "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
            "pusher_type": "user"
        },
        "public": true,
        "created_at": "2022-11-29T20:25:39Z"
    },
    {
        "id": "25519446534",
        "type": "PushEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 567902821,
            "name": "backblaze-b2-samples/cloudflare-b2",
            "url": "https://api.github.com/repos/backblaze-b2-samples/cloudflare-b2"
        },
        "payload": {
            "push_id": 11812077664,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/main",
            "head": "ff556be29f8e8295fb9672a4aa4b0db4ba962444",
            "before": "116bd68b5004a4f0e28fa95362e1b74f08696599",
            "commits": [
                {
                    "sha": "ff556be29f8e8295fb9672a4aa4b0db4ba962444",
                    "author": {
                        "email": "pat@backblaze.com",
                        "name": "Pat Patterson"
                    },
                    "message": "Minor fix to README",
                    "distinct": true,
                    "url": "https://api.github.com/repos/backblaze-b2-samples/cloudflare-b2/commits/ff556be29f8e8295fb9672a4aa4b0db4ba962444"
                }
            ]
        },
        "public": true,
        "created_at": "2022-11-28T19:08:01Z",
        "org": {
            "id": 17604039,
            "login": "backblaze-b2-samples",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/backblaze-b2-samples",
            "avatar_url": "https://avatars.githubusercontent.com/u/17604039?"
        }
    },
    {
        "id": "25519362476",
        "type": "PushEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 567902821,
            "name": "backblaze-b2-samples/cloudflare-b2",
            "url": "https://api.github.com/repos/backblaze-b2-samples/cloudflare-b2"
        },
        "payload": {
            "push_id": 11812039810,
            "size": 3,
            "distinct_size": 3,
            "ref": "refs/heads/main",
            "head": "116bd68b5004a4f0e28fa95362e1b74f08696599",
            "before": "f5380671f1b5cfe8b9227aa441c0eb3b730bc866",
            "commits": [
                {
                    "sha": "0e3f2faaa088de326acf1443167d0a8148add125",
                    "author": {
                        "email": "pat@backblaze.com",
                        "name": "Pat Patterson"
                    },
                    "message": "Rework bucket naming",
                    "distinct": true,
                    "url": "https://api.github.com/repos/backblaze-b2-samples/cloudflare-b2/commits/0e3f2faaa088de326acf1443167d0a8148add125"
                },
                {
                    "sha": "68ca73b448df5fab8c9eedf97040dcaf701b3107",
                    "author": {
                        "email": "pat@backblaze.com",
                        "name": "Pat Patterson"
                    },
                    "message": "Rework bucket naming",
                    "distinct": true,
                    "url": "https://api.github.com/repos/backblaze-b2-samples/cloudflare-b2/commits/68ca73b448df5fab8c9eedf97040dcaf701b3107"
                },
                {
                    "sha": "116bd68b5004a4f0e28fa95362e1b74f08696599",
                    "author": {
                        "email": "pat@backblaze.com",
                        "name": "Pat Patterson"
                    },
                    "message": "Redo config naming",
                    "distinct": true,
                    "url": "https://api.github.com/repos/backblaze-b2-samples/cloudflare-b2/commits/116bd68b5004a4f0e28fa95362e1b74f08696599"
                }
            ]
        },
        "public": true,
        "created_at": "2022-11-28T19:04:22Z",
        "org": {
            "id": 17604039,
            "login": "backblaze-b2-samples",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/backblaze-b2-samples",
            "avatar_url": "https://avatars.githubusercontent.com/u/17604039?"
        }
    },
    {
        "id": "25393422026",
        "type": "PushEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 567902821,
            "name": "backblaze-b2-samples/cloudflare-b2",
            "url": "https://api.github.com/repos/backblaze-b2-samples/cloudflare-b2"
        },
        "payload": {
            "push_id": 11744554881,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/main",
            "head": "f5380671f1b5cfe8b9227aa441c0eb3b730bc866",
            "before": "29a38f154c6d74ef49ac93a5e4e33339e1adf15c",
            "commits": [
                {
                    "sha": "f5380671f1b5cfe8b9227aa441c0eb3b730bc866",
                    "author": {
                        "email": "pat@backblaze.com",
                        "name": "Pat Patterson"
                    },
                    "message": "Disallow list bucket requests",
                    "distinct": true,
                    "url": "https://api.github.com/repos/backblaze-b2-samples/cloudflare-b2/commits/f5380671f1b5cfe8b9227aa441c0eb3b730bc866"
                }
            ]
        },
        "public": true,
        "created_at": "2022-11-22T06:31:57Z",
        "org": {
            "id": 17604039,
            "login": "backblaze-b2-samples",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/backblaze-b2-samples",
            "avatar_url": "https://avatars.githubusercontent.com/u/17604039?"
        }
    },
    {
        "id": "25383731379",
        "type": "PushEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 500179197,
            "name": "metadaddy/metadaddy.github.io",
            "url": "https://api.github.com/repos/metadaddy/metadaddy.github.io"
        },
        "payload": {
            "push_id": 11739675512,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/master",
            "head": "92361b633e663e59faabf24baa9d64ecfb0289bb",
            "before": "2b2247cc6a796ef13ae94181c59611cc60f449b6",
            "commits": [
                {
                    "sha": "92361b633e663e59faabf24baa9d64ecfb0289bb",
                    "author": {
                        "email": "pat@superpat.com",
                        "name": "Pat Patterson"
                    },
                    "message": "Move <a> on index to <link> in head",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/metadaddy.github.io/commits/92361b633e663e59faabf24baa9d64ecfb0289bb"
                }
            ]
        },
        "public": true,
        "created_at": "2022-11-21T19:53:19Z"
    },
    {
        "id": "25349645226",
        "type": "PushEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 567902821,
            "name": "backblaze-b2-samples/cloudflare-b2",
            "url": "https://api.github.com/repos/backblaze-b2-samples/cloudflare-b2"
        },
        "payload": {
            "push_id": 11720375061,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/main",
            "head": "29a38f154c6d74ef49ac93a5e4e33339e1adf15c",
            "before": "4feebaa5da599cfaa504f28b32a1c0e0f14f0023",
            "commits": [
                {
                    "sha": "29a38f154c6d74ef49ac93a5e4e33339e1adf15c",
                    "author": {
                        "email": "pat@backblaze.com",
                        "name": "Pat Patterson"
                    },
                    "message": "Initial version",
                    "distinct": true,
                    "url": "https://api.github.com/repos/backblaze-b2-samples/cloudflare-b2/commits/29a38f154c6d74ef49ac93a5e4e33339e1adf15c"
                }
            ]
        },
        "public": true,
        "created_at": "2022-11-19T16:07:43Z",
        "org": {
            "id": 17604039,
            "login": "backblaze-b2-samples",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/backblaze-b2-samples",
            "avatar_url": "https://avatars.githubusercontent.com/u/17604039?"
        }
    },
    {
        "id": "25349612544",
        "type": "PushEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 567902821,
            "name": "backblaze-b2-samples/cloudflare-b2",
            "url": "https://api.github.com/repos/backblaze-b2-samples/cloudflare-b2"
        },
        "payload": {
            "push_id": 11720352979,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/main",
            "head": "4feebaa5da599cfaa504f28b32a1c0e0f14f0023",
            "before": "a7805984a48c50c8837de6391235cc09d1c34969",
            "commits": [
                {
                    "sha": "4feebaa5da599cfaa504f28b32a1c0e0f14f0023",
                    "author": {
                        "email": "pat@backblaze.com",
                        "name": "Pat Patterson"
                    },
                    "message": "README tweaks",
                    "distinct": true,
                    "url": "https://api.github.com/repos/backblaze-b2-samples/cloudflare-b2/commits/4feebaa5da599cfaa504f28b32a1c0e0f14f0023"
                }
            ]
        },
        "public": true,
        "created_at": "2022-11-19T16:03:15Z",
        "org": {
            "id": 17604039,
            "login": "backblaze-b2-samples",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/backblaze-b2-samples",
            "avatar_url": "https://avatars.githubusercontent.com/u/17604039?"
        }
    },
    {
        "id": "25313608348",
        "type": "WatchEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 6500920,
            "name": "gregrahn/tpcds-kit",
            "url": "https://api.github.com/repos/gregrahn/tpcds-kit"
        },
        "payload": {
            "action": "started"
        },
        "public": true,
        "created_at": "2022-11-17T19:33:51Z"
    },
    {
        "id": "25187991310",
        "type": "PushEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 506752547,
            "name": "metadaddy/trino-getting-started",
            "url": "https://api.github.com/repos/metadaddy/trino-getting-started"
        },
        "payload": {
            "push_id": 11635460736,
            "size": 4,
            "distinct_size": 2,
            "ref": "refs/heads/main",
            "head": "5e0963ba0e3bf267b911925439f90b8e31279c19",
            "before": "58790e463b29274a2011524e05f8de84cbbe8306",
            "commits": [
                {
                    "sha": "4de2e90a5209e8281f4c0186d552720d62d0f17c",
                    "author": {
                        "email": "pat@backblaze.com",
                        "name": "Pat Patterson"
                    },
                    "message": "A few minor README tweaks and corrections",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino-getting-started/commits/4de2e90a5209e8281f4c0186d552720d62d0f17c"
                },
                {
                    "sha": "9a4f44e31df09b83d2ecfd2a4fbaa88b0da8e6f6",
                    "author": {
                        "email": "findinpath@gmail.com",
                        "name": "Marius Grama"
                    },
                    "message": "Merge pull request #10 from metadaddy/readme-corrections\n\nA few minor README tweaks and corrections",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino-getting-started/commits/9a4f44e31df09b83d2ecfd2a4fbaa88b0da8e6f6"
                },
                {
                    "sha": "fb6ea5ceaae7db7dfb374b5b502b76c2b522fd83",
                    "author": {
                        "email": "pat@backblaze.com",
                        "name": "Pat Patterson"
                    },
                    "message": "Add date column to drivestats table",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino-getting-started/commits/fb6ea5ceaae7db7dfb374b5b502b76c2b522fd83"
                },
                {
                    "sha": "5e0963ba0e3bf267b911925439f90b8e31279c19",
                    "author": {
                        "email": "findinpath@gmail.com",
                        "name": "Marius Grama"
                    },
                    "message": "Merge pull request #11 from metadaddy/readme-corrections\n\nAdd date column to drivestats table",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino-getting-started/commits/5e0963ba0e3bf267b911925439f90b8e31279c19"
                }
            ]
        },
        "public": true,
        "created_at": "2022-11-11T20:13:45Z"
    },
    {
        "id": "25186107590",
        "type": "ForkEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 311406909,
            "name": "Backblaze/terraform-provider-b2",
            "url": "https://api.github.com/repos/Backblaze/terraform-provider-b2"
        },
        "payload": {
            "forkee": {
                "id": 564879470,
                "node_id": "R_kgDOIatgbg",
                "name": "terraform-provider-b2",
                "full_name": "metadaddy/terraform-provider-b2",
                "private": false,
                "owner": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "html_url": "https://github.com/metadaddy/terraform-provider-b2",
                "description": "Terraform Provider for Backblaze B2 Cloud Storage",
                "fork": true,
                "url": "https://api.github.com/repos/metadaddy/terraform-provider-b2",
                "forks_url": "https://api.github.com/repos/metadaddy/terraform-provider-b2/forks",
                "keys_url": "https://api.github.com/repos/metadaddy/terraform-provider-b2/keys{/key_id}",
                "collaborators_url": "https://api.github.com/repos/metadaddy/terraform-provider-b2/collaborators{/collaborator}",
                "teams_url": "https://api.github.com/repos/metadaddy/terraform-provider-b2/teams",
                "hooks_url": "https://api.github.com/repos/metadaddy/terraform-provider-b2/hooks",
                "issue_events_url": "https://api.github.com/repos/metadaddy/terraform-provider-b2/issues/events{/number}",
                "events_url": "https://api.github.com/repos/metadaddy/terraform-provider-b2/events",
                "assignees_url": "https://api.github.com/repos/metadaddy/terraform-provider-b2/assignees{/user}",
                "branches_url": "https://api.github.com/repos/metadaddy/terraform-provider-b2/branches{/branch}",
                "tags_url": "https://api.github.com/repos/metadaddy/terraform-provider-b2/tags",
                "blobs_url": "https://api.github.com/repos/metadaddy/terraform-provider-b2/git/blobs{/sha}",
                "git_tags_url": "https://api.github.com/repos/metadaddy/terraform-provider-b2/git/tags{/sha}",
                "git_refs_url": "https://api.github.com/repos/metadaddy/terraform-provider-b2/git/refs{/sha}",
                "trees_url": "https://api.github.com/repos/metadaddy/terraform-provider-b2/git/trees{/sha}",
                "statuses_url": "https://api.github.com/repos/metadaddy/terraform-provider-b2/statuses/{sha}",
                "languages_url": "https://api.github.com/repos/metadaddy/terraform-provider-b2/languages",
                "stargazers_url": "https://api.github.com/repos/metadaddy/terraform-provider-b2/stargazers",
                "contributors_url": "https://api.github.com/repos/metadaddy/terraform-provider-b2/contributors",
                "subscribers_url": "https://api.github.com/repos/metadaddy/terraform-provider-b2/subscribers",
                "subscription_url": "https://api.github.com/repos/metadaddy/terraform-provider-b2/subscription",
                "commits_url": "https://api.github.com/repos/metadaddy/terraform-provider-b2/commits{/sha}",
                "git_commits_url": "https://api.github.com/repos/metadaddy/terraform-provider-b2/git/commits{/sha}",
                "comments_url": "https://api.github.com/repos/metadaddy/terraform-provider-b2/comments{/number}",
                "issue_comment_url": "https://api.github.com/repos/metadaddy/terraform-provider-b2/issues/comments{/number}",
                "contents_url": "https://api.github.com/repos/metadaddy/terraform-provider-b2/contents/{+path}",
                "compare_url": "https://api.github.com/repos/metadaddy/terraform-provider-b2/compare/{base}...{head}",
                "merges_url": "https://api.github.com/repos/metadaddy/terraform-provider-b2/merges",
                "archive_url": "https://api.github.com/repos/metadaddy/terraform-provider-b2/{archive_format}{/ref}",
                "downloads_url": "https://api.github.com/repos/metadaddy/terraform-provider-b2/downloads",
                "issues_url": "https://api.github.com/repos/metadaddy/terraform-provider-b2/issues{/number}",
                "pulls_url": "https://api.github.com/repos/metadaddy/terraform-provider-b2/pulls{/number}",
                "milestones_url": "https://api.github.com/repos/metadaddy/terraform-provider-b2/milestones{/number}",
                "notifications_url": "https://api.github.com/repos/metadaddy/terraform-provider-b2/notifications{?since,all,participating}",
                "labels_url": "https://api.github.com/repos/metadaddy/terraform-provider-b2/labels{/name}",
                "releases_url": "https://api.github.com/repos/metadaddy/terraform-provider-b2/releases{/id}",
                "deployments_url": "https://api.github.com/repos/metadaddy/terraform-provider-b2/deployments",
                "created_at": "2022-11-11T18:08:19Z",
                "updated_at": "2022-10-25T04:13:24Z",
                "pushed_at": "2022-06-24T06:18:57Z",
                "git_url": "git://github.com/metadaddy/terraform-provider-b2.git",
                "ssh_url": "git@github.com:metadaddy/terraform-provider-b2.git",
                "clone_url": "https://github.com/metadaddy/terraform-provider-b2.git",
                "svn_url": "https://github.com/metadaddy/terraform-provider-b2",
                "homepage": "",
                "size": 408,
                "stargazers_count": 0,
                "watchers_count": 0,
                "language": null,
                "has_issues": false,
                "has_projects": true,
                "has_downloads": true,
                "has_wiki": true,
                "has_pages": false,
                "has_discussions": false,
                "forks_count": 0,
                "mirror_url": null,
                "archived": false,
                "disabled": false,
                "open_issues_count": 0,
                "license": {
                    "key": "other",
                    "name": "Other",
                    "spdx_id": "NOASSERTION",
                    "url": null,
                    "node_id": "MDc6TGljZW5zZTA="
                },
                "allow_forking": true,
                "is_template": false,
                "web_commit_signoff_required": false,
                "topics": [],
                "visibility": "public",
                "forks": 0,
                "open_issues": 0,
                "watchers": 0,
                "default_branch": "master",
                "public": true
            }
        },
        "public": true,
        "created_at": "2022-11-11T18:08:20Z",
        "org": {
            "id": 10283486,
            "login": "Backblaze",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/Backblaze",
            "avatar_url": "https://avatars.githubusercontent.com/u/10283486?"
        }
    },
    {
        "id": "25079948402",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 341978481,
            "name": "bitsondatadev/trino-getting-started",
            "url": "https://api.github.com/repos/bitsondatadev/trino-getting-started"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/issues/11",
                "repository_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started",
                "labels_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/issues/11/labels{/name}",
                "comments_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/issues/11/comments",
                "events_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/issues/11/events",
                "html_url": "https://github.com/bitsondatadev/trino-getting-started/pull/11",
                "id": 1436736346,
                "node_id": "PR_kwDOFGItcc5CPq5U",
                "number": 11,
                "title": "Add date column to drivestats table",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 1,
                "created_at": "2022-11-04T23:55:43Z",
                "updated_at": "2022-11-07T18:23:33Z",
                "closed_at": null,
                "author_association": "CONTRIBUTOR",
                "active_lock_reason": null,
                "draft": false,
                "pull_request": {
                    "url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/pulls/11",
                    "html_url": "https://github.com/bitsondatadev/trino-getting-started/pull/11",
                    "diff_url": "https://github.com/bitsondatadev/trino-getting-started/pull/11.diff",
                    "patch_url": "https://github.com/bitsondatadev/trino-getting-started/pull/11.patch",
                    "merged_at": null
                },
                "body": "We added a `date` column to the drivestats table to allow for easier querying - it's much easier to, for example, find the most recent entry in the data set than it was using the `year`, `month` and `day` columns.",
                "reactions": {
                    "url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/issues/11/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/issues/11/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/issues/comments/1306014509",
                "html_url": "https://github.com/bitsondatadev/trino-getting-started/pull/11#issuecomment-1306014509",
                "issue_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/issues/11",
                "id": 1306014509,
                "node_id": "IC_kwDOFGItcc5N2DMt",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2022-11-07T18:23:33Z",
                "updated_at": "2022-11-07T18:23:33Z",
                "author_association": "CONTRIBUTOR",
                "body": "Hi @findinpath,\r\n\r\nThe queries in the README don't go into too much detail, but in writing [this blog post on querying the Drive Stats data using Trino](https://www.backblaze.com/blog/querying-a-decade-of-drive-stats-data/), I had to write queries such as:\r\n\r\n```\r\nSELECT serial_number, MAX(DATE(FORMAT('%04d-%02d-%02d', \r\nyear, month, day))) AS date\r\n    FROM drivestats \r\n    GROUP BY serial_number;\r\n```\r\n\r\nI realized that adding the date column to the schema, alongside the year/month/day we originally specified for the sake of partitioning, would make this sort of query much more straightforward. Of course, this should all go away if/when we migrate from Hive to Iceberg.\r\n\r\nI've regenerated the Parquet data in B2 with the `date` column, so I'd like the schema here to match it.",
                "reactions": {
                    "url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/issues/comments/1306014509/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2022-11-07T18:23:33Z"
    },
    {
        "id": "25050054104",
        "type": "PushEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 500179197,
            "name": "metadaddy/metadaddy.github.io",
            "url": "https://api.github.com/repos/metadaddy/metadaddy.github.io"
        },
        "payload": {
            "push_id": 11564842079,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/master",
            "head": "2b2247cc6a796ef13ae94181c59611cc60f449b6",
            "before": "c571bb8304c324d960e8b5a8fa607f031822f50a",
            "commits": [
                {
                    "sha": "2b2247cc6a796ef13ae94181c59611cc60f449b6",
                    "author": {
                        "email": "pat@superpat.com",
                        "name": "Pat Patterson"
                    },
                    "message": "Add fosstodon link",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/metadaddy.github.io/commits/2b2247cc6a796ef13ae94181c59611cc60f449b6"
                }
            ]
        },
        "public": true,
        "created_at": "2022-11-05T19:21:03Z"
    },
    {
        "id": "25049524711",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 166515022,
            "name": "trinodb/trino",
            "url": "https://api.github.com/repos/trinodb/trino"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/trinodb/trino/issues/6131",
                "repository_url": "https://api.github.com/repos/trinodb/trino",
                "labels_url": "https://api.github.com/repos/trinodb/trino/issues/6131/labels{/name}",
                "comments_url": "https://api.github.com/repos/trinodb/trino/issues/6131/comments",
                "events_url": "https://api.github.com/repos/trinodb/trino/issues/6131/events",
                "html_url": "https://github.com/trinodb/trino/pull/6131",
                "id": 752676545,
                "node_id": "MDExOlB1bGxSZXF1ZXN0NTI4OTQ4MTI5",
                "number": 6131,
                "title": "Support public S3 bucket access",
                "user": {
                    "login": "tooptoop4",
                    "id": 33283496,
                    "node_id": "MDQ6VXNlcjMzMjgzNDk2",
                    "avatar_url": "https://avatars.githubusercontent.com/u/33283496?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/tooptoop4",
                    "html_url": "https://github.com/tooptoop4",
                    "followers_url": "https://api.github.com/users/tooptoop4/followers",
                    "following_url": "https://api.github.com/users/tooptoop4/following{/other_user}",
                    "gists_url": "https://api.github.com/users/tooptoop4/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/tooptoop4/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/tooptoop4/subscriptions",
                    "organizations_url": "https://api.github.com/users/tooptoop4/orgs",
                    "repos_url": "https://api.github.com/users/tooptoop4/repos",
                    "events_url": "https://api.github.com/users/tooptoop4/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/tooptoop4/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 1202580151,
                        "node_id": "MDU6TGFiZWwxMjAyNTgwMTUx",
                        "url": "https://api.github.com/repos/trinodb/trino/labels/cla-signed",
                        "name": "cla-signed",
                        "color": "ededed",
                        "default": false,
                        "description": null
                    }
                ],
                "state": "closed",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 8,
                "created_at": "2020-11-28T13:27:44Z",
                "updated_at": "2022-11-05T17:58:06Z",
                "closed_at": "2022-10-21T06:29:58Z",
                "author_association": "CONTRIBUTOR",
                "active_lock_reason": null,
                "draft": false,
                "pull_request": {
                    "url": "https://api.github.com/repos/trinodb/trino/pulls/6131",
                    "html_url": "https://github.com/trinodb/trino/pull/6131",
                    "diff_url": "https://github.com/trinodb/trino/pull/6131.diff",
                    "patch_url": "https://github.com/trinodb/trino/pull/6131.patch",
                    "merged_at": null
                },
                "body": "Fixes https://github.com/prestosql/presto/issues/6127",
                "reactions": {
                    "url": "https://api.github.com/repos/trinodb/trino/issues/6131/reactions",
                    "total_count": 2,
                    "+1": 2,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/trinodb/trino/issues/6131/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/trinodb/trino/issues/comments/1304601171",
                "html_url": "https://github.com/trinodb/trino/pull/6131#issuecomment-1304601171",
                "issue_url": "https://api.github.com/repos/trinodb/trino/issues/6131",
                "id": 1304601171,
                "node_id": "IC_kwDOCezRTs5NwqJT",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2022-11-05T17:58:06Z",
                "updated_at": "2022-11-05T17:58:06Z",
                "author_association": "MEMBER",
                "body": "BTW - I've rebased @tooptoop4's changes into the current master, and I'm currently testing them. I'll submit a new PR in the next week or so.",
                "reactions": {
                    "url": "https://api.github.com/repos/trinodb/trino/issues/comments/1304601171/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2022-11-05T17:58:06Z",
        "org": {
            "id": 34147222,
            "login": "trinodb",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/trinodb",
            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?"
        }
    },
    {
        "id": "25043027248",
        "type": "PullRequestEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 341978481,
            "name": "bitsondatadev/trino-getting-started",
            "url": "https://api.github.com/repos/bitsondatadev/trino-getting-started"
        },
        "payload": {
            "action": "opened",
            "number": 11,
            "pull_request": {
                "url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/pulls/11",
                "id": 1111404116,
                "node_id": "PR_kwDOFGItcc5CPq5U",
                "html_url": "https://github.com/bitsondatadev/trino-getting-started/pull/11",
                "diff_url": "https://github.com/bitsondatadev/trino-getting-started/pull/11.diff",
                "patch_url": "https://github.com/bitsondatadev/trino-getting-started/pull/11.patch",
                "issue_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/issues/11",
                "number": 11,
                "state": "open",
                "locked": false,
                "title": "Add date column to drivestats table",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "We added a `date` column to the drivestats table to allow for easier querying - it's much easier to, for example, find the most recent entry in the data set than it was using the `year`, `month` and `day' columns.",
                "created_at": "2022-11-04T23:55:43Z",
                "updated_at": "2022-11-04T23:55:43Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": null,
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/pulls/11/commits",
                "review_comments_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/pulls/11/comments",
                "review_comment_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/issues/11/comments",
                "statuses_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/statuses/fb6ea5ceaae7db7dfb374b5b502b76c2b522fd83",
                "head": {
                    "label": "metadaddy:readme-corrections",
                    "ref": "readme-corrections",
                    "sha": "fb6ea5ceaae7db7dfb374b5b502b76c2b522fd83",
                    "user": {
                        "login": "metadaddy",
                        "id": 723517,
                        "node_id": "MDQ6VXNlcjcyMzUxNw==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/metadaddy",
                        "html_url": "https://github.com/metadaddy",
                        "followers_url": "https://api.github.com/users/metadaddy/followers",
                        "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                        "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                        "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                        "repos_url": "https://api.github.com/users/metadaddy/repos",
                        "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 506752547,
                        "node_id": "R_kgDOHjRuIw",
                        "name": "trino-getting-started",
                        "full_name": "metadaddy/trino-getting-started",
                        "private": false,
                        "owner": {
                            "login": "metadaddy",
                            "id": 723517,
                            "node_id": "MDQ6VXNlcjcyMzUxNw==",
                            "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/metadaddy",
                            "html_url": "https://github.com/metadaddy",
                            "followers_url": "https://api.github.com/users/metadaddy/followers",
                            "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                            "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                            "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                            "repos_url": "https://api.github.com/users/metadaddy/repos",
                            "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/metadaddy/trino-getting-started",
                        "description": null,
                        "fork": true,
                        "url": "https://api.github.com/repos/metadaddy/trino-getting-started",
                        "forks_url": "https://api.github.com/repos/metadaddy/trino-getting-started/forks",
                        "keys_url": "https://api.github.com/repos/metadaddy/trino-getting-started/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/metadaddy/trino-getting-started/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/metadaddy/trino-getting-started/teams",
                        "hooks_url": "https://api.github.com/repos/metadaddy/trino-getting-started/hooks",
                        "issue_events_url": "https://api.github.com/repos/metadaddy/trino-getting-started/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/metadaddy/trino-getting-started/events",
                        "assignees_url": "https://api.github.com/repos/metadaddy/trino-getting-started/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/metadaddy/trino-getting-started/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/metadaddy/trino-getting-started/tags",
                        "blobs_url": "https://api.github.com/repos/metadaddy/trino-getting-started/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/metadaddy/trino-getting-started/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/metadaddy/trino-getting-started/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/metadaddy/trino-getting-started/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/metadaddy/trino-getting-started/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/metadaddy/trino-getting-started/languages",
                        "stargazers_url": "https://api.github.com/repos/metadaddy/trino-getting-started/stargazers",
                        "contributors_url": "https://api.github.com/repos/metadaddy/trino-getting-started/contributors",
                        "subscribers_url": "https://api.github.com/repos/metadaddy/trino-getting-started/subscribers",
                        "subscription_url": "https://api.github.com/repos/metadaddy/trino-getting-started/subscription",
                        "commits_url": "https://api.github.com/repos/metadaddy/trino-getting-started/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/metadaddy/trino-getting-started/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/metadaddy/trino-getting-started/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/metadaddy/trino-getting-started/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/metadaddy/trino-getting-started/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/metadaddy/trino-getting-started/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/metadaddy/trino-getting-started/merges",
                        "archive_url": "https://api.github.com/repos/metadaddy/trino-getting-started/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/metadaddy/trino-getting-started/downloads",
                        "issues_url": "https://api.github.com/repos/metadaddy/trino-getting-started/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/metadaddy/trino-getting-started/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/metadaddy/trino-getting-started/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/metadaddy/trino-getting-started/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/metadaddy/trino-getting-started/labels{/name}",
                        "releases_url": "https://api.github.com/repos/metadaddy/trino-getting-started/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/metadaddy/trino-getting-started/deployments",
                        "created_at": "2022-06-23T18:37:35Z",
                        "updated_at": "2022-08-27T02:19:58Z",
                        "pushed_at": "2022-11-04T23:53:17Z",
                        "git_url": "git://github.com/metadaddy/trino-getting-started.git",
                        "ssh_url": "git@github.com:metadaddy/trino-getting-started.git",
                        "clone_url": "https://github.com/metadaddy/trino-getting-started.git",
                        "svn_url": "https://github.com/metadaddy/trino-getting-started",
                        "homepage": null,
                        "size": 21866,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": "Python",
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "main"
                    }
                },
                "base": {
                    "label": "bitsondatadev:main",
                    "ref": "main",
                    "sha": "9a4f44e31df09b83d2ecfd2a4fbaa88b0da8e6f6",
                    "user": {
                        "login": "bitsondatadev",
                        "id": 8547669,
                        "node_id": "MDQ6VXNlcjg1NDc2Njk=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/8547669?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/bitsondatadev",
                        "html_url": "https://github.com/bitsondatadev",
                        "followers_url": "https://api.github.com/users/bitsondatadev/followers",
                        "following_url": "https://api.github.com/users/bitsondatadev/following{/other_user}",
                        "gists_url": "https://api.github.com/users/bitsondatadev/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/bitsondatadev/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/bitsondatadev/subscriptions",
                        "organizations_url": "https://api.github.com/users/bitsondatadev/orgs",
                        "repos_url": "https://api.github.com/users/bitsondatadev/repos",
                        "events_url": "https://api.github.com/users/bitsondatadev/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/bitsondatadev/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 341978481,
                        "node_id": "MDEwOlJlcG9zaXRvcnkzNDE5Nzg0ODE=",
                        "name": "trino-getting-started",
                        "full_name": "bitsondatadev/trino-getting-started",
                        "private": false,
                        "owner": {
                            "login": "bitsondatadev",
                            "id": 8547669,
                            "node_id": "MDQ6VXNlcjg1NDc2Njk=",
                            "avatar_url": "https://avatars.githubusercontent.com/u/8547669?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/bitsondatadev",
                            "html_url": "https://github.com/bitsondatadev",
                            "followers_url": "https://api.github.com/users/bitsondatadev/followers",
                            "following_url": "https://api.github.com/users/bitsondatadev/following{/other_user}",
                            "gists_url": "https://api.github.com/users/bitsondatadev/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/bitsondatadev/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/bitsondatadev/subscriptions",
                            "organizations_url": "https://api.github.com/users/bitsondatadev/orgs",
                            "repos_url": "https://api.github.com/users/bitsondatadev/repos",
                            "events_url": "https://api.github.com/users/bitsondatadev/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/bitsondatadev/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/bitsondatadev/trino-getting-started",
                        "description": null,
                        "fork": false,
                        "url": "https://api.github.com/repos/bitsondatadev/trino-getting-started",
                        "forks_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/forks",
                        "keys_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/teams",
                        "hooks_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/hooks",
                        "issue_events_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/events",
                        "assignees_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/tags",
                        "blobs_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/languages",
                        "stargazers_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/stargazers",
                        "contributors_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/contributors",
                        "subscribers_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/subscribers",
                        "subscription_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/subscription",
                        "commits_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/merges",
                        "archive_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/downloads",
                        "issues_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/labels{/name}",
                        "releases_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/deployments",
                        "created_at": "2021-02-24T17:23:52Z",
                        "updated_at": "2022-11-01T18:33:10Z",
                        "pushed_at": "2022-11-04T23:55:44Z",
                        "git_url": "git://github.com/bitsondatadev/trino-getting-started.git",
                        "ssh_url": "git@github.com:bitsondatadev/trino-getting-started.git",
                        "clone_url": "https://github.com/bitsondatadev/trino-getting-started.git",
                        "svn_url": "https://github.com/bitsondatadev/trino-getting-started",
                        "homepage": null,
                        "size": 21867,
                        "stargazers_count": 129,
                        "watchers_count": 129,
                        "language": "Python",
                        "has_issues": true,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "forks_count": 48,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 5,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 48,
                        "open_issues": 5,
                        "watchers": 129,
                        "default_branch": "main"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/bitsondatadev/trino-getting-started/pulls/11"
                    },
                    "html": {
                        "href": "https://github.com/bitsondatadev/trino-getting-started/pull/11"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/bitsondatadev/trino-getting-started/issues/11"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/bitsondatadev/trino-getting-started/issues/11/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/bitsondatadev/trino-getting-started/pulls/11/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/bitsondatadev/trino-getting-started/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/bitsondatadev/trino-getting-started/pulls/11/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/bitsondatadev/trino-getting-started/statuses/fb6ea5ceaae7db7dfb374b5b502b76c2b522fd83"
                    }
                },
                "author_association": "CONTRIBUTOR",
                "auto_merge": null,
                "active_lock_reason": null,
                "merged": false,
                "mergeable": null,
                "rebaseable": null,
                "mergeable_state": "unknown",
                "merged_by": null,
                "comments": 0,
                "review_comments": 0,
                "maintainer_can_modify": true,
                "commits": 1,
                "additions": 2,
                "deletions": 0,
                "changed_files": 1
            }
        },
        "public": true,
        "created_at": "2022-11-04T23:55:44Z"
    },
    {
        "id": "25043010432",
        "type": "PushEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 506752547,
            "name": "metadaddy/trino-getting-started",
            "url": "https://api.github.com/repos/metadaddy/trino-getting-started"
        },
        "payload": {
            "push_id": 11560148359,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/readme-corrections",
            "head": "fb6ea5ceaae7db7dfb374b5b502b76c2b522fd83",
            "before": "4de2e90a5209e8281f4c0186d552720d62d0f17c",
            "commits": [
                {
                    "sha": "fb6ea5ceaae7db7dfb374b5b502b76c2b522fd83",
                    "author": {
                        "email": "pat@backblaze.com",
                        "name": "Pat Patterson"
                    },
                    "message": "Add date column to drivestats table",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino-getting-started/commits/fb6ea5ceaae7db7dfb374b5b502b76c2b522fd83"
                }
            ]
        },
        "public": true,
        "created_at": "2022-11-04T23:53:18Z"
    },
    {
        "id": "24994763180",
        "type": "PullRequestEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 560949628,
            "name": "rmoff/devrel-mastodon",
            "url": "https://api.github.com/repos/rmoff/devrel-mastodon"
        },
        "payload": {
            "action": "opened",
            "number": 8,
            "pull_request": {
                "url": "https://api.github.com/repos/rmoff/devrel-mastodon/pulls/8",
                "id": 1108900143,
                "node_id": "PR_kwDOIW9pfM5CGHkv",
                "html_url": "https://github.com/rmoff/devrel-mastodon/pull/8",
                "diff_url": "https://github.com/rmoff/devrel-mastodon/pull/8.diff",
                "patch_url": "https://github.com/rmoff/devrel-mastodon/pull/8.patch",
                "issue_url": "https://api.github.com/repos/rmoff/devrel-mastodon/issues/8",
                "number": 8,
                "state": "open",
                "locked": false,
                "title": "Add metadaddy",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": null,
                "created_at": "2022-11-02T22:27:58Z",
                "updated_at": "2022-11-02T22:27:58Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": null,
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/rmoff/devrel-mastodon/pulls/8/commits",
                "review_comments_url": "https://api.github.com/repos/rmoff/devrel-mastodon/pulls/8/comments",
                "review_comment_url": "https://api.github.com/repos/rmoff/devrel-mastodon/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/rmoff/devrel-mastodon/issues/8/comments",
                "statuses_url": "https://api.github.com/repos/rmoff/devrel-mastodon/statuses/8c56616d2029a3bf37b9f8b56ee63b0fd435560c",
                "head": {
                    "label": "metadaddy:add-metadaddy",
                    "ref": "add-metadaddy",
                    "sha": "8c56616d2029a3bf37b9f8b56ee63b0fd435560c",
                    "user": {
                        "login": "metadaddy",
                        "id": 723517,
                        "node_id": "MDQ6VXNlcjcyMzUxNw==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/metadaddy",
                        "html_url": "https://github.com/metadaddy",
                        "followers_url": "https://api.github.com/users/metadaddy/followers",
                        "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                        "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                        "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                        "repos_url": "https://api.github.com/users/metadaddy/repos",
                        "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 561068352,
                        "node_id": "R_kgDOIXE5QA",
                        "name": "devrel-mastodon",
                        "full_name": "metadaddy/devrel-mastodon",
                        "private": false,
                        "owner": {
                            "login": "metadaddy",
                            "id": 723517,
                            "node_id": "MDQ6VXNlcjcyMzUxNw==",
                            "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/metadaddy",
                            "html_url": "https://github.com/metadaddy",
                            "followers_url": "https://api.github.com/users/metadaddy/followers",
                            "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                            "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                            "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                            "repos_url": "https://api.github.com/users/metadaddy/repos",
                            "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/metadaddy/devrel-mastodon",
                        "description": "List of DevRel folk on Mastodon",
                        "fork": true,
                        "url": "https://api.github.com/repos/metadaddy/devrel-mastodon",
                        "forks_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/forks",
                        "keys_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/teams",
                        "hooks_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/hooks",
                        "issue_events_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/events",
                        "assignees_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/tags",
                        "blobs_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/languages",
                        "stargazers_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/stargazers",
                        "contributors_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/contributors",
                        "subscribers_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/subscribers",
                        "subscription_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/subscription",
                        "commits_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/merges",
                        "archive_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/downloads",
                        "issues_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/labels{/name}",
                        "releases_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/deployments",
                        "created_at": "2022-11-02T21:54:14Z",
                        "updated_at": "2022-11-02T19:59:14Z",
                        "pushed_at": "2022-11-02T22:27:47Z",
                        "git_url": "git://github.com/metadaddy/devrel-mastodon.git",
                        "ssh_url": "git@github.com:metadaddy/devrel-mastodon.git",
                        "clone_url": "https://github.com/metadaddy/devrel-mastodon.git",
                        "svn_url": "https://github.com/metadaddy/devrel-mastodon",
                        "homepage": "",
                        "size": 11,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": null,
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": false,
                        "has_pages": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": null,
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "main"
                    }
                },
                "base": {
                    "label": "rmoff:main",
                    "ref": "main",
                    "sha": "c8dd21bc7145719d3a137be85f2ccf5f4d6545a6",
                    "user": {
                        "login": "rmoff",
                        "id": 3671582,
                        "node_id": "MDQ6VXNlcjM2NzE1ODI=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/3671582?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/rmoff",
                        "html_url": "https://github.com/rmoff",
                        "followers_url": "https://api.github.com/users/rmoff/followers",
                        "following_url": "https://api.github.com/users/rmoff/following{/other_user}",
                        "gists_url": "https://api.github.com/users/rmoff/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/rmoff/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/rmoff/subscriptions",
                        "organizations_url": "https://api.github.com/users/rmoff/orgs",
                        "repos_url": "https://api.github.com/users/rmoff/repos",
                        "events_url": "https://api.github.com/users/rmoff/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/rmoff/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 560949628,
                        "node_id": "R_kgDOIW9pfA",
                        "name": "devrel-mastodon",
                        "full_name": "rmoff/devrel-mastodon",
                        "private": false,
                        "owner": {
                            "login": "rmoff",
                            "id": 3671582,
                            "node_id": "MDQ6VXNlcjM2NzE1ODI=",
                            "avatar_url": "https://avatars.githubusercontent.com/u/3671582?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/rmoff",
                            "html_url": "https://github.com/rmoff",
                            "followers_url": "https://api.github.com/users/rmoff/followers",
                            "following_url": "https://api.github.com/users/rmoff/following{/other_user}",
                            "gists_url": "https://api.github.com/users/rmoff/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/rmoff/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/rmoff/subscriptions",
                            "organizations_url": "https://api.github.com/users/rmoff/orgs",
                            "repos_url": "https://api.github.com/users/rmoff/repos",
                            "events_url": "https://api.github.com/users/rmoff/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/rmoff/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/rmoff/devrel-mastodon",
                        "description": "List of DevRel folk on Mastodon",
                        "fork": false,
                        "url": "https://api.github.com/repos/rmoff/devrel-mastodon",
                        "forks_url": "https://api.github.com/repos/rmoff/devrel-mastodon/forks",
                        "keys_url": "https://api.github.com/repos/rmoff/devrel-mastodon/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/rmoff/devrel-mastodon/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/rmoff/devrel-mastodon/teams",
                        "hooks_url": "https://api.github.com/repos/rmoff/devrel-mastodon/hooks",
                        "issue_events_url": "https://api.github.com/repos/rmoff/devrel-mastodon/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/rmoff/devrel-mastodon/events",
                        "assignees_url": "https://api.github.com/repos/rmoff/devrel-mastodon/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/rmoff/devrel-mastodon/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/rmoff/devrel-mastodon/tags",
                        "blobs_url": "https://api.github.com/repos/rmoff/devrel-mastodon/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/rmoff/devrel-mastodon/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/rmoff/devrel-mastodon/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/rmoff/devrel-mastodon/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/rmoff/devrel-mastodon/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/rmoff/devrel-mastodon/languages",
                        "stargazers_url": "https://api.github.com/repos/rmoff/devrel-mastodon/stargazers",
                        "contributors_url": "https://api.github.com/repos/rmoff/devrel-mastodon/contributors",
                        "subscribers_url": "https://api.github.com/repos/rmoff/devrel-mastodon/subscribers",
                        "subscription_url": "https://api.github.com/repos/rmoff/devrel-mastodon/subscription",
                        "commits_url": "https://api.github.com/repos/rmoff/devrel-mastodon/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/rmoff/devrel-mastodon/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/rmoff/devrel-mastodon/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/rmoff/devrel-mastodon/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/rmoff/devrel-mastodon/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/rmoff/devrel-mastodon/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/rmoff/devrel-mastodon/merges",
                        "archive_url": "https://api.github.com/repos/rmoff/devrel-mastodon/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/rmoff/devrel-mastodon/downloads",
                        "issues_url": "https://api.github.com/repos/rmoff/devrel-mastodon/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/rmoff/devrel-mastodon/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/rmoff/devrel-mastodon/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/rmoff/devrel-mastodon/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/rmoff/devrel-mastodon/labels{/name}",
                        "releases_url": "https://api.github.com/repos/rmoff/devrel-mastodon/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/rmoff/devrel-mastodon/deployments",
                        "created_at": "2022-11-02T16:01:51Z",
                        "updated_at": "2022-11-02T19:59:14Z",
                        "pushed_at": "2022-11-02T21:21:36Z",
                        "git_url": "git://github.com/rmoff/devrel-mastodon.git",
                        "ssh_url": "git@github.com:rmoff/devrel-mastodon.git",
                        "clone_url": "https://github.com/rmoff/devrel-mastodon.git",
                        "svn_url": "https://github.com/rmoff/devrel-mastodon",
                        "homepage": "",
                        "size": 11,
                        "stargazers_count": 1,
                        "watchers_count": 1,
                        "language": null,
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": false,
                        "has_pages": false,
                        "forks_count": 9,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 4,
                        "license": null,
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "devrel",
                            "mastodon"
                        ],
                        "visibility": "public",
                        "forks": 9,
                        "open_issues": 4,
                        "watchers": 1,
                        "default_branch": "main"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/rmoff/devrel-mastodon/pulls/8"
                    },
                    "html": {
                        "href": "https://github.com/rmoff/devrel-mastodon/pull/8"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/rmoff/devrel-mastodon/issues/8"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/rmoff/devrel-mastodon/issues/8/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/rmoff/devrel-mastodon/pulls/8/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/rmoff/devrel-mastodon/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/rmoff/devrel-mastodon/pulls/8/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/rmoff/devrel-mastodon/statuses/8c56616d2029a3bf37b9f8b56ee63b0fd435560c"
                    }
                },
                "author_association": "NONE",
                "auto_merge": null,
                "active_lock_reason": null,
                "merged": false,
                "mergeable": null,
                "rebaseable": null,
                "mergeable_state": "unknown",
                "merged_by": null,
                "comments": 0,
                "review_comments": 0,
                "maintainer_can_modify": true,
                "commits": 1,
                "additions": 1,
                "deletions": 0,
                "changed_files": 1
            }
        },
        "public": true,
        "created_at": "2022-11-02T22:27:59Z"
    },
    {
        "id": "24994760655",
        "type": "CreateEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 561068352,
            "name": "metadaddy/devrel-mastodon",
            "url": "https://api.github.com/repos/metadaddy/devrel-mastodon"
        },
        "payload": {
            "ref": "add-metadaddy",
            "ref_type": "branch",
            "master_branch": "main",
            "description": "List of DevRel folk on Mastodon",
            "pusher_type": "user"
        },
        "public": true,
        "created_at": "2022-11-02T22:27:48Z"
    },
    {
        "id": "24994269382",
        "type": "ForkEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 560949628,
            "name": "rmoff/devrel-mastodon",
            "url": "https://api.github.com/repos/rmoff/devrel-mastodon"
        },
        "payload": {
            "forkee": {
                "id": 561068352,
                "node_id": "R_kgDOIXE5QA",
                "name": "devrel-mastodon",
                "full_name": "metadaddy/devrel-mastodon",
                "private": false,
                "owner": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "html_url": "https://github.com/metadaddy/devrel-mastodon",
                "description": "List of DevRel folk on Mastodon",
                "fork": true,
                "url": "https://api.github.com/repos/metadaddy/devrel-mastodon",
                "forks_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/forks",
                "keys_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/keys{/key_id}",
                "collaborators_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/collaborators{/collaborator}",
                "teams_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/teams",
                "hooks_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/hooks",
                "issue_events_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/issues/events{/number}",
                "events_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/events",
                "assignees_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/assignees{/user}",
                "branches_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/branches{/branch}",
                "tags_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/tags",
                "blobs_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/git/blobs{/sha}",
                "git_tags_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/git/tags{/sha}",
                "git_refs_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/git/refs{/sha}",
                "trees_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/git/trees{/sha}",
                "statuses_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/statuses/{sha}",
                "languages_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/languages",
                "stargazers_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/stargazers",
                "contributors_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/contributors",
                "subscribers_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/subscribers",
                "subscription_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/subscription",
                "commits_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/commits{/sha}",
                "git_commits_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/git/commits{/sha}",
                "comments_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/comments{/number}",
                "issue_comment_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/issues/comments{/number}",
                "contents_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/contents/{+path}",
                "compare_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/compare/{base}...{head}",
                "merges_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/merges",
                "archive_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/{archive_format}{/ref}",
                "downloads_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/downloads",
                "issues_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/issues{/number}",
                "pulls_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/pulls{/number}",
                "milestones_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/milestones{/number}",
                "notifications_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/notifications{?since,all,participating}",
                "labels_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/labels{/name}",
                "releases_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/releases{/id}",
                "deployments_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/deployments",
                "created_at": "2022-11-02T21:54:14Z",
                "updated_at": "2022-11-02T19:59:14Z",
                "pushed_at": "2022-11-02T21:21:36Z",
                "git_url": "git://github.com/metadaddy/devrel-mastodon.git",
                "ssh_url": "git@github.com:metadaddy/devrel-mastodon.git",
                "clone_url": "https://github.com/metadaddy/devrel-mastodon.git",
                "svn_url": "https://github.com/metadaddy/devrel-mastodon",
                "homepage": "",
                "size": 11,
                "stargazers_count": 0,
                "watchers_count": 0,
                "language": null,
                "has_issues": false,
                "has_projects": true,
                "has_downloads": true,
                "has_wiki": false,
                "has_pages": false,
                "forks_count": 0,
                "mirror_url": null,
                "archived": false,
                "disabled": false,
                "open_issues_count": 0,
                "license": null,
                "allow_forking": true,
                "is_template": false,
                "web_commit_signoff_required": false,
                "topics": [],
                "visibility": "public",
                "forks": 0,
                "open_issues": 0,
                "watchers": 0,
                "default_branch": "main",
                "public": true
            }
        },
        "public": true,
        "created_at": "2022-11-02T21:54:15Z"
    },
    {
        "id": "24973802364",
        "type": "PullRequestEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 341978481,
            "name": "bitsondatadev/trino-getting-started",
            "url": "https://api.github.com/repos/bitsondatadev/trino-getting-started"
        },
        "payload": {
            "action": "opened",
            "number": 10,
            "pull_request": {
                "url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/pulls/10",
                "id": 1107700733,
                "node_id": "PR_kwDOFGItcc5CBiv9",
                "html_url": "https://github.com/bitsondatadev/trino-getting-started/pull/10",
                "diff_url": "https://github.com/bitsondatadev/trino-getting-started/pull/10.diff",
                "patch_url": "https://github.com/bitsondatadev/trino-getting-started/pull/10.patch",
                "issue_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/issues/10",
                "number": 10,
                "state": "open",
                "locked": false,
                "title": "A few minor README tweaks and corrections",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": null,
                "created_at": "2022-11-02T05:19:06Z",
                "updated_at": "2022-11-02T05:19:06Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": null,
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/pulls/10/commits",
                "review_comments_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/pulls/10/comments",
                "review_comment_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/issues/10/comments",
                "statuses_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/statuses/4de2e90a5209e8281f4c0186d552720d62d0f17c",
                "head": {
                    "label": "metadaddy:readme-corrections",
                    "ref": "readme-corrections",
                    "sha": "4de2e90a5209e8281f4c0186d552720d62d0f17c",
                    "user": {
                        "login": "metadaddy",
                        "id": 723517,
                        "node_id": "MDQ6VXNlcjcyMzUxNw==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/metadaddy",
                        "html_url": "https://github.com/metadaddy",
                        "followers_url": "https://api.github.com/users/metadaddy/followers",
                        "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                        "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                        "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                        "repos_url": "https://api.github.com/users/metadaddy/repos",
                        "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 506752547,
                        "node_id": "R_kgDOHjRuIw",
                        "name": "trino-getting-started",
                        "full_name": "metadaddy/trino-getting-started",
                        "private": false,
                        "owner": {
                            "login": "metadaddy",
                            "id": 723517,
                            "node_id": "MDQ6VXNlcjcyMzUxNw==",
                            "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/metadaddy",
                            "html_url": "https://github.com/metadaddy",
                            "followers_url": "https://api.github.com/users/metadaddy/followers",
                            "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                            "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                            "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                            "repos_url": "https://api.github.com/users/metadaddy/repos",
                            "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/metadaddy/trino-getting-started",
                        "description": null,
                        "fork": true,
                        "url": "https://api.github.com/repos/metadaddy/trino-getting-started",
                        "forks_url": "https://api.github.com/repos/metadaddy/trino-getting-started/forks",
                        "keys_url": "https://api.github.com/repos/metadaddy/trino-getting-started/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/metadaddy/trino-getting-started/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/metadaddy/trino-getting-started/teams",
                        "hooks_url": "https://api.github.com/repos/metadaddy/trino-getting-started/hooks",
                        "issue_events_url": "https://api.github.com/repos/metadaddy/trino-getting-started/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/metadaddy/trino-getting-started/events",
                        "assignees_url": "https://api.github.com/repos/metadaddy/trino-getting-started/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/metadaddy/trino-getting-started/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/metadaddy/trino-getting-started/tags",
                        "blobs_url": "https://api.github.com/repos/metadaddy/trino-getting-started/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/metadaddy/trino-getting-started/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/metadaddy/trino-getting-started/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/metadaddy/trino-getting-started/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/metadaddy/trino-getting-started/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/metadaddy/trino-getting-started/languages",
                        "stargazers_url": "https://api.github.com/repos/metadaddy/trino-getting-started/stargazers",
                        "contributors_url": "https://api.github.com/repos/metadaddy/trino-getting-started/contributors",
                        "subscribers_url": "https://api.github.com/repos/metadaddy/trino-getting-started/subscribers",
                        "subscription_url": "https://api.github.com/repos/metadaddy/trino-getting-started/subscription",
                        "commits_url": "https://api.github.com/repos/metadaddy/trino-getting-started/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/metadaddy/trino-getting-started/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/metadaddy/trino-getting-started/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/metadaddy/trino-getting-started/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/metadaddy/trino-getting-started/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/metadaddy/trino-getting-started/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/metadaddy/trino-getting-started/merges",
                        "archive_url": "https://api.github.com/repos/metadaddy/trino-getting-started/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/metadaddy/trino-getting-started/downloads",
                        "issues_url": "https://api.github.com/repos/metadaddy/trino-getting-started/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/metadaddy/trino-getting-started/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/metadaddy/trino-getting-started/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/metadaddy/trino-getting-started/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/metadaddy/trino-getting-started/labels{/name}",
                        "releases_url": "https://api.github.com/repos/metadaddy/trino-getting-started/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/metadaddy/trino-getting-started/deployments",
                        "created_at": "2022-06-23T18:37:35Z",
                        "updated_at": "2022-08-27T02:19:58Z",
                        "pushed_at": "2022-11-02T05:18:04Z",
                        "git_url": "git://github.com/metadaddy/trino-getting-started.git",
                        "ssh_url": "git@github.com:metadaddy/trino-getting-started.git",
                        "clone_url": "https://github.com/metadaddy/trino-getting-started.git",
                        "svn_url": "https://github.com/metadaddy/trino-getting-started",
                        "homepage": null,
                        "size": 21865,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": "Python",
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "main"
                    }
                },
                "base": {
                    "label": "bitsondatadev:main",
                    "ref": "main",
                    "sha": "58790e463b29274a2011524e05f8de84cbbe8306",
                    "user": {
                        "login": "bitsondatadev",
                        "id": 8547669,
                        "node_id": "MDQ6VXNlcjg1NDc2Njk=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/8547669?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/bitsondatadev",
                        "html_url": "https://github.com/bitsondatadev",
                        "followers_url": "https://api.github.com/users/bitsondatadev/followers",
                        "following_url": "https://api.github.com/users/bitsondatadev/following{/other_user}",
                        "gists_url": "https://api.github.com/users/bitsondatadev/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/bitsondatadev/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/bitsondatadev/subscriptions",
                        "organizations_url": "https://api.github.com/users/bitsondatadev/orgs",
                        "repos_url": "https://api.github.com/users/bitsondatadev/repos",
                        "events_url": "https://api.github.com/users/bitsondatadev/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/bitsondatadev/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 341978481,
                        "node_id": "MDEwOlJlcG9zaXRvcnkzNDE5Nzg0ODE=",
                        "name": "trino-getting-started",
                        "full_name": "bitsondatadev/trino-getting-started",
                        "private": false,
                        "owner": {
                            "login": "bitsondatadev",
                            "id": 8547669,
                            "node_id": "MDQ6VXNlcjg1NDc2Njk=",
                            "avatar_url": "https://avatars.githubusercontent.com/u/8547669?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/bitsondatadev",
                            "html_url": "https://github.com/bitsondatadev",
                            "followers_url": "https://api.github.com/users/bitsondatadev/followers",
                            "following_url": "https://api.github.com/users/bitsondatadev/following{/other_user}",
                            "gists_url": "https://api.github.com/users/bitsondatadev/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/bitsondatadev/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/bitsondatadev/subscriptions",
                            "organizations_url": "https://api.github.com/users/bitsondatadev/orgs",
                            "repos_url": "https://api.github.com/users/bitsondatadev/repos",
                            "events_url": "https://api.github.com/users/bitsondatadev/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/bitsondatadev/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/bitsondatadev/trino-getting-started",
                        "description": null,
                        "fork": false,
                        "url": "https://api.github.com/repos/bitsondatadev/trino-getting-started",
                        "forks_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/forks",
                        "keys_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/teams",
                        "hooks_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/hooks",
                        "issue_events_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/events",
                        "assignees_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/tags",
                        "blobs_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/languages",
                        "stargazers_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/stargazers",
                        "contributors_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/contributors",
                        "subscribers_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/subscribers",
                        "subscription_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/subscription",
                        "commits_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/merges",
                        "archive_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/downloads",
                        "issues_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/labels{/name}",
                        "releases_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/deployments",
                        "created_at": "2021-02-24T17:23:52Z",
                        "updated_at": "2022-11-01T18:33:10Z",
                        "pushed_at": "2022-11-02T05:19:06Z",
                        "git_url": "git://github.com/bitsondatadev/trino-getting-started.git",
                        "ssh_url": "git@github.com:bitsondatadev/trino-getting-started.git",
                        "clone_url": "https://github.com/bitsondatadev/trino-getting-started.git",
                        "svn_url": "https://github.com/bitsondatadev/trino-getting-started",
                        "homepage": null,
                        "size": 21865,
                        "stargazers_count": 129,
                        "watchers_count": 129,
                        "language": "Python",
                        "has_issues": true,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "forks_count": 48,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 5,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 48,
                        "open_issues": 5,
                        "watchers": 129,
                        "default_branch": "main"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/bitsondatadev/trino-getting-started/pulls/10"
                    },
                    "html": {
                        "href": "https://github.com/bitsondatadev/trino-getting-started/pull/10"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/bitsondatadev/trino-getting-started/issues/10"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/bitsondatadev/trino-getting-started/issues/10/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/bitsondatadev/trino-getting-started/pulls/10/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/bitsondatadev/trino-getting-started/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/bitsondatadev/trino-getting-started/pulls/10/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/bitsondatadev/trino-getting-started/statuses/4de2e90a5209e8281f4c0186d552720d62d0f17c"
                    }
                },
                "author_association": "CONTRIBUTOR",
                "auto_merge": null,
                "active_lock_reason": null,
                "merged": false,
                "mergeable": null,
                "rebaseable": null,
                "mergeable_state": "unknown",
                "merged_by": null,
                "comments": 0,
                "review_comments": 0,
                "maintainer_can_modify": true,
                "commits": 1,
                "additions": 6,
                "deletions": 6,
                "changed_files": 1
            }
        },
        "public": true,
        "created_at": "2022-11-02T05:19:06Z"
    },
    {
        "id": "24973791100",
        "type": "CreateEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 506752547,
            "name": "metadaddy/trino-getting-started",
            "url": "https://api.github.com/repos/metadaddy/trino-getting-started"
        },
        "payload": {
            "ref": "readme-corrections",
            "ref_type": "branch",
            "master_branch": "main",
            "description": null,
            "pusher_type": "user"
        },
        "public": true,
        "created_at": "2022-11-02T05:18:05Z"
    },
    {
        "id": "24964939740",
        "type": "WatchEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 341978481,
            "name": "bitsondatadev/trino-getting-started",
            "url": "https://api.github.com/repos/bitsondatadev/trino-getting-started"
        },
        "payload": {
            "action": "started"
        },
        "public": true,
        "created_at": "2022-11-01T18:33:10Z"
    },
    {
        "id": "24964111403",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 166515022,
            "name": "trinodb/trino",
            "url": "https://api.github.com/repos/trinodb/trino"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/trinodb/trino/issues/6131",
                "repository_url": "https://api.github.com/repos/trinodb/trino",
                "labels_url": "https://api.github.com/repos/trinodb/trino/issues/6131/labels{/name}",
                "comments_url": "https://api.github.com/repos/trinodb/trino/issues/6131/comments",
                "events_url": "https://api.github.com/repos/trinodb/trino/issues/6131/events",
                "html_url": "https://github.com/trinodb/trino/pull/6131",
                "id": 752676545,
                "node_id": "MDExOlB1bGxSZXF1ZXN0NTI4OTQ4MTI5",
                "number": 6131,
                "title": "Support public S3 bucket access",
                "user": {
                    "login": "tooptoop4",
                    "id": 33283496,
                    "node_id": "MDQ6VXNlcjMzMjgzNDk2",
                    "avatar_url": "https://avatars.githubusercontent.com/u/33283496?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/tooptoop4",
                    "html_url": "https://github.com/tooptoop4",
                    "followers_url": "https://api.github.com/users/tooptoop4/followers",
                    "following_url": "https://api.github.com/users/tooptoop4/following{/other_user}",
                    "gists_url": "https://api.github.com/users/tooptoop4/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/tooptoop4/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/tooptoop4/subscriptions",
                    "organizations_url": "https://api.github.com/users/tooptoop4/orgs",
                    "repos_url": "https://api.github.com/users/tooptoop4/repos",
                    "events_url": "https://api.github.com/users/tooptoop4/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/tooptoop4/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 1202580151,
                        "node_id": "MDU6TGFiZWwxMjAyNTgwMTUx",
                        "url": "https://api.github.com/repos/trinodb/trino/labels/cla-signed",
                        "name": "cla-signed",
                        "color": "ededed",
                        "default": false,
                        "description": null
                    }
                ],
                "state": "closed",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 6,
                "created_at": "2020-11-28T13:27:44Z",
                "updated_at": "2022-11-01T17:53:30Z",
                "closed_at": "2022-10-21T06:29:58Z",
                "author_association": "CONTRIBUTOR",
                "active_lock_reason": null,
                "draft": false,
                "pull_request": {
                    "url": "https://api.github.com/repos/trinodb/trino/pulls/6131",
                    "html_url": "https://github.com/trinodb/trino/pull/6131",
                    "diff_url": "https://github.com/trinodb/trino/pull/6131.diff",
                    "patch_url": "https://github.com/trinodb/trino/pull/6131.patch",
                    "merged_at": null
                },
                "body": "Fixes https://github.com/prestosql/presto/issues/6127",
                "reactions": {
                    "url": "https://api.github.com/repos/trinodb/trino/issues/6131/reactions",
                    "total_count": 2,
                    "+1": 2,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/trinodb/trino/issues/6131/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/trinodb/trino/issues/comments/1298898008",
                "html_url": "https://github.com/trinodb/trino/pull/6131#issuecomment-1298898008",
                "issue_url": "https://api.github.com/repos/trinodb/trino/issues/6131",
                "id": 1298898008,
                "node_id": "IC_kwDOCezRTs5Na5xY",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2022-11-01T17:53:30Z",
                "updated_at": "2022-11-01T17:53:30Z",
                "author_association": "MEMBER",
                "body": "@mosabua From inspecting the code in the master branch, I can confidently say that this feature is not already available.",
                "reactions": {
                    "url": "https://api.github.com/repos/trinodb/trino/issues/comments/1298898008/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2022-11-01T17:53:30Z",
        "org": {
            "id": 34147222,
            "login": "trinodb",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/trinodb",
            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?"
        }
    },
    {
        "id": "24963884562",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 166515022,
            "name": "trinodb/trino",
            "url": "https://api.github.com/repos/trinodb/trino"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/trinodb/trino/issues/13095",
                "repository_url": "https://api.github.com/repos/trinodb/trino",
                "labels_url": "https://api.github.com/repos/trinodb/trino/issues/13095/labels{/name}",
                "comments_url": "https://api.github.com/repos/trinodb/trino/issues/13095/comments",
                "events_url": "https://api.github.com/repos/trinodb/trino/issues/13095/events",
                "html_url": "https://github.com/trinodb/trino/pull/13095",
                "id": 1295003432,
                "node_id": "PR_kwDOCezRTs465Hjk",
                "number": 13095,
                "title": "Use correct abbreviations for data quantities",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 1202580151,
                        "node_id": "MDU6TGFiZWwxMjAyNTgwMTUx",
                        "url": "https://api.github.com/repos/trinodb/trino/labels/cla-signed",
                        "name": "cla-signed",
                        "color": "ededed",
                        "default": false,
                        "description": null
                    }
                ],
                "state": "closed",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 8,
                "created_at": "2022-07-06T01:57:55Z",
                "updated_at": "2022-11-01T17:42:17Z",
                "closed_at": "2022-11-01T00:37:01Z",
                "author_association": "MEMBER",
                "active_lock_reason": null,
                "draft": false,
                "pull_request": {
                    "url": "https://api.github.com/repos/trinodb/trino/pulls/13095",
                    "html_url": "https://github.com/trinodb/trino/pull/13095",
                    "diff_url": "https://github.com/trinodb/trino/pull/13095.diff",
                    "patch_url": "https://github.com/trinodb/trino/pull/13095.patch",
                    "merged_at": null
                },
                "body": "## Description\r\n\r\nThe Trino CLI currently reports data size incorrectly, using the legacy, 1,024-based, values for K, M, G etc rather than the modern 1,000-based values.\r\n\r\n> Is this change a fix, improvement, new feature, refactoring, or other?\r\n\r\nFix\r\n\r\n> Is this a change to the core query engine, a connector, client library, or the SPI interfaces? (be specific)\r\n\r\nCLI\r\n\r\n> How would you describe this change to a non-technical end user or system administrator?\r\n\r\nThis change corrects the display of data sizes in the CLI to use 1,000-based units.\r\n\r\n## Related issues, pull requests, and links\r\n\r\n* Fixes #13054\r\n\r\n<!-- The following sections are filled in by the maintainer with input from the contributor:\r\nUse :white_check_mark: or (x) to signal selection.\r\n-->\r\n\r\n## Documentation\r\n\r\n( ) No documentation is needed.\r\n( ) Sufficient documentation is included in this PR.\r\n( ) Documentation PR is available with #prnumber.\r\n( ) Documentation issue #issuenumber is filed, and can be handled later.\r\n\r\n## Release notes\r\n\r\n( ) No release notes entries required.\r\n( ) Release notes entries required with the following suggested text:\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/trinodb/trino/issues/13095/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/trinodb/trino/issues/13095/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/trinodb/trino/issues/comments/1298885394",
                "html_url": "https://github.com/trinodb/trino/pull/13095#issuecomment-1298885394",
                "issue_url": "https://api.github.com/repos/trinodb/trino/issues/13095",
                "id": 1298885394,
                "node_id": "IC_kwDOCezRTs5Na2sS",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2022-11-01T17:42:17Z",
                "updated_at": "2022-11-01T17:42:17Z",
                "author_association": "MEMBER",
                "body": "Replaced by #14859",
                "reactions": {
                    "url": "https://api.github.com/repos/trinodb/trino/issues/comments/1298885394/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2022-11-01T17:42:18Z",
        "org": {
            "id": 34147222,
            "login": "trinodb",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/trinodb",
            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?"
        }
    },
    {
        "id": "24963869963",
        "type": "PullRequestEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 166515022,
            "name": "trinodb/trino",
            "url": "https://api.github.com/repos/trinodb/trino"
        },
        "payload": {
            "action": "opened",
            "number": 14859,
            "pull_request": {
                "url": "https://api.github.com/repos/trinodb/trino/pulls/14859",
                "id": 1107087304,
                "node_id": "PR_kwDOCezRTs5B_M_I",
                "html_url": "https://github.com/trinodb/trino/pull/14859",
                "diff_url": "https://github.com/trinodb/trino/pull/14859.diff",
                "patch_url": "https://github.com/trinodb/trino/pull/14859.patch",
                "issue_url": "https://api.github.com/repos/trinodb/trino/issues/14859",
                "number": 14859,
                "state": "open",
                "locked": false,
                "title": "Use correct abbreviations for data quantities. Fixes #13054",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "<!-- Thank you for submitting a pull request! Find more information in our development guide at https://github.com/trinodb/trino/blob/master/.github/DEVELOPMENT.md and contact us on #dev in Slack. -->\r\n<!-- Provide an overview of the PR for maintainers and reviewers. -->\r\n## Description\r\n\r\nThe Trino CLI currently reports data size incorrectly, using the legacy, 1,024-based, values for K, M, G etc rather than the modern 1,000-based values.\r\n\r\n> Is this change a fix, improvement, new feature, refactoring, or other?\r\n\r\nFix\r\n\r\n> Is this a change to the core query engine, a connector, client library, or the SPI interfaces? (be specific)\r\n\r\nCLI\r\n\r\n<!-- Provide a user-friendly explanation, keep it brief if it isn't user-visible. -->\r\n## Non-technical explanation\r\n\r\nThis change corrects the display of data sizes in the CLI to use 1,000-based units.\r\n\r\n\r\n<!-- Mark the appropriate option with an (x). Propose a release note if you can. -->\r\n## Release notes\r\n\r\n( ) This is not user-visible or docs only and no release notes are required.\r\n( ) Release notes are required, please propose a release note for me.\r\n( ) Release notes are required, with the following suggested text:\r\n\r\n## Related issues, pull requests, and links\r\n\r\n* Fixes #13054\r\n* Replaces #13095 ",
                "created_at": "2022-11-01T17:41:35Z",
                "updated_at": "2022-11-01T17:41:35Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": null,
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/trinodb/trino/pulls/14859/commits",
                "review_comments_url": "https://api.github.com/repos/trinodb/trino/pulls/14859/comments",
                "review_comment_url": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/trinodb/trino/issues/14859/comments",
                "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/3f602f00ac8f1e2dc2f365791b58e5b9db6f6693",
                "head": {
                    "label": "metadaddy:cli-wrong-units",
                    "ref": "cli-wrong-units",
                    "sha": "3f602f00ac8f1e2dc2f365791b58e5b9db6f6693",
                    "user": {
                        "login": "metadaddy",
                        "id": 723517,
                        "node_id": "MDQ6VXNlcjcyMzUxNw==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/metadaddy",
                        "html_url": "https://github.com/metadaddy",
                        "followers_url": "https://api.github.com/users/metadaddy/followers",
                        "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                        "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                        "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                        "repos_url": "https://api.github.com/users/metadaddy/repos",
                        "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 509274784,
                        "node_id": "R_kgDOHlrqoA",
                        "name": "trino",
                        "full_name": "metadaddy/trino",
                        "private": false,
                        "owner": {
                            "login": "metadaddy",
                            "id": 723517,
                            "node_id": "MDQ6VXNlcjcyMzUxNw==",
                            "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/metadaddy",
                            "html_url": "https://github.com/metadaddy",
                            "followers_url": "https://api.github.com/users/metadaddy/followers",
                            "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                            "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                            "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                            "repos_url": "https://api.github.com/users/metadaddy/repos",
                            "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/metadaddy/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": true,
                        "url": "https://api.github.com/repos/metadaddy/trino",
                        "forks_url": "https://api.github.com/repos/metadaddy/trino/forks",
                        "keys_url": "https://api.github.com/repos/metadaddy/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/metadaddy/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/metadaddy/trino/teams",
                        "hooks_url": "https://api.github.com/repos/metadaddy/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/metadaddy/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/metadaddy/trino/events",
                        "assignees_url": "https://api.github.com/repos/metadaddy/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/metadaddy/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/metadaddy/trino/tags",
                        "blobs_url": "https://api.github.com/repos/metadaddy/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/metadaddy/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/metadaddy/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/metadaddy/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/metadaddy/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/metadaddy/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/metadaddy/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/metadaddy/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/metadaddy/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/metadaddy/trino/subscription",
                        "commits_url": "https://api.github.com/repos/metadaddy/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/metadaddy/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/metadaddy/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/metadaddy/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/metadaddy/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/metadaddy/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/metadaddy/trino/merges",
                        "archive_url": "https://api.github.com/repos/metadaddy/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/metadaddy/trino/downloads",
                        "issues_url": "https://api.github.com/repos/metadaddy/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/metadaddy/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/metadaddy/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/metadaddy/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/metadaddy/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/metadaddy/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/metadaddy/trino/deployments",
                        "created_at": "2022-07-01T00:43:32Z",
                        "updated_at": "2022-07-06T01:44:20Z",
                        "pushed_at": "2022-11-01T17:34:20Z",
                        "git_url": "git://github.com/metadaddy/trino.git",
                        "ssh_url": "git@github.com:metadaddy/trino.git",
                        "clone_url": "https://github.com/metadaddy/trino.git",
                        "svn_url": "https://github.com/metadaddy/trino",
                        "homepage": "https://trino.io",
                        "size": 179161,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": "Java",
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "master"
                    }
                },
                "base": {
                    "label": "trinodb:master",
                    "ref": "master",
                    "sha": "a1e87ba3de9e55cc2aec9590836142e0cac932bd",
                    "user": {
                        "login": "trinodb",
                        "id": 34147222,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                        "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/trinodb",
                        "html_url": "https://github.com/trinodb",
                        "followers_url": "https://api.github.com/users/trinodb/followers",
                        "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                        "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                        "organizations_url": "https://api.github.com/users/trinodb/orgs",
                        "repos_url": "https://api.github.com/users/trinodb/repos",
                        "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/trinodb/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 166515022,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNjY1MTUwMjI=",
                        "name": "trino",
                        "full_name": "trinodb/trino",
                        "private": false,
                        "owner": {
                            "login": "trinodb",
                            "id": 34147222,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/trinodb",
                            "html_url": "https://github.com/trinodb",
                            "followers_url": "https://api.github.com/users/trinodb/followers",
                            "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                            "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                            "organizations_url": "https://api.github.com/users/trinodb/orgs",
                            "repos_url": "https://api.github.com/users/trinodb/repos",
                            "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/trinodb/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/trinodb/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": false,
                        "url": "https://api.github.com/repos/trinodb/trino",
                        "forks_url": "https://api.github.com/repos/trinodb/trino/forks",
                        "keys_url": "https://api.github.com/repos/trinodb/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/trinodb/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/trinodb/trino/teams",
                        "hooks_url": "https://api.github.com/repos/trinodb/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/trinodb/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/trinodb/trino/events",
                        "assignees_url": "https://api.github.com/repos/trinodb/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/trinodb/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/trinodb/trino/tags",
                        "blobs_url": "https://api.github.com/repos/trinodb/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/trinodb/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/trinodb/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/trinodb/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/trinodb/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/trinodb/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/trinodb/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/trinodb/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/trinodb/trino/subscription",
                        "commits_url": "https://api.github.com/repos/trinodb/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/trinodb/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/trinodb/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/trinodb/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/trinodb/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/trinodb/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/trinodb/trino/merges",
                        "archive_url": "https://api.github.com/repos/trinodb/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/trinodb/trino/downloads",
                        "issues_url": "https://api.github.com/repos/trinodb/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/trinodb/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/trinodb/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/trinodb/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/trinodb/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/trinodb/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/trinodb/trino/deployments",
                        "created_at": "2019-01-19T06:38:14Z",
                        "updated_at": "2022-11-01T16:53:32Z",
                        "pushed_at": "2022-11-01T17:41:35Z",
                        "git_url": "git://github.com/trinodb/trino.git",
                        "ssh_url": "git@github.com:trinodb/trino.git",
                        "clone_url": "https://github.com/trinodb/trino.git",
                        "svn_url": "https://github.com/trinodb/trino",
                        "homepage": "https://trino.io",
                        "size": 179133,
                        "stargazers_count": 6435,
                        "watchers_count": 6435,
                        "language": "Java",
                        "has_issues": true,
                        "has_projects": false,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "forks_count": 2020,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 2205,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "analytics",
                            "big-data",
                            "data-science",
                            "database",
                            "databases",
                            "datalake",
                            "distributed-database",
                            "distributed-databases",
                            "distributed-systems",
                            "hadoop",
                            "hive",
                            "java",
                            "jdbc",
                            "presto",
                            "prestodb",
                            "query-engine",
                            "sql",
                            "trino"
                        ],
                        "visibility": "public",
                        "forks": 2020,
                        "open_issues": 2205,
                        "watchers": 6435,
                        "default_branch": "master"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/14859"
                    },
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/14859"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/14859"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/14859/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/14859/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/14859/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/trinodb/trino/statuses/3f602f00ac8f1e2dc2f365791b58e5b9db6f6693"
                    }
                },
                "author_association": "MEMBER",
                "auto_merge": null,
                "active_lock_reason": null,
                "merged": false,
                "mergeable": null,
                "rebaseable": null,
                "mergeable_state": "unknown",
                "merged_by": null,
                "comments": 0,
                "review_comments": 0,
                "maintainer_can_modify": true,
                "commits": 1,
                "additions": 364,
                "deletions": 10,
                "changed_files": 2
            }
        },
        "public": true,
        "created_at": "2022-11-01T17:41:35Z",
        "org": {
            "id": 34147222,
            "login": "trinodb",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/trinodb",
            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?"
        }
    },
    {
        "id": "24963725482",
        "type": "PushEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 509274784,
            "name": "metadaddy/trino",
            "url": "https://api.github.com/repos/metadaddy/trino"
        },
        "payload": {
            "push_id": 11519836897,
            "size": 1000,
            "distinct_size": 1,
            "ref": "refs/heads/cli-wrong-units",
            "head": "3f602f00ac8f1e2dc2f365791b58e5b9db6f6693",
            "before": "0b7a691461216fa9c06dfaf63899574f4a0e7a22",
            "commits": [
                {
                    "sha": "624fedb3cf139f76f9f2e1d773773f75afa01fe1",
                    "author": {
                        "email": "andriyrosa@gmail.com",
                        "name": "Andrii Rosa"
                    },
                    "message": "Change randomized prefix to contain only hex characters\n\nSome storage systems prefer the prefix to be hexadecimal characters",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/624fedb3cf139f76f9f2e1d773773f75afa01fe1"
                },
                {
                    "sha": "d4288f6fffca2bf850bd1c8c50ff2f6416694b29",
                    "author": {
                        "email": "ashhar.hasan@starburstdata.com",
                        "name": "Ashhar Hasan"
                    },
                    "message": "Disallow table creation in BigQuery with query retries enabled\n\nBigQuery connector doesn't support fault tolerant execution yet.",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/d4288f6fffca2bf850bd1c8c50ff2f6416694b29"
                },
                {
                    "sha": "42f3b8a3bf158352b11ec34dc14be8dbd5ea5ad4",
                    "author": {
                        "email": "ashhar.hasan@starburstdata.com",
                        "name": "Ashhar Hasan"
                    },
                    "message": "Add test to verify CREATE SCHEMA with case-insensitive matching",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/42f3b8a3bf158352b11ec34dc14be8dbd5ea5ad4"
                },
                {
                    "sha": "8fea27c974e5078e8d1105fdb56a2dd417f7750b",
                    "author": {
                        "email": "surpass.simple@gmail.com",
                        "name": "tangjiangling"
                    },
                    "message": "Rename variables for readability\n\nNow this variable only holds the result of the low bound comparison, so\nit could be renamed.",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/8fea27c974e5078e8d1105fdb56a2dd417f7750b"
                },
                {
                    "sha": "1e61a7ce05ce21f9f54f18cf8ba8e38187e38d67",
                    "author": {
                        "email": "mateusz.gajewski@gmail.com",
                        "name": "Mateusz Gajewski"
                    },
                    "message": "Squash Phoenix environment extender into EnvMultinodePhoenix5",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/1e61a7ce05ce21f9f54f18cf8ba8e38187e38d67"
                },
                {
                    "sha": "9ce301813e2de8bc3137e2664fb6b54112f34c3f",
                    "author": {
                        "email": "ebyhry@gmail.com",
                        "name": "Yuya Ebihara"
                    },
                    "message": "Add main method to S3HiveQueryRunner",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/9ce301813e2de8bc3137e2664fb6b54112f34c3f"
                },
                {
                    "sha": "19c2bc45aaa4e5eb90c33c910628cbf09da2b093",
                    "author": {
                        "email": "andriyrosa@gmail.com",
                        "name": "Andrii Rosa"
                    },
                    "message": "Remove unused method in StageTaskSourceFactory",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/19c2bc45aaa4e5eb90c33c910628cbf09da2b093"
                },
                {
                    "sha": "d9402bc77994d858672313b68cacac623d8f3c14",
                    "author": {
                        "email": "andriyrosa@gmail.com",
                        "name": "Andrii Rosa"
                    },
                    "message": "Support coordinator task scheduling in fault tolerant scheduler",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/d9402bc77994d858672313b68cacac623d8f3c14"
                },
                {
                    "sha": "170faf53cd1c6a1a39118ae6d9475f21926b3885",
                    "author": {
                        "email": "andriyrosa@gmail.com",
                        "name": "Andrii Rosa"
                    },
                    "message": "Fix FaultTolerantStageScheduler#isFinished\n\nWait for split enumeration feature to finish before returning true from isFinished",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/170faf53cd1c6a1a39118ae6d9475f21926b3885"
                },
                {
                    "sha": "a183959a962b8c9b012547afc02d566a10cf2591",
                    "author": {
                        "email": "andriyrosa@gmail.com",
                        "name": "Andrii Rosa"
                    },
                    "message": "Transition stage to FINISHED state early\n\nIn FTE a stage is transtitioned to FINISHED only after query completion.\nThis was needed to allow certain tasks to be rescheduled to reconstruct\nlost data (due to unreliable exchange). This mechanism has never been\nutilized and likely will never be as currently the solution is built\nunder assumption that exchange is reliable.",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/a183959a962b8c9b012547afc02d566a10cf2591"
                },
                {
                    "sha": "43d61ab04bef3cbc844193d1f8cc616778fc1cc1",
                    "author": {
                        "email": "andriyrosa@gmail.com",
                        "name": "Andrii Rosa"
                    },
                    "message": "Abort / cancel tasks only once",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/43d61ab04bef3cbc844193d1f8cc616778fc1cc1"
                },
                {
                    "sha": "c9e27f895fb78fab06b9aeb422ed56cb37b79858",
                    "author": {
                        "email": "andriyrosa@gmail.com",
                        "name": "Andrii Rosa"
                    },
                    "message": "Remove FaultTolerantStageSchedule#reportTaskFailure\n\nWith only spooling exchange being used in fault tolerant execution\nthere's no need to report task failures from coordinator what was only\nneeded with direct exchange",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/c9e27f895fb78fab06b9aeb422ed56cb37b79858"
                },
                {
                    "sha": "26ba659305d698eafb5b1d6f5a98a49f27d480f8",
                    "author": {
                        "email": "andriyrosa@gmail.com",
                        "name": "Andrii Rosa"
                    },
                    "message": "Fail tasks directly through SqlStage\n\nTo avoid unnecessary indirections",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/26ba659305d698eafb5b1d6f5a98a49f27d480f8"
                },
                {
                    "sha": "5f685f5cc0fb27fc1cf50dfe2e4b6c2b479b0833",
                    "author": {
                        "email": "andriyrosa@gmail.com",
                        "name": "Andrii Rosa"
                    },
                    "message": "Extract StageManager into a standalone class",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/5f685f5cc0fb27fc1cf50dfe2e4b6c2b479b0833"
                },
                {
                    "sha": "7990d40ea28f548aefde10d1eed147dfe741b84f",
                    "author": {
                        "email": "andriyrosa@gmail.com",
                        "name": "Andrii Rosa"
                    },
                    "message": "Refactor StageManager\n\nDo not pass session separately as it can be obtained through\nQueryStateMachine",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/7990d40ea28f548aefde10d1eed147dfe741b84f"
                },
                {
                    "sha": "d0b0994531c8ebd2c38a88592400410f1dc31d17",
                    "author": {
                        "email": "andriyrosa@gmail.com",
                        "name": "Andrii Rosa"
                    },
                    "message": "Separate fault tolerant and pipelined scheduler implementations",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/d0b0994531c8ebd2c38a88592400410f1dc31d17"
                },
                {
                    "sha": "a977d88b051e6616d1fd9c355362627383abec29",
                    "author": {
                        "email": "lukasz@osipiuk.net",
                        "name": "\u0141ukasz Osipiuk"
                    },
                    "message": "Change data ownership contract in call of ExchangeSink.add\n\nAfter the change the contract changes in a way that ownership of data\npassed as an argument is passed from caller to callee.\nApart from usage in DeduplicatingDirectExchangeBuffer the Slices passed\nas to ExchangeSink.add were single-use and not mutataded/reclaimed\nafterwards.\n\nThe semantics change allows for simplere and more effective\nimplementations of ExchangeSinks as no extra data copying is enforced.",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/a977d88b051e6616d1fd9c355362627383abec29"
                },
                {
                    "sha": "f7ad25addca4aad78acda38bc947523c3a7f88d6",
                    "author": {
                        "email": "ebyhry@gmail.com",
                        "name": "Yuya Ebihara"
                    },
                    "message": "Check error code for RENAME COLUMN failure in MariaDB\n\nSQLSyntaxErrorException contains invalid column name.",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/f7ad25addca4aad78acda38bc947523c3a7f88d6"
                },
                {
                    "sha": "0547b321937befa4ed95ea2b065dd16ec4bbecf9",
                    "author": {
                        "email": "ebyhry@gmail.com",
                        "name": "Yuya Ebihara"
                    },
                    "message": "Set SUPPORTS_RENAME_COLUMN as false in unsupported connectors\n\ntestRenameColumn was skipped by SUPPORTS_CREATE_TABLE\ncondition.",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/0547b321937befa4ed95ea2b065dd16ec4bbecf9"
                },
                {
                    "sha": "d9aa5b328345218916deba29aad5274d98ce577a",
                    "author": {
                        "email": "ebyhry@gmail.com",
                        "name": "Yuya Ebihara"
                    },
                    "message": "Add renameColumnSql method to JDBC connectors",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/d9aa5b328345218916deba29aad5274d98ce577a"
                }
            ]
        },
        "public": true,
        "created_at": "2022-11-01T17:34:23Z"
    },
    {
        "id": "24963592773",
        "type": "CreateEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 509274784,
            "name": "metadaddy/trino",
            "url": "https://api.github.com/repos/metadaddy/trino"
        },
        "payload": {
            "ref": "cli-wrong-units",
            "ref_type": "branch",
            "master_branch": "master",
            "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
            "pusher_type": "user"
        },
        "public": true,
        "created_at": "2022-11-01T17:28:08Z"
    },
    {
        "id": "24963511754",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 166515022,
            "name": "trinodb/trino",
            "url": "https://api.github.com/repos/trinodb/trino"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/trinodb/trino/issues/13095",
                "repository_url": "https://api.github.com/repos/trinodb/trino",
                "labels_url": "https://api.github.com/repos/trinodb/trino/issues/13095/labels{/name}",
                "comments_url": "https://api.github.com/repos/trinodb/trino/issues/13095/comments",
                "events_url": "https://api.github.com/repos/trinodb/trino/issues/13095/events",
                "html_url": "https://github.com/trinodb/trino/pull/13095",
                "id": 1295003432,
                "node_id": "PR_kwDOCezRTs465Hjk",
                "number": 13095,
                "title": "Use correct abbreviations for data quantities",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 1202580151,
                        "node_id": "MDU6TGFiZWwxMjAyNTgwMTUx",
                        "url": "https://api.github.com/repos/trinodb/trino/labels/cla-signed",
                        "name": "cla-signed",
                        "color": "ededed",
                        "default": false,
                        "description": null
                    }
                ],
                "state": "closed",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 7,
                "created_at": "2022-07-06T01:57:55Z",
                "updated_at": "2022-11-01T17:24:09Z",
                "closed_at": "2022-11-01T00:37:01Z",
                "author_association": "MEMBER",
                "active_lock_reason": null,
                "draft": false,
                "pull_request": {
                    "url": "https://api.github.com/repos/trinodb/trino/pulls/13095",
                    "html_url": "https://github.com/trinodb/trino/pull/13095",
                    "diff_url": "https://github.com/trinodb/trino/pull/13095.diff",
                    "patch_url": "https://github.com/trinodb/trino/pull/13095.patch",
                    "merged_at": null
                },
                "body": "## Description\r\n\r\nThe Trino CLI currently reports data size incorrectly, using the legacy, 1,024-based, values for K, M, G etc rather than the modern 1,000-based values.\r\n\r\n> Is this change a fix, improvement, new feature, refactoring, or other?\r\n\r\nFix\r\n\r\n> Is this a change to the core query engine, a connector, client library, or the SPI interfaces? (be specific)\r\n\r\nCLI\r\n\r\n> How would you describe this change to a non-technical end user or system administrator?\r\n\r\nThis change corrects the display of data sizes in the CLI to use 1,000-based units.\r\n\r\n## Related issues, pull requests, and links\r\n\r\n* Fixes #13054\r\n\r\n<!-- The following sections are filled in by the maintainer with input from the contributor:\r\nUse :white_check_mark: or (x) to signal selection.\r\n-->\r\n\r\n## Documentation\r\n\r\n( ) No documentation is needed.\r\n( ) Sufficient documentation is included in this PR.\r\n( ) Documentation PR is available with #prnumber.\r\n( ) Documentation issue #issuenumber is filed, and can be handled later.\r\n\r\n## Release notes\r\n\r\n( ) No release notes entries required.\r\n( ) Release notes entries required with the following suggested text:\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/trinodb/trino/issues/13095/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/trinodb/trino/issues/13095/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/trinodb/trino/issues/comments/1298864456",
                "html_url": "https://github.com/trinodb/trino/pull/13095#issuecomment-1298864456",
                "issue_url": "https://api.github.com/repos/trinodb/trino/issues/13095",
                "id": 1298864456,
                "node_id": "IC_kwDOCezRTs5NaxlI",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2022-11-01T17:24:09Z",
                "updated_at": "2022-11-01T17:24:09Z",
                "author_association": "MEMBER",
                "body": "Oops - I submitted this PR from my master branch, then I needed to sync back for another change. I'll submit another PR with a different branch and reference this one.",
                "reactions": {
                    "url": "https://api.github.com/repos/trinodb/trino/issues/comments/1298864456/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2022-11-01T17:24:10Z",
        "org": {
            "id": 34147222,
            "login": "trinodb",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/trinodb",
            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?"
        }
    },
    {
        "id": "24946246970",
        "type": "PushEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 509274784,
            "name": "metadaddy/trino",
            "url": "https://api.github.com/repos/metadaddy/trino"
        },
        "payload": {
            "push_id": 11511040508,
            "size": 1000,
            "distinct_size": 1610,
            "ref": "refs/heads/master",
            "head": "62349751f1c337bee4b93c290cbd1ae563d75a3b",
            "before": "6cb319916328184a673d3ca9eb204cc5181c9f25",
            "commits": [
                {
                    "sha": "a6a0b6b172e255cfb9ed1254e726a61a14e20d25",
                    "author": {
                        "email": "jan.was@starburstdata.com",
                        "name": "Jan Wa\u015b"
                    },
                    "message": "Add comment explaining why CI cleans local Maven repo",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/a6a0b6b172e255cfb9ed1254e726a61a14e20d25"
                },
                {
                    "sha": "624fedb3cf139f76f9f2e1d773773f75afa01fe1",
                    "author": {
                        "email": "andriyrosa@gmail.com",
                        "name": "Andrii Rosa"
                    },
                    "message": "Change randomized prefix to contain only hex characters\n\nSome storage systems prefer the prefix to be hexadecimal characters",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/624fedb3cf139f76f9f2e1d773773f75afa01fe1"
                },
                {
                    "sha": "d4288f6fffca2bf850bd1c8c50ff2f6416694b29",
                    "author": {
                        "email": "ashhar.hasan@starburstdata.com",
                        "name": "Ashhar Hasan"
                    },
                    "message": "Disallow table creation in BigQuery with query retries enabled\n\nBigQuery connector doesn't support fault tolerant execution yet.",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/d4288f6fffca2bf850bd1c8c50ff2f6416694b29"
                },
                {
                    "sha": "42f3b8a3bf158352b11ec34dc14be8dbd5ea5ad4",
                    "author": {
                        "email": "ashhar.hasan@starburstdata.com",
                        "name": "Ashhar Hasan"
                    },
                    "message": "Add test to verify CREATE SCHEMA with case-insensitive matching",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/42f3b8a3bf158352b11ec34dc14be8dbd5ea5ad4"
                },
                {
                    "sha": "8fea27c974e5078e8d1105fdb56a2dd417f7750b",
                    "author": {
                        "email": "surpass.simple@gmail.com",
                        "name": "tangjiangling"
                    },
                    "message": "Rename variables for readability\n\nNow this variable only holds the result of the low bound comparison, so\nit could be renamed.",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/8fea27c974e5078e8d1105fdb56a2dd417f7750b"
                },
                {
                    "sha": "1e61a7ce05ce21f9f54f18cf8ba8e38187e38d67",
                    "author": {
                        "email": "mateusz.gajewski@gmail.com",
                        "name": "Mateusz Gajewski"
                    },
                    "message": "Squash Phoenix environment extender into EnvMultinodePhoenix5",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/1e61a7ce05ce21f9f54f18cf8ba8e38187e38d67"
                },
                {
                    "sha": "9ce301813e2de8bc3137e2664fb6b54112f34c3f",
                    "author": {
                        "email": "ebyhry@gmail.com",
                        "name": "Yuya Ebihara"
                    },
                    "message": "Add main method to S3HiveQueryRunner",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/9ce301813e2de8bc3137e2664fb6b54112f34c3f"
                },
                {
                    "sha": "19c2bc45aaa4e5eb90c33c910628cbf09da2b093",
                    "author": {
                        "email": "andriyrosa@gmail.com",
                        "name": "Andrii Rosa"
                    },
                    "message": "Remove unused method in StageTaskSourceFactory",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/19c2bc45aaa4e5eb90c33c910628cbf09da2b093"
                },
                {
                    "sha": "d9402bc77994d858672313b68cacac623d8f3c14",
                    "author": {
                        "email": "andriyrosa@gmail.com",
                        "name": "Andrii Rosa"
                    },
                    "message": "Support coordinator task scheduling in fault tolerant scheduler",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/d9402bc77994d858672313b68cacac623d8f3c14"
                },
                {
                    "sha": "170faf53cd1c6a1a39118ae6d9475f21926b3885",
                    "author": {
                        "email": "andriyrosa@gmail.com",
                        "name": "Andrii Rosa"
                    },
                    "message": "Fix FaultTolerantStageScheduler#isFinished\n\nWait for split enumeration feature to finish before returning true from isFinished",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/170faf53cd1c6a1a39118ae6d9475f21926b3885"
                },
                {
                    "sha": "a183959a962b8c9b012547afc02d566a10cf2591",
                    "author": {
                        "email": "andriyrosa@gmail.com",
                        "name": "Andrii Rosa"
                    },
                    "message": "Transition stage to FINISHED state early\n\nIn FTE a stage is transtitioned to FINISHED only after query completion.\nThis was needed to allow certain tasks to be rescheduled to reconstruct\nlost data (due to unreliable exchange). This mechanism has never been\nutilized and likely will never be as currently the solution is built\nunder assumption that exchange is reliable.",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/a183959a962b8c9b012547afc02d566a10cf2591"
                },
                {
                    "sha": "43d61ab04bef3cbc844193d1f8cc616778fc1cc1",
                    "author": {
                        "email": "andriyrosa@gmail.com",
                        "name": "Andrii Rosa"
                    },
                    "message": "Abort / cancel tasks only once",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/43d61ab04bef3cbc844193d1f8cc616778fc1cc1"
                },
                {
                    "sha": "c9e27f895fb78fab06b9aeb422ed56cb37b79858",
                    "author": {
                        "email": "andriyrosa@gmail.com",
                        "name": "Andrii Rosa"
                    },
                    "message": "Remove FaultTolerantStageSchedule#reportTaskFailure\n\nWith only spooling exchange being used in fault tolerant execution\nthere's no need to report task failures from coordinator what was only\nneeded with direct exchange",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/c9e27f895fb78fab06b9aeb422ed56cb37b79858"
                },
                {
                    "sha": "26ba659305d698eafb5b1d6f5a98a49f27d480f8",
                    "author": {
                        "email": "andriyrosa@gmail.com",
                        "name": "Andrii Rosa"
                    },
                    "message": "Fail tasks directly through SqlStage\n\nTo avoid unnecessary indirections",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/26ba659305d698eafb5b1d6f5a98a49f27d480f8"
                },
                {
                    "sha": "5f685f5cc0fb27fc1cf50dfe2e4b6c2b479b0833",
                    "author": {
                        "email": "andriyrosa@gmail.com",
                        "name": "Andrii Rosa"
                    },
                    "message": "Extract StageManager into a standalone class",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/5f685f5cc0fb27fc1cf50dfe2e4b6c2b479b0833"
                },
                {
                    "sha": "7990d40ea28f548aefde10d1eed147dfe741b84f",
                    "author": {
                        "email": "andriyrosa@gmail.com",
                        "name": "Andrii Rosa"
                    },
                    "message": "Refactor StageManager\n\nDo not pass session separately as it can be obtained through\nQueryStateMachine",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/7990d40ea28f548aefde10d1eed147dfe741b84f"
                },
                {
                    "sha": "d0b0994531c8ebd2c38a88592400410f1dc31d17",
                    "author": {
                        "email": "andriyrosa@gmail.com",
                        "name": "Andrii Rosa"
                    },
                    "message": "Separate fault tolerant and pipelined scheduler implementations",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/d0b0994531c8ebd2c38a88592400410f1dc31d17"
                },
                {
                    "sha": "a977d88b051e6616d1fd9c355362627383abec29",
                    "author": {
                        "email": "lukasz@osipiuk.net",
                        "name": "\u0141ukasz Osipiuk"
                    },
                    "message": "Change data ownership contract in call of ExchangeSink.add\n\nAfter the change the contract changes in a way that ownership of data\npassed as an argument is passed from caller to callee.\nApart from usage in DeduplicatingDirectExchangeBuffer the Slices passed\nas to ExchangeSink.add were single-use and not mutataded/reclaimed\nafterwards.\n\nThe semantics change allows for simplere and more effective\nimplementations of ExchangeSinks as no extra data copying is enforced.",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/a977d88b051e6616d1fd9c355362627383abec29"
                },
                {
                    "sha": "f7ad25addca4aad78acda38bc947523c3a7f88d6",
                    "author": {
                        "email": "ebyhry@gmail.com",
                        "name": "Yuya Ebihara"
                    },
                    "message": "Check error code for RENAME COLUMN failure in MariaDB\n\nSQLSyntaxErrorException contains invalid column name.",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/f7ad25addca4aad78acda38bc947523c3a7f88d6"
                },
                {
                    "sha": "0547b321937befa4ed95ea2b065dd16ec4bbecf9",
                    "author": {
                        "email": "ebyhry@gmail.com",
                        "name": "Yuya Ebihara"
                    },
                    "message": "Set SUPPORTS_RENAME_COLUMN as false in unsupported connectors\n\ntestRenameColumn was skipped by SUPPORTS_CREATE_TABLE\ncondition.",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/0547b321937befa4ed95ea2b065dd16ec4bbecf9"
                }
            ]
        },
        "public": true,
        "created_at": "2022-11-01T00:37:18Z"
    },
    {
        "id": "24946244232",
        "type": "PullRequestEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 166515022,
            "name": "trinodb/trino",
            "url": "https://api.github.com/repos/trinodb/trino"
        },
        "payload": {
            "action": "closed",
            "number": 13095,
            "pull_request": {
                "url": "https://api.github.com/repos/trinodb/trino/pulls/13095",
                "id": 988051684,
                "node_id": "PR_kwDOCezRTs465Hjk",
                "html_url": "https://github.com/trinodb/trino/pull/13095",
                "diff_url": "https://github.com/trinodb/trino/pull/13095.diff",
                "patch_url": "https://github.com/trinodb/trino/pull/13095.patch",
                "issue_url": "https://api.github.com/repos/trinodb/trino/issues/13095",
                "number": 13095,
                "state": "closed",
                "locked": false,
                "title": "Use correct abbreviations for data quantities",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "## Description\r\n\r\nThe Trino CLI currently reports data size incorrectly, using the legacy, 1,024-based, values for K, M, G etc rather than the modern 1,000-based values.\r\n\r\n> Is this change a fix, improvement, new feature, refactoring, or other?\r\n\r\nFix\r\n\r\n> Is this a change to the core query engine, a connector, client library, or the SPI interfaces? (be specific)\r\n\r\nCLI\r\n\r\n> How would you describe this change to a non-technical end user or system administrator?\r\n\r\nThis change corrects the display of data sizes in the CLI to use 1,000-based units.\r\n\r\n## Related issues, pull requests, and links\r\n\r\n* Fixes #13054\r\n\r\n<!-- The following sections are filled in by the maintainer with input from the contributor:\r\nUse :white_check_mark: or (x) to signal selection.\r\n-->\r\n\r\n## Documentation\r\n\r\n( ) No documentation is needed.\r\n( ) Sufficient documentation is included in this PR.\r\n( ) Documentation PR is available with #prnumber.\r\n( ) Documentation issue #issuenumber is filed, and can be handled later.\r\n\r\n## Release notes\r\n\r\n( ) No release notes entries required.\r\n( ) Release notes entries required with the following suggested text:\r\n",
                "created_at": "2022-07-06T01:57:55Z",
                "updated_at": "2022-11-01T00:37:02Z",
                "closed_at": "2022-11-01T00:37:01Z",
                "merged_at": null,
                "merge_commit_sha": "332a51ddc6060cc9b7aa06ee2b8102bc3e6bcdb2",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/trinodb/trino/pulls/13095/commits",
                "review_comments_url": "https://api.github.com/repos/trinodb/trino/pulls/13095/comments",
                "review_comment_url": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/trinodb/trino/issues/13095/comments",
                "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/6cb319916328184a673d3ca9eb204cc5181c9f25",
                "head": {
                    "label": "metadaddy:master",
                    "ref": "master",
                    "sha": "6cb319916328184a673d3ca9eb204cc5181c9f25",
                    "user": {
                        "login": "metadaddy",
                        "id": 723517,
                        "node_id": "MDQ6VXNlcjcyMzUxNw==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/metadaddy",
                        "html_url": "https://github.com/metadaddy",
                        "followers_url": "https://api.github.com/users/metadaddy/followers",
                        "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                        "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                        "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                        "repos_url": "https://api.github.com/users/metadaddy/repos",
                        "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 509274784,
                        "node_id": "R_kgDOHlrqoA",
                        "name": "trino",
                        "full_name": "metadaddy/trino",
                        "private": false,
                        "owner": {
                            "login": "metadaddy",
                            "id": 723517,
                            "node_id": "MDQ6VXNlcjcyMzUxNw==",
                            "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/metadaddy",
                            "html_url": "https://github.com/metadaddy",
                            "followers_url": "https://api.github.com/users/metadaddy/followers",
                            "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                            "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                            "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                            "repos_url": "https://api.github.com/users/metadaddy/repos",
                            "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/metadaddy/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": true,
                        "url": "https://api.github.com/repos/metadaddy/trino",
                        "forks_url": "https://api.github.com/repos/metadaddy/trino/forks",
                        "keys_url": "https://api.github.com/repos/metadaddy/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/metadaddy/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/metadaddy/trino/teams",
                        "hooks_url": "https://api.github.com/repos/metadaddy/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/metadaddy/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/metadaddy/trino/events",
                        "assignees_url": "https://api.github.com/repos/metadaddy/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/metadaddy/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/metadaddy/trino/tags",
                        "blobs_url": "https://api.github.com/repos/metadaddy/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/metadaddy/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/metadaddy/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/metadaddy/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/metadaddy/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/metadaddy/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/metadaddy/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/metadaddy/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/metadaddy/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/metadaddy/trino/subscription",
                        "commits_url": "https://api.github.com/repos/metadaddy/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/metadaddy/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/metadaddy/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/metadaddy/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/metadaddy/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/metadaddy/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/metadaddy/trino/merges",
                        "archive_url": "https://api.github.com/repos/metadaddy/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/metadaddy/trino/downloads",
                        "issues_url": "https://api.github.com/repos/metadaddy/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/metadaddy/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/metadaddy/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/metadaddy/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/metadaddy/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/metadaddy/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/metadaddy/trino/deployments",
                        "created_at": "2022-07-01T00:43:32Z",
                        "updated_at": "2022-07-06T01:44:20Z",
                        "pushed_at": "2022-11-01T00:36:59Z",
                        "git_url": "git://github.com/metadaddy/trino.git",
                        "ssh_url": "git@github.com:metadaddy/trino.git",
                        "clone_url": "https://github.com/metadaddy/trino.git",
                        "svn_url": "https://github.com/metadaddy/trino",
                        "homepage": "https://trino.io",
                        "size": 159789,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": "Java",
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "master"
                    }
                },
                "base": {
                    "label": "trinodb:master",
                    "ref": "master",
                    "sha": "62349751f1c337bee4b93c290cbd1ae563d75a3b",
                    "user": {
                        "login": "trinodb",
                        "id": 34147222,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                        "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/trinodb",
                        "html_url": "https://github.com/trinodb",
                        "followers_url": "https://api.github.com/users/trinodb/followers",
                        "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                        "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                        "organizations_url": "https://api.github.com/users/trinodb/orgs",
                        "repos_url": "https://api.github.com/users/trinodb/repos",
                        "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/trinodb/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 166515022,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNjY1MTUwMjI=",
                        "name": "trino",
                        "full_name": "trinodb/trino",
                        "private": false,
                        "owner": {
                            "login": "trinodb",
                            "id": 34147222,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/trinodb",
                            "html_url": "https://github.com/trinodb",
                            "followers_url": "https://api.github.com/users/trinodb/followers",
                            "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                            "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                            "organizations_url": "https://api.github.com/users/trinodb/orgs",
                            "repos_url": "https://api.github.com/users/trinodb/repos",
                            "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/trinodb/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/trinodb/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": false,
                        "url": "https://api.github.com/repos/trinodb/trino",
                        "forks_url": "https://api.github.com/repos/trinodb/trino/forks",
                        "keys_url": "https://api.github.com/repos/trinodb/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/trinodb/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/trinodb/trino/teams",
                        "hooks_url": "https://api.github.com/repos/trinodb/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/trinodb/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/trinodb/trino/events",
                        "assignees_url": "https://api.github.com/repos/trinodb/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/trinodb/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/trinodb/trino/tags",
                        "blobs_url": "https://api.github.com/repos/trinodb/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/trinodb/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/trinodb/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/trinodb/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/trinodb/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/trinodb/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/trinodb/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/trinodb/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/trinodb/trino/subscription",
                        "commits_url": "https://api.github.com/repos/trinodb/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/trinodb/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/trinodb/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/trinodb/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/trinodb/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/trinodb/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/trinodb/trino/merges",
                        "archive_url": "https://api.github.com/repos/trinodb/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/trinodb/trino/downloads",
                        "issues_url": "https://api.github.com/repos/trinodb/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/trinodb/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/trinodb/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/trinodb/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/trinodb/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/trinodb/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/trinodb/trino/deployments",
                        "created_at": "2019-01-19T06:38:14Z",
                        "updated_at": "2022-10-31T23:36:51Z",
                        "pushed_at": "2022-11-01T00:19:03Z",
                        "git_url": "git://github.com/trinodb/trino.git",
                        "ssh_url": "git@github.com:trinodb/trino.git",
                        "clone_url": "https://github.com/trinodb/trino.git",
                        "svn_url": "https://github.com/trinodb/trino",
                        "homepage": "https://trino.io",
                        "size": 179068,
                        "stargazers_count": 6430,
                        "watchers_count": 6430,
                        "language": "Java",
                        "has_issues": true,
                        "has_projects": false,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "forks_count": 2016,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 2200,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "analytics",
                            "big-data",
                            "data-science",
                            "database",
                            "databases",
                            "datalake",
                            "distributed-database",
                            "distributed-databases",
                            "distributed-systems",
                            "hadoop",
                            "hive",
                            "java",
                            "jdbc",
                            "presto",
                            "prestodb",
                            "query-engine",
                            "sql",
                            "trino"
                        ],
                        "visibility": "public",
                        "forks": 2016,
                        "open_issues": 2200,
                        "watchers": 6430,
                        "default_branch": "master"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/13095"
                    },
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/13095"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/13095"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/13095/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/13095/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/13095/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/trinodb/trino/statuses/6cb319916328184a673d3ca9eb204cc5181c9f25"
                    }
                },
                "author_association": "MEMBER",
                "auto_merge": null,
                "active_lock_reason": null,
                "merged": false,
                "mergeable": null,
                "rebaseable": null,
                "mergeable_state": "unknown",
                "merged_by": null,
                "comments": 7,
                "review_comments": 0,
                "maintainer_can_modify": false,
                "commits": 0,
                "additions": 0,
                "deletions": 0,
                "changed_files": 0
            }
        },
        "public": true,
        "created_at": "2022-11-01T00:37:02Z",
        "org": {
            "id": 34147222,
            "login": "trinodb",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/trinodb",
            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?"
        }
    },
    {
        "id": "24946244012",
        "type": "PushEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 509274784,
            "name": "metadaddy/trino",
            "url": "https://api.github.com/repos/metadaddy/trino"
        },
        "payload": {
            "push_id": 11511039146,
            "size": 0,
            "distinct_size": 0,
            "ref": "refs/heads/master",
            "head": "6cb319916328184a673d3ca9eb204cc5181c9f25",
            "before": "0b7a691461216fa9c06dfaf63899574f4a0e7a22",
            "commits": []
        },
        "public": true,
        "created_at": "2022-11-01T00:37:01Z"
    },
    {
        "id": "24944622790",
        "type": "PushEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 556391398,
            "name": "backblaze-b2-samples/node-copy-http",
            "url": "https://api.github.com/repos/backblaze-b2-samples/node-copy-http"
        },
        "payload": {
            "push_id": 11510197618,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/main",
            "head": "dd6ac4cb8a7cc8fdfaeec98888baf295fd7de81f",
            "before": "98ba6d1cad50b54ea234445bcc7411b3d4ff29a1",
            "commits": [
                {
                    "sha": "dd6ac4cb8a7cc8fdfaeec98888baf295fd7de81f",
                    "author": {
                        "email": "pat@backblaze.com",
                        "name": "Pat Patterson"
                    },
                    "message": "Create README.md",
                    "distinct": true,
                    "url": "https://api.github.com/repos/backblaze-b2-samples/node-copy-http/commits/dd6ac4cb8a7cc8fdfaeec98888baf295fd7de81f"
                }
            ]
        },
        "public": true,
        "created_at": "2022-10-31T22:20:00Z",
        "org": {
            "id": 17604039,
            "login": "backblaze-b2-samples",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/backblaze-b2-samples",
            "avatar_url": "https://avatars.githubusercontent.com/u/17604039?"
        }
    },
    {
        "id": "24829244507",
        "type": "PushEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 506752547,
            "name": "metadaddy/trino-getting-started",
            "url": "https://api.github.com/repos/metadaddy/trino-getting-started"
        },
        "payload": {
            "push_id": 11449373493,
            "size": 6,
            "distinct_size": 6,
            "ref": "refs/heads/main",
            "head": "58790e463b29274a2011524e05f8de84cbbe8306",
            "before": "5100953e1462b18155efece1c86603c23d3668c5",
            "commits": [
                {
                    "sha": "b7ce0dfcc0c807ec68a0a72e7a062ea5675a09d1",
                    "author": {
                        "email": "zjffdu@apache.org",
                        "name": "Jeff Zhang"
                    },
                    "message": "Add Zeppelin docker-compose example",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino-getting-started/commits/b7ce0dfcc0c807ec68a0a72e7a062ea5675a09d1"
                },
                {
                    "sha": "a633f542f4be4887e707c14326c69d3857c580bc",
                    "author": {
                        "email": "vontikov@gmail.com",
                        "name": "Vladimir Ontikov"
                    },
                    "message": "Create Delta Lake S3 bucket at startup",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino-getting-started/commits/a633f542f4be4887e707c14326c69d3857c580bc"
                },
                {
                    "sha": "89a1bcb6268c2e6da08a7c322dcf4b69d8b7d9e6",
                    "author": {
                        "email": "bits@bitsondata.dev",
                        "name": "bitsondatadev"
                    },
                    "message": "Add init hudi env - not working yet",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino-getting-started/commits/89a1bcb6268c2e6da08a7c322dcf4b69d8b7d9e6"
                },
                {
                    "sha": "ff90dfeb1f637829c0ce274279771913bd394af8",
                    "author": {
                        "email": "bits@bitsondata.dev",
                        "name": "Brian \"bits\" Olsen"
                    },
                    "message": "Merge pull request #4 from zjffdu/zeppelin\n\nAdd Zeppelin docker-compose example",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino-getting-started/commits/ff90dfeb1f637829c0ce274279771913bd394af8"
                },
                {
                    "sha": "dc33ec6a4d2aa8c383404dc38826f1f1f877a763",
                    "author": {
                        "email": "bits@bitsondata.dev",
                        "name": "Brian \"bits\" Olsen"
                    },
                    "message": "Merge pull request #6 from vontikov/main\n\nCreate Delta Lake S3 bucket at startup",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino-getting-started/commits/dc33ec6a4d2aa8c383404dc38826f1f1f877a763"
                },
                {
                    "sha": "58790e463b29274a2011524e05f8de84cbbe8306",
                    "author": {
                        "email": "metadaddy@gmail.com",
                        "name": "Pat Patterson"
                    },
                    "message": "New Tutorial: Hive Connector over Backblaze B2 Cloud Storage (#8)\n\nAdded Trino/B2 example",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino-getting-started/commits/58790e463b29274a2011524e05f8de84cbbe8306"
                }
            ]
        },
        "public": true,
        "created_at": "2022-10-26T00:47:42Z"
    },
    {
        "id": "24776048024",
        "type": "PushEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 556391398,
            "name": "backblaze-b2-samples/node-copy-http",
            "url": "https://api.github.com/repos/backblaze-b2-samples/node-copy-http"
        },
        "payload": {
            "push_id": 11422606893,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/main",
            "head": "98ba6d1cad50b54ea234445bcc7411b3d4ff29a1",
            "before": "5160a7fa93f619f772fce32cf88b7f21e825b8b8",
            "commits": [
                {
                    "sha": "98ba6d1cad50b54ea234445bcc7411b3d4ff29a1",
                    "author": {
                        "email": "pat@backblaze.com",
                        "name": "Pat Patterson"
                    },
                    "message": "init",
                    "distinct": true,
                    "url": "https://api.github.com/repos/backblaze-b2-samples/node-copy-http/commits/98ba6d1cad50b54ea234445bcc7411b3d4ff29a1"
                }
            ]
        },
        "public": true,
        "created_at": "2022-10-23T18:48:09Z",
        "org": {
            "id": 17604039,
            "login": "backblaze-b2-samples",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/backblaze-b2-samples",
            "avatar_url": "https://avatars.githubusercontent.com/u/17604039?"
        }
    },
    {
        "id": "24776040745",
        "type": "CreateEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 556391398,
            "name": "backblaze-b2-samples/node-copy-http",
            "url": "https://api.github.com/repos/backblaze-b2-samples/node-copy-http"
        },
        "payload": {
            "ref": "main",
            "ref_type": "branch",
            "master_branch": "main",
            "description": "Fastly RisingCloud task demo for Tech Day 2022",
            "pusher_type": "user"
        },
        "public": true,
        "created_at": "2022-10-23T18:46:59Z",
        "org": {
            "id": 17604039,
            "login": "backblaze-b2-samples",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/backblaze-b2-samples",
            "avatar_url": "https://avatars.githubusercontent.com/u/17604039?"
        }
    },
    {
        "id": "24776040709",
        "type": "CreateEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 556391398,
            "name": "backblaze-b2-samples/node-copy-http",
            "url": "https://api.github.com/repos/backblaze-b2-samples/node-copy-http"
        },
        "payload": {
            "ref": null,
            "ref_type": "repository",
            "master_branch": "main",
            "description": "Fastly RisingCloud task demo for Tech Day 2022",
            "pusher_type": "user"
        },
        "public": true,
        "created_at": "2022-10-23T18:46:59Z",
        "org": {
            "id": 17604039,
            "login": "backblaze-b2-samples",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/backblaze-b2-samples",
            "avatar_url": "https://avatars.githubusercontent.com/u/17604039?"
        }
    },
    {
        "id": "24775902407",
        "type": "PushEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 556378910,
            "name": "backblaze-b2-samples/fastly-on-demand-migration",
            "url": "https://api.github.com/repos/backblaze-b2-samples/fastly-on-demand-migration"
        },
        "payload": {
            "push_id": 11422508597,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/main",
            "head": "696602315b0b3ff0bf735af31ddc8b4878291a3f",
            "before": "9fca5ba1e69075e17d17b1450fc5aa3532c0e46f",
            "commits": [
                {
                    "sha": "696602315b0b3ff0bf735af31ddc8b4878291a3f",
                    "author": {
                        "email": "pat@backblaze.com",
                        "name": "Pat Patterson"
                    },
                    "message": "Generify fastly.toml",
                    "distinct": true,
                    "url": "https://api.github.com/repos/backblaze-b2-samples/fastly-on-demand-migration/commits/696602315b0b3ff0bf735af31ddc8b4878291a3f"
                }
            ]
        },
        "public": true,
        "created_at": "2022-10-23T18:25:57Z",
        "org": {
            "id": 17604039,
            "login": "backblaze-b2-samples",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/backblaze-b2-samples",
            "avatar_url": "https://avatars.githubusercontent.com/u/17604039?"
        }
    },
    {
        "id": "24775834577",
        "type": "PushEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 556378910,
            "name": "backblaze-b2-samples/fastly-on-demand-migration",
            "url": "https://api.github.com/repos/backblaze-b2-samples/fastly-on-demand-migration"
        },
        "payload": {
            "push_id": 11422463627,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/main",
            "head": "9fca5ba1e69075e17d17b1450fc5aa3532c0e46f",
            "before": "416879c5deba7a945ac58935098621a313eb16b8",
            "commits": [
                {
                    "sha": "9fca5ba1e69075e17d17b1450fc5aa3532c0e46f",
                    "author": {
                        "email": "pat@backblaze.com",
                        "name": "Pat Patterson"
                    },
                    "message": "Update README",
                    "distinct": true,
                    "url": "https://api.github.com/repos/backblaze-b2-samples/fastly-on-demand-migration/commits/9fca5ba1e69075e17d17b1450fc5aa3532c0e46f"
                }
            ]
        },
        "public": true,
        "created_at": "2022-10-23T18:16:14Z",
        "org": {
            "id": 17604039,
            "login": "backblaze-b2-samples",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/backblaze-b2-samples",
            "avatar_url": "https://avatars.githubusercontent.com/u/17604039?"
        }
    },
    {
        "id": "24775819655",
        "type": "PushEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 556378910,
            "name": "backblaze-b2-samples/fastly-on-demand-migration",
            "url": "https://api.github.com/repos/backblaze-b2-samples/fastly-on-demand-migration"
        },
        "payload": {
            "push_id": 11422453301,
            "size": 4,
            "distinct_size": 4,
            "ref": "refs/heads/main",
            "head": "416879c5deba7a945ac58935098621a313eb16b8",
            "before": "39a2fa48e079c308cc7789f39be6efdc7d729356",
            "commits": [
                {
                    "sha": "6426dd9bcbc690d07860c29afe3159cc82cbd05f",
                    "author": {
                        "email": "pat@backblaze.com",
                        "name": "Pat Patterson"
                    },
                    "message": "init",
                    "distinct": true,
                    "url": "https://api.github.com/repos/backblaze-b2-samples/fastly-on-demand-migration/commits/6426dd9bcbc690d07860c29afe3159cc82cbd05f"
                },
                {
                    "sha": "1e5a79a283087ac74911a54dcd5dd5abf9d8f939",
                    "author": {
                        "email": "pat@backblaze.com",
                        "name": "Pat Patterson"
                    },
                    "message": "working",
                    "distinct": true,
                    "url": "https://api.github.com/repos/backblaze-b2-samples/fastly-on-demand-migration/commits/1e5a79a283087ac74911a54dcd5dd5abf9d8f939"
                },
                {
                    "sha": "f3cb8028deb637917043d46d93dc9cb390decbb1",
                    "author": {
                        "email": "pat@backblaze.com",
                        "name": "Pat Patterson"
                    },
                    "message": "Remove origin setting",
                    "distinct": true,
                    "url": "https://api.github.com/repos/backblaze-b2-samples/fastly-on-demand-migration/commits/f3cb8028deb637917043d46d93dc9cb390decbb1"
                },
                {
                    "sha": "416879c5deba7a945ac58935098621a313eb16b8",
                    "author": {
                        "email": "pat@backblaze.com",
                        "name": "Pat Patterson"
                    },
                    "message": "Commenting",
                    "distinct": true,
                    "url": "https://api.github.com/repos/backblaze-b2-samples/fastly-on-demand-migration/commits/416879c5deba7a945ac58935098621a313eb16b8"
                }
            ]
        },
        "public": true,
        "created_at": "2022-10-23T18:14:20Z",
        "org": {
            "id": 17604039,
            "login": "backblaze-b2-samples",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/backblaze-b2-samples",
            "avatar_url": "https://avatars.githubusercontent.com/u/17604039?"
        }
    },
    {
        "id": "24775789419",
        "type": "CreateEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 556378910,
            "name": "backblaze-b2-samples/fastly-on-demand-migration",
            "url": "https://api.github.com/repos/backblaze-b2-samples/fastly-on-demand-migration"
        },
        "payload": {
            "ref": "main",
            "ref_type": "branch",
            "master_branch": "main",
            "description": "Fastly Compute@Edge app demo for Tech Day 2022",
            "pusher_type": "user"
        },
        "public": true,
        "created_at": "2022-10-23T18:10:19Z",
        "org": {
            "id": 17604039,
            "login": "backblaze-b2-samples",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/backblaze-b2-samples",
            "avatar_url": "https://avatars.githubusercontent.com/u/17604039?"
        }
    },
    {
        "id": "24775789326",
        "type": "CreateEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 556378910,
            "name": "backblaze-b2-samples/fastly-on-demand-migration",
            "url": "https://api.github.com/repos/backblaze-b2-samples/fastly-on-demand-migration"
        },
        "payload": {
            "ref": null,
            "ref_type": "repository",
            "master_branch": "main",
            "description": "Fastly Compute@Edge app demo for Tech Day 2022",
            "pusher_type": "user"
        },
        "public": true,
        "created_at": "2022-10-23T18:10:18Z",
        "org": {
            "id": 17604039,
            "login": "backblaze-b2-samples",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/backblaze-b2-samples",
            "avatar_url": "https://avatars.githubusercontent.com/u/17604039?"
        }
    },
    {
        "id": "24737807745",
        "type": "PushEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 506752547,
            "name": "metadaddy/trino-getting-started",
            "url": "https://api.github.com/repos/metadaddy/trino-getting-started"
        },
        "payload": {
            "push_id": 11400827064,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/main",
            "head": "5100953e1462b18155efece1c86603c23d3668c5",
            "before": "2145bcd1ab76f4175197a1076e91155021b9c3db",
            "commits": [
                {
                    "sha": "5100953e1462b18155efece1c86603c23d3668c5",
                    "author": {
                        "email": "pat@backblaze.com",
                        "name": "Pat Patterson"
                    },
                    "message": "Fixed circular link",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino-getting-started/commits/5100953e1462b18155efece1c86603c23d3668c5"
                }
            ]
        },
        "public": true,
        "created_at": "2022-10-21T00:25:44Z"
    },
    {
        "id": "24737731092",
        "type": "PullRequestEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 341978481,
            "name": "bitsondatadev/trino-getting-started",
            "url": "https://api.github.com/repos/bitsondatadev/trino-getting-started"
        },
        "payload": {
            "action": "opened",
            "number": 8,
            "pull_request": {
                "url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/pulls/8",
                "id": 1094596852,
                "node_id": "PR_kwDOFGItcc5BPjj0",
                "html_url": "https://github.com/bitsondatadev/trino-getting-started/pull/8",
                "diff_url": "https://github.com/bitsondatadev/trino-getting-started/pull/8.diff",
                "patch_url": "https://github.com/bitsondatadev/trino-getting-started/pull/8.patch",
                "issue_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/issues/8",
                "number": 8,
                "state": "open",
                "locked": false,
                "title": "New Tutorial: Hive Connector over Backblaze B2 Cloud Storage",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "We've been [experimenting with using Backblaze B2 as cloud storage with Trino's Hive connector](https://www.backblaze.com/blog/storing-and-querying-analytical-data-in-backblaze-b2/) here at Backblaze. We got started from the excellent [MinIO tutorial](https://github.com/bitsondatadev/trino-getting-started/tree/main/hive/trino-minio), so, as I'm about to publish a second blog entry inviting the [Drive Stats](https://www.backblaze.com/drivestats) community to get to grips with the data, I added a tutorial for Backblaze B2, including the Drive Stats data set. Would you be interested in pulling it into your repo?",
                "created_at": "2022-10-21T00:18:55Z",
                "updated_at": "2022-10-21T00:18:55Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": null,
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/pulls/8/commits",
                "review_comments_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/pulls/8/comments",
                "review_comment_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/issues/8/comments",
                "statuses_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/statuses/2145bcd1ab76f4175197a1076e91155021b9c3db",
                "head": {
                    "label": "metadaddy:main",
                    "ref": "main",
                    "sha": "2145bcd1ab76f4175197a1076e91155021b9c3db",
                    "user": {
                        "login": "metadaddy",
                        "id": 723517,
                        "node_id": "MDQ6VXNlcjcyMzUxNw==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/metadaddy",
                        "html_url": "https://github.com/metadaddy",
                        "followers_url": "https://api.github.com/users/metadaddy/followers",
                        "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                        "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                        "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                        "repos_url": "https://api.github.com/users/metadaddy/repos",
                        "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 506752547,
                        "node_id": "R_kgDOHjRuIw",
                        "name": "trino-getting-started",
                        "full_name": "metadaddy/trino-getting-started",
                        "private": false,
                        "owner": {
                            "login": "metadaddy",
                            "id": 723517,
                            "node_id": "MDQ6VXNlcjcyMzUxNw==",
                            "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/metadaddy",
                            "html_url": "https://github.com/metadaddy",
                            "followers_url": "https://api.github.com/users/metadaddy/followers",
                            "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                            "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                            "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                            "repos_url": "https://api.github.com/users/metadaddy/repos",
                            "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/metadaddy/trino-getting-started",
                        "description": null,
                        "fork": true,
                        "url": "https://api.github.com/repos/metadaddy/trino-getting-started",
                        "forks_url": "https://api.github.com/repos/metadaddy/trino-getting-started/forks",
                        "keys_url": "https://api.github.com/repos/metadaddy/trino-getting-started/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/metadaddy/trino-getting-started/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/metadaddy/trino-getting-started/teams",
                        "hooks_url": "https://api.github.com/repos/metadaddy/trino-getting-started/hooks",
                        "issue_events_url": "https://api.github.com/repos/metadaddy/trino-getting-started/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/metadaddy/trino-getting-started/events",
                        "assignees_url": "https://api.github.com/repos/metadaddy/trino-getting-started/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/metadaddy/trino-getting-started/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/metadaddy/trino-getting-started/tags",
                        "blobs_url": "https://api.github.com/repos/metadaddy/trino-getting-started/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/metadaddy/trino-getting-started/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/metadaddy/trino-getting-started/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/metadaddy/trino-getting-started/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/metadaddy/trino-getting-started/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/metadaddy/trino-getting-started/languages",
                        "stargazers_url": "https://api.github.com/repos/metadaddy/trino-getting-started/stargazers",
                        "contributors_url": "https://api.github.com/repos/metadaddy/trino-getting-started/contributors",
                        "subscribers_url": "https://api.github.com/repos/metadaddy/trino-getting-started/subscribers",
                        "subscription_url": "https://api.github.com/repos/metadaddy/trino-getting-started/subscription",
                        "commits_url": "https://api.github.com/repos/metadaddy/trino-getting-started/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/metadaddy/trino-getting-started/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/metadaddy/trino-getting-started/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/metadaddy/trino-getting-started/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/metadaddy/trino-getting-started/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/metadaddy/trino-getting-started/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/metadaddy/trino-getting-started/merges",
                        "archive_url": "https://api.github.com/repos/metadaddy/trino-getting-started/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/metadaddy/trino-getting-started/downloads",
                        "issues_url": "https://api.github.com/repos/metadaddy/trino-getting-started/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/metadaddy/trino-getting-started/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/metadaddy/trino-getting-started/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/metadaddy/trino-getting-started/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/metadaddy/trino-getting-started/labels{/name}",
                        "releases_url": "https://api.github.com/repos/metadaddy/trino-getting-started/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/metadaddy/trino-getting-started/deployments",
                        "created_at": "2022-06-23T18:37:35Z",
                        "updated_at": "2022-08-27T02:19:58Z",
                        "pushed_at": "2022-10-21T00:10:41Z",
                        "git_url": "git://github.com/metadaddy/trino-getting-started.git",
                        "ssh_url": "git@github.com:metadaddy/trino-getting-started.git",
                        "clone_url": "https://github.com/metadaddy/trino-getting-started.git",
                        "svn_url": "https://github.com/metadaddy/trino-getting-started",
                        "homepage": null,
                        "size": 20729,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": "Python",
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "main"
                    }
                },
                "base": {
                    "label": "bitsondatadev:main",
                    "ref": "main",
                    "sha": "6a9aad4432b01705e247d9c2e1c8dff77d40cc4e",
                    "user": {
                        "login": "bitsondatadev",
                        "id": 8547669,
                        "node_id": "MDQ6VXNlcjg1NDc2Njk=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/8547669?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/bitsondatadev",
                        "html_url": "https://github.com/bitsondatadev",
                        "followers_url": "https://api.github.com/users/bitsondatadev/followers",
                        "following_url": "https://api.github.com/users/bitsondatadev/following{/other_user}",
                        "gists_url": "https://api.github.com/users/bitsondatadev/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/bitsondatadev/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/bitsondatadev/subscriptions",
                        "organizations_url": "https://api.github.com/users/bitsondatadev/orgs",
                        "repos_url": "https://api.github.com/users/bitsondatadev/repos",
                        "events_url": "https://api.github.com/users/bitsondatadev/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/bitsondatadev/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 341978481,
                        "node_id": "MDEwOlJlcG9zaXRvcnkzNDE5Nzg0ODE=",
                        "name": "trino-getting-started",
                        "full_name": "bitsondatadev/trino-getting-started",
                        "private": false,
                        "owner": {
                            "login": "bitsondatadev",
                            "id": 8547669,
                            "node_id": "MDQ6VXNlcjg1NDc2Njk=",
                            "avatar_url": "https://avatars.githubusercontent.com/u/8547669?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/bitsondatadev",
                            "html_url": "https://github.com/bitsondatadev",
                            "followers_url": "https://api.github.com/users/bitsondatadev/followers",
                            "following_url": "https://api.github.com/users/bitsondatadev/following{/other_user}",
                            "gists_url": "https://api.github.com/users/bitsondatadev/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/bitsondatadev/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/bitsondatadev/subscriptions",
                            "organizations_url": "https://api.github.com/users/bitsondatadev/orgs",
                            "repos_url": "https://api.github.com/users/bitsondatadev/repos",
                            "events_url": "https://api.github.com/users/bitsondatadev/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/bitsondatadev/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/bitsondatadev/trino-getting-started",
                        "description": null,
                        "fork": false,
                        "url": "https://api.github.com/repos/bitsondatadev/trino-getting-started",
                        "forks_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/forks",
                        "keys_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/teams",
                        "hooks_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/hooks",
                        "issue_events_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/events",
                        "assignees_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/tags",
                        "blobs_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/languages",
                        "stargazers_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/stargazers",
                        "contributors_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/contributors",
                        "subscribers_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/subscribers",
                        "subscription_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/subscription",
                        "commits_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/merges",
                        "archive_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/downloads",
                        "issues_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/labels{/name}",
                        "releases_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/deployments",
                        "created_at": "2021-02-24T17:23:52Z",
                        "updated_at": "2022-10-14T09:26:34Z",
                        "pushed_at": "2022-07-06T11:51:17Z",
                        "git_url": "git://github.com/bitsondatadev/trino-getting-started.git",
                        "ssh_url": "git@github.com:bitsondatadev/trino-getting-started.git",
                        "clone_url": "https://github.com/bitsondatadev/trino-getting-started.git",
                        "svn_url": "https://github.com/bitsondatadev/trino-getting-started",
                        "homepage": null,
                        "size": 20720,
                        "stargazers_count": 126,
                        "watchers_count": 126,
                        "language": "Python",
                        "has_issues": true,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "forks_count": 47,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 6,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 47,
                        "open_issues": 6,
                        "watchers": 126,
                        "default_branch": "main"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/bitsondatadev/trino-getting-started/pulls/8"
                    },
                    "html": {
                        "href": "https://github.com/bitsondatadev/trino-getting-started/pull/8"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/bitsondatadev/trino-getting-started/issues/8"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/bitsondatadev/trino-getting-started/issues/8/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/bitsondatadev/trino-getting-started/pulls/8/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/bitsondatadev/trino-getting-started/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/bitsondatadev/trino-getting-started/pulls/8/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/bitsondatadev/trino-getting-started/statuses/2145bcd1ab76f4175197a1076e91155021b9c3db"
                    }
                },
                "author_association": "NONE",
                "auto_merge": null,
                "active_lock_reason": null,
                "merged": false,
                "mergeable": null,
                "rebaseable": null,
                "mergeable_state": "unknown",
                "merged_by": null,
                "comments": 0,
                "review_comments": 0,
                "maintainer_can_modify": true,
                "commits": 12,
                "additions": 879,
                "deletions": 0,
                "changed_files": 23
            }
        },
        "public": true,
        "created_at": "2022-10-21T00:18:55Z"
    },
    {
        "id": "24737638743",
        "type": "PushEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 506752547,
            "name": "metadaddy/trino-getting-started",
            "url": "https://api.github.com/repos/metadaddy/trino-getting-started"
        },
        "payload": {
            "push_id": 11400739242,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/main",
            "head": "2145bcd1ab76f4175197a1076e91155021b9c3db",
            "before": "5ee077af85421d09ba1be882e2b28e3984748528",
            "commits": [
                {
                    "sha": "2145bcd1ab76f4175197a1076e91155021b9c3db",
                    "author": {
                        "email": "pat@backblaze.com",
                        "name": "Pat Patterson"
                    },
                    "message": "I'll get this right soon",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino-getting-started/commits/2145bcd1ab76f4175197a1076e91155021b9c3db"
                }
            ]
        },
        "public": true,
        "created_at": "2022-10-21T00:10:41Z"
    },
    {
        "id": "24737629710",
        "type": "PushEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 506752547,
            "name": "metadaddy/trino-getting-started",
            "url": "https://api.github.com/repos/metadaddy/trino-getting-started"
        },
        "payload": {
            "push_id": 11400734244,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/main",
            "head": "5ee077af85421d09ba1be882e2b28e3984748528",
            "before": "2bdd51f82be07da31d5a1672df8495cb22c2df09",
            "commits": [
                {
                    "sha": "5ee077af85421d09ba1be882e2b28e3984748528",
                    "author": {
                        "email": "pat@backblaze.com",
                        "name": "Pat Patterson"
                    },
                    "message": "Typo",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino-getting-started/commits/5ee077af85421d09ba1be882e2b28e3984748528"
                }
            ]
        },
        "public": true,
        "created_at": "2022-10-21T00:09:51Z"
    },
    {
        "id": "24737625161",
        "type": "PushEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 506752547,
            "name": "metadaddy/trino-getting-started",
            "url": "https://api.github.com/repos/metadaddy/trino-getting-started"
        },
        "payload": {
            "push_id": 11400731824,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/main",
            "head": "2bdd51f82be07da31d5a1672df8495cb22c2df09",
            "before": "7dce02b5a171bbca34b0994ada9a89fc06953292",
            "commits": [
                {
                    "sha": "2bdd51f82be07da31d5a1672df8495cb22c2df09",
                    "author": {
                        "email": "pat@backblaze.com",
                        "name": "Pat Patterson"
                    },
                    "message": "Fix drivestats.sql path",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino-getting-started/commits/2bdd51f82be07da31d5a1672df8495cb22c2df09"
                }
            ]
        },
        "public": true,
        "created_at": "2022-10-21T00:09:26Z"
    },
    {
        "id": "24737552137",
        "type": "PushEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 506752547,
            "name": "metadaddy/trino-getting-started",
            "url": "https://api.github.com/repos/metadaddy/trino-getting-started"
        },
        "payload": {
            "push_id": 11400693416,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/main",
            "head": "7dce02b5a171bbca34b0994ada9a89fc06953292",
            "before": "731524da5bfb78f950359b7cffb2581394ec3ab0",
            "commits": [
                {
                    "sha": "7dce02b5a171bbca34b0994ada9a89fc06953292",
                    "author": {
                        "email": "pat@backblaze.com",
                        "name": "Pat Patterson"
                    },
                    "message": "Yet more image sizing",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino-getting-started/commits/7dce02b5a171bbca34b0994ada9a89fc06953292"
                }
            ]
        },
        "public": true,
        "created_at": "2022-10-21T00:02:48Z"
    },
    {
        "id": "24737532939",
        "type": "PushEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 506752547,
            "name": "metadaddy/trino-getting-started",
            "url": "https://api.github.com/repos/metadaddy/trino-getting-started"
        },
        "payload": {
            "push_id": 11400683125,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/main",
            "head": "731524da5bfb78f950359b7cffb2581394ec3ab0",
            "before": "00ea30dacfde8c6307996577c9bf8387ad345297",
            "commits": [
                {
                    "sha": "731524da5bfb78f950359b7cffb2581394ec3ab0",
                    "author": {
                        "email": "pat@backblaze.com",
                        "name": "Pat Patterson"
                    },
                    "message": "More image sizing",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino-getting-started/commits/731524da5bfb78f950359b7cffb2581394ec3ab0"
                }
            ]
        },
        "public": true,
        "created_at": "2022-10-21T00:01:05Z"
    },
    {
        "id": "25757147946",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 166515022,
            "name": "trinodb/trino",
            "url": "https://api.github.com/repos/trinodb/trino"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/trinodb/trino/issues/15337",
                "repository_url": "https://api.github.com/repos/trinodb/trino",
                "labels_url": "https://api.github.com/repos/trinodb/trino/issues/15337/labels{/name}",
                "comments_url": "https://api.github.com/repos/trinodb/trino/issues/15337/comments",
                "events_url": "https://api.github.com/repos/trinodb/trino/issues/15337/events",
                "html_url": "https://github.com/trinodb/trino/pull/15337",
                "id": 1482501542,
                "node_id": "PR_kwDOCezRTs5Eq7bB",
                "number": 15337,
                "title": "Fix test for invalid rate in FormatUtils.formatDataRate()",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 1202580151,
                        "node_id": "MDU6TGFiZWwxMjAyNTgwMTUx",
                        "url": "https://api.github.com/repos/trinodb/trino/labels/cla-signed",
                        "name": "cla-signed",
                        "color": "ededed",
                        "default": false,
                        "description": null
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 2,
                "created_at": "2022-12-07T17:54:40Z",
                "updated_at": "2022-12-08T17:16:07Z",
                "closed_at": null,
                "author_association": "MEMBER",
                "active_lock_reason": null,
                "draft": false,
                "pull_request": {
                    "url": "https://api.github.com/repos/trinodb/trino/pulls/15337",
                    "html_url": "https://github.com/trinodb/trino/pull/15337",
                    "diff_url": "https://github.com/trinodb/trino/pull/15337.diff",
                    "patch_url": "https://github.com/trinodb/trino/pull/15337.patch",
                    "merged_at": null
                },
                "body": "<!-- Thank you for submitting a pull request! Find more information in our development guide at https://github.com/trinodb/trino/blob/master/.github/DEVELOPMENT.md and contact us on #dev in Slack. -->\r\n<!-- Provide an overview of the PR for maintainers and reviewers. -->\r\n## Description\r\n\r\n`FormatUtils.formatDataRate()` contains the following code:\r\n\r\n```java\r\nlong rate = Math.round(dataSize.toBytes() / duration.getValue(SECONDS));\r\nif (Double.isNaN(rate) || Double.isInfinite(rate)) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nThe test can never evaluate as `true`, since both functions will return false for any `long`.\r\n\r\nThe correct test is:\r\n\r\n```java\r\nif (rate == Long.MAX_VALUE) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nIt's not necessary to test for `Long.MIN_VALUE`, since neither `dataSize` nor `duration` can be negative.\r\n\r\n<!-- Provide details that would help an engineer who is unfamiliar with this part of the code. -->\r\n## Unit Test\r\n\r\nI added a new class, `TestFormatUtils` to test both this fix and the rest of `FormatUtils`. The tests for this change are:\r\n\r\n```java\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), false), \"0B\");\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), true), \"0B/s\");\r\n```\r\n\r\n<!-- Mark the appropriate option with an (x). Propose a release note if you can. -->\r\n## Release notes\r\n\r\n(x) This is not user-visible or docs only and no release notes are required.\r\n( ) Release notes are required, please propose a release note for me.\r\n( ) Release notes are required, with the following suggested text:\r\n\r\n## Related Issue\r\n\r\nFixes #13093",
                "reactions": {
                    "url": "https://api.github.com/repos/trinodb/trino/issues/15337/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/trinodb/trino/issues/15337/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/trinodb/trino/issues/comments/1343042979",
                "html_url": "https://github.com/trinodb/trino/pull/15337#issuecomment-1343042979",
                "issue_url": "https://api.github.com/repos/trinodb/trino/issues/15337",
                "id": 1343042979,
                "node_id": "IC_kwDOCezRTs5QDTWj",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2022-12-08T17:16:07Z",
                "updated_at": "2022-12-08T17:16:07Z",
                "author_association": "MEMBER",
                "body": "Force-pushed the fix for the failing maven check (`import static io.trino.cli.FormatUtils.*`)",
                "reactions": {
                    "url": "https://api.github.com/repos/trinodb/trino/issues/comments/1343042979/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2022-12-08T17:16:08Z",
        "org": {
            "id": 34147222,
            "login": "trinodb",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/trinodb",
            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?"
        }
    },
    {
        "id": "25757121052",
        "type": "PushEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 509274784,
            "name": "metadaddy/trino",
            "url": "https://api.github.com/repos/metadaddy/trino"
        },
        "payload": {
            "push_id": 11931950930,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/fix-formatdatarate-test",
            "head": "ed8e1a6d52194b8ac9f2807f4ca8a5d1cdb63965",
            "before": "a3ff14606d70a46f592dbdd56eb32cb71a79ef91",
            "commits": [
                {
                    "sha": "ed8e1a6d52194b8ac9f2807f4ca8a5d1cdb63965",
                    "author": {
                        "email": "pat@backblaze.com",
                        "name": "Pat Patterson"
                    },
                    "message": "Fix check for invalid rate in FormatUtils.formatDataRate()",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/ed8e1a6d52194b8ac9f2807f4ca8a5d1cdb63965"
                }
            ]
        },
        "public": true,
        "created_at": "2022-12-08T17:15:00Z"
    },
    {
        "id": "25756989078",
        "type": "PullRequestReviewCommentEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 166515022,
            "name": "trinodb/trino",
            "url": "https://api.github.com/repos/trinodb/trino"
        },
        "payload": {
            "action": "created",
            "comment": {
                "url": "https://api.github.com/repos/trinodb/trino/pulls/comments/1043598007",
                "pull_request_review_id": 1210447926,
                "id": 1043598007,
                "node_id": "PRRC_kwDOCezRTs4-NAq3",
                "diff_hunk": "@@ -0,0 +1,353 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.trino.cli;\n+\n+import io.airlift.units.DataSize;\n+import io.airlift.units.Duration;\n+import org.testng.annotations.Test;\n+\n+import static org.testng.Assert.assertEquals;\n+\n+public class TestFormatUtils\n+{\n+    @Test\n+    public void testFormatCount()\n+    {\n+        assertEquals(FormatUtils.formatCount(1L), \"1\");\n+        assertEquals(FormatUtils.formatCount(12L), \"12\");\n+        assertEquals(FormatUtils.formatCount(123L), \"123\");\n+        assertEquals(FormatUtils.formatCount(1234L), \"1.23K\");\n+        assertEquals(FormatUtils.formatCount(12345L), \"12.3K\");\n+        assertEquals(FormatUtils.formatCount(123456L), \"123K\");\n+        assertEquals(FormatUtils.formatCount(1234567L), \"1.23M\");\n+        assertEquals(FormatUtils.formatCount(12345678L), \"12.3M\");\n+        assertEquals(FormatUtils.formatCount(123456789L), \"123M\");\n+        assertEquals(FormatUtils.formatCount(1234567890L), \"1.23B\");\n+        assertEquals(FormatUtils.formatCount(12345678901L), \"12.3B\");\n+        assertEquals(FormatUtils.formatCount(123456789012L), \"123B\");\n+        assertEquals(FormatUtils.formatCount(1234567890123L), \"1.23T\");\n+        assertEquals(FormatUtils.formatCount(12345678901234L), \"12.3T\");\n+        assertEquals(FormatUtils.formatCount(123456789012345L), \"123T\");\n+        assertEquals(FormatUtils.formatCount(1234567890123456L), \"1.23Q\");\n+        assertEquals(FormatUtils.formatCount(12345678901234567L), \"12.3Q\");\n+        assertEquals(FormatUtils.formatCount(123456789012345678L), \"123Q\");\n+        assertEquals(FormatUtils.formatCount(1234567890123456789L), \"1235Q\");\n+    }\n+\n+    @Test\n+    public void formatCountRate()\n+    {\n+        assertEquals(FormatUtils.formatCountRate(0.0000000001D, Duration.valueOf(\"1ns\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(0.0000000001D, Duration.valueOf(\"1ns\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(0.000000001D, Duration.valueOf(\"1ns\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(0.000000001D, Duration.valueOf(\"1ns\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(0.0000000015D, Duration.valueOf(\"1ns\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(0.0000000015D, Duration.valueOf(\"1ns\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(1D, Duration.valueOf(\"1ns\"), false), \"1000M\");\n+        assertEquals(FormatUtils.formatCountRate(1D, Duration.valueOf(\"1ns\"), true), \"1000M/s\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"1ns\"), false), \"10B\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"1ns\"), true), \"10B/s\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"10ns\"), false), \"1000M\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"10ns\"), true), \"1000M/s\");\n+\n+        assertEquals(FormatUtils.formatCountRate(0.0000001D, Duration.valueOf(\"1us\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(0.0000001D, Duration.valueOf(\"1us\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(0.000001D, Duration.valueOf(\"1us\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(0.000001D, Duration.valueOf(\"1us\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(0.0000015D, Duration.valueOf(\"1us\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(0.0000015D, Duration.valueOf(\"1us\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(1D, Duration.valueOf(\"1us\"), false), \"1000K\");\n+        assertEquals(FormatUtils.formatCountRate(1D, Duration.valueOf(\"1us\"), true), \"1000K/s\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"1us\"), false), \"10M\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"1us\"), true), \"10M/s\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"10us\"), false), \"1000K\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"10us\"), true), \"1000K/s\");\n+\n+        assertEquals(FormatUtils.formatCountRate(0.0001D, Duration.valueOf(\"1ms\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(0.0001D, Duration.valueOf(\"1ms\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(0.001D, Duration.valueOf(\"1ms\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(0.001D, Duration.valueOf(\"1ms\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(0.0015D, Duration.valueOf(\"1ms\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(0.0015D, Duration.valueOf(\"1ms\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(1D, Duration.valueOf(\"1ms\"), false), \"1000\");\n+        assertEquals(FormatUtils.formatCountRate(1D, Duration.valueOf(\"1ms\"), true), \"1000/s\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"1ms\"), false), \"10K\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"1ms\"), true), \"10K/s\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"10ms\"), false), \"1000\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"10ms\"), true), \"1000/s\");\n+\n+        assertEquals(FormatUtils.formatCountRate(0.1D, Duration.valueOf(\"1s\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(0.1D, Duration.valueOf(\"1s\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"1s\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"1s\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"10s\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"10s\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(1.5D, Duration.valueOf(\"1s\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(1.5D, Duration.valueOf(\"1s\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"1s\"), false), \"10\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"1s\"), true), \"10/s\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"10s\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"10s\"), true), \"1/s\");\n+\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"1m\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"1m\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(60.0D, Duration.valueOf(\"1m\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(60.0D, Duration.valueOf(\"1m\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(600.0D, Duration.valueOf(\"1m\"), false), \"10\");\n+        assertEquals(FormatUtils.formatCountRate(600.0D, Duration.valueOf(\"1m\"), true), \"10/s\");\n+        assertEquals(FormatUtils.formatCountRate(100.0D, Duration.valueOf(\"10m\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(100.0D, Duration.valueOf(\"10m\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(600.0D, Duration.valueOf(\"10m\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(600.0D, Duration.valueOf(\"10m\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(6000.0D, Duration.valueOf(\"10m\"), false), \"10\");\n+        assertEquals(FormatUtils.formatCountRate(6000.0D, Duration.valueOf(\"10m\"), true), \"10/s\");\n+\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"1h\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"1h\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(3600.0D, Duration.valueOf(\"1h\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(3600.0D, Duration.valueOf(\"1h\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(36000.0D, Duration.valueOf(\"1h\"), false), \"10\");\n+        assertEquals(FormatUtils.formatCountRate(36000.0D, Duration.valueOf(\"1h\"), true), \"10/s\");\n+        assertEquals(FormatUtils.formatCountRate(100.0D, Duration.valueOf(\"10h\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(100.0D, Duration.valueOf(\"10h\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(36000.0D, Duration.valueOf(\"10h\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(36000.0D, Duration.valueOf(\"10h\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(360000.0D, Duration.valueOf(\"10h\"), false), \"10\");\n+        assertEquals(FormatUtils.formatCountRate(360000.0D, Duration.valueOf(\"10h\"), true), \"10/s\");\n+\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"1d\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"1d\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(86400.0D, Duration.valueOf(\"1d\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(86400.0D, Duration.valueOf(\"1d\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(864000.0D, Duration.valueOf(\"1d\"), false), \"10\");\n+        assertEquals(FormatUtils.formatCountRate(864000.0D, Duration.valueOf(\"1d\"), true), \"10/s\");\n+        assertEquals(FormatUtils.formatCountRate(86400.0D, Duration.valueOf(\"10d\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(86400.0D, Duration.valueOf(\"10d\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(864000.0D, Duration.valueOf(\"10d\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(864000.0D, Duration.valueOf(\"10d\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(8640000.0D, Duration.valueOf(\"10d\"), false), \"10\");\n+        assertEquals(FormatUtils.formatCountRate(8640000.0D, Duration.valueOf(\"10d\"), true), \"10/s\");\n+\n+        assertEquals(FormatUtils.formatCountRate(Double.NaN, Duration.valueOf(\"1s\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(Double.NaN, Duration.valueOf(\"1s\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(Double.POSITIVE_INFINITY, Duration.valueOf(\"1s\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(Double.POSITIVE_INFINITY, Duration.valueOf(\"1s\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(Double.NEGATIVE_INFINITY, Duration.valueOf(\"1s\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(Double.NEGATIVE_INFINITY, Duration.valueOf(\"1s\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"0s\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"0s\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(-1.0D, Duration.valueOf(\"0s\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(-1.0D, Duration.valueOf(\"0s\"), true), \"0/s\");\n+    }\n+\n+    @Test\n+    public void testFormatDataSize()\n+    {\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1L), false), \"1B\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1L), true), \"1B\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12L), false), \"12B\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12L), true), \"12B\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123L), false), \"123B\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123L), true), \"123B\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234L), false), \"1.21K\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234L), true), \"1.21KB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12345L), false), \"12.1K\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12345L), true), \"12.1KB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123456L), false), \"121K\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123456L), true), \"121KB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234567L), false), \"1.18M\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234567L), true), \"1.18MB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12345678L), false), \"11.8M\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12345678L), true), \"11.8MB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123456789L), false), \"118M\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123456789L), true), \"118MB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234567890L), false), \"1.15G\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234567890L), true), \"1.15GB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12345678901L), false), \"11.5G\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12345678901L), true), \"11.5GB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123456789012L), false), \"115G\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123456789012L), true), \"115GB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234567890123L), false), \"1.12T\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234567890123L), true), \"1.12TB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12345678901234L), false), \"11.2T\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12345678901234L), true), \"11.2TB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123456789012345L), false), \"112T\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123456789012345L), true), \"112TB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234567890123456L), false), \"1.1P\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234567890123456L), true), \"1.1PB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12345678901234567L), false), \"11P\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12345678901234567L), true), \"11PB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123456789012345678L), false), \"110P\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123456789012345678L), true), \"110PB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234567890123456789L), false), \"1097P\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234567890123456789L), true), \"1097PB\");\n+    }\n+\n+    @Test\n+    public void testFormatDataRate()\n+    {\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(0), Duration.valueOf(\"1ns\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(0), Duration.valueOf(\"1ns\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1ns\"), false), \"954M\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1ns\"), true), \"954MB/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"1ns\"), false), \"9.31G\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"1ns\"), true), \"9.31GB/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"10ns\"), false), \"954M\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"10ns\"), true), \"954MB/s\");\n+\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(0), Duration.valueOf(\"1us\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(0), Duration.valueOf(\"1us\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1us\"), false), \"977K\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1us\"), true), \"977KB/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"1us\"), false), \"9.54M\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"1us\"), true), \"9.54MB/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"10us\"), false), \"977K\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"10us\"), true), \"977KB/s\");\n+\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(0), Duration.valueOf(\"1ms\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(0), Duration.valueOf(\"1ms\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1ms\"), false), \"1000B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1ms\"), true), \"1000B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"1ms\"), false), \"9.77K\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"1ms\"), true), \"9.77KB/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"10ms\"), false), \"1000B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"10ms\"), true), \"1000B/s\");\n+\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(0), Duration.valueOf(\"1s\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(0), Duration.valueOf(\"1s\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1s\"), false), \"1B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1s\"), true), \"1B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"10s\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"10s\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"1s\"), false), \"10B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"1s\"), true), \"10B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"10s\"), false), \"1B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"10s\"), true), \"1B/s\");\n+\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1m\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1m\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(60), Duration.valueOf(\"1m\"), false), \"1B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(60), Duration.valueOf(\"1m\"), true), \"1B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(600), Duration.valueOf(\"1m\"), false), \"10B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(600), Duration.valueOf(\"1m\"), true), \"10B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(100), Duration.valueOf(\"10m\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(100), Duration.valueOf(\"10m\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(600), Duration.valueOf(\"10m\"), false), \"1B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(600), Duration.valueOf(\"10m\"), true), \"1B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(6000), Duration.valueOf(\"10m\"), false), \"10B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(6000), Duration.valueOf(\"10m\"), true), \"10B/s\");\n+\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1h\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1h\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(3600), Duration.valueOf(\"1h\"), false), \"1B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(3600), Duration.valueOf(\"1h\"), true), \"1B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(36000), Duration.valueOf(\"1h\"), false), \"10B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(36000), Duration.valueOf(\"1h\"), true), \"10B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(100), Duration.valueOf(\"10h\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(100), Duration.valueOf(\"10h\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(36000), Duration.valueOf(\"10h\"), false), \"1B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(36000), Duration.valueOf(\"10h\"), true), \"1B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(360000), Duration.valueOf(\"10h\"), false), \"10B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(360000), Duration.valueOf(\"10h\"), true), \"10B/s\");\n+\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1d\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1d\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(86400), Duration.valueOf(\"1d\"), false), \"1B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(86400), Duration.valueOf(\"1d\"), true), \"1B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(864000), Duration.valueOf(\"1d\"), false), \"10B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(864000), Duration.valueOf(\"1d\"), true), \"10B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(86400), Duration.valueOf(\"10d\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(86400), Duration.valueOf(\"10d\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(864000), Duration.valueOf(\"10d\"), false), \"1B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(864000), Duration.valueOf(\"10d\"), true), \"1B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(8640000), Duration.valueOf(\"10d\"), false), \"10B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(8640000), Duration.valueOf(\"10d\"), true), \"10B/s\");\n+\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), true), \"0B/s\");\n+    }\n+\n+    @Test\n+    public void testPluralize()",
                "path": "client/trino-cli/src/test/java/io/trino/cli/TestFormatUtils.java",
                "position": 284,
                "original_position": 282,
                "commit_id": "a3ff14606d70a46f592dbdd56eb32cb71a79ef91",
                "original_commit_id": "f88ba0cee83615211a54a7351df5656d7688ae1c",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "Done",
                "created_at": "2022-12-08T17:09:24Z",
                "updated_at": "2022-12-08T17:09:24Z",
                "html_url": "https://github.com/trinodb/trino/pull/15337#discussion_r1043598007",
                "pull_request_url": "https://api.github.com/repos/trinodb/trino/pulls/15337",
                "author_association": "MEMBER",
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/comments/1043598007"
                    },
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15337#discussion_r1043598007"
                    },
                    "pull_request": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337"
                    }
                },
                "reactions": {
                    "url": "https://api.github.com/repos/trinodb/trino/pulls/comments/1043598007/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "start_line": null,
                "original_start_line": null,
                "start_side": null,
                "line": 284,
                "original_line": 284,
                "side": "RIGHT",
                "in_reply_to_id": 1042707167
            },
            "pull_request": {
                "url": "https://api.github.com/repos/trinodb/trino/pulls/15337",
                "id": 1152104129,
                "node_id": "PR_kwDOCezRTs5Eq7bB",
                "html_url": "https://github.com/trinodb/trino/pull/15337",
                "diff_url": "https://github.com/trinodb/trino/pull/15337.diff",
                "patch_url": "https://github.com/trinodb/trino/pull/15337.patch",
                "issue_url": "https://api.github.com/repos/trinodb/trino/issues/15337",
                "number": 15337,
                "state": "open",
                "locked": false,
                "title": "Fix test for invalid rate in FormatUtils.formatDataRate()",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "<!-- Thank you for submitting a pull request! Find more information in our development guide at https://github.com/trinodb/trino/blob/master/.github/DEVELOPMENT.md and contact us on #dev in Slack. -->\r\n<!-- Provide an overview of the PR for maintainers and reviewers. -->\r\n## Description\r\n\r\n`FormatUtils.formatDataRate()` contains the following code:\r\n\r\n```java\r\nlong rate = Math.round(dataSize.toBytes() / duration.getValue(SECONDS));\r\nif (Double.isNaN(rate) || Double.isInfinite(rate)) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nThe test can never evaluate as `true`, since both functions will return false for any `long`.\r\n\r\nThe correct test is:\r\n\r\n```java\r\nif (rate == Long.MAX_VALUE) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nIt's not necessary to test for `Long.MIN_VALUE`, since neither `dataSize` nor `duration` can be negative.\r\n\r\n<!-- Provide details that would help an engineer who is unfamiliar with this part of the code. -->\r\n## Unit Test\r\n\r\nI added a new class, `TestFormatUtils` to test both this fix and the rest of `FormatUtils`. The tests for this change are:\r\n\r\n```java\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), false), \"0B\");\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), true), \"0B/s\");\r\n```\r\n\r\n<!-- Mark the appropriate option with an (x). Propose a release note if you can. -->\r\n## Release notes\r\n\r\n(x) This is not user-visible or docs only and no release notes are required.\r\n( ) Release notes are required, please propose a release note for me.\r\n( ) Release notes are required, with the following suggested text:\r\n\r\n## Related Issue\r\n\r\nFixes #13093",
                "created_at": "2022-12-07T17:54:40Z",
                "updated_at": "2022-12-08T17:09:24Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": "04709a71679326dfa2fa43ab44d4da90024bf8c7",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [
                    {
                        "id": 1202580151,
                        "node_id": "MDU6TGFiZWwxMjAyNTgwMTUx",
                        "url": "https://api.github.com/repos/trinodb/trino/labels/cla-signed",
                        "name": "cla-signed",
                        "color": "ededed",
                        "default": false,
                        "description": null
                    }
                ],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/trinodb/trino/pulls/15337/commits",
                "review_comments_url": "https://api.github.com/repos/trinodb/trino/pulls/15337/comments",
                "review_comment_url": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/trinodb/trino/issues/15337/comments",
                "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/a3ff14606d70a46f592dbdd56eb32cb71a79ef91",
                "head": {
                    "label": "metadaddy:fix-formatdatarate-test",
                    "ref": "fix-formatdatarate-test",
                    "sha": "a3ff14606d70a46f592dbdd56eb32cb71a79ef91",
                    "user": {
                        "login": "metadaddy",
                        "id": 723517,
                        "node_id": "MDQ6VXNlcjcyMzUxNw==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/metadaddy",
                        "html_url": "https://github.com/metadaddy",
                        "followers_url": "https://api.github.com/users/metadaddy/followers",
                        "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                        "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                        "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                        "repos_url": "https://api.github.com/users/metadaddy/repos",
                        "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 509274784,
                        "node_id": "R_kgDOHlrqoA",
                        "name": "trino",
                        "full_name": "metadaddy/trino",
                        "private": false,
                        "owner": {
                            "login": "metadaddy",
                            "id": 723517,
                            "node_id": "MDQ6VXNlcjcyMzUxNw==",
                            "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/metadaddy",
                            "html_url": "https://github.com/metadaddy",
                            "followers_url": "https://api.github.com/users/metadaddy/followers",
                            "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                            "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                            "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                            "repos_url": "https://api.github.com/users/metadaddy/repos",
                            "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/metadaddy/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": true,
                        "url": "https://api.github.com/repos/metadaddy/trino",
                        "forks_url": "https://api.github.com/repos/metadaddy/trino/forks",
                        "keys_url": "https://api.github.com/repos/metadaddy/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/metadaddy/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/metadaddy/trino/teams",
                        "hooks_url": "https://api.github.com/repos/metadaddy/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/metadaddy/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/metadaddy/trino/events",
                        "assignees_url": "https://api.github.com/repos/metadaddy/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/metadaddy/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/metadaddy/trino/tags",
                        "blobs_url": "https://api.github.com/repos/metadaddy/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/metadaddy/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/metadaddy/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/metadaddy/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/metadaddy/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/metadaddy/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/metadaddy/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/metadaddy/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/metadaddy/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/metadaddy/trino/subscription",
                        "commits_url": "https://api.github.com/repos/metadaddy/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/metadaddy/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/metadaddy/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/metadaddy/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/metadaddy/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/metadaddy/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/metadaddy/trino/merges",
                        "archive_url": "https://api.github.com/repos/metadaddy/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/metadaddy/trino/downloads",
                        "issues_url": "https://api.github.com/repos/metadaddy/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/metadaddy/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/metadaddy/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/metadaddy/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/metadaddy/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/metadaddy/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/metadaddy/trino/deployments",
                        "created_at": "2022-07-01T00:43:32Z",
                        "updated_at": "2022-07-06T01:44:20Z",
                        "pushed_at": "2022-12-08T02:39:50Z",
                        "git_url": "git://github.com/metadaddy/trino.git",
                        "ssh_url": "git@github.com:metadaddy/trino.git",
                        "clone_url": "https://github.com/metadaddy/trino.git",
                        "svn_url": "https://github.com/metadaddy/trino",
                        "homepage": "https://trino.io",
                        "size": 197784,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": "Java",
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "master"
                    }
                },
                "base": {
                    "label": "trinodb:master",
                    "ref": "master",
                    "sha": "81d1525c7b0d24433712957632c0895847a6788b",
                    "user": {
                        "login": "trinodb",
                        "id": 34147222,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                        "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/trinodb",
                        "html_url": "https://github.com/trinodb",
                        "followers_url": "https://api.github.com/users/trinodb/followers",
                        "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                        "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                        "organizations_url": "https://api.github.com/users/trinodb/orgs",
                        "repos_url": "https://api.github.com/users/trinodb/repos",
                        "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/trinodb/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 166515022,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNjY1MTUwMjI=",
                        "name": "trino",
                        "full_name": "trinodb/trino",
                        "private": false,
                        "owner": {
                            "login": "trinodb",
                            "id": 34147222,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/trinodb",
                            "html_url": "https://github.com/trinodb",
                            "followers_url": "https://api.github.com/users/trinodb/followers",
                            "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                            "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                            "organizations_url": "https://api.github.com/users/trinodb/orgs",
                            "repos_url": "https://api.github.com/users/trinodb/repos",
                            "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/trinodb/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/trinodb/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": false,
                        "url": "https://api.github.com/repos/trinodb/trino",
                        "forks_url": "https://api.github.com/repos/trinodb/trino/forks",
                        "keys_url": "https://api.github.com/repos/trinodb/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/trinodb/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/trinodb/trino/teams",
                        "hooks_url": "https://api.github.com/repos/trinodb/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/trinodb/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/trinodb/trino/events",
                        "assignees_url": "https://api.github.com/repos/trinodb/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/trinodb/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/trinodb/trino/tags",
                        "blobs_url": "https://api.github.com/repos/trinodb/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/trinodb/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/trinodb/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/trinodb/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/trinodb/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/trinodb/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/trinodb/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/trinodb/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/trinodb/trino/subscription",
                        "commits_url": "https://api.github.com/repos/trinodb/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/trinodb/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/trinodb/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/trinodb/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/trinodb/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/trinodb/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/trinodb/trino/merges",
                        "archive_url": "https://api.github.com/repos/trinodb/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/trinodb/trino/downloads",
                        "issues_url": "https://api.github.com/repos/trinodb/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/trinodb/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/trinodb/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/trinodb/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/trinodb/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/trinodb/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/trinodb/trino/deployments",
                        "created_at": "2019-01-19T06:38:14Z",
                        "updated_at": "2022-12-08T14:45:56Z",
                        "pushed_at": "2022-12-08T16:49:16Z",
                        "git_url": "git://github.com/trinodb/trino.git",
                        "ssh_url": "git@github.com:trinodb/trino.git",
                        "clone_url": "https://github.com/trinodb/trino.git",
                        "svn_url": "https://github.com/trinodb/trino",
                        "homepage": "https://trino.io",
                        "size": 198725,
                        "stargazers_count": 6805,
                        "watchers_count": 6805,
                        "language": "Java",
                        "has_issues": true,
                        "has_projects": false,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": true,
                        "forks_count": 2085,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 2089,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "analytics",
                            "big-data",
                            "data-science",
                            "database",
                            "databases",
                            "datalake",
                            "distributed-database",
                            "distributed-databases",
                            "distributed-systems",
                            "hadoop",
                            "hive",
                            "java",
                            "jdbc",
                            "presto",
                            "prestodb",
                            "query-engine",
                            "sql",
                            "trino"
                        ],
                        "visibility": "public",
                        "forks": 2085,
                        "open_issues": 2089,
                        "watchers": 6805,
                        "default_branch": "master"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337"
                    },
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15337"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15337"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15337/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/trinodb/trino/statuses/a3ff14606d70a46f592dbdd56eb32cb71a79ef91"
                    }
                },
                "author_association": "MEMBER",
                "auto_merge": null,
                "active_lock_reason": null
            }
        },
        "public": true,
        "created_at": "2022-12-08T17:09:24Z",
        "org": {
            "id": 34147222,
            "login": "trinodb",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/trinodb",
            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?"
        }
    },
    {
        "id": "25756988955",
        "type": "PullRequestReviewEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 166515022,
            "name": "trinodb/trino",
            "url": "https://api.github.com/repos/trinodb/trino"
        },
        "payload": {
            "action": "created",
            "review": {
                "id": 1210447926,
                "node_id": "PRR_kwDOCezRTs5IJfg2",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": null,
                "commit_id": "f88ba0cee83615211a54a7351df5656d7688ae1c",
                "submitted_at": "2022-12-08T17:09:24Z",
                "state": "commented",
                "html_url": "https://github.com/trinodb/trino/pull/15337#pullrequestreview-1210447926",
                "pull_request_url": "https://api.github.com/repos/trinodb/trino/pulls/15337",
                "author_association": "MEMBER",
                "_links": {
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15337#pullrequestreview-1210447926"
                    },
                    "pull_request": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337"
                    }
                }
            },
            "pull_request": {
                "url": "https://api.github.com/repos/trinodb/trino/pulls/15337",
                "id": 1152104129,
                "node_id": "PR_kwDOCezRTs5Eq7bB",
                "html_url": "https://github.com/trinodb/trino/pull/15337",
                "diff_url": "https://github.com/trinodb/trino/pull/15337.diff",
                "patch_url": "https://github.com/trinodb/trino/pull/15337.patch",
                "issue_url": "https://api.github.com/repos/trinodb/trino/issues/15337",
                "number": 15337,
                "state": "open",
                "locked": false,
                "title": "Fix test for invalid rate in FormatUtils.formatDataRate()",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "<!-- Thank you for submitting a pull request! Find more information in our development guide at https://github.com/trinodb/trino/blob/master/.github/DEVELOPMENT.md and contact us on #dev in Slack. -->\r\n<!-- Provide an overview of the PR for maintainers and reviewers. -->\r\n## Description\r\n\r\n`FormatUtils.formatDataRate()` contains the following code:\r\n\r\n```java\r\nlong rate = Math.round(dataSize.toBytes() / duration.getValue(SECONDS));\r\nif (Double.isNaN(rate) || Double.isInfinite(rate)) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nThe test can never evaluate as `true`, since both functions will return false for any `long`.\r\n\r\nThe correct test is:\r\n\r\n```java\r\nif (rate == Long.MAX_VALUE) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nIt's not necessary to test for `Long.MIN_VALUE`, since neither `dataSize` nor `duration` can be negative.\r\n\r\n<!-- Provide details that would help an engineer who is unfamiliar with this part of the code. -->\r\n## Unit Test\r\n\r\nI added a new class, `TestFormatUtils` to test both this fix and the rest of `FormatUtils`. The tests for this change are:\r\n\r\n```java\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), false), \"0B\");\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), true), \"0B/s\");\r\n```\r\n\r\n<!-- Mark the appropriate option with an (x). Propose a release note if you can. -->\r\n## Release notes\r\n\r\n(x) This is not user-visible or docs only and no release notes are required.\r\n( ) Release notes are required, please propose a release note for me.\r\n( ) Release notes are required, with the following suggested text:\r\n\r\n## Related Issue\r\n\r\nFixes #13093",
                "created_at": "2022-12-07T17:54:40Z",
                "updated_at": "2022-12-08T17:09:24Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": "04709a71679326dfa2fa43ab44d4da90024bf8c7",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [
                    {
                        "id": 1202580151,
                        "node_id": "MDU6TGFiZWwxMjAyNTgwMTUx",
                        "url": "https://api.github.com/repos/trinodb/trino/labels/cla-signed",
                        "name": "cla-signed",
                        "color": "ededed",
                        "default": false,
                        "description": null
                    }
                ],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/trinodb/trino/pulls/15337/commits",
                "review_comments_url": "https://api.github.com/repos/trinodb/trino/pulls/15337/comments",
                "review_comment_url": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/trinodb/trino/issues/15337/comments",
                "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/a3ff14606d70a46f592dbdd56eb32cb71a79ef91",
                "head": {
                    "label": "metadaddy:fix-formatdatarate-test",
                    "ref": "fix-formatdatarate-test",
                    "sha": "a3ff14606d70a46f592dbdd56eb32cb71a79ef91",
                    "user": {
                        "login": "metadaddy",
                        "id": 723517,
                        "node_id": "MDQ6VXNlcjcyMzUxNw==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/metadaddy",
                        "html_url": "https://github.com/metadaddy",
                        "followers_url": "https://api.github.com/users/metadaddy/followers",
                        "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                        "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                        "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                        "repos_url": "https://api.github.com/users/metadaddy/repos",
                        "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 509274784,
                        "node_id": "R_kgDOHlrqoA",
                        "name": "trino",
                        "full_name": "metadaddy/trino",
                        "private": false,
                        "owner": {
                            "login": "metadaddy",
                            "id": 723517,
                            "node_id": "MDQ6VXNlcjcyMzUxNw==",
                            "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/metadaddy",
                            "html_url": "https://github.com/metadaddy",
                            "followers_url": "https://api.github.com/users/metadaddy/followers",
                            "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                            "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                            "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                            "repos_url": "https://api.github.com/users/metadaddy/repos",
                            "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/metadaddy/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": true,
                        "url": "https://api.github.com/repos/metadaddy/trino",
                        "forks_url": "https://api.github.com/repos/metadaddy/trino/forks",
                        "keys_url": "https://api.github.com/repos/metadaddy/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/metadaddy/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/metadaddy/trino/teams",
                        "hooks_url": "https://api.github.com/repos/metadaddy/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/metadaddy/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/metadaddy/trino/events",
                        "assignees_url": "https://api.github.com/repos/metadaddy/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/metadaddy/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/metadaddy/trino/tags",
                        "blobs_url": "https://api.github.com/repos/metadaddy/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/metadaddy/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/metadaddy/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/metadaddy/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/metadaddy/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/metadaddy/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/metadaddy/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/metadaddy/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/metadaddy/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/metadaddy/trino/subscription",
                        "commits_url": "https://api.github.com/repos/metadaddy/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/metadaddy/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/metadaddy/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/metadaddy/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/metadaddy/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/metadaddy/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/metadaddy/trino/merges",
                        "archive_url": "https://api.github.com/repos/metadaddy/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/metadaddy/trino/downloads",
                        "issues_url": "https://api.github.com/repos/metadaddy/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/metadaddy/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/metadaddy/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/metadaddy/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/metadaddy/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/metadaddy/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/metadaddy/trino/deployments",
                        "created_at": "2022-07-01T00:43:32Z",
                        "updated_at": "2022-07-06T01:44:20Z",
                        "pushed_at": "2022-12-08T02:39:50Z",
                        "git_url": "git://github.com/metadaddy/trino.git",
                        "ssh_url": "git@github.com:metadaddy/trino.git",
                        "clone_url": "https://github.com/metadaddy/trino.git",
                        "svn_url": "https://github.com/metadaddy/trino",
                        "homepage": "https://trino.io",
                        "size": 197784,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": "Java",
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "master"
                    }
                },
                "base": {
                    "label": "trinodb:master",
                    "ref": "master",
                    "sha": "81d1525c7b0d24433712957632c0895847a6788b",
                    "user": {
                        "login": "trinodb",
                        "id": 34147222,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                        "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/trinodb",
                        "html_url": "https://github.com/trinodb",
                        "followers_url": "https://api.github.com/users/trinodb/followers",
                        "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                        "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                        "organizations_url": "https://api.github.com/users/trinodb/orgs",
                        "repos_url": "https://api.github.com/users/trinodb/repos",
                        "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/trinodb/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 166515022,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNjY1MTUwMjI=",
                        "name": "trino",
                        "full_name": "trinodb/trino",
                        "private": false,
                        "owner": {
                            "login": "trinodb",
                            "id": 34147222,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/trinodb",
                            "html_url": "https://github.com/trinodb",
                            "followers_url": "https://api.github.com/users/trinodb/followers",
                            "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                            "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                            "organizations_url": "https://api.github.com/users/trinodb/orgs",
                            "repos_url": "https://api.github.com/users/trinodb/repos",
                            "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/trinodb/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/trinodb/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": false,
                        "url": "https://api.github.com/repos/trinodb/trino",
                        "forks_url": "https://api.github.com/repos/trinodb/trino/forks",
                        "keys_url": "https://api.github.com/repos/trinodb/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/trinodb/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/trinodb/trino/teams",
                        "hooks_url": "https://api.github.com/repos/trinodb/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/trinodb/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/trinodb/trino/events",
                        "assignees_url": "https://api.github.com/repos/trinodb/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/trinodb/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/trinodb/trino/tags",
                        "blobs_url": "https://api.github.com/repos/trinodb/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/trinodb/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/trinodb/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/trinodb/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/trinodb/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/trinodb/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/trinodb/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/trinodb/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/trinodb/trino/subscription",
                        "commits_url": "https://api.github.com/repos/trinodb/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/trinodb/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/trinodb/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/trinodb/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/trinodb/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/trinodb/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/trinodb/trino/merges",
                        "archive_url": "https://api.github.com/repos/trinodb/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/trinodb/trino/downloads",
                        "issues_url": "https://api.github.com/repos/trinodb/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/trinodb/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/trinodb/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/trinodb/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/trinodb/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/trinodb/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/trinodb/trino/deployments",
                        "created_at": "2019-01-19T06:38:14Z",
                        "updated_at": "2022-12-08T14:45:56Z",
                        "pushed_at": "2022-12-08T16:49:16Z",
                        "git_url": "git://github.com/trinodb/trino.git",
                        "ssh_url": "git@github.com:trinodb/trino.git",
                        "clone_url": "https://github.com/trinodb/trino.git",
                        "svn_url": "https://github.com/trinodb/trino",
                        "homepage": "https://trino.io",
                        "size": 198725,
                        "stargazers_count": 6805,
                        "watchers_count": 6805,
                        "language": "Java",
                        "has_issues": true,
                        "has_projects": false,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": true,
                        "forks_count": 2085,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 2089,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "analytics",
                            "big-data",
                            "data-science",
                            "database",
                            "databases",
                            "datalake",
                            "distributed-database",
                            "distributed-databases",
                            "distributed-systems",
                            "hadoop",
                            "hive",
                            "java",
                            "jdbc",
                            "presto",
                            "prestodb",
                            "query-engine",
                            "sql",
                            "trino"
                        ],
                        "visibility": "public",
                        "forks": 2085,
                        "open_issues": 2089,
                        "watchers": 6805,
                        "default_branch": "master"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337"
                    },
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15337"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15337"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15337/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/trinodb/trino/statuses/a3ff14606d70a46f592dbdd56eb32cb71a79ef91"
                    }
                },
                "author_association": "MEMBER",
                "auto_merge": null,
                "active_lock_reason": null
            }
        },
        "public": true,
        "created_at": "2022-12-08T17:09:25Z",
        "org": {
            "id": 34147222,
            "login": "trinodb",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/trinodb",
            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?"
        }
    },
    {
        "id": "25756984491",
        "type": "PullRequestReviewCommentEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 166515022,
            "name": "trinodb/trino",
            "url": "https://api.github.com/repos/trinodb/trino"
        },
        "payload": {
            "action": "created",
            "comment": {
                "url": "https://api.github.com/repos/trinodb/trino/pulls/comments/1043597809",
                "pull_request_review_id": 1210447628,
                "id": 1043597809,
                "node_id": "PRRC_kwDOCezRTs4-NAnx",
                "diff_hunk": "@@ -115,7 +115,7 @@ else if (longForm) {\n     public static String formatDataRate(DataSize dataSize, Duration duration, boolean longForm)\n     {\n         long rate = Math.round(dataSize.toBytes() / duration.getValue(SECONDS));\n-        if (Double.isNaN(rate) || Double.isInfinite(rate)) {\n+        if (rate == Long.MAX_VALUE) {",
                "path": "client/trino-cli/src/main/java/io/trino/cli/FormatUtils.java",
                "position": 5,
                "original_position": 5,
                "commit_id": "a3ff14606d70a46f592dbdd56eb32cb71a79ef91",
                "original_commit_id": "f88ba0cee83615211a54a7351df5656d7688ae1c",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "Yes - this is how `formatCountRate` works. I'm merely fixing the check here so it works as intended.",
                "created_at": "2022-12-08T17:09:12Z",
                "updated_at": "2022-12-08T17:09:12Z",
                "html_url": "https://github.com/trinodb/trino/pull/15337#discussion_r1043597809",
                "pull_request_url": "https://api.github.com/repos/trinodb/trino/pulls/15337",
                "author_association": "MEMBER",
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/comments/1043597809"
                    },
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15337#discussion_r1043597809"
                    },
                    "pull_request": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337"
                    }
                },
                "reactions": {
                    "url": "https://api.github.com/repos/trinodb/trino/pulls/comments/1043597809/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "start_line": null,
                "original_start_line": null,
                "start_side": null,
                "line": 118,
                "original_line": 118,
                "side": "RIGHT",
                "in_reply_to_id": 1042706109
            },
            "pull_request": {
                "url": "https://api.github.com/repos/trinodb/trino/pulls/15337",
                "id": 1152104129,
                "node_id": "PR_kwDOCezRTs5Eq7bB",
                "html_url": "https://github.com/trinodb/trino/pull/15337",
                "diff_url": "https://github.com/trinodb/trino/pull/15337.diff",
                "patch_url": "https://github.com/trinodb/trino/pull/15337.patch",
                "issue_url": "https://api.github.com/repos/trinodb/trino/issues/15337",
                "number": 15337,
                "state": "open",
                "locked": false,
                "title": "Fix test for invalid rate in FormatUtils.formatDataRate()",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "<!-- Thank you for submitting a pull request! Find more information in our development guide at https://github.com/trinodb/trino/blob/master/.github/DEVELOPMENT.md and contact us on #dev in Slack. -->\r\n<!-- Provide an overview of the PR for maintainers and reviewers. -->\r\n## Description\r\n\r\n`FormatUtils.formatDataRate()` contains the following code:\r\n\r\n```java\r\nlong rate = Math.round(dataSize.toBytes() / duration.getValue(SECONDS));\r\nif (Double.isNaN(rate) || Double.isInfinite(rate)) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nThe test can never evaluate as `true`, since both functions will return false for any `long`.\r\n\r\nThe correct test is:\r\n\r\n```java\r\nif (rate == Long.MAX_VALUE) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nIt's not necessary to test for `Long.MIN_VALUE`, since neither `dataSize` nor `duration` can be negative.\r\n\r\n<!-- Provide details that would help an engineer who is unfamiliar with this part of the code. -->\r\n## Unit Test\r\n\r\nI added a new class, `TestFormatUtils` to test both this fix and the rest of `FormatUtils`. The tests for this change are:\r\n\r\n```java\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), false), \"0B\");\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), true), \"0B/s\");\r\n```\r\n\r\n<!-- Mark the appropriate option with an (x). Propose a release note if you can. -->\r\n## Release notes\r\n\r\n(x) This is not user-visible or docs only and no release notes are required.\r\n( ) Release notes are required, please propose a release note for me.\r\n( ) Release notes are required, with the following suggested text:\r\n\r\n## Related Issue\r\n\r\nFixes #13093",
                "created_at": "2022-12-07T17:54:40Z",
                "updated_at": "2022-12-08T17:09:12Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": "04709a71679326dfa2fa43ab44d4da90024bf8c7",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [
                    {
                        "id": 1202580151,
                        "node_id": "MDU6TGFiZWwxMjAyNTgwMTUx",
                        "url": "https://api.github.com/repos/trinodb/trino/labels/cla-signed",
                        "name": "cla-signed",
                        "color": "ededed",
                        "default": false,
                        "description": null
                    }
                ],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/trinodb/trino/pulls/15337/commits",
                "review_comments_url": "https://api.github.com/repos/trinodb/trino/pulls/15337/comments",
                "review_comment_url": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/trinodb/trino/issues/15337/comments",
                "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/a3ff14606d70a46f592dbdd56eb32cb71a79ef91",
                "head": {
                    "label": "metadaddy:fix-formatdatarate-test",
                    "ref": "fix-formatdatarate-test",
                    "sha": "a3ff14606d70a46f592dbdd56eb32cb71a79ef91",
                    "user": {
                        "login": "metadaddy",
                        "id": 723517,
                        "node_id": "MDQ6VXNlcjcyMzUxNw==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/metadaddy",
                        "html_url": "https://github.com/metadaddy",
                        "followers_url": "https://api.github.com/users/metadaddy/followers",
                        "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                        "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                        "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                        "repos_url": "https://api.github.com/users/metadaddy/repos",
                        "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 509274784,
                        "node_id": "R_kgDOHlrqoA",
                        "name": "trino",
                        "full_name": "metadaddy/trino",
                        "private": false,
                        "owner": {
                            "login": "metadaddy",
                            "id": 723517,
                            "node_id": "MDQ6VXNlcjcyMzUxNw==",
                            "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/metadaddy",
                            "html_url": "https://github.com/metadaddy",
                            "followers_url": "https://api.github.com/users/metadaddy/followers",
                            "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                            "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                            "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                            "repos_url": "https://api.github.com/users/metadaddy/repos",
                            "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/metadaddy/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": true,
                        "url": "https://api.github.com/repos/metadaddy/trino",
                        "forks_url": "https://api.github.com/repos/metadaddy/trino/forks",
                        "keys_url": "https://api.github.com/repos/metadaddy/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/metadaddy/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/metadaddy/trino/teams",
                        "hooks_url": "https://api.github.com/repos/metadaddy/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/metadaddy/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/metadaddy/trino/events",
                        "assignees_url": "https://api.github.com/repos/metadaddy/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/metadaddy/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/metadaddy/trino/tags",
                        "blobs_url": "https://api.github.com/repos/metadaddy/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/metadaddy/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/metadaddy/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/metadaddy/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/metadaddy/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/metadaddy/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/metadaddy/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/metadaddy/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/metadaddy/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/metadaddy/trino/subscription",
                        "commits_url": "https://api.github.com/repos/metadaddy/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/metadaddy/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/metadaddy/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/metadaddy/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/metadaddy/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/metadaddy/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/metadaddy/trino/merges",
                        "archive_url": "https://api.github.com/repos/metadaddy/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/metadaddy/trino/downloads",
                        "issues_url": "https://api.github.com/repos/metadaddy/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/metadaddy/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/metadaddy/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/metadaddy/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/metadaddy/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/metadaddy/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/metadaddy/trino/deployments",
                        "created_at": "2022-07-01T00:43:32Z",
                        "updated_at": "2022-07-06T01:44:20Z",
                        "pushed_at": "2022-12-08T02:39:50Z",
                        "git_url": "git://github.com/metadaddy/trino.git",
                        "ssh_url": "git@github.com:metadaddy/trino.git",
                        "clone_url": "https://github.com/metadaddy/trino.git",
                        "svn_url": "https://github.com/metadaddy/trino",
                        "homepage": "https://trino.io",
                        "size": 197784,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": "Java",
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "master"
                    }
                },
                "base": {
                    "label": "trinodb:master",
                    "ref": "master",
                    "sha": "81d1525c7b0d24433712957632c0895847a6788b",
                    "user": {
                        "login": "trinodb",
                        "id": 34147222,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                        "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/trinodb",
                        "html_url": "https://github.com/trinodb",
                        "followers_url": "https://api.github.com/users/trinodb/followers",
                        "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                        "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                        "organizations_url": "https://api.github.com/users/trinodb/orgs",
                        "repos_url": "https://api.github.com/users/trinodb/repos",
                        "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/trinodb/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 166515022,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNjY1MTUwMjI=",
                        "name": "trino",
                        "full_name": "trinodb/trino",
                        "private": false,
                        "owner": {
                            "login": "trinodb",
                            "id": 34147222,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/trinodb",
                            "html_url": "https://github.com/trinodb",
                            "followers_url": "https://api.github.com/users/trinodb/followers",
                            "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                            "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                            "organizations_url": "https://api.github.com/users/trinodb/orgs",
                            "repos_url": "https://api.github.com/users/trinodb/repos",
                            "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/trinodb/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/trinodb/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": false,
                        "url": "https://api.github.com/repos/trinodb/trino",
                        "forks_url": "https://api.github.com/repos/trinodb/trino/forks",
                        "keys_url": "https://api.github.com/repos/trinodb/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/trinodb/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/trinodb/trino/teams",
                        "hooks_url": "https://api.github.com/repos/trinodb/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/trinodb/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/trinodb/trino/events",
                        "assignees_url": "https://api.github.com/repos/trinodb/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/trinodb/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/trinodb/trino/tags",
                        "blobs_url": "https://api.github.com/repos/trinodb/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/trinodb/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/trinodb/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/trinodb/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/trinodb/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/trinodb/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/trinodb/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/trinodb/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/trinodb/trino/subscription",
                        "commits_url": "https://api.github.com/repos/trinodb/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/trinodb/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/trinodb/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/trinodb/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/trinodb/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/trinodb/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/trinodb/trino/merges",
                        "archive_url": "https://api.github.com/repos/trinodb/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/trinodb/trino/downloads",
                        "issues_url": "https://api.github.com/repos/trinodb/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/trinodb/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/trinodb/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/trinodb/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/trinodb/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/trinodb/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/trinodb/trino/deployments",
                        "created_at": "2019-01-19T06:38:14Z",
                        "updated_at": "2022-12-08T14:45:56Z",
                        "pushed_at": "2022-12-08T16:49:16Z",
                        "git_url": "git://github.com/trinodb/trino.git",
                        "ssh_url": "git@github.com:trinodb/trino.git",
                        "clone_url": "https://github.com/trinodb/trino.git",
                        "svn_url": "https://github.com/trinodb/trino",
                        "homepage": "https://trino.io",
                        "size": 198725,
                        "stargazers_count": 6805,
                        "watchers_count": 6805,
                        "language": "Java",
                        "has_issues": true,
                        "has_projects": false,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": true,
                        "forks_count": 2085,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 2089,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "analytics",
                            "big-data",
                            "data-science",
                            "database",
                            "databases",
                            "datalake",
                            "distributed-database",
                            "distributed-databases",
                            "distributed-systems",
                            "hadoop",
                            "hive",
                            "java",
                            "jdbc",
                            "presto",
                            "prestodb",
                            "query-engine",
                            "sql",
                            "trino"
                        ],
                        "visibility": "public",
                        "forks": 2085,
                        "open_issues": 2089,
                        "watchers": 6805,
                        "default_branch": "master"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337"
                    },
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15337"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15337"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15337/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/trinodb/trino/statuses/a3ff14606d70a46f592dbdd56eb32cb71a79ef91"
                    }
                },
                "author_association": "MEMBER",
                "auto_merge": null,
                "active_lock_reason": null
            }
        },
        "public": true,
        "created_at": "2022-12-08T17:09:12Z",
        "org": {
            "id": 34147222,
            "login": "trinodb",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/trinodb",
            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?"
        }
    },
    {
        "id": "25756984490",
        "type": "PullRequestReviewEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 166515022,
            "name": "trinodb/trino",
            "url": "https://api.github.com/repos/trinodb/trino"
        },
        "payload": {
            "action": "created",
            "review": {
                "id": 1210447628,
                "node_id": "PRR_kwDOCezRTs5IJfcM",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": null,
                "commit_id": "f88ba0cee83615211a54a7351df5656d7688ae1c",
                "submitted_at": "2022-12-08T17:09:12Z",
                "state": "commented",
                "html_url": "https://github.com/trinodb/trino/pull/15337#pullrequestreview-1210447628",
                "pull_request_url": "https://api.github.com/repos/trinodb/trino/pulls/15337",
                "author_association": "MEMBER",
                "_links": {
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15337#pullrequestreview-1210447628"
                    },
                    "pull_request": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337"
                    }
                }
            },
            "pull_request": {
                "url": "https://api.github.com/repos/trinodb/trino/pulls/15337",
                "id": 1152104129,
                "node_id": "PR_kwDOCezRTs5Eq7bB",
                "html_url": "https://github.com/trinodb/trino/pull/15337",
                "diff_url": "https://github.com/trinodb/trino/pull/15337.diff",
                "patch_url": "https://github.com/trinodb/trino/pull/15337.patch",
                "issue_url": "https://api.github.com/repos/trinodb/trino/issues/15337",
                "number": 15337,
                "state": "open",
                "locked": false,
                "title": "Fix test for invalid rate in FormatUtils.formatDataRate()",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "<!-- Thank you for submitting a pull request! Find more information in our development guide at https://github.com/trinodb/trino/blob/master/.github/DEVELOPMENT.md and contact us on #dev in Slack. -->\r\n<!-- Provide an overview of the PR for maintainers and reviewers. -->\r\n## Description\r\n\r\n`FormatUtils.formatDataRate()` contains the following code:\r\n\r\n```java\r\nlong rate = Math.round(dataSize.toBytes() / duration.getValue(SECONDS));\r\nif (Double.isNaN(rate) || Double.isInfinite(rate)) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nThe test can never evaluate as `true`, since both functions will return false for any `long`.\r\n\r\nThe correct test is:\r\n\r\n```java\r\nif (rate == Long.MAX_VALUE) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nIt's not necessary to test for `Long.MIN_VALUE`, since neither `dataSize` nor `duration` can be negative.\r\n\r\n<!-- Provide details that would help an engineer who is unfamiliar with this part of the code. -->\r\n## Unit Test\r\n\r\nI added a new class, `TestFormatUtils` to test both this fix and the rest of `FormatUtils`. The tests for this change are:\r\n\r\n```java\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), false), \"0B\");\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), true), \"0B/s\");\r\n```\r\n\r\n<!-- Mark the appropriate option with an (x). Propose a release note if you can. -->\r\n## Release notes\r\n\r\n(x) This is not user-visible or docs only and no release notes are required.\r\n( ) Release notes are required, please propose a release note for me.\r\n( ) Release notes are required, with the following suggested text:\r\n\r\n## Related Issue\r\n\r\nFixes #13093",
                "created_at": "2022-12-07T17:54:40Z",
                "updated_at": "2022-12-08T17:09:12Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": "04709a71679326dfa2fa43ab44d4da90024bf8c7",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [
                    {
                        "id": 1202580151,
                        "node_id": "MDU6TGFiZWwxMjAyNTgwMTUx",
                        "url": "https://api.github.com/repos/trinodb/trino/labels/cla-signed",
                        "name": "cla-signed",
                        "color": "ededed",
                        "default": false,
                        "description": null
                    }
                ],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/trinodb/trino/pulls/15337/commits",
                "review_comments_url": "https://api.github.com/repos/trinodb/trino/pulls/15337/comments",
                "review_comment_url": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/trinodb/trino/issues/15337/comments",
                "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/a3ff14606d70a46f592dbdd56eb32cb71a79ef91",
                "head": {
                    "label": "metadaddy:fix-formatdatarate-test",
                    "ref": "fix-formatdatarate-test",
                    "sha": "a3ff14606d70a46f592dbdd56eb32cb71a79ef91",
                    "user": {
                        "login": "metadaddy",
                        "id": 723517,
                        "node_id": "MDQ6VXNlcjcyMzUxNw==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/metadaddy",
                        "html_url": "https://github.com/metadaddy",
                        "followers_url": "https://api.github.com/users/metadaddy/followers",
                        "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                        "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                        "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                        "repos_url": "https://api.github.com/users/metadaddy/repos",
                        "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 509274784,
                        "node_id": "R_kgDOHlrqoA",
                        "name": "trino",
                        "full_name": "metadaddy/trino",
                        "private": false,
                        "owner": {
                            "login": "metadaddy",
                            "id": 723517,
                            "node_id": "MDQ6VXNlcjcyMzUxNw==",
                            "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/metadaddy",
                            "html_url": "https://github.com/metadaddy",
                            "followers_url": "https://api.github.com/users/metadaddy/followers",
                            "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                            "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                            "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                            "repos_url": "https://api.github.com/users/metadaddy/repos",
                            "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/metadaddy/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": true,
                        "url": "https://api.github.com/repos/metadaddy/trino",
                        "forks_url": "https://api.github.com/repos/metadaddy/trino/forks",
                        "keys_url": "https://api.github.com/repos/metadaddy/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/metadaddy/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/metadaddy/trino/teams",
                        "hooks_url": "https://api.github.com/repos/metadaddy/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/metadaddy/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/metadaddy/trino/events",
                        "assignees_url": "https://api.github.com/repos/metadaddy/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/metadaddy/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/metadaddy/trino/tags",
                        "blobs_url": "https://api.github.com/repos/metadaddy/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/metadaddy/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/metadaddy/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/metadaddy/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/metadaddy/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/metadaddy/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/metadaddy/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/metadaddy/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/metadaddy/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/metadaddy/trino/subscription",
                        "commits_url": "https://api.github.com/repos/metadaddy/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/metadaddy/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/metadaddy/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/metadaddy/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/metadaddy/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/metadaddy/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/metadaddy/trino/merges",
                        "archive_url": "https://api.github.com/repos/metadaddy/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/metadaddy/trino/downloads",
                        "issues_url": "https://api.github.com/repos/metadaddy/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/metadaddy/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/metadaddy/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/metadaddy/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/metadaddy/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/metadaddy/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/metadaddy/trino/deployments",
                        "created_at": "2022-07-01T00:43:32Z",
                        "updated_at": "2022-07-06T01:44:20Z",
                        "pushed_at": "2022-12-08T02:39:50Z",
                        "git_url": "git://github.com/metadaddy/trino.git",
                        "ssh_url": "git@github.com:metadaddy/trino.git",
                        "clone_url": "https://github.com/metadaddy/trino.git",
                        "svn_url": "https://github.com/metadaddy/trino",
                        "homepage": "https://trino.io",
                        "size": 197784,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": "Java",
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "master"
                    }
                },
                "base": {
                    "label": "trinodb:master",
                    "ref": "master",
                    "sha": "81d1525c7b0d24433712957632c0895847a6788b",
                    "user": {
                        "login": "trinodb",
                        "id": 34147222,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                        "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/trinodb",
                        "html_url": "https://github.com/trinodb",
                        "followers_url": "https://api.github.com/users/trinodb/followers",
                        "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                        "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                        "organizations_url": "https://api.github.com/users/trinodb/orgs",
                        "repos_url": "https://api.github.com/users/trinodb/repos",
                        "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/trinodb/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 166515022,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNjY1MTUwMjI=",
                        "name": "trino",
                        "full_name": "trinodb/trino",
                        "private": false,
                        "owner": {
                            "login": "trinodb",
                            "id": 34147222,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/trinodb",
                            "html_url": "https://github.com/trinodb",
                            "followers_url": "https://api.github.com/users/trinodb/followers",
                            "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                            "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                            "organizations_url": "https://api.github.com/users/trinodb/orgs",
                            "repos_url": "https://api.github.com/users/trinodb/repos",
                            "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/trinodb/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/trinodb/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": false,
                        "url": "https://api.github.com/repos/trinodb/trino",
                        "forks_url": "https://api.github.com/repos/trinodb/trino/forks",
                        "keys_url": "https://api.github.com/repos/trinodb/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/trinodb/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/trinodb/trino/teams",
                        "hooks_url": "https://api.github.com/repos/trinodb/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/trinodb/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/trinodb/trino/events",
                        "assignees_url": "https://api.github.com/repos/trinodb/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/trinodb/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/trinodb/trino/tags",
                        "blobs_url": "https://api.github.com/repos/trinodb/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/trinodb/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/trinodb/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/trinodb/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/trinodb/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/trinodb/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/trinodb/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/trinodb/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/trinodb/trino/subscription",
                        "commits_url": "https://api.github.com/repos/trinodb/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/trinodb/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/trinodb/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/trinodb/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/trinodb/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/trinodb/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/trinodb/trino/merges",
                        "archive_url": "https://api.github.com/repos/trinodb/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/trinodb/trino/downloads",
                        "issues_url": "https://api.github.com/repos/trinodb/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/trinodb/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/trinodb/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/trinodb/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/trinodb/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/trinodb/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/trinodb/trino/deployments",
                        "created_at": "2019-01-19T06:38:14Z",
                        "updated_at": "2022-12-08T14:45:56Z",
                        "pushed_at": "2022-12-08T16:49:16Z",
                        "git_url": "git://github.com/trinodb/trino.git",
                        "ssh_url": "git@github.com:trinodb/trino.git",
                        "clone_url": "https://github.com/trinodb/trino.git",
                        "svn_url": "https://github.com/trinodb/trino",
                        "homepage": "https://trino.io",
                        "size": 198725,
                        "stargazers_count": 6805,
                        "watchers_count": 6805,
                        "language": "Java",
                        "has_issues": true,
                        "has_projects": false,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": true,
                        "forks_count": 2085,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 2089,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "analytics",
                            "big-data",
                            "data-science",
                            "database",
                            "databases",
                            "datalake",
                            "distributed-database",
                            "distributed-databases",
                            "distributed-systems",
                            "hadoop",
                            "hive",
                            "java",
                            "jdbc",
                            "presto",
                            "prestodb",
                            "query-engine",
                            "sql",
                            "trino"
                        ],
                        "visibility": "public",
                        "forks": 2085,
                        "open_issues": 2089,
                        "watchers": 6805,
                        "default_branch": "master"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337"
                    },
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15337"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15337"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15337/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/trinodb/trino/statuses/a3ff14606d70a46f592dbdd56eb32cb71a79ef91"
                    }
                },
                "author_association": "MEMBER",
                "auto_merge": null,
                "active_lock_reason": null
            }
        },
        "public": true,
        "created_at": "2022-12-08T17:09:13Z",
        "org": {
            "id": 34147222,
            "login": "trinodb",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/trinodb",
            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?"
        }
    },
    {
        "id": "25756941369",
        "type": "PullRequestReviewCommentEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 166515022,
            "name": "trinodb/trino",
            "url": "https://api.github.com/repos/trinodb/trino"
        },
        "payload": {
            "action": "created",
            "comment": {
                "url": "https://api.github.com/repos/trinodb/trino/pulls/comments/1043596066",
                "pull_request_review_id": 1210444969,
                "id": 1043596066,
                "node_id": "PRRC_kwDOCezRTs4-NAMi",
                "diff_hunk": "@@ -275,6 +275,9 @@ public void testFormatDataRate()\n         assertEquals(formatDataRate(DataSize.ofBytes(864000), Duration.valueOf(\"10d\"), true), \"1B/s\");\n         assertEquals(formatDataRate(DataSize.ofBytes(8640000), Duration.valueOf(\"10d\"), false), \"10B\");\n         assertEquals(formatDataRate(DataSize.ofBytes(8640000), Duration.valueOf(\"10d\"), true), \"10B/s\");\n+\n+        assertEquals(formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), false), \"0B\");",
                "path": "client/trino-cli/src/test/java/io/trino/cli/TestFormatUtils.java",
                "position": 5,
                "original_position": 5,
                "commit_id": "a3ff14606d70a46f592dbdd56eb32cb71a79ef91",
                "original_commit_id": "a3ff14606d70a46f592dbdd56eb32cb71a79ef91",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "I don't know; I'm simply honoring the intent of the original code written by @electrum ",
                "created_at": "2022-12-08T17:07:22Z",
                "updated_at": "2022-12-08T17:07:22Z",
                "html_url": "https://github.com/trinodb/trino/pull/15337#discussion_r1043596066",
                "pull_request_url": "https://api.github.com/repos/trinodb/trino/pulls/15337",
                "author_association": "MEMBER",
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/comments/1043596066"
                    },
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15337#discussion_r1043596066"
                    },
                    "pull_request": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337"
                    }
                },
                "reactions": {
                    "url": "https://api.github.com/repos/trinodb/trino/pulls/comments/1043596066/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "start_line": null,
                "original_start_line": null,
                "start_side": null,
                "line": 279,
                "original_line": 279,
                "side": "RIGHT",
                "in_reply_to_id": 1043145437
            },
            "pull_request": {
                "url": "https://api.github.com/repos/trinodb/trino/pulls/15337",
                "id": 1152104129,
                "node_id": "PR_kwDOCezRTs5Eq7bB",
                "html_url": "https://github.com/trinodb/trino/pull/15337",
                "diff_url": "https://github.com/trinodb/trino/pull/15337.diff",
                "patch_url": "https://github.com/trinodb/trino/pull/15337.patch",
                "issue_url": "https://api.github.com/repos/trinodb/trino/issues/15337",
                "number": 15337,
                "state": "open",
                "locked": false,
                "title": "Fix test for invalid rate in FormatUtils.formatDataRate()",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "<!-- Thank you for submitting a pull request! Find more information in our development guide at https://github.com/trinodb/trino/blob/master/.github/DEVELOPMENT.md and contact us on #dev in Slack. -->\r\n<!-- Provide an overview of the PR for maintainers and reviewers. -->\r\n## Description\r\n\r\n`FormatUtils.formatDataRate()` contains the following code:\r\n\r\n```java\r\nlong rate = Math.round(dataSize.toBytes() / duration.getValue(SECONDS));\r\nif (Double.isNaN(rate) || Double.isInfinite(rate)) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nThe test can never evaluate as `true`, since both functions will return false for any `long`.\r\n\r\nThe correct test is:\r\n\r\n```java\r\nif (rate == Long.MAX_VALUE) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nIt's not necessary to test for `Long.MIN_VALUE`, since neither `dataSize` nor `duration` can be negative.\r\n\r\n<!-- Provide details that would help an engineer who is unfamiliar with this part of the code. -->\r\n## Unit Test\r\n\r\nI added a new class, `TestFormatUtils` to test both this fix and the rest of `FormatUtils`. The tests for this change are:\r\n\r\n```java\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), false), \"0B\");\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), true), \"0B/s\");\r\n```\r\n\r\n<!-- Mark the appropriate option with an (x). Propose a release note if you can. -->\r\n## Release notes\r\n\r\n(x) This is not user-visible or docs only and no release notes are required.\r\n( ) Release notes are required, please propose a release note for me.\r\n( ) Release notes are required, with the following suggested text:\r\n\r\n## Related Issue\r\n\r\nFixes #13093",
                "created_at": "2022-12-07T17:54:40Z",
                "updated_at": "2022-12-08T17:07:22Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": "04709a71679326dfa2fa43ab44d4da90024bf8c7",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [
                    {
                        "id": 1202580151,
                        "node_id": "MDU6TGFiZWwxMjAyNTgwMTUx",
                        "url": "https://api.github.com/repos/trinodb/trino/labels/cla-signed",
                        "name": "cla-signed",
                        "color": "ededed",
                        "default": false,
                        "description": null
                    }
                ],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/trinodb/trino/pulls/15337/commits",
                "review_comments_url": "https://api.github.com/repos/trinodb/trino/pulls/15337/comments",
                "review_comment_url": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/trinodb/trino/issues/15337/comments",
                "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/a3ff14606d70a46f592dbdd56eb32cb71a79ef91",
                "head": {
                    "label": "metadaddy:fix-formatdatarate-test",
                    "ref": "fix-formatdatarate-test",
                    "sha": "a3ff14606d70a46f592dbdd56eb32cb71a79ef91",
                    "user": {
                        "login": "metadaddy",
                        "id": 723517,
                        "node_id": "MDQ6VXNlcjcyMzUxNw==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/metadaddy",
                        "html_url": "https://github.com/metadaddy",
                        "followers_url": "https://api.github.com/users/metadaddy/followers",
                        "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                        "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                        "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                        "repos_url": "https://api.github.com/users/metadaddy/repos",
                        "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 509274784,
                        "node_id": "R_kgDOHlrqoA",
                        "name": "trino",
                        "full_name": "metadaddy/trino",
                        "private": false,
                        "owner": {
                            "login": "metadaddy",
                            "id": 723517,
                            "node_id": "MDQ6VXNlcjcyMzUxNw==",
                            "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/metadaddy",
                            "html_url": "https://github.com/metadaddy",
                            "followers_url": "https://api.github.com/users/metadaddy/followers",
                            "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                            "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                            "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                            "repos_url": "https://api.github.com/users/metadaddy/repos",
                            "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/metadaddy/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": true,
                        "url": "https://api.github.com/repos/metadaddy/trino",
                        "forks_url": "https://api.github.com/repos/metadaddy/trino/forks",
                        "keys_url": "https://api.github.com/repos/metadaddy/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/metadaddy/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/metadaddy/trino/teams",
                        "hooks_url": "https://api.github.com/repos/metadaddy/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/metadaddy/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/metadaddy/trino/events",
                        "assignees_url": "https://api.github.com/repos/metadaddy/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/metadaddy/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/metadaddy/trino/tags",
                        "blobs_url": "https://api.github.com/repos/metadaddy/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/metadaddy/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/metadaddy/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/metadaddy/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/metadaddy/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/metadaddy/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/metadaddy/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/metadaddy/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/metadaddy/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/metadaddy/trino/subscription",
                        "commits_url": "https://api.github.com/repos/metadaddy/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/metadaddy/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/metadaddy/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/metadaddy/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/metadaddy/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/metadaddy/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/metadaddy/trino/merges",
                        "archive_url": "https://api.github.com/repos/metadaddy/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/metadaddy/trino/downloads",
                        "issues_url": "https://api.github.com/repos/metadaddy/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/metadaddy/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/metadaddy/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/metadaddy/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/metadaddy/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/metadaddy/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/metadaddy/trino/deployments",
                        "created_at": "2022-07-01T00:43:32Z",
                        "updated_at": "2022-07-06T01:44:20Z",
                        "pushed_at": "2022-12-08T02:39:50Z",
                        "git_url": "git://github.com/metadaddy/trino.git",
                        "ssh_url": "git@github.com:metadaddy/trino.git",
                        "clone_url": "https://github.com/metadaddy/trino.git",
                        "svn_url": "https://github.com/metadaddy/trino",
                        "homepage": "https://trino.io",
                        "size": 197784,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": "Java",
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "master"
                    }
                },
                "base": {
                    "label": "trinodb:master",
                    "ref": "master",
                    "sha": "81d1525c7b0d24433712957632c0895847a6788b",
                    "user": {
                        "login": "trinodb",
                        "id": 34147222,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                        "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/trinodb",
                        "html_url": "https://github.com/trinodb",
                        "followers_url": "https://api.github.com/users/trinodb/followers",
                        "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                        "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                        "organizations_url": "https://api.github.com/users/trinodb/orgs",
                        "repos_url": "https://api.github.com/users/trinodb/repos",
                        "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/trinodb/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 166515022,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNjY1MTUwMjI=",
                        "name": "trino",
                        "full_name": "trinodb/trino",
                        "private": false,
                        "owner": {
                            "login": "trinodb",
                            "id": 34147222,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/trinodb",
                            "html_url": "https://github.com/trinodb",
                            "followers_url": "https://api.github.com/users/trinodb/followers",
                            "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                            "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                            "organizations_url": "https://api.github.com/users/trinodb/orgs",
                            "repos_url": "https://api.github.com/users/trinodb/repos",
                            "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/trinodb/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/trinodb/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": false,
                        "url": "https://api.github.com/repos/trinodb/trino",
                        "forks_url": "https://api.github.com/repos/trinodb/trino/forks",
                        "keys_url": "https://api.github.com/repos/trinodb/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/trinodb/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/trinodb/trino/teams",
                        "hooks_url": "https://api.github.com/repos/trinodb/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/trinodb/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/trinodb/trino/events",
                        "assignees_url": "https://api.github.com/repos/trinodb/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/trinodb/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/trinodb/trino/tags",
                        "blobs_url": "https://api.github.com/repos/trinodb/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/trinodb/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/trinodb/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/trinodb/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/trinodb/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/trinodb/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/trinodb/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/trinodb/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/trinodb/trino/subscription",
                        "commits_url": "https://api.github.com/repos/trinodb/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/trinodb/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/trinodb/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/trinodb/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/trinodb/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/trinodb/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/trinodb/trino/merges",
                        "archive_url": "https://api.github.com/repos/trinodb/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/trinodb/trino/downloads",
                        "issues_url": "https://api.github.com/repos/trinodb/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/trinodb/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/trinodb/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/trinodb/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/trinodb/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/trinodb/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/trinodb/trino/deployments",
                        "created_at": "2019-01-19T06:38:14Z",
                        "updated_at": "2022-12-08T14:45:56Z",
                        "pushed_at": "2022-12-08T16:49:16Z",
                        "git_url": "git://github.com/trinodb/trino.git",
                        "ssh_url": "git@github.com:trinodb/trino.git",
                        "clone_url": "https://github.com/trinodb/trino.git",
                        "svn_url": "https://github.com/trinodb/trino",
                        "homepage": "https://trino.io",
                        "size": 198725,
                        "stargazers_count": 6805,
                        "watchers_count": 6805,
                        "language": "Java",
                        "has_issues": true,
                        "has_projects": false,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": true,
                        "forks_count": 2085,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 2089,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "analytics",
                            "big-data",
                            "data-science",
                            "database",
                            "databases",
                            "datalake",
                            "distributed-database",
                            "distributed-databases",
                            "distributed-systems",
                            "hadoop",
                            "hive",
                            "java",
                            "jdbc",
                            "presto",
                            "prestodb",
                            "query-engine",
                            "sql",
                            "trino"
                        ],
                        "visibility": "public",
                        "forks": 2085,
                        "open_issues": 2089,
                        "watchers": 6805,
                        "default_branch": "master"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337"
                    },
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15337"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15337"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15337/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/trinodb/trino/statuses/a3ff14606d70a46f592dbdd56eb32cb71a79ef91"
                    }
                },
                "author_association": "MEMBER",
                "auto_merge": null,
                "active_lock_reason": null
            }
        },
        "public": true,
        "created_at": "2022-12-08T17:07:22Z",
        "org": {
            "id": 34147222,
            "login": "trinodb",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/trinodb",
            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?"
        }
    },
    {
        "id": "25756941304",
        "type": "PullRequestReviewEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 166515022,
            "name": "trinodb/trino",
            "url": "https://api.github.com/repos/trinodb/trino"
        },
        "payload": {
            "action": "created",
            "review": {
                "id": 1210444969,
                "node_id": "PRR_kwDOCezRTs5IJeyp",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": null,
                "commit_id": "a3ff14606d70a46f592dbdd56eb32cb71a79ef91",
                "submitted_at": "2022-12-08T17:07:22Z",
                "state": "commented",
                "html_url": "https://github.com/trinodb/trino/pull/15337#pullrequestreview-1210444969",
                "pull_request_url": "https://api.github.com/repos/trinodb/trino/pulls/15337",
                "author_association": "MEMBER",
                "_links": {
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15337#pullrequestreview-1210444969"
                    },
                    "pull_request": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337"
                    }
                }
            },
            "pull_request": {
                "url": "https://api.github.com/repos/trinodb/trino/pulls/15337",
                "id": 1152104129,
                "node_id": "PR_kwDOCezRTs5Eq7bB",
                "html_url": "https://github.com/trinodb/trino/pull/15337",
                "diff_url": "https://github.com/trinodb/trino/pull/15337.diff",
                "patch_url": "https://github.com/trinodb/trino/pull/15337.patch",
                "issue_url": "https://api.github.com/repos/trinodb/trino/issues/15337",
                "number": 15337,
                "state": "open",
                "locked": false,
                "title": "Fix test for invalid rate in FormatUtils.formatDataRate()",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "<!-- Thank you for submitting a pull request! Find more information in our development guide at https://github.com/trinodb/trino/blob/master/.github/DEVELOPMENT.md and contact us on #dev in Slack. -->\r\n<!-- Provide an overview of the PR for maintainers and reviewers. -->\r\n## Description\r\n\r\n`FormatUtils.formatDataRate()` contains the following code:\r\n\r\n```java\r\nlong rate = Math.round(dataSize.toBytes() / duration.getValue(SECONDS));\r\nif (Double.isNaN(rate) || Double.isInfinite(rate)) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nThe test can never evaluate as `true`, since both functions will return false for any `long`.\r\n\r\nThe correct test is:\r\n\r\n```java\r\nif (rate == Long.MAX_VALUE) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nIt's not necessary to test for `Long.MIN_VALUE`, since neither `dataSize` nor `duration` can be negative.\r\n\r\n<!-- Provide details that would help an engineer who is unfamiliar with this part of the code. -->\r\n## Unit Test\r\n\r\nI added a new class, `TestFormatUtils` to test both this fix and the rest of `FormatUtils`. The tests for this change are:\r\n\r\n```java\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), false), \"0B\");\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), true), \"0B/s\");\r\n```\r\n\r\n<!-- Mark the appropriate option with an (x). Propose a release note if you can. -->\r\n## Release notes\r\n\r\n(x) This is not user-visible or docs only and no release notes are required.\r\n( ) Release notes are required, please propose a release note for me.\r\n( ) Release notes are required, with the following suggested text:\r\n\r\n## Related Issue\r\n\r\nFixes #13093",
                "created_at": "2022-12-07T17:54:40Z",
                "updated_at": "2022-12-08T17:07:22Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": "04709a71679326dfa2fa43ab44d4da90024bf8c7",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [
                    {
                        "id": 1202580151,
                        "node_id": "MDU6TGFiZWwxMjAyNTgwMTUx",
                        "url": "https://api.github.com/repos/trinodb/trino/labels/cla-signed",
                        "name": "cla-signed",
                        "color": "ededed",
                        "default": false,
                        "description": null
                    }
                ],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/trinodb/trino/pulls/15337/commits",
                "review_comments_url": "https://api.github.com/repos/trinodb/trino/pulls/15337/comments",
                "review_comment_url": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/trinodb/trino/issues/15337/comments",
                "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/a3ff14606d70a46f592dbdd56eb32cb71a79ef91",
                "head": {
                    "label": "metadaddy:fix-formatdatarate-test",
                    "ref": "fix-formatdatarate-test",
                    "sha": "a3ff14606d70a46f592dbdd56eb32cb71a79ef91",
                    "user": {
                        "login": "metadaddy",
                        "id": 723517,
                        "node_id": "MDQ6VXNlcjcyMzUxNw==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/metadaddy",
                        "html_url": "https://github.com/metadaddy",
                        "followers_url": "https://api.github.com/users/metadaddy/followers",
                        "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                        "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                        "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                        "repos_url": "https://api.github.com/users/metadaddy/repos",
                        "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 509274784,
                        "node_id": "R_kgDOHlrqoA",
                        "name": "trino",
                        "full_name": "metadaddy/trino",
                        "private": false,
                        "owner": {
                            "login": "metadaddy",
                            "id": 723517,
                            "node_id": "MDQ6VXNlcjcyMzUxNw==",
                            "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/metadaddy",
                            "html_url": "https://github.com/metadaddy",
                            "followers_url": "https://api.github.com/users/metadaddy/followers",
                            "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                            "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                            "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                            "repos_url": "https://api.github.com/users/metadaddy/repos",
                            "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/metadaddy/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": true,
                        "url": "https://api.github.com/repos/metadaddy/trino",
                        "forks_url": "https://api.github.com/repos/metadaddy/trino/forks",
                        "keys_url": "https://api.github.com/repos/metadaddy/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/metadaddy/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/metadaddy/trino/teams",
                        "hooks_url": "https://api.github.com/repos/metadaddy/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/metadaddy/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/metadaddy/trino/events",
                        "assignees_url": "https://api.github.com/repos/metadaddy/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/metadaddy/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/metadaddy/trino/tags",
                        "blobs_url": "https://api.github.com/repos/metadaddy/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/metadaddy/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/metadaddy/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/metadaddy/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/metadaddy/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/metadaddy/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/metadaddy/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/metadaddy/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/metadaddy/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/metadaddy/trino/subscription",
                        "commits_url": "https://api.github.com/repos/metadaddy/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/metadaddy/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/metadaddy/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/metadaddy/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/metadaddy/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/metadaddy/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/metadaddy/trino/merges",
                        "archive_url": "https://api.github.com/repos/metadaddy/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/metadaddy/trino/downloads",
                        "issues_url": "https://api.github.com/repos/metadaddy/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/metadaddy/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/metadaddy/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/metadaddy/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/metadaddy/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/metadaddy/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/metadaddy/trino/deployments",
                        "created_at": "2022-07-01T00:43:32Z",
                        "updated_at": "2022-07-06T01:44:20Z",
                        "pushed_at": "2022-12-08T02:39:50Z",
                        "git_url": "git://github.com/metadaddy/trino.git",
                        "ssh_url": "git@github.com:metadaddy/trino.git",
                        "clone_url": "https://github.com/metadaddy/trino.git",
                        "svn_url": "https://github.com/metadaddy/trino",
                        "homepage": "https://trino.io",
                        "size": 197784,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": "Java",
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "master"
                    }
                },
                "base": {
                    "label": "trinodb:master",
                    "ref": "master",
                    "sha": "81d1525c7b0d24433712957632c0895847a6788b",
                    "user": {
                        "login": "trinodb",
                        "id": 34147222,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                        "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/trinodb",
                        "html_url": "https://github.com/trinodb",
                        "followers_url": "https://api.github.com/users/trinodb/followers",
                        "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                        "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                        "organizations_url": "https://api.github.com/users/trinodb/orgs",
                        "repos_url": "https://api.github.com/users/trinodb/repos",
                        "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/trinodb/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 166515022,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNjY1MTUwMjI=",
                        "name": "trino",
                        "full_name": "trinodb/trino",
                        "private": false,
                        "owner": {
                            "login": "trinodb",
                            "id": 34147222,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/trinodb",
                            "html_url": "https://github.com/trinodb",
                            "followers_url": "https://api.github.com/users/trinodb/followers",
                            "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                            "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                            "organizations_url": "https://api.github.com/users/trinodb/orgs",
                            "repos_url": "https://api.github.com/users/trinodb/repos",
                            "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/trinodb/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/trinodb/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": false,
                        "url": "https://api.github.com/repos/trinodb/trino",
                        "forks_url": "https://api.github.com/repos/trinodb/trino/forks",
                        "keys_url": "https://api.github.com/repos/trinodb/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/trinodb/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/trinodb/trino/teams",
                        "hooks_url": "https://api.github.com/repos/trinodb/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/trinodb/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/trinodb/trino/events",
                        "assignees_url": "https://api.github.com/repos/trinodb/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/trinodb/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/trinodb/trino/tags",
                        "blobs_url": "https://api.github.com/repos/trinodb/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/trinodb/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/trinodb/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/trinodb/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/trinodb/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/trinodb/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/trinodb/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/trinodb/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/trinodb/trino/subscription",
                        "commits_url": "https://api.github.com/repos/trinodb/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/trinodb/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/trinodb/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/trinodb/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/trinodb/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/trinodb/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/trinodb/trino/merges",
                        "archive_url": "https://api.github.com/repos/trinodb/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/trinodb/trino/downloads",
                        "issues_url": "https://api.github.com/repos/trinodb/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/trinodb/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/trinodb/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/trinodb/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/trinodb/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/trinodb/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/trinodb/trino/deployments",
                        "created_at": "2019-01-19T06:38:14Z",
                        "updated_at": "2022-12-08T14:45:56Z",
                        "pushed_at": "2022-12-08T16:49:16Z",
                        "git_url": "git://github.com/trinodb/trino.git",
                        "ssh_url": "git@github.com:trinodb/trino.git",
                        "clone_url": "https://github.com/trinodb/trino.git",
                        "svn_url": "https://github.com/trinodb/trino",
                        "homepage": "https://trino.io",
                        "size": 198725,
                        "stargazers_count": 6805,
                        "watchers_count": 6805,
                        "language": "Java",
                        "has_issues": true,
                        "has_projects": false,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": true,
                        "forks_count": 2085,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 2089,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "analytics",
                            "big-data",
                            "data-science",
                            "database",
                            "databases",
                            "datalake",
                            "distributed-database",
                            "distributed-databases",
                            "distributed-systems",
                            "hadoop",
                            "hive",
                            "java",
                            "jdbc",
                            "presto",
                            "prestodb",
                            "query-engine",
                            "sql",
                            "trino"
                        ],
                        "visibility": "public",
                        "forks": 2085,
                        "open_issues": 2089,
                        "watchers": 6805,
                        "default_branch": "master"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337"
                    },
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15337"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15337"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15337/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/trinodb/trino/statuses/a3ff14606d70a46f592dbdd56eb32cb71a79ef91"
                    }
                },
                "author_association": "MEMBER",
                "auto_merge": null,
                "active_lock_reason": null
            }
        },
        "public": true,
        "created_at": "2022-12-08T17:07:23Z",
        "org": {
            "id": 34147222,
            "login": "trinodb",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/trinodb",
            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?"
        }
    },
    {
        "id": "25737801575",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 166515022,
            "name": "trinodb/trino",
            "url": "https://api.github.com/repos/trinodb/trino"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/trinodb/trino/issues/15337",
                "repository_url": "https://api.github.com/repos/trinodb/trino",
                "labels_url": "https://api.github.com/repos/trinodb/trino/issues/15337/labels{/name}",
                "comments_url": "https://api.github.com/repos/trinodb/trino/issues/15337/comments",
                "events_url": "https://api.github.com/repos/trinodb/trino/issues/15337/events",
                "html_url": "https://github.com/trinodb/trino/pull/15337",
                "id": 1482501542,
                "node_id": "PR_kwDOCezRTs5Eq7bB",
                "number": 15337,
                "title": "Fix test for invalid rate in FormatUtils.formatDataRate()",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 1202580151,
                        "node_id": "MDU6TGFiZWwxMjAyNTgwMTUx",
                        "url": "https://api.github.com/repos/trinodb/trino/labels/cla-signed",
                        "name": "cla-signed",
                        "color": "ededed",
                        "default": false,
                        "description": null
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 2,
                "created_at": "2022-12-07T17:54:40Z",
                "updated_at": "2022-12-08T02:41:07Z",
                "closed_at": null,
                "author_association": "MEMBER",
                "active_lock_reason": null,
                "draft": false,
                "pull_request": {
                    "url": "https://api.github.com/repos/trinodb/trino/pulls/15337",
                    "html_url": "https://github.com/trinodb/trino/pull/15337",
                    "diff_url": "https://github.com/trinodb/trino/pull/15337.diff",
                    "patch_url": "https://github.com/trinodb/trino/pull/15337.patch",
                    "merged_at": null
                },
                "body": "<!-- Thank you for submitting a pull request! Find more information in our development guide at https://github.com/trinodb/trino/blob/master/.github/DEVELOPMENT.md and contact us on #dev in Slack. -->\r\n<!-- Provide an overview of the PR for maintainers and reviewers. -->\r\n## Description\r\n\r\n`FormatUtils.formatDataRate()` contains the following code:\r\n\r\n```java\r\nlong rate = Math.round(dataSize.toBytes() / duration.getValue(SECONDS));\r\nif (Double.isNaN(rate) || Double.isInfinite(rate)) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nThe test can never evaluate as `true`, since both functions will return false for any `long`.\r\n\r\nThe correct test is:\r\n\r\n```java\r\nif (rate == Long.MAX_VALUE) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nIt's not necessary to test for `Long.MIN_VALUE`, since neither `dataSize` nor `duration` can be negative.\r\n\r\n<!-- Provide details that would help an engineer who is unfamiliar with this part of the code. -->\r\n## Unit Test\r\n\r\nI added a new class, `TestFormatUtils` to test both this fix and the rest of `FormatUtils`. The tests for this change are:\r\n\r\n```java\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), false), \"0B\");\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), true), \"0B/s\");\r\n```\r\n\r\n<!-- Mark the appropriate option with an (x). Propose a release note if you can. -->\r\n## Release notes\r\n\r\n(x) This is not user-visible or docs only and no release notes are required.\r\n( ) Release notes are required, please propose a release note for me.\r\n( ) Release notes are required, with the following suggested text:\r\n\r\n## Related Issue\r\n\r\nFixes #13093",
                "reactions": {
                    "url": "https://api.github.com/repos/trinodb/trino/issues/15337/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/trinodb/trino/issues/15337/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/trinodb/trino/issues/comments/1341901362",
                "html_url": "https://github.com/trinodb/trino/pull/15337#issuecomment-1341901362",
                "issue_url": "https://api.github.com/repos/trinodb/trino/issues/15337",
                "id": 1341901362,
                "node_id": "IC_kwDOCezRTs5P-8oy",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2022-12-08T02:41:07Z",
                "updated_at": "2022-12-08T02:41:07Z",
                "author_association": "MEMBER",
                "body": "@findepi I refactored to two commits and force-pushed them. Let me know if you need two PRs.",
                "reactions": {
                    "url": "https://api.github.com/repos/trinodb/trino/issues/comments/1341901362/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2022-12-08T02:41:07Z",
        "org": {
            "id": 34147222,
            "login": "trinodb",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/trinodb",
            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?"
        }
    },
    {
        "id": "25737784762",
        "type": "PushEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 509274784,
            "name": "metadaddy/trino",
            "url": "https://api.github.com/repos/metadaddy/trino"
        },
        "payload": {
            "push_id": 11922596404,
            "size": 2,
            "distinct_size": 2,
            "ref": "refs/heads/fix-formatdatarate-test",
            "head": "a3ff14606d70a46f592dbdd56eb32cb71a79ef91",
            "before": "5253041f76469008e04dae2c0ad6a7d441d6c172",
            "commits": [
                {
                    "sha": "6d2d433c8702a2a03ae56140ccdc0bcc5cc5ba2a",
                    "author": {
                        "email": "pat@backblaze.com",
                        "name": "Pat Patterson"
                    },
                    "message": "Add TestFormatUtils to test FormatUtils methods",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/6d2d433c8702a2a03ae56140ccdc0bcc5cc5ba2a"
                },
                {
                    "sha": "a3ff14606d70a46f592dbdd56eb32cb71a79ef91",
                    "author": {
                        "email": "pat@backblaze.com",
                        "name": "Pat Patterson"
                    },
                    "message": "Fix check for invalid rate in FormatUtils.formatDataRate()",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/a3ff14606d70a46f592dbdd56eb32cb71a79ef91"
                }
            ]
        },
        "public": true,
        "created_at": "2022-12-08T02:39:51Z"
    },
    {
        "id": "25737456005",
        "type": "PushEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 509274784,
            "name": "metadaddy/trino",
            "url": "https://api.github.com/repos/metadaddy/trino"
        },
        "payload": {
            "push_id": 11922434692,
            "size": 97,
            "distinct_size": 1,
            "ref": "refs/heads/fix-formatdatarate-test",
            "head": "5253041f76469008e04dae2c0ad6a7d441d6c172",
            "before": "f88ba0cee83615211a54a7351df5656d7688ae1c",
            "commits": [
                {
                    "sha": "712ce5c988497dfbad25c9c031f9ce4159b2d68a",
                    "author": {
                        "email": "andriyrosa@gmail.com",
                        "name": "Andrii Rosa"
                    },
                    "message": "Remove preserve-input-partitions-in-write-stage config\n\nPartition should never be merged for the write stage given a risk of\nrunning into the maximum number of partitions limit enforced by writers",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/712ce5c988497dfbad25c9c031f9ce4159b2d68a"
                },
                {
                    "sha": "d47e28fd7c5831b822de11530f7e4f7448941b05",
                    "author": {
                        "email": "andriyrosa@gmail.com",
                        "name": "Andrii Rosa"
                    },
                    "message": "Allow optimize in Hive to be run with FTE",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/d47e28fd7c5831b822de11530f7e4f7448941b05"
                },
                {
                    "sha": "e292e1122bd056a0de592f0ffe7e9a0068341265",
                    "author": {
                        "email": "andriyrosa@gmail.com",
                        "name": "Andrii Rosa"
                    },
                    "message": "Provide partitioning layout for execute in Hive",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/e292e1122bd056a0de592f0ffe7e9a0068341265"
                },
                {
                    "sha": "993352b89be36393a1e0cd34d0c7067ac4f150c7",
                    "author": {
                        "email": "andriyrosa@gmail.com",
                        "name": "Andrii Rosa"
                    },
                    "message": "Refactor TestHashDistributionSplitAssigner\n\nExtract helper classes to avoid methods with too many arguments",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/993352b89be36393a1e0cd34d0c7067ac4f150c7"
                },
                {
                    "sha": "1ccb40a4989f8d4bccea4b6019af4f6e9792d290",
                    "author": {
                        "email": "andriyrosa@gmail.com",
                        "name": "Andrii Rosa"
                    },
                    "message": "Ensure partition id can't get re-assigned",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/1ccb40a4989f8d4bccea4b6019af4f6e9792d290"
                },
                {
                    "sha": "9982da3837fcfa8a831c3b9f0872713dc915b4a3",
                    "author": {
                        "email": "andriyrosa@gmail.com",
                        "name": "Andrii Rosa"
                    },
                    "message": "Enable preferred write partitioning for FTE by default\n\nImplement skew mitigation to avoid running into low write concurrency\nwhen the number of output partitions is small",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/9982da3837fcfa8a831c3b9f0872713dc915b4a3"
                },
                {
                    "sha": "3cf8e92363b9a54866cf8427bfd00f92e011631d",
                    "author": {
                        "email": "ebyhry@gmail.com",
                        "name": "Yuya Ebihara"
                    },
                    "message": "Rename TestMongoConnectorTest temporarily\n\nThis is a preparatory commit for the next commit.",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/3cf8e92363b9a54866cf8427bfd00f92e011631d"
                },
                {
                    "sha": "6f49c4d343988347286c42a80d27199eef156b5c",
                    "author": {
                        "email": "ebyhry@gmail.com",
                        "name": "Yuya Ebihara"
                    },
                    "message": "Remove redundant BaseMongoConnectorTest",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/6f49c4d343988347286c42a80d27199eef156b5c"
                },
                {
                    "sha": "1e3e7c730bd78f2ed0ab88b7c479a5a671280757",
                    "author": {
                        "email": "ebyhry@gmail.com",
                        "name": "Yuya Ebihara"
                    },
                    "message": "Improve error message when partitioning by nested fields in Iceberg",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/1e3e7c730bd78f2ed0ab88b7c479a5a671280757"
                },
                {
                    "sha": "ea24f811cc872987a4610d780d85d7def87eff07",
                    "author": {
                        "email": "napewnotrafi@gmail.com",
                        "name": "Karol Sobczak"
                    },
                    "message": "Embed Trino version in QueryInfo\n\nThis will help to diagnose issues quicker.",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/ea24f811cc872987a4610d780d85d7def87eff07"
                },
                {
                    "sha": "78abe76db0d34e69c490ffc93d8a26547b371b14",
                    "author": {
                        "email": "ebyhry@gmail.com",
                        "name": "Yuya Ebihara"
                    },
                    "message": "Don't start MongoDB server in TestMongoPlugin\n\nThere's no need to run MongoDB server in this test class.",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/78abe76db0d34e69c490ffc93d8a26547b371b14"
                },
                {
                    "sha": "77e7e2ba95ae354675eac2f99cb9e8b0687f31b6",
                    "author": {
                        "email": "ebyhry@gmail.com",
                        "name": "Yuya Ebihara"
                    },
                    "message": "Rename TLS configuration flag in MongoDB",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/77e7e2ba95ae354675eac2f99cb9e8b0687f31b6"
                },
                {
                    "sha": "bf0b6ee2d143318dc20ae8baac84d7aaac662e96",
                    "author": {
                        "email": "ebyhry@gmail.com",
                        "name": "Yuya Ebihara"
                    },
                    "message": "Add support for setting TLS context in MongoDB",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/bf0b6ee2d143318dc20ae8baac84d7aaac662e96"
                },
                {
                    "sha": "5f7ae2815c34fc2cc23a4dd58598b156cfc47a8f",
                    "author": {
                        "email": "neville.lyh@gmail.com",
                        "name": "Neville Li"
                    },
                    "message": "Add query.max-run-time.hard-limit\n\nCo-authored-by: Ashhar Hasan <hashhar_dev@outlook.com>",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/5f7ae2815c34fc2cc23a4dd58598b156cfc47a8f"
                },
                {
                    "sha": "9050471d7a7be673adbc850e2c43b11e69fd6fad",
                    "author": {
                        "email": "piotr.findeisen@gmail.com",
                        "name": "Piotr Findeisen"
                    },
                    "message": "Remove duplication in TestPostgreSqlTypeMapping\n\nReuse information provided for by `setUp()`.",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/9050471d7a7be673adbc850e2c43b11e69fd6fad"
                },
                {
                    "sha": "aff36e5aba0bff091aa030e775292bff35c25e6c",
                    "author": {
                        "email": "piotr.findeisen@gmail.com",
                        "name": "Piotr Findeisen"
                    },
                    "message": "Remove redundant test case from `testArrayEmptyOrNulls`\n\nCovered by first test case in `testArray`",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/aff36e5aba0bff091aa030e775292bff35c25e6c"
                },
                {
                    "sha": "9e31f4aea17f0476df47923d38e1ea62f0657ddd",
                    "author": {
                        "email": "piotr.findeisen@gmail.com",
                        "name": "Piotr Findeisen"
                    },
                    "message": "Comment on jdbc.columns values\n\nMake it easier to map values to columns.",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/9e31f4aea17f0476df47923d38e1ea62f0657ddd"
                },
                {
                    "sha": "a5d64cc59e03776e3e9635e23e8467348cbd8d70",
                    "author": {
                        "email": "piotr.findeisen@gmail.com",
                        "name": "Piotr Findeisen"
                    },
                    "message": "Fix DatabaseMetaData.getColumns nullability inconsistency\n\n`DatabaseMetaData.getColumns` reports nullability in two result columns\n\n- NULLABLE, a number (0, 1, 2)\n- IS_NULLABLE, a varchar column (\"YES\", \"NO\", \"\")\n\nThis fixes the `TrinoDatabaseMetaData` so that information returned in\nthose two ways is consistent.",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/a5d64cc59e03776e3e9635e23e8467348cbd8d70"
                },
                {
                    "sha": "79d19de926220563f890fca462bdf2cbaaadfc45",
                    "author": {
                        "email": "napewnotrafi@gmail.com",
                        "name": "Karol Sobczak"
                    },
                    "message": "Print Trino version to EXPLAIN ANALYZE VERBOSE\n\nOutput of EXPLAIN ANALYZE VERBOSE is often\nshared for troubleshooting therefore it's\nuseful to print Trino version there.\n\n-----------------------------------------------------------\n Trino version: dev\n Fragment 1 [SINGLE]\n     Output layout: [orderkey, custkey, count, sum_4, avg]\n     Output partitioning: SINGLE []",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/79d19de926220563f890fca462bdf2cbaaadfc45"
                },
                {
                    "sha": "c0febf4bf6b03abd1289febe08a56e40518a9cbb",
                    "author": {
                        "email": "napewnotrafi@gmail.com",
                        "name": "Karol Sobczak"
                    },
                    "message": "Increase Parquet page max positions",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/c0febf4bf6b03abd1289febe08a56e40518a9cbb"
                }
            ]
        },
        "public": true,
        "created_at": "2022-12-08T02:17:12Z"
    },
    {
        "id": "25737426813",
        "type": "PushEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 509274784,
            "name": "metadaddy/trino",
            "url": "https://api.github.com/repos/metadaddy/trino"
        },
        "payload": {
            "push_id": 11922420838,
            "size": 96,
            "distinct_size": 96,
            "ref": "refs/heads/master",
            "head": "81d1525c7b0d24433712957632c0895847a6788b",
            "before": "861d51c8b8047d43f017e887231edf01d1561c65",
            "commits": [
                {
                    "sha": "712ce5c988497dfbad25c9c031f9ce4159b2d68a",
                    "author": {
                        "email": "andriyrosa@gmail.com",
                        "name": "Andrii Rosa"
                    },
                    "message": "Remove preserve-input-partitions-in-write-stage config\n\nPartition should never be merged for the write stage given a risk of\nrunning into the maximum number of partitions limit enforced by writers",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/712ce5c988497dfbad25c9c031f9ce4159b2d68a"
                },
                {
                    "sha": "d47e28fd7c5831b822de11530f7e4f7448941b05",
                    "author": {
                        "email": "andriyrosa@gmail.com",
                        "name": "Andrii Rosa"
                    },
                    "message": "Allow optimize in Hive to be run with FTE",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/d47e28fd7c5831b822de11530f7e4f7448941b05"
                },
                {
                    "sha": "e292e1122bd056a0de592f0ffe7e9a0068341265",
                    "author": {
                        "email": "andriyrosa@gmail.com",
                        "name": "Andrii Rosa"
                    },
                    "message": "Provide partitioning layout for execute in Hive",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/e292e1122bd056a0de592f0ffe7e9a0068341265"
                },
                {
                    "sha": "993352b89be36393a1e0cd34d0c7067ac4f150c7",
                    "author": {
                        "email": "andriyrosa@gmail.com",
                        "name": "Andrii Rosa"
                    },
                    "message": "Refactor TestHashDistributionSplitAssigner\n\nExtract helper classes to avoid methods with too many arguments",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/993352b89be36393a1e0cd34d0c7067ac4f150c7"
                },
                {
                    "sha": "1ccb40a4989f8d4bccea4b6019af4f6e9792d290",
                    "author": {
                        "email": "andriyrosa@gmail.com",
                        "name": "Andrii Rosa"
                    },
                    "message": "Ensure partition id can't get re-assigned",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/1ccb40a4989f8d4bccea4b6019af4f6e9792d290"
                },
                {
                    "sha": "9982da3837fcfa8a831c3b9f0872713dc915b4a3",
                    "author": {
                        "email": "andriyrosa@gmail.com",
                        "name": "Andrii Rosa"
                    },
                    "message": "Enable preferred write partitioning for FTE by default\n\nImplement skew mitigation to avoid running into low write concurrency\nwhen the number of output partitions is small",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/9982da3837fcfa8a831c3b9f0872713dc915b4a3"
                },
                {
                    "sha": "3cf8e92363b9a54866cf8427bfd00f92e011631d",
                    "author": {
                        "email": "ebyhry@gmail.com",
                        "name": "Yuya Ebihara"
                    },
                    "message": "Rename TestMongoConnectorTest temporarily\n\nThis is a preparatory commit for the next commit.",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/3cf8e92363b9a54866cf8427bfd00f92e011631d"
                },
                {
                    "sha": "6f49c4d343988347286c42a80d27199eef156b5c",
                    "author": {
                        "email": "ebyhry@gmail.com",
                        "name": "Yuya Ebihara"
                    },
                    "message": "Remove redundant BaseMongoConnectorTest",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/6f49c4d343988347286c42a80d27199eef156b5c"
                },
                {
                    "sha": "1e3e7c730bd78f2ed0ab88b7c479a5a671280757",
                    "author": {
                        "email": "ebyhry@gmail.com",
                        "name": "Yuya Ebihara"
                    },
                    "message": "Improve error message when partitioning by nested fields in Iceberg",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/1e3e7c730bd78f2ed0ab88b7c479a5a671280757"
                },
                {
                    "sha": "ea24f811cc872987a4610d780d85d7def87eff07",
                    "author": {
                        "email": "napewnotrafi@gmail.com",
                        "name": "Karol Sobczak"
                    },
                    "message": "Embed Trino version in QueryInfo\n\nThis will help to diagnose issues quicker.",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/ea24f811cc872987a4610d780d85d7def87eff07"
                },
                {
                    "sha": "78abe76db0d34e69c490ffc93d8a26547b371b14",
                    "author": {
                        "email": "ebyhry@gmail.com",
                        "name": "Yuya Ebihara"
                    },
                    "message": "Don't start MongoDB server in TestMongoPlugin\n\nThere's no need to run MongoDB server in this test class.",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/78abe76db0d34e69c490ffc93d8a26547b371b14"
                },
                {
                    "sha": "77e7e2ba95ae354675eac2f99cb9e8b0687f31b6",
                    "author": {
                        "email": "ebyhry@gmail.com",
                        "name": "Yuya Ebihara"
                    },
                    "message": "Rename TLS configuration flag in MongoDB",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/77e7e2ba95ae354675eac2f99cb9e8b0687f31b6"
                },
                {
                    "sha": "bf0b6ee2d143318dc20ae8baac84d7aaac662e96",
                    "author": {
                        "email": "ebyhry@gmail.com",
                        "name": "Yuya Ebihara"
                    },
                    "message": "Add support for setting TLS context in MongoDB",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/bf0b6ee2d143318dc20ae8baac84d7aaac662e96"
                },
                {
                    "sha": "5f7ae2815c34fc2cc23a4dd58598b156cfc47a8f",
                    "author": {
                        "email": "neville.lyh@gmail.com",
                        "name": "Neville Li"
                    },
                    "message": "Add query.max-run-time.hard-limit\n\nCo-authored-by: Ashhar Hasan <hashhar_dev@outlook.com>",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/5f7ae2815c34fc2cc23a4dd58598b156cfc47a8f"
                },
                {
                    "sha": "9050471d7a7be673adbc850e2c43b11e69fd6fad",
                    "author": {
                        "email": "piotr.findeisen@gmail.com",
                        "name": "Piotr Findeisen"
                    },
                    "message": "Remove duplication in TestPostgreSqlTypeMapping\n\nReuse information provided for by `setUp()`.",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/9050471d7a7be673adbc850e2c43b11e69fd6fad"
                },
                {
                    "sha": "aff36e5aba0bff091aa030e775292bff35c25e6c",
                    "author": {
                        "email": "piotr.findeisen@gmail.com",
                        "name": "Piotr Findeisen"
                    },
                    "message": "Remove redundant test case from `testArrayEmptyOrNulls`\n\nCovered by first test case in `testArray`",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/aff36e5aba0bff091aa030e775292bff35c25e6c"
                },
                {
                    "sha": "9e31f4aea17f0476df47923d38e1ea62f0657ddd",
                    "author": {
                        "email": "piotr.findeisen@gmail.com",
                        "name": "Piotr Findeisen"
                    },
                    "message": "Comment on jdbc.columns values\n\nMake it easier to map values to columns.",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/9e31f4aea17f0476df47923d38e1ea62f0657ddd"
                },
                {
                    "sha": "a5d64cc59e03776e3e9635e23e8467348cbd8d70",
                    "author": {
                        "email": "piotr.findeisen@gmail.com",
                        "name": "Piotr Findeisen"
                    },
                    "message": "Fix DatabaseMetaData.getColumns nullability inconsistency\n\n`DatabaseMetaData.getColumns` reports nullability in two result columns\n\n- NULLABLE, a number (0, 1, 2)\n- IS_NULLABLE, a varchar column (\"YES\", \"NO\", \"\")\n\nThis fixes the `TrinoDatabaseMetaData` so that information returned in\nthose two ways is consistent.",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/a5d64cc59e03776e3e9635e23e8467348cbd8d70"
                },
                {
                    "sha": "79d19de926220563f890fca462bdf2cbaaadfc45",
                    "author": {
                        "email": "napewnotrafi@gmail.com",
                        "name": "Karol Sobczak"
                    },
                    "message": "Print Trino version to EXPLAIN ANALYZE VERBOSE\n\nOutput of EXPLAIN ANALYZE VERBOSE is often\nshared for troubleshooting therefore it's\nuseful to print Trino version there.\n\n-----------------------------------------------------------\n Trino version: dev\n Fragment 1 [SINGLE]\n     Output layout: [orderkey, custkey, count, sum_4, avg]\n     Output partitioning: SINGLE []",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/79d19de926220563f890fca462bdf2cbaaadfc45"
                },
                {
                    "sha": "c0febf4bf6b03abd1289febe08a56e40518a9cbb",
                    "author": {
                        "email": "napewnotrafi@gmail.com",
                        "name": "Karol Sobczak"
                    },
                    "message": "Increase Parquet page max positions",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/c0febf4bf6b03abd1289febe08a56e40518a9cbb"
                }
            ]
        },
        "public": true,
        "created_at": "2022-12-08T02:15:29Z"
    },
    {
        "id": "25737194487",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 166515022,
            "name": "trinodb/trino",
            "url": "https://api.github.com/repos/trinodb/trino"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/trinodb/trino/issues/15337",
                "repository_url": "https://api.github.com/repos/trinodb/trino",
                "labels_url": "https://api.github.com/repos/trinodb/trino/issues/15337/labels{/name}",
                "comments_url": "https://api.github.com/repos/trinodb/trino/issues/15337/comments",
                "events_url": "https://api.github.com/repos/trinodb/trino/issues/15337/events",
                "html_url": "https://github.com/trinodb/trino/pull/15337",
                "id": 1482501542,
                "node_id": "PR_kwDOCezRTs5Eq7bB",
                "number": 15337,
                "title": "Fix test for invalid rate in FormatUtils.formatDataRate()",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 1202580151,
                        "node_id": "MDU6TGFiZWwxMjAyNTgwMTUx",
                        "url": "https://api.github.com/repos/trinodb/trino/labels/cla-signed",
                        "name": "cla-signed",
                        "color": "ededed",
                        "default": false,
                        "description": null
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 1,
                "created_at": "2022-12-07T17:54:40Z",
                "updated_at": "2022-12-08T02:01:53Z",
                "closed_at": null,
                "author_association": "MEMBER",
                "active_lock_reason": null,
                "draft": false,
                "pull_request": {
                    "url": "https://api.github.com/repos/trinodb/trino/pulls/15337",
                    "html_url": "https://github.com/trinodb/trino/pull/15337",
                    "diff_url": "https://github.com/trinodb/trino/pull/15337.diff",
                    "patch_url": "https://github.com/trinodb/trino/pull/15337.patch",
                    "merged_at": null
                },
                "body": "<!-- Thank you for submitting a pull request! Find more information in our development guide at https://github.com/trinodb/trino/blob/master/.github/DEVELOPMENT.md and contact us on #dev in Slack. -->\r\n<!-- Provide an overview of the PR for maintainers and reviewers. -->\r\n## Description\r\n\r\n`FormatUtils.formatDataRate()` contains the following code:\r\n\r\n```java\r\nlong rate = Math.round(dataSize.toBytes() / duration.getValue(SECONDS));\r\nif (Double.isNaN(rate) || Double.isInfinite(rate)) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nThe test can never evaluate as `true`, since both functions will return false for any `long`.\r\n\r\nThe correct test is:\r\n\r\n```java\r\nif (rate == Long.MAX_VALUE) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nIt's not necessary to test for `Long.MIN_VALUE`, since neither `dataSize` nor `duration` can be negative.\r\n\r\n<!-- Provide details that would help an engineer who is unfamiliar with this part of the code. -->\r\n## Unit Test\r\n\r\nI added a new class, `TestFormatUtils` to test both this fix and the rest of `FormatUtils`. The tests for this change are:\r\n\r\n```java\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), false), \"0B\");\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), true), \"0B/s\");\r\n```\r\n\r\n<!-- Mark the appropriate option with an (x). Propose a release note if you can. -->\r\n## Release notes\r\n\r\n(x) This is not user-visible or docs only and no release notes are required.\r\n( ) Release notes are required, please propose a release note for me.\r\n( ) Release notes are required, with the following suggested text:\r\n\r\n## Related Issue\r\n\r\nFixes #13093",
                "reactions": {
                    "url": "https://api.github.com/repos/trinodb/trino/issues/15337/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/trinodb/trino/issues/15337/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/trinodb/trino/issues/comments/1341868451",
                "html_url": "https://github.com/trinodb/trino/pull/15337#issuecomment-1341868451",
                "issue_url": "https://api.github.com/repos/trinodb/trino/issues/15337",
                "id": 1341868451,
                "node_id": "IC_kwDOCezRTs5P-0mj",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2022-12-08T02:01:53Z",
                "updated_at": "2022-12-08T02:01:53Z",
                "author_association": "MEMBER",
                "body": "Thanks for the reviews! I've made the suggested changes; @findepi - just let me know whether you're looking for two PRs, or one PR with two commits and I'll do another push.",
                "reactions": {
                    "url": "https://api.github.com/repos/trinodb/trino/issues/comments/1341868451/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2022-12-08T02:01:54Z",
        "org": {
            "id": 34147222,
            "login": "trinodb",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/trinodb",
            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?"
        }
    },
    {
        "id": "25737166211",
        "type": "PullRequestReviewCommentEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 166515022,
            "name": "trinodb/trino",
            "url": "https://api.github.com/repos/trinodb/trino"
        },
        "payload": {
            "action": "created",
            "comment": {
                "url": "https://api.github.com/repos/trinodb/trino/pulls/comments/1042849726",
                "pull_request_review_id": 1209353709,
                "id": 1042849726,
                "node_id": "PRRC_kwDOCezRTs4-KJ--",
                "diff_hunk": "@@ -0,0 +1,353 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.trino.cli;\n+\n+import io.airlift.units.DataSize;\n+import io.airlift.units.Duration;\n+import org.testng.annotations.Test;\n+\n+import static org.testng.Assert.assertEquals;\n+\n+public class TestFormatUtils\n+{\n+    @Test\n+    public void testFormatCount()\n+    {\n+        assertEquals(FormatUtils.formatCount(1L), \"1\");",
                "path": "client/trino-cli/src/test/java/io/trino/cli/TestFormatUtils.java",
                "position": 27,
                "original_position": 27,
                "commit_id": "f88ba0cee83615211a54a7351df5656d7688ae1c",
                "original_commit_id": "f88ba0cee83615211a54a7351df5656d7688ae1c",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "done",
                "created_at": "2022-12-08T02:00:18Z",
                "updated_at": "2022-12-08T02:00:18Z",
                "html_url": "https://github.com/trinodb/trino/pull/15337#discussion_r1042849726",
                "pull_request_url": "https://api.github.com/repos/trinodb/trino/pulls/15337",
                "author_association": "MEMBER",
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/comments/1042849726"
                    },
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15337#discussion_r1042849726"
                    },
                    "pull_request": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337"
                    }
                },
                "reactions": {
                    "url": "https://api.github.com/repos/trinodb/trino/pulls/comments/1042849726/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "start_line": null,
                "original_start_line": null,
                "start_side": null,
                "line": 27,
                "original_line": 27,
                "side": "RIGHT",
                "in_reply_to_id": 1042708426
            },
            "pull_request": {
                "url": "https://api.github.com/repos/trinodb/trino/pulls/15337",
                "id": 1152104129,
                "node_id": "PR_kwDOCezRTs5Eq7bB",
                "html_url": "https://github.com/trinodb/trino/pull/15337",
                "diff_url": "https://github.com/trinodb/trino/pull/15337.diff",
                "patch_url": "https://github.com/trinodb/trino/pull/15337.patch",
                "issue_url": "https://api.github.com/repos/trinodb/trino/issues/15337",
                "number": 15337,
                "state": "open",
                "locked": false,
                "title": "Fix test for invalid rate in FormatUtils.formatDataRate()",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "<!-- Thank you for submitting a pull request! Find more information in our development guide at https://github.com/trinodb/trino/blob/master/.github/DEVELOPMENT.md and contact us on #dev in Slack. -->\r\n<!-- Provide an overview of the PR for maintainers and reviewers. -->\r\n## Description\r\n\r\n`FormatUtils.formatDataRate()` contains the following code:\r\n\r\n```java\r\nlong rate = Math.round(dataSize.toBytes() / duration.getValue(SECONDS));\r\nif (Double.isNaN(rate) || Double.isInfinite(rate)) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nThe test can never evaluate as `true`, since both functions will return false for any `long`.\r\n\r\nThe correct test is:\r\n\r\n```java\r\nif (rate == Long.MAX_VALUE) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nIt's not necessary to test for `Long.MIN_VALUE`, since neither `dataSize` nor `duration` can be negative.\r\n\r\n<!-- Provide details that would help an engineer who is unfamiliar with this part of the code. -->\r\n## Unit Test\r\n\r\nI added a new class, `TestFormatUtils` to test both this fix and the rest of `FormatUtils`. The tests for this change are:\r\n\r\n```java\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), false), \"0B\");\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), true), \"0B/s\");\r\n```\r\n\r\n<!-- Mark the appropriate option with an (x). Propose a release note if you can. -->\r\n## Release notes\r\n\r\n(x) This is not user-visible or docs only and no release notes are required.\r\n( ) Release notes are required, please propose a release note for me.\r\n( ) Release notes are required, with the following suggested text:\r\n\r\n## Related Issue\r\n\r\nFixes #13093",
                "created_at": "2022-12-07T17:54:40Z",
                "updated_at": "2022-12-08T02:00:18Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": "dd4eb7e24625655b4a60619dabe31785fb81f5ab",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [
                    {
                        "id": 1202580151,
                        "node_id": "MDU6TGFiZWwxMjAyNTgwMTUx",
                        "url": "https://api.github.com/repos/trinodb/trino/labels/cla-signed",
                        "name": "cla-signed",
                        "color": "ededed",
                        "default": false,
                        "description": null
                    }
                ],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/trinodb/trino/pulls/15337/commits",
                "review_comments_url": "https://api.github.com/repos/trinodb/trino/pulls/15337/comments",
                "review_comment_url": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/trinodb/trino/issues/15337/comments",
                "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/f88ba0cee83615211a54a7351df5656d7688ae1c",
                "head": {
                    "label": "metadaddy:fix-formatdatarate-test",
                    "ref": "fix-formatdatarate-test",
                    "sha": "f88ba0cee83615211a54a7351df5656d7688ae1c",
                    "user": {
                        "login": "metadaddy",
                        "id": 723517,
                        "node_id": "MDQ6VXNlcjcyMzUxNw==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/metadaddy",
                        "html_url": "https://github.com/metadaddy",
                        "followers_url": "https://api.github.com/users/metadaddy/followers",
                        "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                        "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                        "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                        "repos_url": "https://api.github.com/users/metadaddy/repos",
                        "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 509274784,
                        "node_id": "R_kgDOHlrqoA",
                        "name": "trino",
                        "full_name": "metadaddy/trino",
                        "private": false,
                        "owner": {
                            "login": "metadaddy",
                            "id": 723517,
                            "node_id": "MDQ6VXNlcjcyMzUxNw==",
                            "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/metadaddy",
                            "html_url": "https://github.com/metadaddy",
                            "followers_url": "https://api.github.com/users/metadaddy/followers",
                            "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                            "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                            "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                            "repos_url": "https://api.github.com/users/metadaddy/repos",
                            "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/metadaddy/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": true,
                        "url": "https://api.github.com/repos/metadaddy/trino",
                        "forks_url": "https://api.github.com/repos/metadaddy/trino/forks",
                        "keys_url": "https://api.github.com/repos/metadaddy/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/metadaddy/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/metadaddy/trino/teams",
                        "hooks_url": "https://api.github.com/repos/metadaddy/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/metadaddy/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/metadaddy/trino/events",
                        "assignees_url": "https://api.github.com/repos/metadaddy/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/metadaddy/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/metadaddy/trino/tags",
                        "blobs_url": "https://api.github.com/repos/metadaddy/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/metadaddy/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/metadaddy/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/metadaddy/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/metadaddy/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/metadaddy/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/metadaddy/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/metadaddy/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/metadaddy/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/metadaddy/trino/subscription",
                        "commits_url": "https://api.github.com/repos/metadaddy/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/metadaddy/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/metadaddy/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/metadaddy/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/metadaddy/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/metadaddy/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/metadaddy/trino/merges",
                        "archive_url": "https://api.github.com/repos/metadaddy/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/metadaddy/trino/downloads",
                        "issues_url": "https://api.github.com/repos/metadaddy/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/metadaddy/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/metadaddy/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/metadaddy/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/metadaddy/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/metadaddy/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/metadaddy/trino/deployments",
                        "created_at": "2022-07-01T00:43:32Z",
                        "updated_at": "2022-07-06T01:44:20Z",
                        "pushed_at": "2022-12-07T17:50:11Z",
                        "git_url": "git://github.com/metadaddy/trino.git",
                        "ssh_url": "git@github.com:metadaddy/trino.git",
                        "clone_url": "https://github.com/metadaddy/trino.git",
                        "svn_url": "https://github.com/metadaddy/trino",
                        "homepage": "https://trino.io",
                        "size": 192363,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": "Java",
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "master"
                    }
                },
                "base": {
                    "label": "trinodb:master",
                    "ref": "master",
                    "sha": "4b266700437a87236ad0e0e5cd1db866f4f76dcb",
                    "user": {
                        "login": "trinodb",
                        "id": 34147222,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                        "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/trinodb",
                        "html_url": "https://github.com/trinodb",
                        "followers_url": "https://api.github.com/users/trinodb/followers",
                        "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                        "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                        "organizations_url": "https://api.github.com/users/trinodb/orgs",
                        "repos_url": "https://api.github.com/users/trinodb/repos",
                        "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/trinodb/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 166515022,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNjY1MTUwMjI=",
                        "name": "trino",
                        "full_name": "trinodb/trino",
                        "private": false,
                        "owner": {
                            "login": "trinodb",
                            "id": 34147222,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/trinodb",
                            "html_url": "https://github.com/trinodb",
                            "followers_url": "https://api.github.com/users/trinodb/followers",
                            "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                            "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                            "organizations_url": "https://api.github.com/users/trinodb/orgs",
                            "repos_url": "https://api.github.com/users/trinodb/repos",
                            "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/trinodb/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/trinodb/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": false,
                        "url": "https://api.github.com/repos/trinodb/trino",
                        "forks_url": "https://api.github.com/repos/trinodb/trino/forks",
                        "keys_url": "https://api.github.com/repos/trinodb/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/trinodb/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/trinodb/trino/teams",
                        "hooks_url": "https://api.github.com/repos/trinodb/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/trinodb/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/trinodb/trino/events",
                        "assignees_url": "https://api.github.com/repos/trinodb/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/trinodb/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/trinodb/trino/tags",
                        "blobs_url": "https://api.github.com/repos/trinodb/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/trinodb/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/trinodb/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/trinodb/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/trinodb/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/trinodb/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/trinodb/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/trinodb/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/trinodb/trino/subscription",
                        "commits_url": "https://api.github.com/repos/trinodb/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/trinodb/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/trinodb/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/trinodb/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/trinodb/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/trinodb/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/trinodb/trino/merges",
                        "archive_url": "https://api.github.com/repos/trinodb/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/trinodb/trino/downloads",
                        "issues_url": "https://api.github.com/repos/trinodb/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/trinodb/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/trinodb/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/trinodb/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/trinodb/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/trinodb/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/trinodb/trino/deployments",
                        "created_at": "2019-01-19T06:38:14Z",
                        "updated_at": "2022-12-07T23:23:39Z",
                        "pushed_at": "2022-12-08T01:09:12Z",
                        "git_url": "git://github.com/trinodb/trino.git",
                        "ssh_url": "git@github.com:trinodb/trino.git",
                        "clone_url": "https://github.com/trinodb/trino.git",
                        "svn_url": "https://github.com/trinodb/trino",
                        "homepage": "https://trino.io",
                        "size": 197719,
                        "stargazers_count": 6794,
                        "watchers_count": 6794,
                        "language": "Java",
                        "has_issues": true,
                        "has_projects": false,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": true,
                        "forks_count": 2084,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 2093,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "analytics",
                            "big-data",
                            "data-science",
                            "database",
                            "databases",
                            "datalake",
                            "distributed-database",
                            "distributed-databases",
                            "distributed-systems",
                            "hadoop",
                            "hive",
                            "java",
                            "jdbc",
                            "presto",
                            "prestodb",
                            "query-engine",
                            "sql",
                            "trino"
                        ],
                        "visibility": "public",
                        "forks": 2084,
                        "open_issues": 2093,
                        "watchers": 6794,
                        "default_branch": "master"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337"
                    },
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15337"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15337"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15337/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/trinodb/trino/statuses/f88ba0cee83615211a54a7351df5656d7688ae1c"
                    }
                },
                "author_association": "MEMBER",
                "auto_merge": null,
                "active_lock_reason": null
            }
        },
        "public": true,
        "created_at": "2022-12-08T02:00:18Z",
        "org": {
            "id": 34147222,
            "login": "trinodb",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/trinodb",
            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?"
        }
    },
    {
        "id": "25737166156",
        "type": "PullRequestReviewEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 166515022,
            "name": "trinodb/trino",
            "url": "https://api.github.com/repos/trinodb/trino"
        },
        "payload": {
            "action": "created",
            "review": {
                "id": 1209353709,
                "node_id": "PRR_kwDOCezRTs5IFUXt",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": null,
                "commit_id": "f88ba0cee83615211a54a7351df5656d7688ae1c",
                "submitted_at": "2022-12-08T02:00:18Z",
                "state": "commented",
                "html_url": "https://github.com/trinodb/trino/pull/15337#pullrequestreview-1209353709",
                "pull_request_url": "https://api.github.com/repos/trinodb/trino/pulls/15337",
                "author_association": "MEMBER",
                "_links": {
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15337#pullrequestreview-1209353709"
                    },
                    "pull_request": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337"
                    }
                }
            },
            "pull_request": {
                "url": "https://api.github.com/repos/trinodb/trino/pulls/15337",
                "id": 1152104129,
                "node_id": "PR_kwDOCezRTs5Eq7bB",
                "html_url": "https://github.com/trinodb/trino/pull/15337",
                "diff_url": "https://github.com/trinodb/trino/pull/15337.diff",
                "patch_url": "https://github.com/trinodb/trino/pull/15337.patch",
                "issue_url": "https://api.github.com/repos/trinodb/trino/issues/15337",
                "number": 15337,
                "state": "open",
                "locked": false,
                "title": "Fix test for invalid rate in FormatUtils.formatDataRate()",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "<!-- Thank you for submitting a pull request! Find more information in our development guide at https://github.com/trinodb/trino/blob/master/.github/DEVELOPMENT.md and contact us on #dev in Slack. -->\r\n<!-- Provide an overview of the PR for maintainers and reviewers. -->\r\n## Description\r\n\r\n`FormatUtils.formatDataRate()` contains the following code:\r\n\r\n```java\r\nlong rate = Math.round(dataSize.toBytes() / duration.getValue(SECONDS));\r\nif (Double.isNaN(rate) || Double.isInfinite(rate)) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nThe test can never evaluate as `true`, since both functions will return false for any `long`.\r\n\r\nThe correct test is:\r\n\r\n```java\r\nif (rate == Long.MAX_VALUE) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nIt's not necessary to test for `Long.MIN_VALUE`, since neither `dataSize` nor `duration` can be negative.\r\n\r\n<!-- Provide details that would help an engineer who is unfamiliar with this part of the code. -->\r\n## Unit Test\r\n\r\nI added a new class, `TestFormatUtils` to test both this fix and the rest of `FormatUtils`. The tests for this change are:\r\n\r\n```java\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), false), \"0B\");\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), true), \"0B/s\");\r\n```\r\n\r\n<!-- Mark the appropriate option with an (x). Propose a release note if you can. -->\r\n## Release notes\r\n\r\n(x) This is not user-visible or docs only and no release notes are required.\r\n( ) Release notes are required, please propose a release note for me.\r\n( ) Release notes are required, with the following suggested text:\r\n\r\n## Related Issue\r\n\r\nFixes #13093",
                "created_at": "2022-12-07T17:54:40Z",
                "updated_at": "2022-12-08T02:00:18Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": "dd4eb7e24625655b4a60619dabe31785fb81f5ab",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [
                    {
                        "id": 1202580151,
                        "node_id": "MDU6TGFiZWwxMjAyNTgwMTUx",
                        "url": "https://api.github.com/repos/trinodb/trino/labels/cla-signed",
                        "name": "cla-signed",
                        "color": "ededed",
                        "default": false,
                        "description": null
                    }
                ],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/trinodb/trino/pulls/15337/commits",
                "review_comments_url": "https://api.github.com/repos/trinodb/trino/pulls/15337/comments",
                "review_comment_url": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/trinodb/trino/issues/15337/comments",
                "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/f88ba0cee83615211a54a7351df5656d7688ae1c",
                "head": {
                    "label": "metadaddy:fix-formatdatarate-test",
                    "ref": "fix-formatdatarate-test",
                    "sha": "f88ba0cee83615211a54a7351df5656d7688ae1c",
                    "user": {
                        "login": "metadaddy",
                        "id": 723517,
                        "node_id": "MDQ6VXNlcjcyMzUxNw==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/metadaddy",
                        "html_url": "https://github.com/metadaddy",
                        "followers_url": "https://api.github.com/users/metadaddy/followers",
                        "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                        "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                        "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                        "repos_url": "https://api.github.com/users/metadaddy/repos",
                        "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 509274784,
                        "node_id": "R_kgDOHlrqoA",
                        "name": "trino",
                        "full_name": "metadaddy/trino",
                        "private": false,
                        "owner": {
                            "login": "metadaddy",
                            "id": 723517,
                            "node_id": "MDQ6VXNlcjcyMzUxNw==",
                            "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/metadaddy",
                            "html_url": "https://github.com/metadaddy",
                            "followers_url": "https://api.github.com/users/metadaddy/followers",
                            "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                            "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                            "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                            "repos_url": "https://api.github.com/users/metadaddy/repos",
                            "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/metadaddy/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": true,
                        "url": "https://api.github.com/repos/metadaddy/trino",
                        "forks_url": "https://api.github.com/repos/metadaddy/trino/forks",
                        "keys_url": "https://api.github.com/repos/metadaddy/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/metadaddy/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/metadaddy/trino/teams",
                        "hooks_url": "https://api.github.com/repos/metadaddy/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/metadaddy/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/metadaddy/trino/events",
                        "assignees_url": "https://api.github.com/repos/metadaddy/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/metadaddy/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/metadaddy/trino/tags",
                        "blobs_url": "https://api.github.com/repos/metadaddy/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/metadaddy/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/metadaddy/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/metadaddy/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/metadaddy/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/metadaddy/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/metadaddy/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/metadaddy/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/metadaddy/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/metadaddy/trino/subscription",
                        "commits_url": "https://api.github.com/repos/metadaddy/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/metadaddy/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/metadaddy/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/metadaddy/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/metadaddy/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/metadaddy/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/metadaddy/trino/merges",
                        "archive_url": "https://api.github.com/repos/metadaddy/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/metadaddy/trino/downloads",
                        "issues_url": "https://api.github.com/repos/metadaddy/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/metadaddy/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/metadaddy/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/metadaddy/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/metadaddy/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/metadaddy/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/metadaddy/trino/deployments",
                        "created_at": "2022-07-01T00:43:32Z",
                        "updated_at": "2022-07-06T01:44:20Z",
                        "pushed_at": "2022-12-07T17:50:11Z",
                        "git_url": "git://github.com/metadaddy/trino.git",
                        "ssh_url": "git@github.com:metadaddy/trino.git",
                        "clone_url": "https://github.com/metadaddy/trino.git",
                        "svn_url": "https://github.com/metadaddy/trino",
                        "homepage": "https://trino.io",
                        "size": 192363,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": "Java",
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "master"
                    }
                },
                "base": {
                    "label": "trinodb:master",
                    "ref": "master",
                    "sha": "4b266700437a87236ad0e0e5cd1db866f4f76dcb",
                    "user": {
                        "login": "trinodb",
                        "id": 34147222,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                        "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/trinodb",
                        "html_url": "https://github.com/trinodb",
                        "followers_url": "https://api.github.com/users/trinodb/followers",
                        "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                        "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                        "organizations_url": "https://api.github.com/users/trinodb/orgs",
                        "repos_url": "https://api.github.com/users/trinodb/repos",
                        "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/trinodb/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 166515022,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNjY1MTUwMjI=",
                        "name": "trino",
                        "full_name": "trinodb/trino",
                        "private": false,
                        "owner": {
                            "login": "trinodb",
                            "id": 34147222,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/trinodb",
                            "html_url": "https://github.com/trinodb",
                            "followers_url": "https://api.github.com/users/trinodb/followers",
                            "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                            "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                            "organizations_url": "https://api.github.com/users/trinodb/orgs",
                            "repos_url": "https://api.github.com/users/trinodb/repos",
                            "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/trinodb/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/trinodb/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": false,
                        "url": "https://api.github.com/repos/trinodb/trino",
                        "forks_url": "https://api.github.com/repos/trinodb/trino/forks",
                        "keys_url": "https://api.github.com/repos/trinodb/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/trinodb/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/trinodb/trino/teams",
                        "hooks_url": "https://api.github.com/repos/trinodb/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/trinodb/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/trinodb/trino/events",
                        "assignees_url": "https://api.github.com/repos/trinodb/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/trinodb/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/trinodb/trino/tags",
                        "blobs_url": "https://api.github.com/repos/trinodb/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/trinodb/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/trinodb/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/trinodb/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/trinodb/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/trinodb/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/trinodb/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/trinodb/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/trinodb/trino/subscription",
                        "commits_url": "https://api.github.com/repos/trinodb/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/trinodb/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/trinodb/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/trinodb/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/trinodb/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/trinodb/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/trinodb/trino/merges",
                        "archive_url": "https://api.github.com/repos/trinodb/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/trinodb/trino/downloads",
                        "issues_url": "https://api.github.com/repos/trinodb/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/trinodb/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/trinodb/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/trinodb/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/trinodb/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/trinodb/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/trinodb/trino/deployments",
                        "created_at": "2019-01-19T06:38:14Z",
                        "updated_at": "2022-12-07T23:23:39Z",
                        "pushed_at": "2022-12-08T01:09:12Z",
                        "git_url": "git://github.com/trinodb/trino.git",
                        "ssh_url": "git@github.com:trinodb/trino.git",
                        "clone_url": "https://github.com/trinodb/trino.git",
                        "svn_url": "https://github.com/trinodb/trino",
                        "homepage": "https://trino.io",
                        "size": 197719,
                        "stargazers_count": 6794,
                        "watchers_count": 6794,
                        "language": "Java",
                        "has_issues": true,
                        "has_projects": false,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": true,
                        "forks_count": 2084,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 2093,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "analytics",
                            "big-data",
                            "data-science",
                            "database",
                            "databases",
                            "datalake",
                            "distributed-database",
                            "distributed-databases",
                            "distributed-systems",
                            "hadoop",
                            "hive",
                            "java",
                            "jdbc",
                            "presto",
                            "prestodb",
                            "query-engine",
                            "sql",
                            "trino"
                        ],
                        "visibility": "public",
                        "forks": 2084,
                        "open_issues": 2093,
                        "watchers": 6794,
                        "default_branch": "master"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337"
                    },
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15337"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15337"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15337/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/trinodb/trino/statuses/f88ba0cee83615211a54a7351df5656d7688ae1c"
                    }
                },
                "author_association": "MEMBER",
                "auto_merge": null,
                "active_lock_reason": null
            }
        },
        "public": true,
        "created_at": "2022-12-08T02:00:19Z",
        "org": {
            "id": 34147222,
            "login": "trinodb",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/trinodb",
            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?"
        }
    },
    {
        "id": "25737163407",
        "type": "PullRequestReviewCommentEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 166515022,
            "name": "trinodb/trino",
            "url": "https://api.github.com/repos/trinodb/trino"
        },
        "payload": {
            "action": "created",
            "comment": {
                "url": "https://api.github.com/repos/trinodb/trino/pulls/comments/1042849643",
                "pull_request_review_id": 1209353593,
                "id": 1042849643,
                "node_id": "PRRC_kwDOCezRTs4-KJ9r",
                "diff_hunk": "@@ -0,0 +1,353 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.trino.cli;\n+\n+import io.airlift.units.DataSize;\n+import io.airlift.units.Duration;\n+import org.testng.annotations.Test;\n+\n+import static org.testng.Assert.assertEquals;\n+\n+public class TestFormatUtils\n+{\n+    @Test\n+    public void testFormatCount()\n+    {\n+        assertEquals(FormatUtils.formatCount(1L), \"1\");\n+        assertEquals(FormatUtils.formatCount(12L), \"12\");\n+        assertEquals(FormatUtils.formatCount(123L), \"123\");\n+        assertEquals(FormatUtils.formatCount(1234L), \"1.23K\");\n+        assertEquals(FormatUtils.formatCount(12345L), \"12.3K\");\n+        assertEquals(FormatUtils.formatCount(123456L), \"123K\");\n+        assertEquals(FormatUtils.formatCount(1234567L), \"1.23M\");\n+        assertEquals(FormatUtils.formatCount(12345678L), \"12.3M\");\n+        assertEquals(FormatUtils.formatCount(123456789L), \"123M\");\n+        assertEquals(FormatUtils.formatCount(1234567890L), \"1.23B\");\n+        assertEquals(FormatUtils.formatCount(12345678901L), \"12.3B\");\n+        assertEquals(FormatUtils.formatCount(123456789012L), \"123B\");\n+        assertEquals(FormatUtils.formatCount(1234567890123L), \"1.23T\");\n+        assertEquals(FormatUtils.formatCount(12345678901234L), \"12.3T\");\n+        assertEquals(FormatUtils.formatCount(123456789012345L), \"123T\");\n+        assertEquals(FormatUtils.formatCount(1234567890123456L), \"1.23Q\");\n+        assertEquals(FormatUtils.formatCount(12345678901234567L), \"12.3Q\");\n+        assertEquals(FormatUtils.formatCount(123456789012345678L), \"123Q\");\n+        assertEquals(FormatUtils.formatCount(1234567890123456789L), \"1235Q\");\n+    }\n+\n+    @Test\n+    public void formatCountRate()\n+    {\n+        assertEquals(FormatUtils.formatCountRate(0.0000000001D, Duration.valueOf(\"1ns\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(0.0000000001D, Duration.valueOf(\"1ns\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(0.000000001D, Duration.valueOf(\"1ns\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(0.000000001D, Duration.valueOf(\"1ns\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(0.0000000015D, Duration.valueOf(\"1ns\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(0.0000000015D, Duration.valueOf(\"1ns\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(1D, Duration.valueOf(\"1ns\"), false), \"1000M\");\n+        assertEquals(FormatUtils.formatCountRate(1D, Duration.valueOf(\"1ns\"), true), \"1000M/s\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"1ns\"), false), \"10B\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"1ns\"), true), \"10B/s\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"10ns\"), false), \"1000M\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"10ns\"), true), \"1000M/s\");\n+\n+        assertEquals(FormatUtils.formatCountRate(0.0000001D, Duration.valueOf(\"1us\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(0.0000001D, Duration.valueOf(\"1us\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(0.000001D, Duration.valueOf(\"1us\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(0.000001D, Duration.valueOf(\"1us\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(0.0000015D, Duration.valueOf(\"1us\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(0.0000015D, Duration.valueOf(\"1us\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(1D, Duration.valueOf(\"1us\"), false), \"1000K\");\n+        assertEquals(FormatUtils.formatCountRate(1D, Duration.valueOf(\"1us\"), true), \"1000K/s\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"1us\"), false), \"10M\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"1us\"), true), \"10M/s\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"10us\"), false), \"1000K\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"10us\"), true), \"1000K/s\");\n+\n+        assertEquals(FormatUtils.formatCountRate(0.0001D, Duration.valueOf(\"1ms\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(0.0001D, Duration.valueOf(\"1ms\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(0.001D, Duration.valueOf(\"1ms\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(0.001D, Duration.valueOf(\"1ms\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(0.0015D, Duration.valueOf(\"1ms\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(0.0015D, Duration.valueOf(\"1ms\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(1D, Duration.valueOf(\"1ms\"), false), \"1000\");\n+        assertEquals(FormatUtils.formatCountRate(1D, Duration.valueOf(\"1ms\"), true), \"1000/s\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"1ms\"), false), \"10K\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"1ms\"), true), \"10K/s\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"10ms\"), false), \"1000\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"10ms\"), true), \"1000/s\");\n+\n+        assertEquals(FormatUtils.formatCountRate(0.1D, Duration.valueOf(\"1s\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(0.1D, Duration.valueOf(\"1s\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"1s\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"1s\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"10s\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"10s\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(1.5D, Duration.valueOf(\"1s\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(1.5D, Duration.valueOf(\"1s\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"1s\"), false), \"10\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"1s\"), true), \"10/s\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"10s\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"10s\"), true), \"1/s\");\n+\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"1m\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"1m\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(60.0D, Duration.valueOf(\"1m\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(60.0D, Duration.valueOf(\"1m\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(600.0D, Duration.valueOf(\"1m\"), false), \"10\");\n+        assertEquals(FormatUtils.formatCountRate(600.0D, Duration.valueOf(\"1m\"), true), \"10/s\");\n+        assertEquals(FormatUtils.formatCountRate(100.0D, Duration.valueOf(\"10m\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(100.0D, Duration.valueOf(\"10m\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(600.0D, Duration.valueOf(\"10m\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(600.0D, Duration.valueOf(\"10m\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(6000.0D, Duration.valueOf(\"10m\"), false), \"10\");\n+        assertEquals(FormatUtils.formatCountRate(6000.0D, Duration.valueOf(\"10m\"), true), \"10/s\");\n+\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"1h\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"1h\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(3600.0D, Duration.valueOf(\"1h\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(3600.0D, Duration.valueOf(\"1h\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(36000.0D, Duration.valueOf(\"1h\"), false), \"10\");\n+        assertEquals(FormatUtils.formatCountRate(36000.0D, Duration.valueOf(\"1h\"), true), \"10/s\");\n+        assertEquals(FormatUtils.formatCountRate(100.0D, Duration.valueOf(\"10h\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(100.0D, Duration.valueOf(\"10h\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(36000.0D, Duration.valueOf(\"10h\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(36000.0D, Duration.valueOf(\"10h\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(360000.0D, Duration.valueOf(\"10h\"), false), \"10\");\n+        assertEquals(FormatUtils.formatCountRate(360000.0D, Duration.valueOf(\"10h\"), true), \"10/s\");\n+\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"1d\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"1d\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(86400.0D, Duration.valueOf(\"1d\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(86400.0D, Duration.valueOf(\"1d\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(864000.0D, Duration.valueOf(\"1d\"), false), \"10\");\n+        assertEquals(FormatUtils.formatCountRate(864000.0D, Duration.valueOf(\"1d\"), true), \"10/s\");\n+        assertEquals(FormatUtils.formatCountRate(86400.0D, Duration.valueOf(\"10d\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(86400.0D, Duration.valueOf(\"10d\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(864000.0D, Duration.valueOf(\"10d\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(864000.0D, Duration.valueOf(\"10d\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(8640000.0D, Duration.valueOf(\"10d\"), false), \"10\");\n+        assertEquals(FormatUtils.formatCountRate(8640000.0D, Duration.valueOf(\"10d\"), true), \"10/s\");\n+\n+        assertEquals(FormatUtils.formatCountRate(Double.NaN, Duration.valueOf(\"1s\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(Double.NaN, Duration.valueOf(\"1s\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(Double.POSITIVE_INFINITY, Duration.valueOf(\"1s\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(Double.POSITIVE_INFINITY, Duration.valueOf(\"1s\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(Double.NEGATIVE_INFINITY, Duration.valueOf(\"1s\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(Double.NEGATIVE_INFINITY, Duration.valueOf(\"1s\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"0s\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"0s\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(-1.0D, Duration.valueOf(\"0s\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(-1.0D, Duration.valueOf(\"0s\"), true), \"0/s\");\n+    }\n+\n+    @Test\n+    public void testFormatDataSize()\n+    {\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1L), false), \"1B\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1L), true), \"1B\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12L), false), \"12B\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12L), true), \"12B\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123L), false), \"123B\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123L), true), \"123B\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234L), false), \"1.21K\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234L), true), \"1.21KB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12345L), false), \"12.1K\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12345L), true), \"12.1KB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123456L), false), \"121K\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123456L), true), \"121KB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234567L), false), \"1.18M\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234567L), true), \"1.18MB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12345678L), false), \"11.8M\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12345678L), true), \"11.8MB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123456789L), false), \"118M\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123456789L), true), \"118MB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234567890L), false), \"1.15G\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234567890L), true), \"1.15GB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12345678901L), false), \"11.5G\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12345678901L), true), \"11.5GB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123456789012L), false), \"115G\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123456789012L), true), \"115GB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234567890123L), false), \"1.12T\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234567890123L), true), \"1.12TB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12345678901234L), false), \"11.2T\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12345678901234L), true), \"11.2TB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123456789012345L), false), \"112T\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123456789012345L), true), \"112TB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234567890123456L), false), \"1.1P\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234567890123456L), true), \"1.1PB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12345678901234567L), false), \"11P\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12345678901234567L), true), \"11PB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123456789012345678L), false), \"110P\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123456789012345678L), true), \"110PB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234567890123456789L), false), \"1097P\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234567890123456789L), true), \"1097PB\");\n+    }\n+\n+    @Test\n+    public void testFormatDataRate()\n+    {\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(0), Duration.valueOf(\"1ns\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(0), Duration.valueOf(\"1ns\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1ns\"), false), \"954M\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1ns\"), true), \"954MB/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"1ns\"), false), \"9.31G\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"1ns\"), true), \"9.31GB/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"10ns\"), false), \"954M\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"10ns\"), true), \"954MB/s\");\n+\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(0), Duration.valueOf(\"1us\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(0), Duration.valueOf(\"1us\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1us\"), false), \"977K\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1us\"), true), \"977KB/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"1us\"), false), \"9.54M\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"1us\"), true), \"9.54MB/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"10us\"), false), \"977K\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"10us\"), true), \"977KB/s\");\n+\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(0), Duration.valueOf(\"1ms\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(0), Duration.valueOf(\"1ms\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1ms\"), false), \"1000B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1ms\"), true), \"1000B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"1ms\"), false), \"9.77K\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"1ms\"), true), \"9.77KB/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"10ms\"), false), \"1000B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"10ms\"), true), \"1000B/s\");\n+\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(0), Duration.valueOf(\"1s\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(0), Duration.valueOf(\"1s\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1s\"), false), \"1B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1s\"), true), \"1B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"10s\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"10s\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"1s\"), false), \"10B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"1s\"), true), \"10B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"10s\"), false), \"1B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"10s\"), true), \"1B/s\");\n+\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1m\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1m\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(60), Duration.valueOf(\"1m\"), false), \"1B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(60), Duration.valueOf(\"1m\"), true), \"1B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(600), Duration.valueOf(\"1m\"), false), \"10B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(600), Duration.valueOf(\"1m\"), true), \"10B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(100), Duration.valueOf(\"10m\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(100), Duration.valueOf(\"10m\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(600), Duration.valueOf(\"10m\"), false), \"1B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(600), Duration.valueOf(\"10m\"), true), \"1B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(6000), Duration.valueOf(\"10m\"), false), \"10B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(6000), Duration.valueOf(\"10m\"), true), \"10B/s\");\n+\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1h\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1h\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(3600), Duration.valueOf(\"1h\"), false), \"1B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(3600), Duration.valueOf(\"1h\"), true), \"1B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(36000), Duration.valueOf(\"1h\"), false), \"10B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(36000), Duration.valueOf(\"1h\"), true), \"10B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(100), Duration.valueOf(\"10h\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(100), Duration.valueOf(\"10h\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(36000), Duration.valueOf(\"10h\"), false), \"1B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(36000), Duration.valueOf(\"10h\"), true), \"1B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(360000), Duration.valueOf(\"10h\"), false), \"10B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(360000), Duration.valueOf(\"10h\"), true), \"10B/s\");\n+\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1d\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1d\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(86400), Duration.valueOf(\"1d\"), false), \"1B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(86400), Duration.valueOf(\"1d\"), true), \"1B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(864000), Duration.valueOf(\"1d\"), false), \"10B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(864000), Duration.valueOf(\"1d\"), true), \"10B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(86400), Duration.valueOf(\"10d\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(86400), Duration.valueOf(\"10d\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(864000), Duration.valueOf(\"10d\"), false), \"1B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(864000), Duration.valueOf(\"10d\"), true), \"1B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(8640000), Duration.valueOf(\"10d\"), false), \"10B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(8640000), Duration.valueOf(\"10d\"), true), \"10B/s\");\n+\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), true), \"0B/s\");\n+    }\n+\n+    @Test\n+    public void testPluralize()\n+    {\n+        assertEquals(FormatUtils.pluralize(\"foo\", 0), \"foos\");\n+        assertEquals(FormatUtils.pluralize(\"foo\", 1), \"foo\");\n+        assertEquals(FormatUtils.pluralize(\"foo\", 2), \"foos\");\n+    }\n+\n+    @Test\n+    public void testFormatFinalTime()\n+    {\n+        assertEquals(FormatUtils.formatFinalTime(Duration.valueOf(\"0us\")), \"0.00\");\n+        assertEquals(FormatUtils.formatFinalTime(Duration.valueOf(\"0ns\")), \"0.00\");\n+        assertEquals(FormatUtils.formatFinalTime(Duration.valueOf(\"0ms\")), \"0.00\");\n+        assertEquals(FormatUtils.formatFinalTime(Duration.valueOf(\"0s\")), \"0.00\");\n+        assertEquals(FormatUtils.formatFinalTime(Duration.valueOf(\"0m\")), \"0.00\");\n+        assertEquals(FormatUtils.formatFinalTime(Duration.valueOf(\"0h\")), \"0.00\");\n+        assertEquals(FormatUtils.formatFinalTime(Duration.valueOf(\"0d\")), \"0.00\");\n+        assertEquals(FormatUtils.formatFinalTime(Duration.valueOf(\"1us\")), \"0.00\");\n+        assertEquals(FormatUtils.formatFinalTime(Duration.valueOf(\"1ns\")), \"0.00\");\n+        assertEquals(FormatUtils.formatFinalTime(Duration.valueOf(\"1ms\")), \"0.00\");\n+        assertEquals(FormatUtils.formatFinalTime(Duration.valueOf(\"10ms\")), \"0.01\");\n+        assertEquals(FormatUtils.formatFinalTime(Duration.valueOf(\"100ms\")), \"0.10\");\n+        assertEquals(FormatUtils.formatFinalTime(Duration.valueOf(\"1s\")), \"1.00\");\n+        assertEquals(FormatUtils.formatFinalTime(Duration.valueOf(\"10s\")), \"10.00\");\n+        assertEquals(FormatUtils.formatFinalTime(Duration.valueOf(\"1m\")), \"1:00\");\n+        assertEquals(FormatUtils.formatFinalTime(Duration.valueOf(\"61s\")), \"1:01\");\n+        assertEquals(FormatUtils.formatFinalTime(Duration.valueOf(\"1h\")), \"60:00\");\n+        assertEquals(FormatUtils.formatFinalTime(Duration.valueOf(\"61m\")), \"61:00\");\n+        assertEquals(FormatUtils.formatFinalTime(Duration.valueOf(\"1d\")), \"1440:00\");\n+        assertEquals(FormatUtils.formatFinalTime(Duration.valueOf(\"25h\")), \"1500:00\");\n+    }\n+\n+    @Test\n+    public void testFormatIndeterminateProgressBar()\n+    {\n+        assertEquals(FormatUtils.formatProgressBar(10, 0), \"<=>       \");\n+        assertEquals(FormatUtils.formatProgressBar(10, 1), \" <=>      \");\n+        assertEquals(FormatUtils.formatProgressBar(10, 7), \"       <=>\");\n+        assertEquals(FormatUtils.formatProgressBar(10, 8), \"      <=> \");\n+        assertEquals(FormatUtils.formatProgressBar(10, 13), \" <=>      \");\n+        assertEquals(FormatUtils.formatProgressBar(10, 14), \"<=>       \");\n+    }\n+\n+    @Test(expectedExceptions = IllegalArgumentException.class, expectedExceptionsMessageRegExp = \"invalid count: -1\")\n+    public void testInvalidIndeterminateProgressBar()\n+    {\n+        assertEquals(FormatUtils.formatProgressBar(10, -1), \"<=>       \");",
                "path": "client/trino-cli/src/test/java/io/trino/cli/TestFormatUtils.java",
                "position": 328,
                "original_position": 328,
                "commit_id": "f88ba0cee83615211a54a7351df5656d7688ae1c",
                "original_commit_id": "f88ba0cee83615211a54a7351df5656d7688ae1c",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "correct",
                "created_at": "2022-12-08T02:00:07Z",
                "updated_at": "2022-12-08T02:00:07Z",
                "html_url": "https://github.com/trinodb/trino/pull/15337#discussion_r1042849643",
                "pull_request_url": "https://api.github.com/repos/trinodb/trino/pulls/15337",
                "author_association": "MEMBER",
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/comments/1042849643"
                    },
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15337#discussion_r1042849643"
                    },
                    "pull_request": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337"
                    }
                },
                "reactions": {
                    "url": "https://api.github.com/repos/trinodb/trino/pulls/comments/1042849643/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "start_line": null,
                "original_start_line": null,
                "start_side": null,
                "line": 328,
                "original_line": 328,
                "side": "RIGHT",
                "in_reply_to_id": 1042707788
            },
            "pull_request": {
                "url": "https://api.github.com/repos/trinodb/trino/pulls/15337",
                "id": 1152104129,
                "node_id": "PR_kwDOCezRTs5Eq7bB",
                "html_url": "https://github.com/trinodb/trino/pull/15337",
                "diff_url": "https://github.com/trinodb/trino/pull/15337.diff",
                "patch_url": "https://github.com/trinodb/trino/pull/15337.patch",
                "issue_url": "https://api.github.com/repos/trinodb/trino/issues/15337",
                "number": 15337,
                "state": "open",
                "locked": false,
                "title": "Fix test for invalid rate in FormatUtils.formatDataRate()",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "<!-- Thank you for submitting a pull request! Find more information in our development guide at https://github.com/trinodb/trino/blob/master/.github/DEVELOPMENT.md and contact us on #dev in Slack. -->\r\n<!-- Provide an overview of the PR for maintainers and reviewers. -->\r\n## Description\r\n\r\n`FormatUtils.formatDataRate()` contains the following code:\r\n\r\n```java\r\nlong rate = Math.round(dataSize.toBytes() / duration.getValue(SECONDS));\r\nif (Double.isNaN(rate) || Double.isInfinite(rate)) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nThe test can never evaluate as `true`, since both functions will return false for any `long`.\r\n\r\nThe correct test is:\r\n\r\n```java\r\nif (rate == Long.MAX_VALUE) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nIt's not necessary to test for `Long.MIN_VALUE`, since neither `dataSize` nor `duration` can be negative.\r\n\r\n<!-- Provide details that would help an engineer who is unfamiliar with this part of the code. -->\r\n## Unit Test\r\n\r\nI added a new class, `TestFormatUtils` to test both this fix and the rest of `FormatUtils`. The tests for this change are:\r\n\r\n```java\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), false), \"0B\");\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), true), \"0B/s\");\r\n```\r\n\r\n<!-- Mark the appropriate option with an (x). Propose a release note if you can. -->\r\n## Release notes\r\n\r\n(x) This is not user-visible or docs only and no release notes are required.\r\n( ) Release notes are required, please propose a release note for me.\r\n( ) Release notes are required, with the following suggested text:\r\n\r\n## Related Issue\r\n\r\nFixes #13093",
                "created_at": "2022-12-07T17:54:40Z",
                "updated_at": "2022-12-08T02:00:07Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": "dd4eb7e24625655b4a60619dabe31785fb81f5ab",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [
                    {
                        "id": 1202580151,
                        "node_id": "MDU6TGFiZWwxMjAyNTgwMTUx",
                        "url": "https://api.github.com/repos/trinodb/trino/labels/cla-signed",
                        "name": "cla-signed",
                        "color": "ededed",
                        "default": false,
                        "description": null
                    }
                ],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/trinodb/trino/pulls/15337/commits",
                "review_comments_url": "https://api.github.com/repos/trinodb/trino/pulls/15337/comments",
                "review_comment_url": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/trinodb/trino/issues/15337/comments",
                "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/f88ba0cee83615211a54a7351df5656d7688ae1c",
                "head": {
                    "label": "metadaddy:fix-formatdatarate-test",
                    "ref": "fix-formatdatarate-test",
                    "sha": "f88ba0cee83615211a54a7351df5656d7688ae1c",
                    "user": {
                        "login": "metadaddy",
                        "id": 723517,
                        "node_id": "MDQ6VXNlcjcyMzUxNw==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/metadaddy",
                        "html_url": "https://github.com/metadaddy",
                        "followers_url": "https://api.github.com/users/metadaddy/followers",
                        "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                        "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                        "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                        "repos_url": "https://api.github.com/users/metadaddy/repos",
                        "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 509274784,
                        "node_id": "R_kgDOHlrqoA",
                        "name": "trino",
                        "full_name": "metadaddy/trino",
                        "private": false,
                        "owner": {
                            "login": "metadaddy",
                            "id": 723517,
                            "node_id": "MDQ6VXNlcjcyMzUxNw==",
                            "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/metadaddy",
                            "html_url": "https://github.com/metadaddy",
                            "followers_url": "https://api.github.com/users/metadaddy/followers",
                            "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                            "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                            "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                            "repos_url": "https://api.github.com/users/metadaddy/repos",
                            "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/metadaddy/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": true,
                        "url": "https://api.github.com/repos/metadaddy/trino",
                        "forks_url": "https://api.github.com/repos/metadaddy/trino/forks",
                        "keys_url": "https://api.github.com/repos/metadaddy/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/metadaddy/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/metadaddy/trino/teams",
                        "hooks_url": "https://api.github.com/repos/metadaddy/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/metadaddy/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/metadaddy/trino/events",
                        "assignees_url": "https://api.github.com/repos/metadaddy/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/metadaddy/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/metadaddy/trino/tags",
                        "blobs_url": "https://api.github.com/repos/metadaddy/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/metadaddy/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/metadaddy/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/metadaddy/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/metadaddy/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/metadaddy/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/metadaddy/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/metadaddy/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/metadaddy/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/metadaddy/trino/subscription",
                        "commits_url": "https://api.github.com/repos/metadaddy/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/metadaddy/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/metadaddy/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/metadaddy/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/metadaddy/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/metadaddy/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/metadaddy/trino/merges",
                        "archive_url": "https://api.github.com/repos/metadaddy/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/metadaddy/trino/downloads",
                        "issues_url": "https://api.github.com/repos/metadaddy/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/metadaddy/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/metadaddy/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/metadaddy/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/metadaddy/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/metadaddy/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/metadaddy/trino/deployments",
                        "created_at": "2022-07-01T00:43:32Z",
                        "updated_at": "2022-07-06T01:44:20Z",
                        "pushed_at": "2022-12-07T17:50:11Z",
                        "git_url": "git://github.com/metadaddy/trino.git",
                        "ssh_url": "git@github.com:metadaddy/trino.git",
                        "clone_url": "https://github.com/metadaddy/trino.git",
                        "svn_url": "https://github.com/metadaddy/trino",
                        "homepage": "https://trino.io",
                        "size": 192363,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": "Java",
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "master"
                    }
                },
                "base": {
                    "label": "trinodb:master",
                    "ref": "master",
                    "sha": "4b266700437a87236ad0e0e5cd1db866f4f76dcb",
                    "user": {
                        "login": "trinodb",
                        "id": 34147222,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                        "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/trinodb",
                        "html_url": "https://github.com/trinodb",
                        "followers_url": "https://api.github.com/users/trinodb/followers",
                        "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                        "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                        "organizations_url": "https://api.github.com/users/trinodb/orgs",
                        "repos_url": "https://api.github.com/users/trinodb/repos",
                        "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/trinodb/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 166515022,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNjY1MTUwMjI=",
                        "name": "trino",
                        "full_name": "trinodb/trino",
                        "private": false,
                        "owner": {
                            "login": "trinodb",
                            "id": 34147222,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/trinodb",
                            "html_url": "https://github.com/trinodb",
                            "followers_url": "https://api.github.com/users/trinodb/followers",
                            "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                            "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                            "organizations_url": "https://api.github.com/users/trinodb/orgs",
                            "repos_url": "https://api.github.com/users/trinodb/repos",
                            "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/trinodb/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/trinodb/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": false,
                        "url": "https://api.github.com/repos/trinodb/trino",
                        "forks_url": "https://api.github.com/repos/trinodb/trino/forks",
                        "keys_url": "https://api.github.com/repos/trinodb/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/trinodb/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/trinodb/trino/teams",
                        "hooks_url": "https://api.github.com/repos/trinodb/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/trinodb/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/trinodb/trino/events",
                        "assignees_url": "https://api.github.com/repos/trinodb/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/trinodb/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/trinodb/trino/tags",
                        "blobs_url": "https://api.github.com/repos/trinodb/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/trinodb/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/trinodb/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/trinodb/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/trinodb/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/trinodb/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/trinodb/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/trinodb/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/trinodb/trino/subscription",
                        "commits_url": "https://api.github.com/repos/trinodb/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/trinodb/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/trinodb/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/trinodb/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/trinodb/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/trinodb/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/trinodb/trino/merges",
                        "archive_url": "https://api.github.com/repos/trinodb/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/trinodb/trino/downloads",
                        "issues_url": "https://api.github.com/repos/trinodb/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/trinodb/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/trinodb/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/trinodb/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/trinodb/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/trinodb/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/trinodb/trino/deployments",
                        "created_at": "2019-01-19T06:38:14Z",
                        "updated_at": "2022-12-07T23:23:39Z",
                        "pushed_at": "2022-12-08T01:09:12Z",
                        "git_url": "git://github.com/trinodb/trino.git",
                        "ssh_url": "git@github.com:trinodb/trino.git",
                        "clone_url": "https://github.com/trinodb/trino.git",
                        "svn_url": "https://github.com/trinodb/trino",
                        "homepage": "https://trino.io",
                        "size": 197719,
                        "stargazers_count": 6794,
                        "watchers_count": 6794,
                        "language": "Java",
                        "has_issues": true,
                        "has_projects": false,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": true,
                        "forks_count": 2084,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 2093,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "analytics",
                            "big-data",
                            "data-science",
                            "database",
                            "databases",
                            "datalake",
                            "distributed-database",
                            "distributed-databases",
                            "distributed-systems",
                            "hadoop",
                            "hive",
                            "java",
                            "jdbc",
                            "presto",
                            "prestodb",
                            "query-engine",
                            "sql",
                            "trino"
                        ],
                        "visibility": "public",
                        "forks": 2084,
                        "open_issues": 2093,
                        "watchers": 6794,
                        "default_branch": "master"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337"
                    },
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15337"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15337"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15337/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/trinodb/trino/statuses/f88ba0cee83615211a54a7351df5656d7688ae1c"
                    }
                },
                "author_association": "MEMBER",
                "auto_merge": null,
                "active_lock_reason": null
            }
        },
        "public": true,
        "created_at": "2022-12-08T02:00:07Z",
        "org": {
            "id": 34147222,
            "login": "trinodb",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/trinodb",
            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?"
        }
    },
    {
        "id": "25737163310",
        "type": "PullRequestReviewEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 166515022,
            "name": "trinodb/trino",
            "url": "https://api.github.com/repos/trinodb/trino"
        },
        "payload": {
            "action": "created",
            "review": {
                "id": 1209353593,
                "node_id": "PRR_kwDOCezRTs5IFUV5",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": null,
                "commit_id": "f88ba0cee83615211a54a7351df5656d7688ae1c",
                "submitted_at": "2022-12-08T02:00:07Z",
                "state": "commented",
                "html_url": "https://github.com/trinodb/trino/pull/15337#pullrequestreview-1209353593",
                "pull_request_url": "https://api.github.com/repos/trinodb/trino/pulls/15337",
                "author_association": "MEMBER",
                "_links": {
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15337#pullrequestreview-1209353593"
                    },
                    "pull_request": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337"
                    }
                }
            },
            "pull_request": {
                "url": "https://api.github.com/repos/trinodb/trino/pulls/15337",
                "id": 1152104129,
                "node_id": "PR_kwDOCezRTs5Eq7bB",
                "html_url": "https://github.com/trinodb/trino/pull/15337",
                "diff_url": "https://github.com/trinodb/trino/pull/15337.diff",
                "patch_url": "https://github.com/trinodb/trino/pull/15337.patch",
                "issue_url": "https://api.github.com/repos/trinodb/trino/issues/15337",
                "number": 15337,
                "state": "open",
                "locked": false,
                "title": "Fix test for invalid rate in FormatUtils.formatDataRate()",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "<!-- Thank you for submitting a pull request! Find more information in our development guide at https://github.com/trinodb/trino/blob/master/.github/DEVELOPMENT.md and contact us on #dev in Slack. -->\r\n<!-- Provide an overview of the PR for maintainers and reviewers. -->\r\n## Description\r\n\r\n`FormatUtils.formatDataRate()` contains the following code:\r\n\r\n```java\r\nlong rate = Math.round(dataSize.toBytes() / duration.getValue(SECONDS));\r\nif (Double.isNaN(rate) || Double.isInfinite(rate)) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nThe test can never evaluate as `true`, since both functions will return false for any `long`.\r\n\r\nThe correct test is:\r\n\r\n```java\r\nif (rate == Long.MAX_VALUE) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nIt's not necessary to test for `Long.MIN_VALUE`, since neither `dataSize` nor `duration` can be negative.\r\n\r\n<!-- Provide details that would help an engineer who is unfamiliar with this part of the code. -->\r\n## Unit Test\r\n\r\nI added a new class, `TestFormatUtils` to test both this fix and the rest of `FormatUtils`. The tests for this change are:\r\n\r\n```java\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), false), \"0B\");\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), true), \"0B/s\");\r\n```\r\n\r\n<!-- Mark the appropriate option with an (x). Propose a release note if you can. -->\r\n## Release notes\r\n\r\n(x) This is not user-visible or docs only and no release notes are required.\r\n( ) Release notes are required, please propose a release note for me.\r\n( ) Release notes are required, with the following suggested text:\r\n\r\n## Related Issue\r\n\r\nFixes #13093",
                "created_at": "2022-12-07T17:54:40Z",
                "updated_at": "2022-12-08T02:00:07Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": "dd4eb7e24625655b4a60619dabe31785fb81f5ab",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [
                    {
                        "id": 1202580151,
                        "node_id": "MDU6TGFiZWwxMjAyNTgwMTUx",
                        "url": "https://api.github.com/repos/trinodb/trino/labels/cla-signed",
                        "name": "cla-signed",
                        "color": "ededed",
                        "default": false,
                        "description": null
                    }
                ],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/trinodb/trino/pulls/15337/commits",
                "review_comments_url": "https://api.github.com/repos/trinodb/trino/pulls/15337/comments",
                "review_comment_url": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/trinodb/trino/issues/15337/comments",
                "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/f88ba0cee83615211a54a7351df5656d7688ae1c",
                "head": {
                    "label": "metadaddy:fix-formatdatarate-test",
                    "ref": "fix-formatdatarate-test",
                    "sha": "f88ba0cee83615211a54a7351df5656d7688ae1c",
                    "user": {
                        "login": "metadaddy",
                        "id": 723517,
                        "node_id": "MDQ6VXNlcjcyMzUxNw==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/metadaddy",
                        "html_url": "https://github.com/metadaddy",
                        "followers_url": "https://api.github.com/users/metadaddy/followers",
                        "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                        "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                        "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                        "repos_url": "https://api.github.com/users/metadaddy/repos",
                        "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 509274784,
                        "node_id": "R_kgDOHlrqoA",
                        "name": "trino",
                        "full_name": "metadaddy/trino",
                        "private": false,
                        "owner": {
                            "login": "metadaddy",
                            "id": 723517,
                            "node_id": "MDQ6VXNlcjcyMzUxNw==",
                            "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/metadaddy",
                            "html_url": "https://github.com/metadaddy",
                            "followers_url": "https://api.github.com/users/metadaddy/followers",
                            "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                            "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                            "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                            "repos_url": "https://api.github.com/users/metadaddy/repos",
                            "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/metadaddy/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": true,
                        "url": "https://api.github.com/repos/metadaddy/trino",
                        "forks_url": "https://api.github.com/repos/metadaddy/trino/forks",
                        "keys_url": "https://api.github.com/repos/metadaddy/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/metadaddy/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/metadaddy/trino/teams",
                        "hooks_url": "https://api.github.com/repos/metadaddy/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/metadaddy/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/metadaddy/trino/events",
                        "assignees_url": "https://api.github.com/repos/metadaddy/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/metadaddy/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/metadaddy/trino/tags",
                        "blobs_url": "https://api.github.com/repos/metadaddy/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/metadaddy/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/metadaddy/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/metadaddy/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/metadaddy/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/metadaddy/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/metadaddy/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/metadaddy/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/metadaddy/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/metadaddy/trino/subscription",
                        "commits_url": "https://api.github.com/repos/metadaddy/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/metadaddy/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/metadaddy/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/metadaddy/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/metadaddy/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/metadaddy/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/metadaddy/trino/merges",
                        "archive_url": "https://api.github.com/repos/metadaddy/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/metadaddy/trino/downloads",
                        "issues_url": "https://api.github.com/repos/metadaddy/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/metadaddy/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/metadaddy/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/metadaddy/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/metadaddy/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/metadaddy/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/metadaddy/trino/deployments",
                        "created_at": "2022-07-01T00:43:32Z",
                        "updated_at": "2022-07-06T01:44:20Z",
                        "pushed_at": "2022-12-07T17:50:11Z",
                        "git_url": "git://github.com/metadaddy/trino.git",
                        "ssh_url": "git@github.com:metadaddy/trino.git",
                        "clone_url": "https://github.com/metadaddy/trino.git",
                        "svn_url": "https://github.com/metadaddy/trino",
                        "homepage": "https://trino.io",
                        "size": 192363,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": "Java",
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "master"
                    }
                },
                "base": {
                    "label": "trinodb:master",
                    "ref": "master",
                    "sha": "4b266700437a87236ad0e0e5cd1db866f4f76dcb",
                    "user": {
                        "login": "trinodb",
                        "id": 34147222,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                        "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/trinodb",
                        "html_url": "https://github.com/trinodb",
                        "followers_url": "https://api.github.com/users/trinodb/followers",
                        "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                        "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                        "organizations_url": "https://api.github.com/users/trinodb/orgs",
                        "repos_url": "https://api.github.com/users/trinodb/repos",
                        "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/trinodb/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 166515022,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNjY1MTUwMjI=",
                        "name": "trino",
                        "full_name": "trinodb/trino",
                        "private": false,
                        "owner": {
                            "login": "trinodb",
                            "id": 34147222,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/trinodb",
                            "html_url": "https://github.com/trinodb",
                            "followers_url": "https://api.github.com/users/trinodb/followers",
                            "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                            "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                            "organizations_url": "https://api.github.com/users/trinodb/orgs",
                            "repos_url": "https://api.github.com/users/trinodb/repos",
                            "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/trinodb/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/trinodb/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": false,
                        "url": "https://api.github.com/repos/trinodb/trino",
                        "forks_url": "https://api.github.com/repos/trinodb/trino/forks",
                        "keys_url": "https://api.github.com/repos/trinodb/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/trinodb/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/trinodb/trino/teams",
                        "hooks_url": "https://api.github.com/repos/trinodb/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/trinodb/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/trinodb/trino/events",
                        "assignees_url": "https://api.github.com/repos/trinodb/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/trinodb/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/trinodb/trino/tags",
                        "blobs_url": "https://api.github.com/repos/trinodb/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/trinodb/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/trinodb/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/trinodb/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/trinodb/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/trinodb/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/trinodb/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/trinodb/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/trinodb/trino/subscription",
                        "commits_url": "https://api.github.com/repos/trinodb/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/trinodb/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/trinodb/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/trinodb/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/trinodb/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/trinodb/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/trinodb/trino/merges",
                        "archive_url": "https://api.github.com/repos/trinodb/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/trinodb/trino/downloads",
                        "issues_url": "https://api.github.com/repos/trinodb/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/trinodb/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/trinodb/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/trinodb/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/trinodb/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/trinodb/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/trinodb/trino/deployments",
                        "created_at": "2019-01-19T06:38:14Z",
                        "updated_at": "2022-12-07T23:23:39Z",
                        "pushed_at": "2022-12-08T01:09:12Z",
                        "git_url": "git://github.com/trinodb/trino.git",
                        "ssh_url": "git@github.com:trinodb/trino.git",
                        "clone_url": "https://github.com/trinodb/trino.git",
                        "svn_url": "https://github.com/trinodb/trino",
                        "homepage": "https://trino.io",
                        "size": 197719,
                        "stargazers_count": 6794,
                        "watchers_count": 6794,
                        "language": "Java",
                        "has_issues": true,
                        "has_projects": false,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": true,
                        "forks_count": 2084,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 2093,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "analytics",
                            "big-data",
                            "data-science",
                            "database",
                            "databases",
                            "datalake",
                            "distributed-database",
                            "distributed-databases",
                            "distributed-systems",
                            "hadoop",
                            "hive",
                            "java",
                            "jdbc",
                            "presto",
                            "prestodb",
                            "query-engine",
                            "sql",
                            "trino"
                        ],
                        "visibility": "public",
                        "forks": 2084,
                        "open_issues": 2093,
                        "watchers": 6794,
                        "default_branch": "master"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337"
                    },
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15337"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15337"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15337/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/trinodb/trino/statuses/f88ba0cee83615211a54a7351df5656d7688ae1c"
                    }
                },
                "author_association": "MEMBER",
                "auto_merge": null,
                "active_lock_reason": null
            }
        },
        "public": true,
        "created_at": "2022-12-08T02:00:10Z",
        "org": {
            "id": 34147222,
            "login": "trinodb",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/trinodb",
            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?"
        }
    },
    {
        "id": "25737159492",
        "type": "PullRequestReviewCommentEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 166515022,
            "name": "trinodb/trino",
            "url": "https://api.github.com/repos/trinodb/trino"
        },
        "payload": {
            "action": "created",
            "comment": {
                "url": "https://api.github.com/repos/trinodb/trino/pulls/comments/1042849580",
                "pull_request_review_id": 1209353494,
                "id": 1042849580,
                "node_id": "PRRC_kwDOCezRTs4-KJ8s",
                "diff_hunk": "@@ -0,0 +1,353 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.trino.cli;\n+\n+import io.airlift.units.DataSize;\n+import io.airlift.units.Duration;\n+import org.testng.annotations.Test;\n+\n+import static org.testng.Assert.assertEquals;\n+\n+public class TestFormatUtils\n+{\n+    @Test\n+    public void testFormatCount()\n+    {\n+        assertEquals(FormatUtils.formatCount(1L), \"1\");\n+        assertEquals(FormatUtils.formatCount(12L), \"12\");\n+        assertEquals(FormatUtils.formatCount(123L), \"123\");\n+        assertEquals(FormatUtils.formatCount(1234L), \"1.23K\");\n+        assertEquals(FormatUtils.formatCount(12345L), \"12.3K\");\n+        assertEquals(FormatUtils.formatCount(123456L), \"123K\");\n+        assertEquals(FormatUtils.formatCount(1234567L), \"1.23M\");\n+        assertEquals(FormatUtils.formatCount(12345678L), \"12.3M\");\n+        assertEquals(FormatUtils.formatCount(123456789L), \"123M\");\n+        assertEquals(FormatUtils.formatCount(1234567890L), \"1.23B\");\n+        assertEquals(FormatUtils.formatCount(12345678901L), \"12.3B\");\n+        assertEquals(FormatUtils.formatCount(123456789012L), \"123B\");\n+        assertEquals(FormatUtils.formatCount(1234567890123L), \"1.23T\");\n+        assertEquals(FormatUtils.formatCount(12345678901234L), \"12.3T\");\n+        assertEquals(FormatUtils.formatCount(123456789012345L), \"123T\");\n+        assertEquals(FormatUtils.formatCount(1234567890123456L), \"1.23Q\");\n+        assertEquals(FormatUtils.formatCount(12345678901234567L), \"12.3Q\");\n+        assertEquals(FormatUtils.formatCount(123456789012345678L), \"123Q\");\n+        assertEquals(FormatUtils.formatCount(1234567890123456789L), \"1235Q\");\n+    }\n+\n+    @Test\n+    public void formatCountRate()\n+    {\n+        assertEquals(FormatUtils.formatCountRate(0.0000000001D, Duration.valueOf(\"1ns\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(0.0000000001D, Duration.valueOf(\"1ns\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(0.000000001D, Duration.valueOf(\"1ns\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(0.000000001D, Duration.valueOf(\"1ns\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(0.0000000015D, Duration.valueOf(\"1ns\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(0.0000000015D, Duration.valueOf(\"1ns\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(1D, Duration.valueOf(\"1ns\"), false), \"1000M\");\n+        assertEquals(FormatUtils.formatCountRate(1D, Duration.valueOf(\"1ns\"), true), \"1000M/s\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"1ns\"), false), \"10B\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"1ns\"), true), \"10B/s\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"10ns\"), false), \"1000M\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"10ns\"), true), \"1000M/s\");\n+\n+        assertEquals(FormatUtils.formatCountRate(0.0000001D, Duration.valueOf(\"1us\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(0.0000001D, Duration.valueOf(\"1us\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(0.000001D, Duration.valueOf(\"1us\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(0.000001D, Duration.valueOf(\"1us\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(0.0000015D, Duration.valueOf(\"1us\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(0.0000015D, Duration.valueOf(\"1us\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(1D, Duration.valueOf(\"1us\"), false), \"1000K\");\n+        assertEquals(FormatUtils.formatCountRate(1D, Duration.valueOf(\"1us\"), true), \"1000K/s\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"1us\"), false), \"10M\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"1us\"), true), \"10M/s\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"10us\"), false), \"1000K\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"10us\"), true), \"1000K/s\");\n+\n+        assertEquals(FormatUtils.formatCountRate(0.0001D, Duration.valueOf(\"1ms\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(0.0001D, Duration.valueOf(\"1ms\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(0.001D, Duration.valueOf(\"1ms\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(0.001D, Duration.valueOf(\"1ms\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(0.0015D, Duration.valueOf(\"1ms\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(0.0015D, Duration.valueOf(\"1ms\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(1D, Duration.valueOf(\"1ms\"), false), \"1000\");\n+        assertEquals(FormatUtils.formatCountRate(1D, Duration.valueOf(\"1ms\"), true), \"1000/s\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"1ms\"), false), \"10K\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"1ms\"), true), \"10K/s\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"10ms\"), false), \"1000\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"10ms\"), true), \"1000/s\");\n+\n+        assertEquals(FormatUtils.formatCountRate(0.1D, Duration.valueOf(\"1s\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(0.1D, Duration.valueOf(\"1s\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"1s\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"1s\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"10s\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"10s\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(1.5D, Duration.valueOf(\"1s\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(1.5D, Duration.valueOf(\"1s\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"1s\"), false), \"10\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"1s\"), true), \"10/s\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"10s\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"10s\"), true), \"1/s\");\n+\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"1m\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"1m\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(60.0D, Duration.valueOf(\"1m\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(60.0D, Duration.valueOf(\"1m\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(600.0D, Duration.valueOf(\"1m\"), false), \"10\");\n+        assertEquals(FormatUtils.formatCountRate(600.0D, Duration.valueOf(\"1m\"), true), \"10/s\");\n+        assertEquals(FormatUtils.formatCountRate(100.0D, Duration.valueOf(\"10m\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(100.0D, Duration.valueOf(\"10m\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(600.0D, Duration.valueOf(\"10m\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(600.0D, Duration.valueOf(\"10m\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(6000.0D, Duration.valueOf(\"10m\"), false), \"10\");\n+        assertEquals(FormatUtils.formatCountRate(6000.0D, Duration.valueOf(\"10m\"), true), \"10/s\");\n+\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"1h\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"1h\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(3600.0D, Duration.valueOf(\"1h\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(3600.0D, Duration.valueOf(\"1h\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(36000.0D, Duration.valueOf(\"1h\"), false), \"10\");\n+        assertEquals(FormatUtils.formatCountRate(36000.0D, Duration.valueOf(\"1h\"), true), \"10/s\");\n+        assertEquals(FormatUtils.formatCountRate(100.0D, Duration.valueOf(\"10h\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(100.0D, Duration.valueOf(\"10h\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(36000.0D, Duration.valueOf(\"10h\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(36000.0D, Duration.valueOf(\"10h\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(360000.0D, Duration.valueOf(\"10h\"), false), \"10\");\n+        assertEquals(FormatUtils.formatCountRate(360000.0D, Duration.valueOf(\"10h\"), true), \"10/s\");\n+\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"1d\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"1d\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(86400.0D, Duration.valueOf(\"1d\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(86400.0D, Duration.valueOf(\"1d\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(864000.0D, Duration.valueOf(\"1d\"), false), \"10\");\n+        assertEquals(FormatUtils.formatCountRate(864000.0D, Duration.valueOf(\"1d\"), true), \"10/s\");\n+        assertEquals(FormatUtils.formatCountRate(86400.0D, Duration.valueOf(\"10d\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(86400.0D, Duration.valueOf(\"10d\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(864000.0D, Duration.valueOf(\"10d\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(864000.0D, Duration.valueOf(\"10d\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(8640000.0D, Duration.valueOf(\"10d\"), false), \"10\");\n+        assertEquals(FormatUtils.formatCountRate(8640000.0D, Duration.valueOf(\"10d\"), true), \"10/s\");\n+\n+        assertEquals(FormatUtils.formatCountRate(Double.NaN, Duration.valueOf(\"1s\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(Double.NaN, Duration.valueOf(\"1s\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(Double.POSITIVE_INFINITY, Duration.valueOf(\"1s\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(Double.POSITIVE_INFINITY, Duration.valueOf(\"1s\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(Double.NEGATIVE_INFINITY, Duration.valueOf(\"1s\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(Double.NEGATIVE_INFINITY, Duration.valueOf(\"1s\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"0s\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"0s\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(-1.0D, Duration.valueOf(\"0s\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(-1.0D, Duration.valueOf(\"0s\"), true), \"0/s\");\n+    }\n+\n+    @Test\n+    public void testFormatDataSize()\n+    {\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1L), false), \"1B\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1L), true), \"1B\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12L), false), \"12B\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12L), true), \"12B\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123L), false), \"123B\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123L), true), \"123B\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234L), false), \"1.21K\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234L), true), \"1.21KB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12345L), false), \"12.1K\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12345L), true), \"12.1KB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123456L), false), \"121K\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123456L), true), \"121KB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234567L), false), \"1.18M\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234567L), true), \"1.18MB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12345678L), false), \"11.8M\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12345678L), true), \"11.8MB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123456789L), false), \"118M\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123456789L), true), \"118MB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234567890L), false), \"1.15G\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234567890L), true), \"1.15GB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12345678901L), false), \"11.5G\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12345678901L), true), \"11.5GB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123456789012L), false), \"115G\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123456789012L), true), \"115GB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234567890123L), false), \"1.12T\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234567890123L), true), \"1.12TB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12345678901234L), false), \"11.2T\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12345678901234L), true), \"11.2TB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123456789012345L), false), \"112T\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123456789012345L), true), \"112TB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234567890123456L), false), \"1.1P\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234567890123456L), true), \"1.1PB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12345678901234567L), false), \"11P\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12345678901234567L), true), \"11PB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123456789012345678L), false), \"110P\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123456789012345678L), true), \"110PB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234567890123456789L), false), \"1097P\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234567890123456789L), true), \"1097PB\");\n+    }\n+\n+    @Test\n+    public void testFormatDataRate()\n+    {\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(0), Duration.valueOf(\"1ns\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(0), Duration.valueOf(\"1ns\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1ns\"), false), \"954M\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1ns\"), true), \"954MB/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"1ns\"), false), \"9.31G\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"1ns\"), true), \"9.31GB/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"10ns\"), false), \"954M\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"10ns\"), true), \"954MB/s\");\n+\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(0), Duration.valueOf(\"1us\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(0), Duration.valueOf(\"1us\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1us\"), false), \"977K\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1us\"), true), \"977KB/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"1us\"), false), \"9.54M\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"1us\"), true), \"9.54MB/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"10us\"), false), \"977K\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"10us\"), true), \"977KB/s\");\n+\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(0), Duration.valueOf(\"1ms\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(0), Duration.valueOf(\"1ms\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1ms\"), false), \"1000B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1ms\"), true), \"1000B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"1ms\"), false), \"9.77K\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"1ms\"), true), \"9.77KB/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"10ms\"), false), \"1000B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"10ms\"), true), \"1000B/s\");\n+\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(0), Duration.valueOf(\"1s\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(0), Duration.valueOf(\"1s\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1s\"), false), \"1B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1s\"), true), \"1B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"10s\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"10s\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"1s\"), false), \"10B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"1s\"), true), \"10B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"10s\"), false), \"1B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"10s\"), true), \"1B/s\");\n+\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1m\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1m\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(60), Duration.valueOf(\"1m\"), false), \"1B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(60), Duration.valueOf(\"1m\"), true), \"1B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(600), Duration.valueOf(\"1m\"), false), \"10B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(600), Duration.valueOf(\"1m\"), true), \"10B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(100), Duration.valueOf(\"10m\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(100), Duration.valueOf(\"10m\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(600), Duration.valueOf(\"10m\"), false), \"1B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(600), Duration.valueOf(\"10m\"), true), \"1B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(6000), Duration.valueOf(\"10m\"), false), \"10B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(6000), Duration.valueOf(\"10m\"), true), \"10B/s\");\n+\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1h\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1h\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(3600), Duration.valueOf(\"1h\"), false), \"1B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(3600), Duration.valueOf(\"1h\"), true), \"1B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(36000), Duration.valueOf(\"1h\"), false), \"10B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(36000), Duration.valueOf(\"1h\"), true), \"10B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(100), Duration.valueOf(\"10h\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(100), Duration.valueOf(\"10h\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(36000), Duration.valueOf(\"10h\"), false), \"1B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(36000), Duration.valueOf(\"10h\"), true), \"1B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(360000), Duration.valueOf(\"10h\"), false), \"10B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(360000), Duration.valueOf(\"10h\"), true), \"10B/s\");\n+\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1d\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1d\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(86400), Duration.valueOf(\"1d\"), false), \"1B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(86400), Duration.valueOf(\"1d\"), true), \"1B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(864000), Duration.valueOf(\"1d\"), false), \"10B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(864000), Duration.valueOf(\"1d\"), true), \"10B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(86400), Duration.valueOf(\"10d\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(86400), Duration.valueOf(\"10d\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(864000), Duration.valueOf(\"10d\"), false), \"1B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(864000), Duration.valueOf(\"10d\"), true), \"1B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(8640000), Duration.valueOf(\"10d\"), false), \"10B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(8640000), Duration.valueOf(\"10d\"), true), \"10B/s\");\n+\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), true), \"0B/s\");\n+    }\n+\n+    @Test\n+    public void testPluralize()\n+    {\n+        assertEquals(FormatUtils.pluralize(\"foo\", 0), \"foos\");\n+        assertEquals(FormatUtils.pluralize(\"foo\", 1), \"foo\");\n+        assertEquals(FormatUtils.pluralize(\"foo\", 2), \"foos\");\n+    }\n+\n+    @Test\n+    public void testFormatFinalTime()\n+    {\n+        assertEquals(FormatUtils.formatFinalTime(Duration.valueOf(\"0us\")), \"0.00\");\n+        assertEquals(FormatUtils.formatFinalTime(Duration.valueOf(\"0ns\")), \"0.00\");\n+        assertEquals(FormatUtils.formatFinalTime(Duration.valueOf(\"0ms\")), \"0.00\");\n+        assertEquals(FormatUtils.formatFinalTime(Duration.valueOf(\"0s\")), \"0.00\");\n+        assertEquals(FormatUtils.formatFinalTime(Duration.valueOf(\"0m\")), \"0.00\");\n+        assertEquals(FormatUtils.formatFinalTime(Duration.valueOf(\"0h\")), \"0.00\");\n+        assertEquals(FormatUtils.formatFinalTime(Duration.valueOf(\"0d\")), \"0.00\");\n+        assertEquals(FormatUtils.formatFinalTime(Duration.valueOf(\"1us\")), \"0.00\");\n+        assertEquals(FormatUtils.formatFinalTime(Duration.valueOf(\"1ns\")), \"0.00\");\n+        assertEquals(FormatUtils.formatFinalTime(Duration.valueOf(\"1ms\")), \"0.00\");\n+        assertEquals(FormatUtils.formatFinalTime(Duration.valueOf(\"10ms\")), \"0.01\");\n+        assertEquals(FormatUtils.formatFinalTime(Duration.valueOf(\"100ms\")), \"0.10\");\n+        assertEquals(FormatUtils.formatFinalTime(Duration.valueOf(\"1s\")), \"1.00\");\n+        assertEquals(FormatUtils.formatFinalTime(Duration.valueOf(\"10s\")), \"10.00\");\n+        assertEquals(FormatUtils.formatFinalTime(Duration.valueOf(\"1m\")), \"1:00\");\n+        assertEquals(FormatUtils.formatFinalTime(Duration.valueOf(\"61s\")), \"1:01\");\n+        assertEquals(FormatUtils.formatFinalTime(Duration.valueOf(\"1h\")), \"60:00\");\n+        assertEquals(FormatUtils.formatFinalTime(Duration.valueOf(\"61m\")), \"61:00\");\n+        assertEquals(FormatUtils.formatFinalTime(Duration.valueOf(\"1d\")), \"1440:00\");\n+        assertEquals(FormatUtils.formatFinalTime(Duration.valueOf(\"25h\")), \"1500:00\");\n+    }\n+\n+    @Test\n+    public void testFormatIndeterminateProgressBar()\n+    {\n+        assertEquals(FormatUtils.formatProgressBar(10, 0), \"<=>       \");\n+        assertEquals(FormatUtils.formatProgressBar(10, 1), \" <=>      \");\n+        assertEquals(FormatUtils.formatProgressBar(10, 7), \"       <=>\");\n+        assertEquals(FormatUtils.formatProgressBar(10, 8), \"      <=> \");\n+        assertEquals(FormatUtils.formatProgressBar(10, 13), \" <=>      \");\n+        assertEquals(FormatUtils.formatProgressBar(10, 14), \"<=>       \");\n+    }\n+\n+    @Test(expectedExceptions = IllegalArgumentException.class, expectedExceptionsMessageRegExp = \"invalid count: -1\")",
                "path": "client/trino-cli/src/test/java/io/trino/cli/TestFormatUtils.java",
                "position": 325,
                "original_position": 325,
                "commit_id": "f88ba0cee83615211a54a7351df5656d7688ae1c",
                "original_commit_id": "f88ba0cee83615211a54a7351df5656d7688ae1c",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "Done:\r\n\r\n```java\r\n    @Test\r\n    public void testInvalidIndeterminateProgressBar()\r\n    {\r\n        assertThatThrownBy(() -> formatProgressBar(10, -1))\r\n                .isInstanceOf(IllegalArgumentException.class)\r\n                .hasMessageContaining(\"invalid count: -1\");\r\n    }\r\n```",
                "created_at": "2022-12-08T01:59:56Z",
                "updated_at": "2022-12-08T01:59:56Z",
                "html_url": "https://github.com/trinodb/trino/pull/15337#discussion_r1042849580",
                "pull_request_url": "https://api.github.com/repos/trinodb/trino/pulls/15337",
                "author_association": "MEMBER",
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/comments/1042849580"
                    },
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15337#discussion_r1042849580"
                    },
                    "pull_request": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337"
                    }
                },
                "reactions": {
                    "url": "https://api.github.com/repos/trinodb/trino/pulls/comments/1042849580/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "start_line": null,
                "original_start_line": null,
                "start_side": null,
                "line": 325,
                "original_line": 325,
                "side": "RIGHT",
                "in_reply_to_id": 1042707547
            },
            "pull_request": {
                "url": "https://api.github.com/repos/trinodb/trino/pulls/15337",
                "id": 1152104129,
                "node_id": "PR_kwDOCezRTs5Eq7bB",
                "html_url": "https://github.com/trinodb/trino/pull/15337",
                "diff_url": "https://github.com/trinodb/trino/pull/15337.diff",
                "patch_url": "https://github.com/trinodb/trino/pull/15337.patch",
                "issue_url": "https://api.github.com/repos/trinodb/trino/issues/15337",
                "number": 15337,
                "state": "open",
                "locked": false,
                "title": "Fix test for invalid rate in FormatUtils.formatDataRate()",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "<!-- Thank you for submitting a pull request! Find more information in our development guide at https://github.com/trinodb/trino/blob/master/.github/DEVELOPMENT.md and contact us on #dev in Slack. -->\r\n<!-- Provide an overview of the PR for maintainers and reviewers. -->\r\n## Description\r\n\r\n`FormatUtils.formatDataRate()` contains the following code:\r\n\r\n```java\r\nlong rate = Math.round(dataSize.toBytes() / duration.getValue(SECONDS));\r\nif (Double.isNaN(rate) || Double.isInfinite(rate)) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nThe test can never evaluate as `true`, since both functions will return false for any `long`.\r\n\r\nThe correct test is:\r\n\r\n```java\r\nif (rate == Long.MAX_VALUE) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nIt's not necessary to test for `Long.MIN_VALUE`, since neither `dataSize` nor `duration` can be negative.\r\n\r\n<!-- Provide details that would help an engineer who is unfamiliar with this part of the code. -->\r\n## Unit Test\r\n\r\nI added a new class, `TestFormatUtils` to test both this fix and the rest of `FormatUtils`. The tests for this change are:\r\n\r\n```java\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), false), \"0B\");\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), true), \"0B/s\");\r\n```\r\n\r\n<!-- Mark the appropriate option with an (x). Propose a release note if you can. -->\r\n## Release notes\r\n\r\n(x) This is not user-visible or docs only and no release notes are required.\r\n( ) Release notes are required, please propose a release note for me.\r\n( ) Release notes are required, with the following suggested text:\r\n\r\n## Related Issue\r\n\r\nFixes #13093",
                "created_at": "2022-12-07T17:54:40Z",
                "updated_at": "2022-12-08T01:59:56Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": "dd4eb7e24625655b4a60619dabe31785fb81f5ab",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [
                    {
                        "id": 1202580151,
                        "node_id": "MDU6TGFiZWwxMjAyNTgwMTUx",
                        "url": "https://api.github.com/repos/trinodb/trino/labels/cla-signed",
                        "name": "cla-signed",
                        "color": "ededed",
                        "default": false,
                        "description": null
                    }
                ],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/trinodb/trino/pulls/15337/commits",
                "review_comments_url": "https://api.github.com/repos/trinodb/trino/pulls/15337/comments",
                "review_comment_url": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/trinodb/trino/issues/15337/comments",
                "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/f88ba0cee83615211a54a7351df5656d7688ae1c",
                "head": {
                    "label": "metadaddy:fix-formatdatarate-test",
                    "ref": "fix-formatdatarate-test",
                    "sha": "f88ba0cee83615211a54a7351df5656d7688ae1c",
                    "user": {
                        "login": "metadaddy",
                        "id": 723517,
                        "node_id": "MDQ6VXNlcjcyMzUxNw==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/metadaddy",
                        "html_url": "https://github.com/metadaddy",
                        "followers_url": "https://api.github.com/users/metadaddy/followers",
                        "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                        "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                        "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                        "repos_url": "https://api.github.com/users/metadaddy/repos",
                        "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 509274784,
                        "node_id": "R_kgDOHlrqoA",
                        "name": "trino",
                        "full_name": "metadaddy/trino",
                        "private": false,
                        "owner": {
                            "login": "metadaddy",
                            "id": 723517,
                            "node_id": "MDQ6VXNlcjcyMzUxNw==",
                            "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/metadaddy",
                            "html_url": "https://github.com/metadaddy",
                            "followers_url": "https://api.github.com/users/metadaddy/followers",
                            "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                            "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                            "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                            "repos_url": "https://api.github.com/users/metadaddy/repos",
                            "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/metadaddy/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": true,
                        "url": "https://api.github.com/repos/metadaddy/trino",
                        "forks_url": "https://api.github.com/repos/metadaddy/trino/forks",
                        "keys_url": "https://api.github.com/repos/metadaddy/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/metadaddy/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/metadaddy/trino/teams",
                        "hooks_url": "https://api.github.com/repos/metadaddy/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/metadaddy/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/metadaddy/trino/events",
                        "assignees_url": "https://api.github.com/repos/metadaddy/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/metadaddy/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/metadaddy/trino/tags",
                        "blobs_url": "https://api.github.com/repos/metadaddy/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/metadaddy/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/metadaddy/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/metadaddy/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/metadaddy/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/metadaddy/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/metadaddy/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/metadaddy/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/metadaddy/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/metadaddy/trino/subscription",
                        "commits_url": "https://api.github.com/repos/metadaddy/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/metadaddy/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/metadaddy/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/metadaddy/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/metadaddy/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/metadaddy/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/metadaddy/trino/merges",
                        "archive_url": "https://api.github.com/repos/metadaddy/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/metadaddy/trino/downloads",
                        "issues_url": "https://api.github.com/repos/metadaddy/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/metadaddy/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/metadaddy/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/metadaddy/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/metadaddy/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/metadaddy/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/metadaddy/trino/deployments",
                        "created_at": "2022-07-01T00:43:32Z",
                        "updated_at": "2022-07-06T01:44:20Z",
                        "pushed_at": "2022-12-07T17:50:11Z",
                        "git_url": "git://github.com/metadaddy/trino.git",
                        "ssh_url": "git@github.com:metadaddy/trino.git",
                        "clone_url": "https://github.com/metadaddy/trino.git",
                        "svn_url": "https://github.com/metadaddy/trino",
                        "homepage": "https://trino.io",
                        "size": 192363,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": "Java",
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "master"
                    }
                },
                "base": {
                    "label": "trinodb:master",
                    "ref": "master",
                    "sha": "4b266700437a87236ad0e0e5cd1db866f4f76dcb",
                    "user": {
                        "login": "trinodb",
                        "id": 34147222,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                        "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/trinodb",
                        "html_url": "https://github.com/trinodb",
                        "followers_url": "https://api.github.com/users/trinodb/followers",
                        "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                        "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                        "organizations_url": "https://api.github.com/users/trinodb/orgs",
                        "repos_url": "https://api.github.com/users/trinodb/repos",
                        "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/trinodb/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 166515022,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNjY1MTUwMjI=",
                        "name": "trino",
                        "full_name": "trinodb/trino",
                        "private": false,
                        "owner": {
                            "login": "trinodb",
                            "id": 34147222,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/trinodb",
                            "html_url": "https://github.com/trinodb",
                            "followers_url": "https://api.github.com/users/trinodb/followers",
                            "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                            "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                            "organizations_url": "https://api.github.com/users/trinodb/orgs",
                            "repos_url": "https://api.github.com/users/trinodb/repos",
                            "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/trinodb/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/trinodb/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": false,
                        "url": "https://api.github.com/repos/trinodb/trino",
                        "forks_url": "https://api.github.com/repos/trinodb/trino/forks",
                        "keys_url": "https://api.github.com/repos/trinodb/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/trinodb/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/trinodb/trino/teams",
                        "hooks_url": "https://api.github.com/repos/trinodb/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/trinodb/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/trinodb/trino/events",
                        "assignees_url": "https://api.github.com/repos/trinodb/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/trinodb/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/trinodb/trino/tags",
                        "blobs_url": "https://api.github.com/repos/trinodb/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/trinodb/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/trinodb/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/trinodb/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/trinodb/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/trinodb/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/trinodb/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/trinodb/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/trinodb/trino/subscription",
                        "commits_url": "https://api.github.com/repos/trinodb/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/trinodb/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/trinodb/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/trinodb/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/trinodb/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/trinodb/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/trinodb/trino/merges",
                        "archive_url": "https://api.github.com/repos/trinodb/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/trinodb/trino/downloads",
                        "issues_url": "https://api.github.com/repos/trinodb/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/trinodb/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/trinodb/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/trinodb/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/trinodb/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/trinodb/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/trinodb/trino/deployments",
                        "created_at": "2019-01-19T06:38:14Z",
                        "updated_at": "2022-12-07T23:23:39Z",
                        "pushed_at": "2022-12-08T01:09:12Z",
                        "git_url": "git://github.com/trinodb/trino.git",
                        "ssh_url": "git@github.com:trinodb/trino.git",
                        "clone_url": "https://github.com/trinodb/trino.git",
                        "svn_url": "https://github.com/trinodb/trino",
                        "homepage": "https://trino.io",
                        "size": 197719,
                        "stargazers_count": 6794,
                        "watchers_count": 6794,
                        "language": "Java",
                        "has_issues": true,
                        "has_projects": false,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": true,
                        "forks_count": 2084,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 2093,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "analytics",
                            "big-data",
                            "data-science",
                            "database",
                            "databases",
                            "datalake",
                            "distributed-database",
                            "distributed-databases",
                            "distributed-systems",
                            "hadoop",
                            "hive",
                            "java",
                            "jdbc",
                            "presto",
                            "prestodb",
                            "query-engine",
                            "sql",
                            "trino"
                        ],
                        "visibility": "public",
                        "forks": 2084,
                        "open_issues": 2093,
                        "watchers": 6794,
                        "default_branch": "master"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337"
                    },
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15337"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15337"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15337/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/trinodb/trino/statuses/f88ba0cee83615211a54a7351df5656d7688ae1c"
                    }
                },
                "author_association": "MEMBER",
                "auto_merge": null,
                "active_lock_reason": null
            }
        },
        "public": true,
        "created_at": "2022-12-08T01:59:56Z",
        "org": {
            "id": 34147222,
            "login": "trinodb",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/trinodb",
            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?"
        }
    },
    {
        "id": "25737159462",
        "type": "PullRequestReviewEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 166515022,
            "name": "trinodb/trino",
            "url": "https://api.github.com/repos/trinodb/trino"
        },
        "payload": {
            "action": "created",
            "review": {
                "id": 1209353494,
                "node_id": "PRR_kwDOCezRTs5IFUUW",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": null,
                "commit_id": "f88ba0cee83615211a54a7351df5656d7688ae1c",
                "submitted_at": "2022-12-08T01:59:56Z",
                "state": "commented",
                "html_url": "https://github.com/trinodb/trino/pull/15337#pullrequestreview-1209353494",
                "pull_request_url": "https://api.github.com/repos/trinodb/trino/pulls/15337",
                "author_association": "MEMBER",
                "_links": {
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15337#pullrequestreview-1209353494"
                    },
                    "pull_request": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337"
                    }
                }
            },
            "pull_request": {
                "url": "https://api.github.com/repos/trinodb/trino/pulls/15337",
                "id": 1152104129,
                "node_id": "PR_kwDOCezRTs5Eq7bB",
                "html_url": "https://github.com/trinodb/trino/pull/15337",
                "diff_url": "https://github.com/trinodb/trino/pull/15337.diff",
                "patch_url": "https://github.com/trinodb/trino/pull/15337.patch",
                "issue_url": "https://api.github.com/repos/trinodb/trino/issues/15337",
                "number": 15337,
                "state": "open",
                "locked": false,
                "title": "Fix test for invalid rate in FormatUtils.formatDataRate()",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "<!-- Thank you for submitting a pull request! Find more information in our development guide at https://github.com/trinodb/trino/blob/master/.github/DEVELOPMENT.md and contact us on #dev in Slack. -->\r\n<!-- Provide an overview of the PR for maintainers and reviewers. -->\r\n## Description\r\n\r\n`FormatUtils.formatDataRate()` contains the following code:\r\n\r\n```java\r\nlong rate = Math.round(dataSize.toBytes() / duration.getValue(SECONDS));\r\nif (Double.isNaN(rate) || Double.isInfinite(rate)) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nThe test can never evaluate as `true`, since both functions will return false for any `long`.\r\n\r\nThe correct test is:\r\n\r\n```java\r\nif (rate == Long.MAX_VALUE) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nIt's not necessary to test for `Long.MIN_VALUE`, since neither `dataSize` nor `duration` can be negative.\r\n\r\n<!-- Provide details that would help an engineer who is unfamiliar with this part of the code. -->\r\n## Unit Test\r\n\r\nI added a new class, `TestFormatUtils` to test both this fix and the rest of `FormatUtils`. The tests for this change are:\r\n\r\n```java\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), false), \"0B\");\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), true), \"0B/s\");\r\n```\r\n\r\n<!-- Mark the appropriate option with an (x). Propose a release note if you can. -->\r\n## Release notes\r\n\r\n(x) This is not user-visible or docs only and no release notes are required.\r\n( ) Release notes are required, please propose a release note for me.\r\n( ) Release notes are required, with the following suggested text:\r\n\r\n## Related Issue\r\n\r\nFixes #13093",
                "created_at": "2022-12-07T17:54:40Z",
                "updated_at": "2022-12-08T01:59:56Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": "dd4eb7e24625655b4a60619dabe31785fb81f5ab",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [
                    {
                        "id": 1202580151,
                        "node_id": "MDU6TGFiZWwxMjAyNTgwMTUx",
                        "url": "https://api.github.com/repos/trinodb/trino/labels/cla-signed",
                        "name": "cla-signed",
                        "color": "ededed",
                        "default": false,
                        "description": null
                    }
                ],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/trinodb/trino/pulls/15337/commits",
                "review_comments_url": "https://api.github.com/repos/trinodb/trino/pulls/15337/comments",
                "review_comment_url": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/trinodb/trino/issues/15337/comments",
                "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/f88ba0cee83615211a54a7351df5656d7688ae1c",
                "head": {
                    "label": "metadaddy:fix-formatdatarate-test",
                    "ref": "fix-formatdatarate-test",
                    "sha": "f88ba0cee83615211a54a7351df5656d7688ae1c",
                    "user": {
                        "login": "metadaddy",
                        "id": 723517,
                        "node_id": "MDQ6VXNlcjcyMzUxNw==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/metadaddy",
                        "html_url": "https://github.com/metadaddy",
                        "followers_url": "https://api.github.com/users/metadaddy/followers",
                        "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                        "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                        "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                        "repos_url": "https://api.github.com/users/metadaddy/repos",
                        "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 509274784,
                        "node_id": "R_kgDOHlrqoA",
                        "name": "trino",
                        "full_name": "metadaddy/trino",
                        "private": false,
                        "owner": {
                            "login": "metadaddy",
                            "id": 723517,
                            "node_id": "MDQ6VXNlcjcyMzUxNw==",
                            "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/metadaddy",
                            "html_url": "https://github.com/metadaddy",
                            "followers_url": "https://api.github.com/users/metadaddy/followers",
                            "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                            "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                            "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                            "repos_url": "https://api.github.com/users/metadaddy/repos",
                            "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/metadaddy/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": true,
                        "url": "https://api.github.com/repos/metadaddy/trino",
                        "forks_url": "https://api.github.com/repos/metadaddy/trino/forks",
                        "keys_url": "https://api.github.com/repos/metadaddy/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/metadaddy/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/metadaddy/trino/teams",
                        "hooks_url": "https://api.github.com/repos/metadaddy/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/metadaddy/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/metadaddy/trino/events",
                        "assignees_url": "https://api.github.com/repos/metadaddy/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/metadaddy/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/metadaddy/trino/tags",
                        "blobs_url": "https://api.github.com/repos/metadaddy/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/metadaddy/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/metadaddy/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/metadaddy/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/metadaddy/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/metadaddy/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/metadaddy/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/metadaddy/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/metadaddy/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/metadaddy/trino/subscription",
                        "commits_url": "https://api.github.com/repos/metadaddy/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/metadaddy/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/metadaddy/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/metadaddy/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/metadaddy/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/metadaddy/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/metadaddy/trino/merges",
                        "archive_url": "https://api.github.com/repos/metadaddy/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/metadaddy/trino/downloads",
                        "issues_url": "https://api.github.com/repos/metadaddy/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/metadaddy/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/metadaddy/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/metadaddy/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/metadaddy/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/metadaddy/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/metadaddy/trino/deployments",
                        "created_at": "2022-07-01T00:43:32Z",
                        "updated_at": "2022-07-06T01:44:20Z",
                        "pushed_at": "2022-12-07T17:50:11Z",
                        "git_url": "git://github.com/metadaddy/trino.git",
                        "ssh_url": "git@github.com:metadaddy/trino.git",
                        "clone_url": "https://github.com/metadaddy/trino.git",
                        "svn_url": "https://github.com/metadaddy/trino",
                        "homepage": "https://trino.io",
                        "size": 192363,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": "Java",
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "master"
                    }
                },
                "base": {
                    "label": "trinodb:master",
                    "ref": "master",
                    "sha": "4b266700437a87236ad0e0e5cd1db866f4f76dcb",
                    "user": {
                        "login": "trinodb",
                        "id": 34147222,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                        "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/trinodb",
                        "html_url": "https://github.com/trinodb",
                        "followers_url": "https://api.github.com/users/trinodb/followers",
                        "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                        "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                        "organizations_url": "https://api.github.com/users/trinodb/orgs",
                        "repos_url": "https://api.github.com/users/trinodb/repos",
                        "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/trinodb/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 166515022,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNjY1MTUwMjI=",
                        "name": "trino",
                        "full_name": "trinodb/trino",
                        "private": false,
                        "owner": {
                            "login": "trinodb",
                            "id": 34147222,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/trinodb",
                            "html_url": "https://github.com/trinodb",
                            "followers_url": "https://api.github.com/users/trinodb/followers",
                            "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                            "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                            "organizations_url": "https://api.github.com/users/trinodb/orgs",
                            "repos_url": "https://api.github.com/users/trinodb/repos",
                            "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/trinodb/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/trinodb/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": false,
                        "url": "https://api.github.com/repos/trinodb/trino",
                        "forks_url": "https://api.github.com/repos/trinodb/trino/forks",
                        "keys_url": "https://api.github.com/repos/trinodb/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/trinodb/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/trinodb/trino/teams",
                        "hooks_url": "https://api.github.com/repos/trinodb/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/trinodb/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/trinodb/trino/events",
                        "assignees_url": "https://api.github.com/repos/trinodb/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/trinodb/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/trinodb/trino/tags",
                        "blobs_url": "https://api.github.com/repos/trinodb/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/trinodb/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/trinodb/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/trinodb/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/trinodb/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/trinodb/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/trinodb/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/trinodb/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/trinodb/trino/subscription",
                        "commits_url": "https://api.github.com/repos/trinodb/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/trinodb/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/trinodb/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/trinodb/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/trinodb/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/trinodb/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/trinodb/trino/merges",
                        "archive_url": "https://api.github.com/repos/trinodb/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/trinodb/trino/downloads",
                        "issues_url": "https://api.github.com/repos/trinodb/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/trinodb/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/trinodb/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/trinodb/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/trinodb/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/trinodb/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/trinodb/trino/deployments",
                        "created_at": "2019-01-19T06:38:14Z",
                        "updated_at": "2022-12-07T23:23:39Z",
                        "pushed_at": "2022-12-08T01:09:12Z",
                        "git_url": "git://github.com/trinodb/trino.git",
                        "ssh_url": "git@github.com:trinodb/trino.git",
                        "clone_url": "https://github.com/trinodb/trino.git",
                        "svn_url": "https://github.com/trinodb/trino",
                        "homepage": "https://trino.io",
                        "size": 197719,
                        "stargazers_count": 6794,
                        "watchers_count": 6794,
                        "language": "Java",
                        "has_issues": true,
                        "has_projects": false,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": true,
                        "forks_count": 2084,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 2093,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "analytics",
                            "big-data",
                            "data-science",
                            "database",
                            "databases",
                            "datalake",
                            "distributed-database",
                            "distributed-databases",
                            "distributed-systems",
                            "hadoop",
                            "hive",
                            "java",
                            "jdbc",
                            "presto",
                            "prestodb",
                            "query-engine",
                            "sql",
                            "trino"
                        ],
                        "visibility": "public",
                        "forks": 2084,
                        "open_issues": 2093,
                        "watchers": 6794,
                        "default_branch": "master"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337"
                    },
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15337"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15337"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15337/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/trinodb/trino/statuses/f88ba0cee83615211a54a7351df5656d7688ae1c"
                    }
                },
                "author_association": "MEMBER",
                "auto_merge": null,
                "active_lock_reason": null
            }
        },
        "public": true,
        "created_at": "2022-12-08T01:59:57Z",
        "org": {
            "id": 34147222,
            "login": "trinodb",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/trinodb",
            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?"
        }
    },
    {
        "id": "25737145244",
        "type": "PullRequestReviewCommentEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 166515022,
            "name": "trinodb/trino",
            "url": "https://api.github.com/repos/trinodb/trino"
        },
        "payload": {
            "action": "created",
            "comment": {
                "url": "https://api.github.com/repos/trinodb/trino/pulls/comments/1042849228",
                "pull_request_review_id": 1209352752,
                "id": 1042849228,
                "node_id": "PRRC_kwDOCezRTs4-KJ3M",
                "diff_hunk": "@@ -0,0 +1,353 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.trino.cli;\n+\n+import io.airlift.units.DataSize;\n+import io.airlift.units.Duration;\n+import org.testng.annotations.Test;\n+\n+import static org.testng.Assert.assertEquals;\n+\n+public class TestFormatUtils\n+{\n+    @Test\n+    public void testFormatCount()\n+    {\n+        assertEquals(FormatUtils.formatCount(1L), \"1\");\n+        assertEquals(FormatUtils.formatCount(12L), \"12\");\n+        assertEquals(FormatUtils.formatCount(123L), \"123\");\n+        assertEquals(FormatUtils.formatCount(1234L), \"1.23K\");\n+        assertEquals(FormatUtils.formatCount(12345L), \"12.3K\");\n+        assertEquals(FormatUtils.formatCount(123456L), \"123K\");\n+        assertEquals(FormatUtils.formatCount(1234567L), \"1.23M\");\n+        assertEquals(FormatUtils.formatCount(12345678L), \"12.3M\");\n+        assertEquals(FormatUtils.formatCount(123456789L), \"123M\");\n+        assertEquals(FormatUtils.formatCount(1234567890L), \"1.23B\");\n+        assertEquals(FormatUtils.formatCount(12345678901L), \"12.3B\");\n+        assertEquals(FormatUtils.formatCount(123456789012L), \"123B\");\n+        assertEquals(FormatUtils.formatCount(1234567890123L), \"1.23T\");\n+        assertEquals(FormatUtils.formatCount(12345678901234L), \"12.3T\");\n+        assertEquals(FormatUtils.formatCount(123456789012345L), \"123T\");\n+        assertEquals(FormatUtils.formatCount(1234567890123456L), \"1.23Q\");\n+        assertEquals(FormatUtils.formatCount(12345678901234567L), \"12.3Q\");\n+        assertEquals(FormatUtils.formatCount(123456789012345678L), \"123Q\");\n+        assertEquals(FormatUtils.formatCount(1234567890123456789L), \"1235Q\");\n+    }\n+\n+    @Test\n+    public void formatCountRate()\n+    {\n+        assertEquals(FormatUtils.formatCountRate(0.0000000001D, Duration.valueOf(\"1ns\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(0.0000000001D, Duration.valueOf(\"1ns\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(0.000000001D, Duration.valueOf(\"1ns\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(0.000000001D, Duration.valueOf(\"1ns\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(0.0000000015D, Duration.valueOf(\"1ns\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(0.0000000015D, Duration.valueOf(\"1ns\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(1D, Duration.valueOf(\"1ns\"), false), \"1000M\");\n+        assertEquals(FormatUtils.formatCountRate(1D, Duration.valueOf(\"1ns\"), true), \"1000M/s\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"1ns\"), false), \"10B\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"1ns\"), true), \"10B/s\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"10ns\"), false), \"1000M\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"10ns\"), true), \"1000M/s\");\n+\n+        assertEquals(FormatUtils.formatCountRate(0.0000001D, Duration.valueOf(\"1us\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(0.0000001D, Duration.valueOf(\"1us\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(0.000001D, Duration.valueOf(\"1us\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(0.000001D, Duration.valueOf(\"1us\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(0.0000015D, Duration.valueOf(\"1us\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(0.0000015D, Duration.valueOf(\"1us\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(1D, Duration.valueOf(\"1us\"), false), \"1000K\");\n+        assertEquals(FormatUtils.formatCountRate(1D, Duration.valueOf(\"1us\"), true), \"1000K/s\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"1us\"), false), \"10M\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"1us\"), true), \"10M/s\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"10us\"), false), \"1000K\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"10us\"), true), \"1000K/s\");\n+\n+        assertEquals(FormatUtils.formatCountRate(0.0001D, Duration.valueOf(\"1ms\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(0.0001D, Duration.valueOf(\"1ms\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(0.001D, Duration.valueOf(\"1ms\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(0.001D, Duration.valueOf(\"1ms\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(0.0015D, Duration.valueOf(\"1ms\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(0.0015D, Duration.valueOf(\"1ms\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(1D, Duration.valueOf(\"1ms\"), false), \"1000\");\n+        assertEquals(FormatUtils.formatCountRate(1D, Duration.valueOf(\"1ms\"), true), \"1000/s\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"1ms\"), false), \"10K\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"1ms\"), true), \"10K/s\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"10ms\"), false), \"1000\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"10ms\"), true), \"1000/s\");\n+\n+        assertEquals(FormatUtils.formatCountRate(0.1D, Duration.valueOf(\"1s\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(0.1D, Duration.valueOf(\"1s\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"1s\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"1s\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"10s\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"10s\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(1.5D, Duration.valueOf(\"1s\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(1.5D, Duration.valueOf(\"1s\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"1s\"), false), \"10\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"1s\"), true), \"10/s\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"10s\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"10s\"), true), \"1/s\");\n+\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"1m\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"1m\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(60.0D, Duration.valueOf(\"1m\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(60.0D, Duration.valueOf(\"1m\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(600.0D, Duration.valueOf(\"1m\"), false), \"10\");\n+        assertEquals(FormatUtils.formatCountRate(600.0D, Duration.valueOf(\"1m\"), true), \"10/s\");\n+        assertEquals(FormatUtils.formatCountRate(100.0D, Duration.valueOf(\"10m\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(100.0D, Duration.valueOf(\"10m\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(600.0D, Duration.valueOf(\"10m\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(600.0D, Duration.valueOf(\"10m\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(6000.0D, Duration.valueOf(\"10m\"), false), \"10\");\n+        assertEquals(FormatUtils.formatCountRate(6000.0D, Duration.valueOf(\"10m\"), true), \"10/s\");\n+\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"1h\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"1h\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(3600.0D, Duration.valueOf(\"1h\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(3600.0D, Duration.valueOf(\"1h\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(36000.0D, Duration.valueOf(\"1h\"), false), \"10\");\n+        assertEquals(FormatUtils.formatCountRate(36000.0D, Duration.valueOf(\"1h\"), true), \"10/s\");\n+        assertEquals(FormatUtils.formatCountRate(100.0D, Duration.valueOf(\"10h\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(100.0D, Duration.valueOf(\"10h\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(36000.0D, Duration.valueOf(\"10h\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(36000.0D, Duration.valueOf(\"10h\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(360000.0D, Duration.valueOf(\"10h\"), false), \"10\");\n+        assertEquals(FormatUtils.formatCountRate(360000.0D, Duration.valueOf(\"10h\"), true), \"10/s\");\n+\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"1d\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"1d\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(86400.0D, Duration.valueOf(\"1d\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(86400.0D, Duration.valueOf(\"1d\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(864000.0D, Duration.valueOf(\"1d\"), false), \"10\");\n+        assertEquals(FormatUtils.formatCountRate(864000.0D, Duration.valueOf(\"1d\"), true), \"10/s\");\n+        assertEquals(FormatUtils.formatCountRate(86400.0D, Duration.valueOf(\"10d\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(86400.0D, Duration.valueOf(\"10d\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(864000.0D, Duration.valueOf(\"10d\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(864000.0D, Duration.valueOf(\"10d\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(8640000.0D, Duration.valueOf(\"10d\"), false), \"10\");\n+        assertEquals(FormatUtils.formatCountRate(8640000.0D, Duration.valueOf(\"10d\"), true), \"10/s\");\n+\n+        assertEquals(FormatUtils.formatCountRate(Double.NaN, Duration.valueOf(\"1s\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(Double.NaN, Duration.valueOf(\"1s\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(Double.POSITIVE_INFINITY, Duration.valueOf(\"1s\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(Double.POSITIVE_INFINITY, Duration.valueOf(\"1s\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(Double.NEGATIVE_INFINITY, Duration.valueOf(\"1s\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(Double.NEGATIVE_INFINITY, Duration.valueOf(\"1s\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"0s\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"0s\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(-1.0D, Duration.valueOf(\"0s\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(-1.0D, Duration.valueOf(\"0s\"), true), \"0/s\");\n+    }\n+\n+    @Test\n+    public void testFormatDataSize()\n+    {\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1L), false), \"1B\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1L), true), \"1B\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12L), false), \"12B\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12L), true), \"12B\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123L), false), \"123B\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123L), true), \"123B\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234L), false), \"1.21K\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234L), true), \"1.21KB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12345L), false), \"12.1K\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12345L), true), \"12.1KB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123456L), false), \"121K\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123456L), true), \"121KB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234567L), false), \"1.18M\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234567L), true), \"1.18MB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12345678L), false), \"11.8M\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12345678L), true), \"11.8MB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123456789L), false), \"118M\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123456789L), true), \"118MB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234567890L), false), \"1.15G\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234567890L), true), \"1.15GB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12345678901L), false), \"11.5G\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12345678901L), true), \"11.5GB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123456789012L), false), \"115G\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123456789012L), true), \"115GB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234567890123L), false), \"1.12T\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234567890123L), true), \"1.12TB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12345678901234L), false), \"11.2T\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12345678901234L), true), \"11.2TB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123456789012345L), false), \"112T\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123456789012345L), true), \"112TB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234567890123456L), false), \"1.1P\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234567890123456L), true), \"1.1PB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12345678901234567L), false), \"11P\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12345678901234567L), true), \"11PB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123456789012345678L), false), \"110P\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123456789012345678L), true), \"110PB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234567890123456789L), false), \"1097P\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234567890123456789L), true), \"1097PB\");\n+    }\n+\n+    @Test\n+    public void testFormatDataRate()\n+    {\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(0), Duration.valueOf(\"1ns\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(0), Duration.valueOf(\"1ns\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1ns\"), false), \"954M\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1ns\"), true), \"954MB/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"1ns\"), false), \"9.31G\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"1ns\"), true), \"9.31GB/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"10ns\"), false), \"954M\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"10ns\"), true), \"954MB/s\");\n+\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(0), Duration.valueOf(\"1us\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(0), Duration.valueOf(\"1us\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1us\"), false), \"977K\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1us\"), true), \"977KB/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"1us\"), false), \"9.54M\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"1us\"), true), \"9.54MB/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"10us\"), false), \"977K\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"10us\"), true), \"977KB/s\");\n+\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(0), Duration.valueOf(\"1ms\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(0), Duration.valueOf(\"1ms\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1ms\"), false), \"1000B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1ms\"), true), \"1000B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"1ms\"), false), \"9.77K\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"1ms\"), true), \"9.77KB/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"10ms\"), false), \"1000B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"10ms\"), true), \"1000B/s\");\n+\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(0), Duration.valueOf(\"1s\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(0), Duration.valueOf(\"1s\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1s\"), false), \"1B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1s\"), true), \"1B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"10s\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"10s\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"1s\"), false), \"10B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"1s\"), true), \"10B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"10s\"), false), \"1B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"10s\"), true), \"1B/s\");\n+\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1m\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1m\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(60), Duration.valueOf(\"1m\"), false), \"1B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(60), Duration.valueOf(\"1m\"), true), \"1B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(600), Duration.valueOf(\"1m\"), false), \"10B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(600), Duration.valueOf(\"1m\"), true), \"10B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(100), Duration.valueOf(\"10m\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(100), Duration.valueOf(\"10m\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(600), Duration.valueOf(\"10m\"), false), \"1B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(600), Duration.valueOf(\"10m\"), true), \"1B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(6000), Duration.valueOf(\"10m\"), false), \"10B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(6000), Duration.valueOf(\"10m\"), true), \"10B/s\");\n+\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1h\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1h\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(3600), Duration.valueOf(\"1h\"), false), \"1B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(3600), Duration.valueOf(\"1h\"), true), \"1B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(36000), Duration.valueOf(\"1h\"), false), \"10B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(36000), Duration.valueOf(\"1h\"), true), \"10B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(100), Duration.valueOf(\"10h\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(100), Duration.valueOf(\"10h\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(36000), Duration.valueOf(\"10h\"), false), \"1B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(36000), Duration.valueOf(\"10h\"), true), \"1B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(360000), Duration.valueOf(\"10h\"), false), \"10B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(360000), Duration.valueOf(\"10h\"), true), \"10B/s\");\n+\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1d\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1d\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(86400), Duration.valueOf(\"1d\"), false), \"1B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(86400), Duration.valueOf(\"1d\"), true), \"1B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(864000), Duration.valueOf(\"1d\"), false), \"10B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(864000), Duration.valueOf(\"1d\"), true), \"10B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(86400), Duration.valueOf(\"10d\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(86400), Duration.valueOf(\"10d\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(864000), Duration.valueOf(\"10d\"), false), \"1B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(864000), Duration.valueOf(\"10d\"), true), \"1B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(8640000), Duration.valueOf(\"10d\"), false), \"10B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(8640000), Duration.valueOf(\"10d\"), true), \"10B/s\");\n+\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), true), \"0B/s\");\n+    }\n+\n+    @Test\n+    public void testPluralize()",
                "path": "client/trino-cli/src/test/java/io/trino/cli/TestFormatUtils.java",
                "position": 282,
                "original_position": 282,
                "commit_id": "f88ba0cee83615211a54a7351df5656d7688ae1c",
                "original_commit_id": "f88ba0cee83615211a54a7351df5656d7688ae1c",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "@findepi Two PRs, or one PR containing two commits?",
                "created_at": "2022-12-08T01:59:04Z",
                "updated_at": "2022-12-08T01:59:05Z",
                "html_url": "https://github.com/trinodb/trino/pull/15337#discussion_r1042849228",
                "pull_request_url": "https://api.github.com/repos/trinodb/trino/pulls/15337",
                "author_association": "MEMBER",
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/comments/1042849228"
                    },
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15337#discussion_r1042849228"
                    },
                    "pull_request": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337"
                    }
                },
                "reactions": {
                    "url": "https://api.github.com/repos/trinodb/trino/pulls/comments/1042849228/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "start_line": null,
                "original_start_line": null,
                "start_side": null,
                "line": 282,
                "original_line": 282,
                "side": "RIGHT",
                "in_reply_to_id": 1042707167
            },
            "pull_request": {
                "url": "https://api.github.com/repos/trinodb/trino/pulls/15337",
                "id": 1152104129,
                "node_id": "PR_kwDOCezRTs5Eq7bB",
                "html_url": "https://github.com/trinodb/trino/pull/15337",
                "diff_url": "https://github.com/trinodb/trino/pull/15337.diff",
                "patch_url": "https://github.com/trinodb/trino/pull/15337.patch",
                "issue_url": "https://api.github.com/repos/trinodb/trino/issues/15337",
                "number": 15337,
                "state": "open",
                "locked": false,
                "title": "Fix test for invalid rate in FormatUtils.formatDataRate()",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "<!-- Thank you for submitting a pull request! Find more information in our development guide at https://github.com/trinodb/trino/blob/master/.github/DEVELOPMENT.md and contact us on #dev in Slack. -->\r\n<!-- Provide an overview of the PR for maintainers and reviewers. -->\r\n## Description\r\n\r\n`FormatUtils.formatDataRate()` contains the following code:\r\n\r\n```java\r\nlong rate = Math.round(dataSize.toBytes() / duration.getValue(SECONDS));\r\nif (Double.isNaN(rate) || Double.isInfinite(rate)) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nThe test can never evaluate as `true`, since both functions will return false for any `long`.\r\n\r\nThe correct test is:\r\n\r\n```java\r\nif (rate == Long.MAX_VALUE) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nIt's not necessary to test for `Long.MIN_VALUE`, since neither `dataSize` nor `duration` can be negative.\r\n\r\n<!-- Provide details that would help an engineer who is unfamiliar with this part of the code. -->\r\n## Unit Test\r\n\r\nI added a new class, `TestFormatUtils` to test both this fix and the rest of `FormatUtils`. The tests for this change are:\r\n\r\n```java\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), false), \"0B\");\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), true), \"0B/s\");\r\n```\r\n\r\n<!-- Mark the appropriate option with an (x). Propose a release note if you can. -->\r\n## Release notes\r\n\r\n(x) This is not user-visible or docs only and no release notes are required.\r\n( ) Release notes are required, please propose a release note for me.\r\n( ) Release notes are required, with the following suggested text:\r\n\r\n## Related Issue\r\n\r\nFixes #13093",
                "created_at": "2022-12-07T17:54:40Z",
                "updated_at": "2022-12-08T01:59:05Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": "dd4eb7e24625655b4a60619dabe31785fb81f5ab",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [
                    {
                        "id": 1202580151,
                        "node_id": "MDU6TGFiZWwxMjAyNTgwMTUx",
                        "url": "https://api.github.com/repos/trinodb/trino/labels/cla-signed",
                        "name": "cla-signed",
                        "color": "ededed",
                        "default": false,
                        "description": null
                    }
                ],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/trinodb/trino/pulls/15337/commits",
                "review_comments_url": "https://api.github.com/repos/trinodb/trino/pulls/15337/comments",
                "review_comment_url": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/trinodb/trino/issues/15337/comments",
                "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/f88ba0cee83615211a54a7351df5656d7688ae1c",
                "head": {
                    "label": "metadaddy:fix-formatdatarate-test",
                    "ref": "fix-formatdatarate-test",
                    "sha": "f88ba0cee83615211a54a7351df5656d7688ae1c",
                    "user": {
                        "login": "metadaddy",
                        "id": 723517,
                        "node_id": "MDQ6VXNlcjcyMzUxNw==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/metadaddy",
                        "html_url": "https://github.com/metadaddy",
                        "followers_url": "https://api.github.com/users/metadaddy/followers",
                        "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                        "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                        "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                        "repos_url": "https://api.github.com/users/metadaddy/repos",
                        "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 509274784,
                        "node_id": "R_kgDOHlrqoA",
                        "name": "trino",
                        "full_name": "metadaddy/trino",
                        "private": false,
                        "owner": {
                            "login": "metadaddy",
                            "id": 723517,
                            "node_id": "MDQ6VXNlcjcyMzUxNw==",
                            "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/metadaddy",
                            "html_url": "https://github.com/metadaddy",
                            "followers_url": "https://api.github.com/users/metadaddy/followers",
                            "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                            "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                            "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                            "repos_url": "https://api.github.com/users/metadaddy/repos",
                            "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/metadaddy/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": true,
                        "url": "https://api.github.com/repos/metadaddy/trino",
                        "forks_url": "https://api.github.com/repos/metadaddy/trino/forks",
                        "keys_url": "https://api.github.com/repos/metadaddy/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/metadaddy/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/metadaddy/trino/teams",
                        "hooks_url": "https://api.github.com/repos/metadaddy/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/metadaddy/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/metadaddy/trino/events",
                        "assignees_url": "https://api.github.com/repos/metadaddy/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/metadaddy/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/metadaddy/trino/tags",
                        "blobs_url": "https://api.github.com/repos/metadaddy/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/metadaddy/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/metadaddy/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/metadaddy/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/metadaddy/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/metadaddy/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/metadaddy/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/metadaddy/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/metadaddy/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/metadaddy/trino/subscription",
                        "commits_url": "https://api.github.com/repos/metadaddy/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/metadaddy/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/metadaddy/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/metadaddy/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/metadaddy/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/metadaddy/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/metadaddy/trino/merges",
                        "archive_url": "https://api.github.com/repos/metadaddy/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/metadaddy/trino/downloads",
                        "issues_url": "https://api.github.com/repos/metadaddy/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/metadaddy/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/metadaddy/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/metadaddy/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/metadaddy/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/metadaddy/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/metadaddy/trino/deployments",
                        "created_at": "2022-07-01T00:43:32Z",
                        "updated_at": "2022-07-06T01:44:20Z",
                        "pushed_at": "2022-12-07T17:50:11Z",
                        "git_url": "git://github.com/metadaddy/trino.git",
                        "ssh_url": "git@github.com:metadaddy/trino.git",
                        "clone_url": "https://github.com/metadaddy/trino.git",
                        "svn_url": "https://github.com/metadaddy/trino",
                        "homepage": "https://trino.io",
                        "size": 192363,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": "Java",
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "master"
                    }
                },
                "base": {
                    "label": "trinodb:master",
                    "ref": "master",
                    "sha": "4b266700437a87236ad0e0e5cd1db866f4f76dcb",
                    "user": {
                        "login": "trinodb",
                        "id": 34147222,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                        "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/trinodb",
                        "html_url": "https://github.com/trinodb",
                        "followers_url": "https://api.github.com/users/trinodb/followers",
                        "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                        "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                        "organizations_url": "https://api.github.com/users/trinodb/orgs",
                        "repos_url": "https://api.github.com/users/trinodb/repos",
                        "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/trinodb/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 166515022,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNjY1MTUwMjI=",
                        "name": "trino",
                        "full_name": "trinodb/trino",
                        "private": false,
                        "owner": {
                            "login": "trinodb",
                            "id": 34147222,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/trinodb",
                            "html_url": "https://github.com/trinodb",
                            "followers_url": "https://api.github.com/users/trinodb/followers",
                            "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                            "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                            "organizations_url": "https://api.github.com/users/trinodb/orgs",
                            "repos_url": "https://api.github.com/users/trinodb/repos",
                            "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/trinodb/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/trinodb/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": false,
                        "url": "https://api.github.com/repos/trinodb/trino",
                        "forks_url": "https://api.github.com/repos/trinodb/trino/forks",
                        "keys_url": "https://api.github.com/repos/trinodb/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/trinodb/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/trinodb/trino/teams",
                        "hooks_url": "https://api.github.com/repos/trinodb/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/trinodb/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/trinodb/trino/events",
                        "assignees_url": "https://api.github.com/repos/trinodb/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/trinodb/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/trinodb/trino/tags",
                        "blobs_url": "https://api.github.com/repos/trinodb/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/trinodb/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/trinodb/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/trinodb/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/trinodb/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/trinodb/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/trinodb/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/trinodb/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/trinodb/trino/subscription",
                        "commits_url": "https://api.github.com/repos/trinodb/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/trinodb/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/trinodb/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/trinodb/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/trinodb/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/trinodb/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/trinodb/trino/merges",
                        "archive_url": "https://api.github.com/repos/trinodb/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/trinodb/trino/downloads",
                        "issues_url": "https://api.github.com/repos/trinodb/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/trinodb/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/trinodb/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/trinodb/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/trinodb/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/trinodb/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/trinodb/trino/deployments",
                        "created_at": "2019-01-19T06:38:14Z",
                        "updated_at": "2022-12-07T23:23:39Z",
                        "pushed_at": "2022-12-08T01:09:12Z",
                        "git_url": "git://github.com/trinodb/trino.git",
                        "ssh_url": "git@github.com:trinodb/trino.git",
                        "clone_url": "https://github.com/trinodb/trino.git",
                        "svn_url": "https://github.com/trinodb/trino",
                        "homepage": "https://trino.io",
                        "size": 197719,
                        "stargazers_count": 6794,
                        "watchers_count": 6794,
                        "language": "Java",
                        "has_issues": true,
                        "has_projects": false,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": true,
                        "forks_count": 2084,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 2093,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "analytics",
                            "big-data",
                            "data-science",
                            "database",
                            "databases",
                            "datalake",
                            "distributed-database",
                            "distributed-databases",
                            "distributed-systems",
                            "hadoop",
                            "hive",
                            "java",
                            "jdbc",
                            "presto",
                            "prestodb",
                            "query-engine",
                            "sql",
                            "trino"
                        ],
                        "visibility": "public",
                        "forks": 2084,
                        "open_issues": 2093,
                        "watchers": 6794,
                        "default_branch": "master"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337"
                    },
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15337"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15337"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15337/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/trinodb/trino/statuses/f88ba0cee83615211a54a7351df5656d7688ae1c"
                    }
                },
                "author_association": "MEMBER",
                "auto_merge": null,
                "active_lock_reason": null
            }
        },
        "public": true,
        "created_at": "2022-12-08T01:59:04Z",
        "org": {
            "id": 34147222,
            "login": "trinodb",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/trinodb",
            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?"
        }
    },
    {
        "id": "25737145179",
        "type": "PullRequestReviewEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 166515022,
            "name": "trinodb/trino",
            "url": "https://api.github.com/repos/trinodb/trino"
        },
        "payload": {
            "action": "created",
            "review": {
                "id": 1209352752,
                "node_id": "PRR_kwDOCezRTs5IFUIw",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": null,
                "commit_id": "f88ba0cee83615211a54a7351df5656d7688ae1c",
                "submitted_at": "2022-12-08T01:59:05Z",
                "state": "commented",
                "html_url": "https://github.com/trinodb/trino/pull/15337#pullrequestreview-1209352752",
                "pull_request_url": "https://api.github.com/repos/trinodb/trino/pulls/15337",
                "author_association": "MEMBER",
                "_links": {
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15337#pullrequestreview-1209352752"
                    },
                    "pull_request": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337"
                    }
                }
            },
            "pull_request": {
                "url": "https://api.github.com/repos/trinodb/trino/pulls/15337",
                "id": 1152104129,
                "node_id": "PR_kwDOCezRTs5Eq7bB",
                "html_url": "https://github.com/trinodb/trino/pull/15337",
                "diff_url": "https://github.com/trinodb/trino/pull/15337.diff",
                "patch_url": "https://github.com/trinodb/trino/pull/15337.patch",
                "issue_url": "https://api.github.com/repos/trinodb/trino/issues/15337",
                "number": 15337,
                "state": "open",
                "locked": false,
                "title": "Fix test for invalid rate in FormatUtils.formatDataRate()",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "<!-- Thank you for submitting a pull request! Find more information in our development guide at https://github.com/trinodb/trino/blob/master/.github/DEVELOPMENT.md and contact us on #dev in Slack. -->\r\n<!-- Provide an overview of the PR for maintainers and reviewers. -->\r\n## Description\r\n\r\n`FormatUtils.formatDataRate()` contains the following code:\r\n\r\n```java\r\nlong rate = Math.round(dataSize.toBytes() / duration.getValue(SECONDS));\r\nif (Double.isNaN(rate) || Double.isInfinite(rate)) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nThe test can never evaluate as `true`, since both functions will return false for any `long`.\r\n\r\nThe correct test is:\r\n\r\n```java\r\nif (rate == Long.MAX_VALUE) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nIt's not necessary to test for `Long.MIN_VALUE`, since neither `dataSize` nor `duration` can be negative.\r\n\r\n<!-- Provide details that would help an engineer who is unfamiliar with this part of the code. -->\r\n## Unit Test\r\n\r\nI added a new class, `TestFormatUtils` to test both this fix and the rest of `FormatUtils`. The tests for this change are:\r\n\r\n```java\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), false), \"0B\");\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), true), \"0B/s\");\r\n```\r\n\r\n<!-- Mark the appropriate option with an (x). Propose a release note if you can. -->\r\n## Release notes\r\n\r\n(x) This is not user-visible or docs only and no release notes are required.\r\n( ) Release notes are required, please propose a release note for me.\r\n( ) Release notes are required, with the following suggested text:\r\n\r\n## Related Issue\r\n\r\nFixes #13093",
                "created_at": "2022-12-07T17:54:40Z",
                "updated_at": "2022-12-08T01:59:05Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": "dd4eb7e24625655b4a60619dabe31785fb81f5ab",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [
                    {
                        "id": 1202580151,
                        "node_id": "MDU6TGFiZWwxMjAyNTgwMTUx",
                        "url": "https://api.github.com/repos/trinodb/trino/labels/cla-signed",
                        "name": "cla-signed",
                        "color": "ededed",
                        "default": false,
                        "description": null
                    }
                ],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/trinodb/trino/pulls/15337/commits",
                "review_comments_url": "https://api.github.com/repos/trinodb/trino/pulls/15337/comments",
                "review_comment_url": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/trinodb/trino/issues/15337/comments",
                "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/f88ba0cee83615211a54a7351df5656d7688ae1c",
                "head": {
                    "label": "metadaddy:fix-formatdatarate-test",
                    "ref": "fix-formatdatarate-test",
                    "sha": "f88ba0cee83615211a54a7351df5656d7688ae1c",
                    "user": {
                        "login": "metadaddy",
                        "id": 723517,
                        "node_id": "MDQ6VXNlcjcyMzUxNw==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/metadaddy",
                        "html_url": "https://github.com/metadaddy",
                        "followers_url": "https://api.github.com/users/metadaddy/followers",
                        "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                        "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                        "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                        "repos_url": "https://api.github.com/users/metadaddy/repos",
                        "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 509274784,
                        "node_id": "R_kgDOHlrqoA",
                        "name": "trino",
                        "full_name": "metadaddy/trino",
                        "private": false,
                        "owner": {
                            "login": "metadaddy",
                            "id": 723517,
                            "node_id": "MDQ6VXNlcjcyMzUxNw==",
                            "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/metadaddy",
                            "html_url": "https://github.com/metadaddy",
                            "followers_url": "https://api.github.com/users/metadaddy/followers",
                            "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                            "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                            "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                            "repos_url": "https://api.github.com/users/metadaddy/repos",
                            "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/metadaddy/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": true,
                        "url": "https://api.github.com/repos/metadaddy/trino",
                        "forks_url": "https://api.github.com/repos/metadaddy/trino/forks",
                        "keys_url": "https://api.github.com/repos/metadaddy/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/metadaddy/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/metadaddy/trino/teams",
                        "hooks_url": "https://api.github.com/repos/metadaddy/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/metadaddy/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/metadaddy/trino/events",
                        "assignees_url": "https://api.github.com/repos/metadaddy/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/metadaddy/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/metadaddy/trino/tags",
                        "blobs_url": "https://api.github.com/repos/metadaddy/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/metadaddy/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/metadaddy/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/metadaddy/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/metadaddy/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/metadaddy/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/metadaddy/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/metadaddy/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/metadaddy/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/metadaddy/trino/subscription",
                        "commits_url": "https://api.github.com/repos/metadaddy/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/metadaddy/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/metadaddy/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/metadaddy/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/metadaddy/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/metadaddy/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/metadaddy/trino/merges",
                        "archive_url": "https://api.github.com/repos/metadaddy/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/metadaddy/trino/downloads",
                        "issues_url": "https://api.github.com/repos/metadaddy/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/metadaddy/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/metadaddy/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/metadaddy/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/metadaddy/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/metadaddy/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/metadaddy/trino/deployments",
                        "created_at": "2022-07-01T00:43:32Z",
                        "updated_at": "2022-07-06T01:44:20Z",
                        "pushed_at": "2022-12-07T17:50:11Z",
                        "git_url": "git://github.com/metadaddy/trino.git",
                        "ssh_url": "git@github.com:metadaddy/trino.git",
                        "clone_url": "https://github.com/metadaddy/trino.git",
                        "svn_url": "https://github.com/metadaddy/trino",
                        "homepage": "https://trino.io",
                        "size": 192363,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": "Java",
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "master"
                    }
                },
                "base": {
                    "label": "trinodb:master",
                    "ref": "master",
                    "sha": "4b266700437a87236ad0e0e5cd1db866f4f76dcb",
                    "user": {
                        "login": "trinodb",
                        "id": 34147222,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                        "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/trinodb",
                        "html_url": "https://github.com/trinodb",
                        "followers_url": "https://api.github.com/users/trinodb/followers",
                        "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                        "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                        "organizations_url": "https://api.github.com/users/trinodb/orgs",
                        "repos_url": "https://api.github.com/users/trinodb/repos",
                        "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/trinodb/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 166515022,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNjY1MTUwMjI=",
                        "name": "trino",
                        "full_name": "trinodb/trino",
                        "private": false,
                        "owner": {
                            "login": "trinodb",
                            "id": 34147222,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/trinodb",
                            "html_url": "https://github.com/trinodb",
                            "followers_url": "https://api.github.com/users/trinodb/followers",
                            "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                            "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                            "organizations_url": "https://api.github.com/users/trinodb/orgs",
                            "repos_url": "https://api.github.com/users/trinodb/repos",
                            "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/trinodb/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/trinodb/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": false,
                        "url": "https://api.github.com/repos/trinodb/trino",
                        "forks_url": "https://api.github.com/repos/trinodb/trino/forks",
                        "keys_url": "https://api.github.com/repos/trinodb/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/trinodb/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/trinodb/trino/teams",
                        "hooks_url": "https://api.github.com/repos/trinodb/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/trinodb/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/trinodb/trino/events",
                        "assignees_url": "https://api.github.com/repos/trinodb/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/trinodb/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/trinodb/trino/tags",
                        "blobs_url": "https://api.github.com/repos/trinodb/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/trinodb/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/trinodb/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/trinodb/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/trinodb/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/trinodb/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/trinodb/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/trinodb/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/trinodb/trino/subscription",
                        "commits_url": "https://api.github.com/repos/trinodb/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/trinodb/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/trinodb/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/trinodb/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/trinodb/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/trinodb/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/trinodb/trino/merges",
                        "archive_url": "https://api.github.com/repos/trinodb/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/trinodb/trino/downloads",
                        "issues_url": "https://api.github.com/repos/trinodb/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/trinodb/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/trinodb/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/trinodb/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/trinodb/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/trinodb/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/trinodb/trino/deployments",
                        "created_at": "2019-01-19T06:38:14Z",
                        "updated_at": "2022-12-07T23:23:39Z",
                        "pushed_at": "2022-12-08T01:09:12Z",
                        "git_url": "git://github.com/trinodb/trino.git",
                        "ssh_url": "git@github.com:trinodb/trino.git",
                        "clone_url": "https://github.com/trinodb/trino.git",
                        "svn_url": "https://github.com/trinodb/trino",
                        "homepage": "https://trino.io",
                        "size": 197719,
                        "stargazers_count": 6794,
                        "watchers_count": 6794,
                        "language": "Java",
                        "has_issues": true,
                        "has_projects": false,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": true,
                        "forks_count": 2084,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 2093,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "analytics",
                            "big-data",
                            "data-science",
                            "database",
                            "databases",
                            "datalake",
                            "distributed-database",
                            "distributed-databases",
                            "distributed-systems",
                            "hadoop",
                            "hive",
                            "java",
                            "jdbc",
                            "presto",
                            "prestodb",
                            "query-engine",
                            "sql",
                            "trino"
                        ],
                        "visibility": "public",
                        "forks": 2084,
                        "open_issues": 2093,
                        "watchers": 6794,
                        "default_branch": "master"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337"
                    },
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15337"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15337"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15337/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/trinodb/trino/statuses/f88ba0cee83615211a54a7351df5656d7688ae1c"
                    }
                },
                "author_association": "MEMBER",
                "auto_merge": null,
                "active_lock_reason": null
            }
        },
        "public": true,
        "created_at": "2022-12-08T01:59:05Z",
        "org": {
            "id": 34147222,
            "login": "trinodb",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/trinodb",
            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?"
        }
    },
    {
        "id": "25737138380",
        "type": "PullRequestReviewEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 166515022,
            "name": "trinodb/trino",
            "url": "https://api.github.com/repos/trinodb/trino"
        },
        "payload": {
            "action": "created",
            "review": {
                "id": 1209352152,
                "node_id": "PRR_kwDOCezRTs5IFT_Y",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": null,
                "commit_id": "f88ba0cee83615211a54a7351df5656d7688ae1c",
                "submitted_at": "2022-12-08T01:58:34Z",
                "state": "commented",
                "html_url": "https://github.com/trinodb/trino/pull/15337#pullrequestreview-1209352152",
                "pull_request_url": "https://api.github.com/repos/trinodb/trino/pulls/15337",
                "author_association": "MEMBER",
                "_links": {
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15337#pullrequestreview-1209352152"
                    },
                    "pull_request": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337"
                    }
                }
            },
            "pull_request": {
                "url": "https://api.github.com/repos/trinodb/trino/pulls/15337",
                "id": 1152104129,
                "node_id": "PR_kwDOCezRTs5Eq7bB",
                "html_url": "https://github.com/trinodb/trino/pull/15337",
                "diff_url": "https://github.com/trinodb/trino/pull/15337.diff",
                "patch_url": "https://github.com/trinodb/trino/pull/15337.patch",
                "issue_url": "https://api.github.com/repos/trinodb/trino/issues/15337",
                "number": 15337,
                "state": "open",
                "locked": false,
                "title": "Fix test for invalid rate in FormatUtils.formatDataRate()",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "<!-- Thank you for submitting a pull request! Find more information in our development guide at https://github.com/trinodb/trino/blob/master/.github/DEVELOPMENT.md and contact us on #dev in Slack. -->\r\n<!-- Provide an overview of the PR for maintainers and reviewers. -->\r\n## Description\r\n\r\n`FormatUtils.formatDataRate()` contains the following code:\r\n\r\n```java\r\nlong rate = Math.round(dataSize.toBytes() / duration.getValue(SECONDS));\r\nif (Double.isNaN(rate) || Double.isInfinite(rate)) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nThe test can never evaluate as `true`, since both functions will return false for any `long`.\r\n\r\nThe correct test is:\r\n\r\n```java\r\nif (rate == Long.MAX_VALUE) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nIt's not necessary to test for `Long.MIN_VALUE`, since neither `dataSize` nor `duration` can be negative.\r\n\r\n<!-- Provide details that would help an engineer who is unfamiliar with this part of the code. -->\r\n## Unit Test\r\n\r\nI added a new class, `TestFormatUtils` to test both this fix and the rest of `FormatUtils`. The tests for this change are:\r\n\r\n```java\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), false), \"0B\");\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), true), \"0B/s\");\r\n```\r\n\r\n<!-- Mark the appropriate option with an (x). Propose a release note if you can. -->\r\n## Release notes\r\n\r\n(x) This is not user-visible or docs only and no release notes are required.\r\n( ) Release notes are required, please propose a release note for me.\r\n( ) Release notes are required, with the following suggested text:\r\n\r\n## Related Issue\r\n\r\nFixes #13093",
                "created_at": "2022-12-07T17:54:40Z",
                "updated_at": "2022-12-08T01:58:34Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": "dd4eb7e24625655b4a60619dabe31785fb81f5ab",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [
                    {
                        "id": 1202580151,
                        "node_id": "MDU6TGFiZWwxMjAyNTgwMTUx",
                        "url": "https://api.github.com/repos/trinodb/trino/labels/cla-signed",
                        "name": "cla-signed",
                        "color": "ededed",
                        "default": false,
                        "description": null
                    }
                ],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/trinodb/trino/pulls/15337/commits",
                "review_comments_url": "https://api.github.com/repos/trinodb/trino/pulls/15337/comments",
                "review_comment_url": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/trinodb/trino/issues/15337/comments",
                "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/f88ba0cee83615211a54a7351df5656d7688ae1c",
                "head": {
                    "label": "metadaddy:fix-formatdatarate-test",
                    "ref": "fix-formatdatarate-test",
                    "sha": "f88ba0cee83615211a54a7351df5656d7688ae1c",
                    "user": {
                        "login": "metadaddy",
                        "id": 723517,
                        "node_id": "MDQ6VXNlcjcyMzUxNw==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/metadaddy",
                        "html_url": "https://github.com/metadaddy",
                        "followers_url": "https://api.github.com/users/metadaddy/followers",
                        "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                        "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                        "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                        "repos_url": "https://api.github.com/users/metadaddy/repos",
                        "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 509274784,
                        "node_id": "R_kgDOHlrqoA",
                        "name": "trino",
                        "full_name": "metadaddy/trino",
                        "private": false,
                        "owner": {
                            "login": "metadaddy",
                            "id": 723517,
                            "node_id": "MDQ6VXNlcjcyMzUxNw==",
                            "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/metadaddy",
                            "html_url": "https://github.com/metadaddy",
                            "followers_url": "https://api.github.com/users/metadaddy/followers",
                            "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                            "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                            "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                            "repos_url": "https://api.github.com/users/metadaddy/repos",
                            "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/metadaddy/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": true,
                        "url": "https://api.github.com/repos/metadaddy/trino",
                        "forks_url": "https://api.github.com/repos/metadaddy/trino/forks",
                        "keys_url": "https://api.github.com/repos/metadaddy/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/metadaddy/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/metadaddy/trino/teams",
                        "hooks_url": "https://api.github.com/repos/metadaddy/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/metadaddy/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/metadaddy/trino/events",
                        "assignees_url": "https://api.github.com/repos/metadaddy/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/metadaddy/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/metadaddy/trino/tags",
                        "blobs_url": "https://api.github.com/repos/metadaddy/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/metadaddy/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/metadaddy/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/metadaddy/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/metadaddy/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/metadaddy/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/metadaddy/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/metadaddy/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/metadaddy/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/metadaddy/trino/subscription",
                        "commits_url": "https://api.github.com/repos/metadaddy/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/metadaddy/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/metadaddy/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/metadaddy/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/metadaddy/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/metadaddy/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/metadaddy/trino/merges",
                        "archive_url": "https://api.github.com/repos/metadaddy/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/metadaddy/trino/downloads",
                        "issues_url": "https://api.github.com/repos/metadaddy/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/metadaddy/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/metadaddy/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/metadaddy/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/metadaddy/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/metadaddy/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/metadaddy/trino/deployments",
                        "created_at": "2022-07-01T00:43:32Z",
                        "updated_at": "2022-07-06T01:44:20Z",
                        "pushed_at": "2022-12-07T17:50:11Z",
                        "git_url": "git://github.com/metadaddy/trino.git",
                        "ssh_url": "git@github.com:metadaddy/trino.git",
                        "clone_url": "https://github.com/metadaddy/trino.git",
                        "svn_url": "https://github.com/metadaddy/trino",
                        "homepage": "https://trino.io",
                        "size": 192363,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": "Java",
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "master"
                    }
                },
                "base": {
                    "label": "trinodb:master",
                    "ref": "master",
                    "sha": "4b266700437a87236ad0e0e5cd1db866f4f76dcb",
                    "user": {
                        "login": "trinodb",
                        "id": 34147222,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                        "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/trinodb",
                        "html_url": "https://github.com/trinodb",
                        "followers_url": "https://api.github.com/users/trinodb/followers",
                        "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                        "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                        "organizations_url": "https://api.github.com/users/trinodb/orgs",
                        "repos_url": "https://api.github.com/users/trinodb/repos",
                        "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/trinodb/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 166515022,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNjY1MTUwMjI=",
                        "name": "trino",
                        "full_name": "trinodb/trino",
                        "private": false,
                        "owner": {
                            "login": "trinodb",
                            "id": 34147222,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/trinodb",
                            "html_url": "https://github.com/trinodb",
                            "followers_url": "https://api.github.com/users/trinodb/followers",
                            "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                            "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                            "organizations_url": "https://api.github.com/users/trinodb/orgs",
                            "repos_url": "https://api.github.com/users/trinodb/repos",
                            "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/trinodb/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/trinodb/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": false,
                        "url": "https://api.github.com/repos/trinodb/trino",
                        "forks_url": "https://api.github.com/repos/trinodb/trino/forks",
                        "keys_url": "https://api.github.com/repos/trinodb/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/trinodb/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/trinodb/trino/teams",
                        "hooks_url": "https://api.github.com/repos/trinodb/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/trinodb/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/trinodb/trino/events",
                        "assignees_url": "https://api.github.com/repos/trinodb/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/trinodb/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/trinodb/trino/tags",
                        "blobs_url": "https://api.github.com/repos/trinodb/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/trinodb/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/trinodb/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/trinodb/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/trinodb/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/trinodb/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/trinodb/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/trinodb/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/trinodb/trino/subscription",
                        "commits_url": "https://api.github.com/repos/trinodb/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/trinodb/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/trinodb/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/trinodb/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/trinodb/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/trinodb/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/trinodb/trino/merges",
                        "archive_url": "https://api.github.com/repos/trinodb/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/trinodb/trino/downloads",
                        "issues_url": "https://api.github.com/repos/trinodb/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/trinodb/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/trinodb/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/trinodb/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/trinodb/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/trinodb/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/trinodb/trino/deployments",
                        "created_at": "2019-01-19T06:38:14Z",
                        "updated_at": "2022-12-07T23:23:39Z",
                        "pushed_at": "2022-12-08T01:09:12Z",
                        "git_url": "git://github.com/trinodb/trino.git",
                        "ssh_url": "git@github.com:trinodb/trino.git",
                        "clone_url": "https://github.com/trinodb/trino.git",
                        "svn_url": "https://github.com/trinodb/trino",
                        "homepage": "https://trino.io",
                        "size": 197719,
                        "stargazers_count": 6794,
                        "watchers_count": 6794,
                        "language": "Java",
                        "has_issues": true,
                        "has_projects": false,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": true,
                        "forks_count": 2084,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 2093,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "analytics",
                            "big-data",
                            "data-science",
                            "database",
                            "databases",
                            "datalake",
                            "distributed-database",
                            "distributed-databases",
                            "distributed-systems",
                            "hadoop",
                            "hive",
                            "java",
                            "jdbc",
                            "presto",
                            "prestodb",
                            "query-engine",
                            "sql",
                            "trino"
                        ],
                        "visibility": "public",
                        "forks": 2084,
                        "open_issues": 2093,
                        "watchers": 6794,
                        "default_branch": "master"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337"
                    },
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15337"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15337"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15337/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/trinodb/trino/statuses/f88ba0cee83615211a54a7351df5656d7688ae1c"
                    }
                },
                "author_association": "MEMBER",
                "auto_merge": null,
                "active_lock_reason": null
            }
        },
        "public": true,
        "created_at": "2022-12-08T01:58:35Z",
        "org": {
            "id": 34147222,
            "login": "trinodb",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/trinodb",
            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?"
        }
    },
    {
        "id": "25737138158",
        "type": "PullRequestReviewCommentEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 166515022,
            "name": "trinodb/trino",
            "url": "https://api.github.com/repos/trinodb/trino"
        },
        "payload": {
            "action": "created",
            "comment": {
                "url": "https://api.github.com/repos/trinodb/trino/pulls/comments/1042849016",
                "pull_request_review_id": 1209352152,
                "id": 1042849016,
                "node_id": "PRRC_kwDOCezRTs4-KJz4",
                "diff_hunk": "@@ -115,7 +115,7 @@ else if (longForm) {\n     public static String formatDataRate(DataSize dataSize, Duration duration, boolean longForm)\n     {\n         long rate = Math.round(dataSize.toBytes() / duration.getValue(SECONDS));\n-        if (Double.isNaN(rate) || Double.isInfinite(rate)) {\n+        if (rate == Long.MAX_VALUE) {",
                "path": "client/trino-cli/src/main/java/io/trino/cli/FormatUtils.java",
                "position": 5,
                "original_position": 5,
                "commit_id": "f88ba0cee83615211a54a7351df5656d7688ae1c",
                "original_commit_id": "f88ba0cee83615211a54a7351df5656d7688ae1c",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "The check against `Long.MAX_VALUE` preserves the intended semantics (and mirrors those of `formatCountRate()`) - if the rate calculation results in 'infinity', then set it to zero.",
                "created_at": "2022-12-08T01:58:33Z",
                "updated_at": "2022-12-08T01:58:34Z",
                "html_url": "https://github.com/trinodb/trino/pull/15337#discussion_r1042849016",
                "pull_request_url": "https://api.github.com/repos/trinodb/trino/pulls/15337",
                "author_association": "MEMBER",
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/comments/1042849016"
                    },
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15337#discussion_r1042849016"
                    },
                    "pull_request": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337"
                    }
                },
                "reactions": {
                    "url": "https://api.github.com/repos/trinodb/trino/pulls/comments/1042849016/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "start_line": null,
                "original_start_line": null,
                "start_side": null,
                "line": 118,
                "original_line": 118,
                "side": "RIGHT",
                "in_reply_to_id": 1042706109
            },
            "pull_request": {
                "url": "https://api.github.com/repos/trinodb/trino/pulls/15337",
                "id": 1152104129,
                "node_id": "PR_kwDOCezRTs5Eq7bB",
                "html_url": "https://github.com/trinodb/trino/pull/15337",
                "diff_url": "https://github.com/trinodb/trino/pull/15337.diff",
                "patch_url": "https://github.com/trinodb/trino/pull/15337.patch",
                "issue_url": "https://api.github.com/repos/trinodb/trino/issues/15337",
                "number": 15337,
                "state": "open",
                "locked": false,
                "title": "Fix test for invalid rate in FormatUtils.formatDataRate()",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "<!-- Thank you for submitting a pull request! Find more information in our development guide at https://github.com/trinodb/trino/blob/master/.github/DEVELOPMENT.md and contact us on #dev in Slack. -->\r\n<!-- Provide an overview of the PR for maintainers and reviewers. -->\r\n## Description\r\n\r\n`FormatUtils.formatDataRate()` contains the following code:\r\n\r\n```java\r\nlong rate = Math.round(dataSize.toBytes() / duration.getValue(SECONDS));\r\nif (Double.isNaN(rate) || Double.isInfinite(rate)) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nThe test can never evaluate as `true`, since both functions will return false for any `long`.\r\n\r\nThe correct test is:\r\n\r\n```java\r\nif (rate == Long.MAX_VALUE) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nIt's not necessary to test for `Long.MIN_VALUE`, since neither `dataSize` nor `duration` can be negative.\r\n\r\n<!-- Provide details that would help an engineer who is unfamiliar with this part of the code. -->\r\n## Unit Test\r\n\r\nI added a new class, `TestFormatUtils` to test both this fix and the rest of `FormatUtils`. The tests for this change are:\r\n\r\n```java\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), false), \"0B\");\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), true), \"0B/s\");\r\n```\r\n\r\n<!-- Mark the appropriate option with an (x). Propose a release note if you can. -->\r\n## Release notes\r\n\r\n(x) This is not user-visible or docs only and no release notes are required.\r\n( ) Release notes are required, please propose a release note for me.\r\n( ) Release notes are required, with the following suggested text:\r\n\r\n## Related Issue\r\n\r\nFixes #13093",
                "created_at": "2022-12-07T17:54:40Z",
                "updated_at": "2022-12-08T01:58:34Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": "dd4eb7e24625655b4a60619dabe31785fb81f5ab",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [
                    {
                        "id": 1202580151,
                        "node_id": "MDU6TGFiZWwxMjAyNTgwMTUx",
                        "url": "https://api.github.com/repos/trinodb/trino/labels/cla-signed",
                        "name": "cla-signed",
                        "color": "ededed",
                        "default": false,
                        "description": null
                    }
                ],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/trinodb/trino/pulls/15337/commits",
                "review_comments_url": "https://api.github.com/repos/trinodb/trino/pulls/15337/comments",
                "review_comment_url": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/trinodb/trino/issues/15337/comments",
                "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/f88ba0cee83615211a54a7351df5656d7688ae1c",
                "head": {
                    "label": "metadaddy:fix-formatdatarate-test",
                    "ref": "fix-formatdatarate-test",
                    "sha": "f88ba0cee83615211a54a7351df5656d7688ae1c",
                    "user": {
                        "login": "metadaddy",
                        "id": 723517,
                        "node_id": "MDQ6VXNlcjcyMzUxNw==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/metadaddy",
                        "html_url": "https://github.com/metadaddy",
                        "followers_url": "https://api.github.com/users/metadaddy/followers",
                        "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                        "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                        "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                        "repos_url": "https://api.github.com/users/metadaddy/repos",
                        "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 509274784,
                        "node_id": "R_kgDOHlrqoA",
                        "name": "trino",
                        "full_name": "metadaddy/trino",
                        "private": false,
                        "owner": {
                            "login": "metadaddy",
                            "id": 723517,
                            "node_id": "MDQ6VXNlcjcyMzUxNw==",
                            "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/metadaddy",
                            "html_url": "https://github.com/metadaddy",
                            "followers_url": "https://api.github.com/users/metadaddy/followers",
                            "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                            "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                            "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                            "repos_url": "https://api.github.com/users/metadaddy/repos",
                            "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/metadaddy/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": true,
                        "url": "https://api.github.com/repos/metadaddy/trino",
                        "forks_url": "https://api.github.com/repos/metadaddy/trino/forks",
                        "keys_url": "https://api.github.com/repos/metadaddy/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/metadaddy/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/metadaddy/trino/teams",
                        "hooks_url": "https://api.github.com/repos/metadaddy/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/metadaddy/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/metadaddy/trino/events",
                        "assignees_url": "https://api.github.com/repos/metadaddy/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/metadaddy/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/metadaddy/trino/tags",
                        "blobs_url": "https://api.github.com/repos/metadaddy/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/metadaddy/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/metadaddy/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/metadaddy/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/metadaddy/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/metadaddy/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/metadaddy/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/metadaddy/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/metadaddy/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/metadaddy/trino/subscription",
                        "commits_url": "https://api.github.com/repos/metadaddy/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/metadaddy/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/metadaddy/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/metadaddy/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/metadaddy/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/metadaddy/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/metadaddy/trino/merges",
                        "archive_url": "https://api.github.com/repos/metadaddy/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/metadaddy/trino/downloads",
                        "issues_url": "https://api.github.com/repos/metadaddy/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/metadaddy/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/metadaddy/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/metadaddy/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/metadaddy/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/metadaddy/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/metadaddy/trino/deployments",
                        "created_at": "2022-07-01T00:43:32Z",
                        "updated_at": "2022-07-06T01:44:20Z",
                        "pushed_at": "2022-12-07T17:50:11Z",
                        "git_url": "git://github.com/metadaddy/trino.git",
                        "ssh_url": "git@github.com:metadaddy/trino.git",
                        "clone_url": "https://github.com/metadaddy/trino.git",
                        "svn_url": "https://github.com/metadaddy/trino",
                        "homepage": "https://trino.io",
                        "size": 192363,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": "Java",
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "master"
                    }
                },
                "base": {
                    "label": "trinodb:master",
                    "ref": "master",
                    "sha": "4b266700437a87236ad0e0e5cd1db866f4f76dcb",
                    "user": {
                        "login": "trinodb",
                        "id": 34147222,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                        "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/trinodb",
                        "html_url": "https://github.com/trinodb",
                        "followers_url": "https://api.github.com/users/trinodb/followers",
                        "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                        "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                        "organizations_url": "https://api.github.com/users/trinodb/orgs",
                        "repos_url": "https://api.github.com/users/trinodb/repos",
                        "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/trinodb/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 166515022,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNjY1MTUwMjI=",
                        "name": "trino",
                        "full_name": "trinodb/trino",
                        "private": false,
                        "owner": {
                            "login": "trinodb",
                            "id": 34147222,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/trinodb",
                            "html_url": "https://github.com/trinodb",
                            "followers_url": "https://api.github.com/users/trinodb/followers",
                            "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                            "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                            "organizations_url": "https://api.github.com/users/trinodb/orgs",
                            "repos_url": "https://api.github.com/users/trinodb/repos",
                            "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/trinodb/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/trinodb/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": false,
                        "url": "https://api.github.com/repos/trinodb/trino",
                        "forks_url": "https://api.github.com/repos/trinodb/trino/forks",
                        "keys_url": "https://api.github.com/repos/trinodb/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/trinodb/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/trinodb/trino/teams",
                        "hooks_url": "https://api.github.com/repos/trinodb/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/trinodb/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/trinodb/trino/events",
                        "assignees_url": "https://api.github.com/repos/trinodb/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/trinodb/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/trinodb/trino/tags",
                        "blobs_url": "https://api.github.com/repos/trinodb/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/trinodb/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/trinodb/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/trinodb/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/trinodb/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/trinodb/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/trinodb/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/trinodb/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/trinodb/trino/subscription",
                        "commits_url": "https://api.github.com/repos/trinodb/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/trinodb/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/trinodb/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/trinodb/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/trinodb/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/trinodb/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/trinodb/trino/merges",
                        "archive_url": "https://api.github.com/repos/trinodb/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/trinodb/trino/downloads",
                        "issues_url": "https://api.github.com/repos/trinodb/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/trinodb/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/trinodb/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/trinodb/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/trinodb/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/trinodb/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/trinodb/trino/deployments",
                        "created_at": "2019-01-19T06:38:14Z",
                        "updated_at": "2022-12-07T23:23:39Z",
                        "pushed_at": "2022-12-08T01:09:12Z",
                        "git_url": "git://github.com/trinodb/trino.git",
                        "ssh_url": "git@github.com:trinodb/trino.git",
                        "clone_url": "https://github.com/trinodb/trino.git",
                        "svn_url": "https://github.com/trinodb/trino",
                        "homepage": "https://trino.io",
                        "size": 197719,
                        "stargazers_count": 6794,
                        "watchers_count": 6794,
                        "language": "Java",
                        "has_issues": true,
                        "has_projects": false,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": true,
                        "forks_count": 2084,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 2093,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "analytics",
                            "big-data",
                            "data-science",
                            "database",
                            "databases",
                            "datalake",
                            "distributed-database",
                            "distributed-databases",
                            "distributed-systems",
                            "hadoop",
                            "hive",
                            "java",
                            "jdbc",
                            "presto",
                            "prestodb",
                            "query-engine",
                            "sql",
                            "trino"
                        ],
                        "visibility": "public",
                        "forks": 2084,
                        "open_issues": 2093,
                        "watchers": 6794,
                        "default_branch": "master"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337"
                    },
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15337"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15337"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15337/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/trinodb/trino/statuses/f88ba0cee83615211a54a7351df5656d7688ae1c"
                    }
                },
                "author_association": "MEMBER",
                "auto_merge": null,
                "active_lock_reason": null
            }
        },
        "public": true,
        "created_at": "2022-12-08T01:58:33Z",
        "org": {
            "id": 34147222,
            "login": "trinodb",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/trinodb",
            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?"
        }
    },
    {
        "id": "25737015143",
        "type": "PullRequestReviewCommentEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 166515022,
            "name": "trinodb/trino",
            "url": "https://api.github.com/repos/trinodb/trino"
        },
        "payload": {
            "action": "created",
            "comment": {
                "url": "https://api.github.com/repos/trinodb/trino/pulls/comments/1042842469",
                "pull_request_review_id": 1209344719,
                "id": 1042842469,
                "node_id": "PRRC_kwDOCezRTs4-KINl",
                "diff_hunk": "@@ -115,7 +115,7 @@ else if (longForm) {\n     public static String formatDataRate(DataSize dataSize, Duration duration, boolean longForm)\n     {\n         long rate = Math.round(dataSize.toBytes() / duration.getValue(SECONDS));\n-        if (Double.isNaN(rate) || Double.isInfinite(rate)) {",
                "path": "client/trino-cli/src/main/java/io/trino/cli/FormatUtils.java",
                "position": 4,
                "original_position": 4,
                "commit_id": "f88ba0cee83615211a54a7351df5656d7688ae1c",
                "original_commit_id": "f88ba0cee83615211a54a7351df5656d7688ae1c",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "Nice!",
                "created_at": "2022-12-08T01:49:58Z",
                "updated_at": "2022-12-08T01:49:59Z",
                "html_url": "https://github.com/trinodb/trino/pull/15337#discussion_r1042842469",
                "pull_request_url": "https://api.github.com/repos/trinodb/trino/pulls/15337",
                "author_association": "MEMBER",
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/comments/1042842469"
                    },
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15337#discussion_r1042842469"
                    },
                    "pull_request": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337"
                    }
                },
                "reactions": {
                    "url": "https://api.github.com/repos/trinodb/trino/pulls/comments/1042842469/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "start_line": null,
                "original_start_line": null,
                "start_side": null,
                "line": 118,
                "original_line": 118,
                "side": "LEFT",
                "in_reply_to_id": 1042704594
            },
            "pull_request": {
                "url": "https://api.github.com/repos/trinodb/trino/pulls/15337",
                "id": 1152104129,
                "node_id": "PR_kwDOCezRTs5Eq7bB",
                "html_url": "https://github.com/trinodb/trino/pull/15337",
                "diff_url": "https://github.com/trinodb/trino/pull/15337.diff",
                "patch_url": "https://github.com/trinodb/trino/pull/15337.patch",
                "issue_url": "https://api.github.com/repos/trinodb/trino/issues/15337",
                "number": 15337,
                "state": "open",
                "locked": false,
                "title": "Fix test for invalid rate in FormatUtils.formatDataRate()",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "<!-- Thank you for submitting a pull request! Find more information in our development guide at https://github.com/trinodb/trino/blob/master/.github/DEVELOPMENT.md and contact us on #dev in Slack. -->\r\n<!-- Provide an overview of the PR for maintainers and reviewers. -->\r\n## Description\r\n\r\n`FormatUtils.formatDataRate()` contains the following code:\r\n\r\n```java\r\nlong rate = Math.round(dataSize.toBytes() / duration.getValue(SECONDS));\r\nif (Double.isNaN(rate) || Double.isInfinite(rate)) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nThe test can never evaluate as `true`, since both functions will return false for any `long`.\r\n\r\nThe correct test is:\r\n\r\n```java\r\nif (rate == Long.MAX_VALUE) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nIt's not necessary to test for `Long.MIN_VALUE`, since neither `dataSize` nor `duration` can be negative.\r\n\r\n<!-- Provide details that would help an engineer who is unfamiliar with this part of the code. -->\r\n## Unit Test\r\n\r\nI added a new class, `TestFormatUtils` to test both this fix and the rest of `FormatUtils`. The tests for this change are:\r\n\r\n```java\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), false), \"0B\");\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), true), \"0B/s\");\r\n```\r\n\r\n<!-- Mark the appropriate option with an (x). Propose a release note if you can. -->\r\n## Release notes\r\n\r\n(x) This is not user-visible or docs only and no release notes are required.\r\n( ) Release notes are required, please propose a release note for me.\r\n( ) Release notes are required, with the following suggested text:\r\n\r\n## Related Issue\r\n\r\nFixes #13093",
                "created_at": "2022-12-07T17:54:40Z",
                "updated_at": "2022-12-08T01:49:59Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": "dd4eb7e24625655b4a60619dabe31785fb81f5ab",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [
                    {
                        "id": 1202580151,
                        "node_id": "MDU6TGFiZWwxMjAyNTgwMTUx",
                        "url": "https://api.github.com/repos/trinodb/trino/labels/cla-signed",
                        "name": "cla-signed",
                        "color": "ededed",
                        "default": false,
                        "description": null
                    }
                ],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/trinodb/trino/pulls/15337/commits",
                "review_comments_url": "https://api.github.com/repos/trinodb/trino/pulls/15337/comments",
                "review_comment_url": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/trinodb/trino/issues/15337/comments",
                "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/f88ba0cee83615211a54a7351df5656d7688ae1c",
                "head": {
                    "label": "metadaddy:fix-formatdatarate-test",
                    "ref": "fix-formatdatarate-test",
                    "sha": "f88ba0cee83615211a54a7351df5656d7688ae1c",
                    "user": {
                        "login": "metadaddy",
                        "id": 723517,
                        "node_id": "MDQ6VXNlcjcyMzUxNw==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/metadaddy",
                        "html_url": "https://github.com/metadaddy",
                        "followers_url": "https://api.github.com/users/metadaddy/followers",
                        "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                        "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                        "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                        "repos_url": "https://api.github.com/users/metadaddy/repos",
                        "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 509274784,
                        "node_id": "R_kgDOHlrqoA",
                        "name": "trino",
                        "full_name": "metadaddy/trino",
                        "private": false,
                        "owner": {
                            "login": "metadaddy",
                            "id": 723517,
                            "node_id": "MDQ6VXNlcjcyMzUxNw==",
                            "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/metadaddy",
                            "html_url": "https://github.com/metadaddy",
                            "followers_url": "https://api.github.com/users/metadaddy/followers",
                            "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                            "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                            "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                            "repos_url": "https://api.github.com/users/metadaddy/repos",
                            "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/metadaddy/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": true,
                        "url": "https://api.github.com/repos/metadaddy/trino",
                        "forks_url": "https://api.github.com/repos/metadaddy/trino/forks",
                        "keys_url": "https://api.github.com/repos/metadaddy/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/metadaddy/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/metadaddy/trino/teams",
                        "hooks_url": "https://api.github.com/repos/metadaddy/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/metadaddy/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/metadaddy/trino/events",
                        "assignees_url": "https://api.github.com/repos/metadaddy/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/metadaddy/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/metadaddy/trino/tags",
                        "blobs_url": "https://api.github.com/repos/metadaddy/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/metadaddy/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/metadaddy/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/metadaddy/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/metadaddy/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/metadaddy/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/metadaddy/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/metadaddy/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/metadaddy/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/metadaddy/trino/subscription",
                        "commits_url": "https://api.github.com/repos/metadaddy/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/metadaddy/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/metadaddy/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/metadaddy/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/metadaddy/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/metadaddy/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/metadaddy/trino/merges",
                        "archive_url": "https://api.github.com/repos/metadaddy/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/metadaddy/trino/downloads",
                        "issues_url": "https://api.github.com/repos/metadaddy/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/metadaddy/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/metadaddy/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/metadaddy/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/metadaddy/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/metadaddy/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/metadaddy/trino/deployments",
                        "created_at": "2022-07-01T00:43:32Z",
                        "updated_at": "2022-07-06T01:44:20Z",
                        "pushed_at": "2022-12-07T17:50:11Z",
                        "git_url": "git://github.com/metadaddy/trino.git",
                        "ssh_url": "git@github.com:metadaddy/trino.git",
                        "clone_url": "https://github.com/metadaddy/trino.git",
                        "svn_url": "https://github.com/metadaddy/trino",
                        "homepage": "https://trino.io",
                        "size": 192363,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": "Java",
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "master"
                    }
                },
                "base": {
                    "label": "trinodb:master",
                    "ref": "master",
                    "sha": "4b266700437a87236ad0e0e5cd1db866f4f76dcb",
                    "user": {
                        "login": "trinodb",
                        "id": 34147222,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                        "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/trinodb",
                        "html_url": "https://github.com/trinodb",
                        "followers_url": "https://api.github.com/users/trinodb/followers",
                        "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                        "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                        "organizations_url": "https://api.github.com/users/trinodb/orgs",
                        "repos_url": "https://api.github.com/users/trinodb/repos",
                        "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/trinodb/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 166515022,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNjY1MTUwMjI=",
                        "name": "trino",
                        "full_name": "trinodb/trino",
                        "private": false,
                        "owner": {
                            "login": "trinodb",
                            "id": 34147222,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/trinodb",
                            "html_url": "https://github.com/trinodb",
                            "followers_url": "https://api.github.com/users/trinodb/followers",
                            "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                            "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                            "organizations_url": "https://api.github.com/users/trinodb/orgs",
                            "repos_url": "https://api.github.com/users/trinodb/repos",
                            "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/trinodb/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/trinodb/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": false,
                        "url": "https://api.github.com/repos/trinodb/trino",
                        "forks_url": "https://api.github.com/repos/trinodb/trino/forks",
                        "keys_url": "https://api.github.com/repos/trinodb/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/trinodb/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/trinodb/trino/teams",
                        "hooks_url": "https://api.github.com/repos/trinodb/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/trinodb/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/trinodb/trino/events",
                        "assignees_url": "https://api.github.com/repos/trinodb/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/trinodb/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/trinodb/trino/tags",
                        "blobs_url": "https://api.github.com/repos/trinodb/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/trinodb/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/trinodb/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/trinodb/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/trinodb/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/trinodb/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/trinodb/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/trinodb/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/trinodb/trino/subscription",
                        "commits_url": "https://api.github.com/repos/trinodb/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/trinodb/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/trinodb/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/trinodb/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/trinodb/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/trinodb/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/trinodb/trino/merges",
                        "archive_url": "https://api.github.com/repos/trinodb/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/trinodb/trino/downloads",
                        "issues_url": "https://api.github.com/repos/trinodb/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/trinodb/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/trinodb/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/trinodb/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/trinodb/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/trinodb/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/trinodb/trino/deployments",
                        "created_at": "2019-01-19T06:38:14Z",
                        "updated_at": "2022-12-07T23:23:39Z",
                        "pushed_at": "2022-12-08T01:09:12Z",
                        "git_url": "git://github.com/trinodb/trino.git",
                        "ssh_url": "git@github.com:trinodb/trino.git",
                        "clone_url": "https://github.com/trinodb/trino.git",
                        "svn_url": "https://github.com/trinodb/trino",
                        "homepage": "https://trino.io",
                        "size": 197719,
                        "stargazers_count": 6794,
                        "watchers_count": 6794,
                        "language": "Java",
                        "has_issues": true,
                        "has_projects": false,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": true,
                        "forks_count": 2084,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 2093,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "analytics",
                            "big-data",
                            "data-science",
                            "database",
                            "databases",
                            "datalake",
                            "distributed-database",
                            "distributed-databases",
                            "distributed-systems",
                            "hadoop",
                            "hive",
                            "java",
                            "jdbc",
                            "presto",
                            "prestodb",
                            "query-engine",
                            "sql",
                            "trino"
                        ],
                        "visibility": "public",
                        "forks": 2084,
                        "open_issues": 2093,
                        "watchers": 6794,
                        "default_branch": "master"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337"
                    },
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15337"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15337"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15337/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/trinodb/trino/statuses/f88ba0cee83615211a54a7351df5656d7688ae1c"
                    }
                },
                "author_association": "MEMBER",
                "auto_merge": null,
                "active_lock_reason": null
            }
        },
        "public": true,
        "created_at": "2022-12-08T01:49:58Z",
        "org": {
            "id": 34147222,
            "login": "trinodb",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/trinodb",
            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?"
        }
    },
    {
        "id": "25737015084",
        "type": "PullRequestReviewEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 166515022,
            "name": "trinodb/trino",
            "url": "https://api.github.com/repos/trinodb/trino"
        },
        "payload": {
            "action": "created",
            "review": {
                "id": 1209344719,
                "node_id": "PRR_kwDOCezRTs5IFSLP",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": null,
                "commit_id": "f88ba0cee83615211a54a7351df5656d7688ae1c",
                "submitted_at": "2022-12-08T01:49:58Z",
                "state": "commented",
                "html_url": "https://github.com/trinodb/trino/pull/15337#pullrequestreview-1209344719",
                "pull_request_url": "https://api.github.com/repos/trinodb/trino/pulls/15337",
                "author_association": "MEMBER",
                "_links": {
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15337#pullrequestreview-1209344719"
                    },
                    "pull_request": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337"
                    }
                }
            },
            "pull_request": {
                "url": "https://api.github.com/repos/trinodb/trino/pulls/15337",
                "id": 1152104129,
                "node_id": "PR_kwDOCezRTs5Eq7bB",
                "html_url": "https://github.com/trinodb/trino/pull/15337",
                "diff_url": "https://github.com/trinodb/trino/pull/15337.diff",
                "patch_url": "https://github.com/trinodb/trino/pull/15337.patch",
                "issue_url": "https://api.github.com/repos/trinodb/trino/issues/15337",
                "number": 15337,
                "state": "open",
                "locked": false,
                "title": "Fix test for invalid rate in FormatUtils.formatDataRate()",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "<!-- Thank you for submitting a pull request! Find more information in our development guide at https://github.com/trinodb/trino/blob/master/.github/DEVELOPMENT.md and contact us on #dev in Slack. -->\r\n<!-- Provide an overview of the PR for maintainers and reviewers. -->\r\n## Description\r\n\r\n`FormatUtils.formatDataRate()` contains the following code:\r\n\r\n```java\r\nlong rate = Math.round(dataSize.toBytes() / duration.getValue(SECONDS));\r\nif (Double.isNaN(rate) || Double.isInfinite(rate)) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nThe test can never evaluate as `true`, since both functions will return false for any `long`.\r\n\r\nThe correct test is:\r\n\r\n```java\r\nif (rate == Long.MAX_VALUE) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nIt's not necessary to test for `Long.MIN_VALUE`, since neither `dataSize` nor `duration` can be negative.\r\n\r\n<!-- Provide details that would help an engineer who is unfamiliar with this part of the code. -->\r\n## Unit Test\r\n\r\nI added a new class, `TestFormatUtils` to test both this fix and the rest of `FormatUtils`. The tests for this change are:\r\n\r\n```java\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), false), \"0B\");\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), true), \"0B/s\");\r\n```\r\n\r\n<!-- Mark the appropriate option with an (x). Propose a release note if you can. -->\r\n## Release notes\r\n\r\n(x) This is not user-visible or docs only and no release notes are required.\r\n( ) Release notes are required, please propose a release note for me.\r\n( ) Release notes are required, with the following suggested text:\r\n\r\n## Related Issue\r\n\r\nFixes #13093",
                "created_at": "2022-12-07T17:54:40Z",
                "updated_at": "2022-12-08T01:49:59Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": "dd4eb7e24625655b4a60619dabe31785fb81f5ab",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [
                    {
                        "id": 1202580151,
                        "node_id": "MDU6TGFiZWwxMjAyNTgwMTUx",
                        "url": "https://api.github.com/repos/trinodb/trino/labels/cla-signed",
                        "name": "cla-signed",
                        "color": "ededed",
                        "default": false,
                        "description": null
                    }
                ],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/trinodb/trino/pulls/15337/commits",
                "review_comments_url": "https://api.github.com/repos/trinodb/trino/pulls/15337/comments",
                "review_comment_url": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/trinodb/trino/issues/15337/comments",
                "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/f88ba0cee83615211a54a7351df5656d7688ae1c",
                "head": {
                    "label": "metadaddy:fix-formatdatarate-test",
                    "ref": "fix-formatdatarate-test",
                    "sha": "f88ba0cee83615211a54a7351df5656d7688ae1c",
                    "user": {
                        "login": "metadaddy",
                        "id": 723517,
                        "node_id": "MDQ6VXNlcjcyMzUxNw==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/metadaddy",
                        "html_url": "https://github.com/metadaddy",
                        "followers_url": "https://api.github.com/users/metadaddy/followers",
                        "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                        "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                        "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                        "repos_url": "https://api.github.com/users/metadaddy/repos",
                        "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 509274784,
                        "node_id": "R_kgDOHlrqoA",
                        "name": "trino",
                        "full_name": "metadaddy/trino",
                        "private": false,
                        "owner": {
                            "login": "metadaddy",
                            "id": 723517,
                            "node_id": "MDQ6VXNlcjcyMzUxNw==",
                            "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/metadaddy",
                            "html_url": "https://github.com/metadaddy",
                            "followers_url": "https://api.github.com/users/metadaddy/followers",
                            "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                            "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                            "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                            "repos_url": "https://api.github.com/users/metadaddy/repos",
                            "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/metadaddy/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": true,
                        "url": "https://api.github.com/repos/metadaddy/trino",
                        "forks_url": "https://api.github.com/repos/metadaddy/trino/forks",
                        "keys_url": "https://api.github.com/repos/metadaddy/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/metadaddy/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/metadaddy/trino/teams",
                        "hooks_url": "https://api.github.com/repos/metadaddy/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/metadaddy/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/metadaddy/trino/events",
                        "assignees_url": "https://api.github.com/repos/metadaddy/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/metadaddy/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/metadaddy/trino/tags",
                        "blobs_url": "https://api.github.com/repos/metadaddy/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/metadaddy/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/metadaddy/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/metadaddy/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/metadaddy/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/metadaddy/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/metadaddy/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/metadaddy/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/metadaddy/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/metadaddy/trino/subscription",
                        "commits_url": "https://api.github.com/repos/metadaddy/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/metadaddy/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/metadaddy/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/metadaddy/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/metadaddy/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/metadaddy/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/metadaddy/trino/merges",
                        "archive_url": "https://api.github.com/repos/metadaddy/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/metadaddy/trino/downloads",
                        "issues_url": "https://api.github.com/repos/metadaddy/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/metadaddy/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/metadaddy/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/metadaddy/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/metadaddy/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/metadaddy/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/metadaddy/trino/deployments",
                        "created_at": "2022-07-01T00:43:32Z",
                        "updated_at": "2022-07-06T01:44:20Z",
                        "pushed_at": "2022-12-07T17:50:11Z",
                        "git_url": "git://github.com/metadaddy/trino.git",
                        "ssh_url": "git@github.com:metadaddy/trino.git",
                        "clone_url": "https://github.com/metadaddy/trino.git",
                        "svn_url": "https://github.com/metadaddy/trino",
                        "homepage": "https://trino.io",
                        "size": 192363,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": "Java",
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "master"
                    }
                },
                "base": {
                    "label": "trinodb:master",
                    "ref": "master",
                    "sha": "4b266700437a87236ad0e0e5cd1db866f4f76dcb",
                    "user": {
                        "login": "trinodb",
                        "id": 34147222,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                        "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/trinodb",
                        "html_url": "https://github.com/trinodb",
                        "followers_url": "https://api.github.com/users/trinodb/followers",
                        "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                        "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                        "organizations_url": "https://api.github.com/users/trinodb/orgs",
                        "repos_url": "https://api.github.com/users/trinodb/repos",
                        "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/trinodb/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 166515022,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNjY1MTUwMjI=",
                        "name": "trino",
                        "full_name": "trinodb/trino",
                        "private": false,
                        "owner": {
                            "login": "trinodb",
                            "id": 34147222,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/trinodb",
                            "html_url": "https://github.com/trinodb",
                            "followers_url": "https://api.github.com/users/trinodb/followers",
                            "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                            "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                            "organizations_url": "https://api.github.com/users/trinodb/orgs",
                            "repos_url": "https://api.github.com/users/trinodb/repos",
                            "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/trinodb/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/trinodb/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": false,
                        "url": "https://api.github.com/repos/trinodb/trino",
                        "forks_url": "https://api.github.com/repos/trinodb/trino/forks",
                        "keys_url": "https://api.github.com/repos/trinodb/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/trinodb/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/trinodb/trino/teams",
                        "hooks_url": "https://api.github.com/repos/trinodb/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/trinodb/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/trinodb/trino/events",
                        "assignees_url": "https://api.github.com/repos/trinodb/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/trinodb/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/trinodb/trino/tags",
                        "blobs_url": "https://api.github.com/repos/trinodb/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/trinodb/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/trinodb/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/trinodb/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/trinodb/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/trinodb/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/trinodb/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/trinodb/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/trinodb/trino/subscription",
                        "commits_url": "https://api.github.com/repos/trinodb/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/trinodb/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/trinodb/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/trinodb/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/trinodb/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/trinodb/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/trinodb/trino/merges",
                        "archive_url": "https://api.github.com/repos/trinodb/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/trinodb/trino/downloads",
                        "issues_url": "https://api.github.com/repos/trinodb/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/trinodb/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/trinodb/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/trinodb/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/trinodb/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/trinodb/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/trinodb/trino/deployments",
                        "created_at": "2019-01-19T06:38:14Z",
                        "updated_at": "2022-12-07T23:23:39Z",
                        "pushed_at": "2022-12-08T01:09:12Z",
                        "git_url": "git://github.com/trinodb/trino.git",
                        "ssh_url": "git@github.com:trinodb/trino.git",
                        "clone_url": "https://github.com/trinodb/trino.git",
                        "svn_url": "https://github.com/trinodb/trino",
                        "homepage": "https://trino.io",
                        "size": 197719,
                        "stargazers_count": 6794,
                        "watchers_count": 6794,
                        "language": "Java",
                        "has_issues": true,
                        "has_projects": false,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": true,
                        "forks_count": 2084,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 2093,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "analytics",
                            "big-data",
                            "data-science",
                            "database",
                            "databases",
                            "datalake",
                            "distributed-database",
                            "distributed-databases",
                            "distributed-systems",
                            "hadoop",
                            "hive",
                            "java",
                            "jdbc",
                            "presto",
                            "prestodb",
                            "query-engine",
                            "sql",
                            "trino"
                        ],
                        "visibility": "public",
                        "forks": 2084,
                        "open_issues": 2093,
                        "watchers": 6794,
                        "default_branch": "master"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337"
                    },
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15337"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15337"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15337/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/trinodb/trino/statuses/f88ba0cee83615211a54a7351df5656d7688ae1c"
                    }
                },
                "author_association": "MEMBER",
                "auto_merge": null,
                "active_lock_reason": null
            }
        },
        "public": true,
        "created_at": "2022-12-08T01:49:59Z",
        "org": {
            "id": 34147222,
            "login": "trinodb",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/trinodb",
            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?"
        }
    },
    {
        "id": "25727868247",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 166515022,
            "name": "trinodb/trino",
            "url": "https://api.github.com/repos/trinodb/trino"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/trinodb/trino/issues/13093",
                "repository_url": "https://api.github.com/repos/trinodb/trino",
                "labels_url": "https://api.github.com/repos/trinodb/trino/issues/13093/labels{/name}",
                "comments_url": "https://api.github.com/repos/trinodb/trino/issues/13093/comments",
                "events_url": "https://api.github.com/repos/trinodb/trino/issues/13093/events",
                "html_url": "https://github.com/trinodb/trino/issues/13093",
                "id": 1294946685,
                "node_id": "I_kwDOCezRTs5NL1F9",
                "number": 13093,
                "title": "io.trino.cli.FormatUtils.formatDataRate incorrectly tests long rate with Double functions",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 2,
                "created_at": "2022-07-06T00:50:24Z",
                "updated_at": "2022-12-07T17:55:24Z",
                "closed_at": null,
                "author_association": "MEMBER",
                "active_lock_reason": null,
                "body": "Test code:\r\n\r\n```java\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), false), \"0B\");\r\n```\r\n\r\nAssertion fails:\r\n\r\n```\r\nTestFormatUtils.formatDataRate:287 expected [0B] but found [9223P]\r\n```\r\n\r\nThe issue is that `formatDataRate` calculates its `rate` local variable as a `long`:\r\n\r\n```java\r\nlong rate = Math.round(dataSize.toBytes() / duration.getValue(SECONDS));\r\n```\r\n\r\nbut then this test can never succeed, since both functions will return false for any `long`\r\n\r\n```java\r\n        if (Double.isNaN(rate) || Double.isInfinite(rate)) {\r\n            rate = 0;\r\n        }\r\n```\r\n\r\nThe test should instead be:\r\n\r\n```java\r\n        if (rate == Long.MAX_VALUE) {\r\n            rate = 0;\r\n        }\r\n```",
                "reactions": {
                    "url": "https://api.github.com/repos/trinodb/trino/issues/13093/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/trinodb/trino/issues/13093/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/trinodb/trino/issues/comments/1341350968",
                "html_url": "https://github.com/trinodb/trino/issues/13093#issuecomment-1341350968",
                "issue_url": "https://api.github.com/repos/trinodb/trino/issues/13093",
                "id": 1341350968,
                "node_id": "IC_kwDOCezRTs5P82Q4",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2022-12-07T17:55:24Z",
                "updated_at": "2022-12-07T17:55:24Z",
                "author_association": "MEMBER",
                "body": "@findepi I finally got round to this one: https://github.com/trinodb/trino/pull/15337",
                "reactions": {
                    "url": "https://api.github.com/repos/trinodb/trino/issues/comments/1341350968/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2022-12-07T17:55:24Z",
        "org": {
            "id": 34147222,
            "login": "trinodb",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/trinodb",
            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?"
        }
    },
    {
        "id": "25727850495",
        "type": "PullRequestEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 166515022,
            "name": "trinodb/trino",
            "url": "https://api.github.com/repos/trinodb/trino"
        },
        "payload": {
            "action": "opened",
            "number": 15337,
            "pull_request": {
                "url": "https://api.github.com/repos/trinodb/trino/pulls/15337",
                "id": 1152104129,
                "node_id": "PR_kwDOCezRTs5Eq7bB",
                "html_url": "https://github.com/trinodb/trino/pull/15337",
                "diff_url": "https://github.com/trinodb/trino/pull/15337.diff",
                "patch_url": "https://github.com/trinodb/trino/pull/15337.patch",
                "issue_url": "https://api.github.com/repos/trinodb/trino/issues/15337",
                "number": 15337,
                "state": "open",
                "locked": false,
                "title": "Fix test for invalid rate in FormatUtils.formatDataRate()",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "<!-- Thank you for submitting a pull request! Find more information in our development guide at https://github.com/trinodb/trino/blob/master/.github/DEVELOPMENT.md and contact us on #dev in Slack. -->\r\n<!-- Provide an overview of the PR for maintainers and reviewers. -->\r\n## Description\r\n\r\n`FormatUtils.formatDataRate()` contains the following code:\r\n\r\n```java\r\nlong rate = Math.round(dataSize.toBytes() / duration.getValue(SECONDS));\r\nif (Double.isNaN(rate) || Double.isInfinite(rate)) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nThe test can never evaluate as `true`, since both functions will return false for any `long`.\r\n\r\nThe correct test is:\r\n\r\n```java\r\nif (rate == Long.MAX_VALUE) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nIt's not necessary to test for `Long.MIN_VALUE`, since neither `dataSize` nor `duration` can be negative.\r\n\r\n<!-- Provide details that would help an engineer who is unfamiliar with this part of the code. -->\r\n## Unit Test\r\n\r\nI added a new class, `TestFormatUtils` to test both this fix and the rest of `FormatUtils`. The tests for this change are:\r\n\r\n```java\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), false), \"0B\");\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), true), \"0B/s\");\r\n```\r\n\r\n<!-- Mark the appropriate option with an (x). Propose a release note if you can. -->\r\n## Release notes\r\n\r\n(x) This is not user-visible or docs only and no release notes are required.\r\n( ) Release notes are required, please propose a release note for me.\r\n( ) Release notes are required, with the following suggested text:\r\n\r\n## Related Issue\r\n\r\nFixes #13093",
                "created_at": "2022-12-07T17:54:40Z",
                "updated_at": "2022-12-07T17:54:40Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": null,
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/trinodb/trino/pulls/15337/commits",
                "review_comments_url": "https://api.github.com/repos/trinodb/trino/pulls/15337/comments",
                "review_comment_url": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/trinodb/trino/issues/15337/comments",
                "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/f88ba0cee83615211a54a7351df5656d7688ae1c",
                "head": {
                    "label": "metadaddy:fix-formatdatarate-test",
                    "ref": "fix-formatdatarate-test",
                    "sha": "f88ba0cee83615211a54a7351df5656d7688ae1c",
                    "user": {
                        "login": "metadaddy",
                        "id": 723517,
                        "node_id": "MDQ6VXNlcjcyMzUxNw==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/metadaddy",
                        "html_url": "https://github.com/metadaddy",
                        "followers_url": "https://api.github.com/users/metadaddy/followers",
                        "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                        "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                        "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                        "repos_url": "https://api.github.com/users/metadaddy/repos",
                        "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 509274784,
                        "node_id": "R_kgDOHlrqoA",
                        "name": "trino",
                        "full_name": "metadaddy/trino",
                        "private": false,
                        "owner": {
                            "login": "metadaddy",
                            "id": 723517,
                            "node_id": "MDQ6VXNlcjcyMzUxNw==",
                            "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/metadaddy",
                            "html_url": "https://github.com/metadaddy",
                            "followers_url": "https://api.github.com/users/metadaddy/followers",
                            "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                            "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                            "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                            "repos_url": "https://api.github.com/users/metadaddy/repos",
                            "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/metadaddy/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": true,
                        "url": "https://api.github.com/repos/metadaddy/trino",
                        "forks_url": "https://api.github.com/repos/metadaddy/trino/forks",
                        "keys_url": "https://api.github.com/repos/metadaddy/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/metadaddy/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/metadaddy/trino/teams",
                        "hooks_url": "https://api.github.com/repos/metadaddy/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/metadaddy/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/metadaddy/trino/events",
                        "assignees_url": "https://api.github.com/repos/metadaddy/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/metadaddy/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/metadaddy/trino/tags",
                        "blobs_url": "https://api.github.com/repos/metadaddy/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/metadaddy/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/metadaddy/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/metadaddy/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/metadaddy/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/metadaddy/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/metadaddy/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/metadaddy/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/metadaddy/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/metadaddy/trino/subscription",
                        "commits_url": "https://api.github.com/repos/metadaddy/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/metadaddy/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/metadaddy/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/metadaddy/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/metadaddy/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/metadaddy/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/metadaddy/trino/merges",
                        "archive_url": "https://api.github.com/repos/metadaddy/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/metadaddy/trino/downloads",
                        "issues_url": "https://api.github.com/repos/metadaddy/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/metadaddy/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/metadaddy/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/metadaddy/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/metadaddy/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/metadaddy/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/metadaddy/trino/deployments",
                        "created_at": "2022-07-01T00:43:32Z",
                        "updated_at": "2022-07-06T01:44:20Z",
                        "pushed_at": "2022-12-07T17:50:11Z",
                        "git_url": "git://github.com/metadaddy/trino.git",
                        "ssh_url": "git@github.com:metadaddy/trino.git",
                        "clone_url": "https://github.com/metadaddy/trino.git",
                        "svn_url": "https://github.com/metadaddy/trino",
                        "homepage": "https://trino.io",
                        "size": 192368,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": "Java",
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "master"
                    }
                },
                "base": {
                    "label": "trinodb:master",
                    "ref": "master",
                    "sha": "4b266700437a87236ad0e0e5cd1db866f4f76dcb",
                    "user": {
                        "login": "trinodb",
                        "id": 34147222,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                        "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/trinodb",
                        "html_url": "https://github.com/trinodb",
                        "followers_url": "https://api.github.com/users/trinodb/followers",
                        "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                        "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                        "organizations_url": "https://api.github.com/users/trinodb/orgs",
                        "repos_url": "https://api.github.com/users/trinodb/repos",
                        "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/trinodb/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 166515022,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNjY1MTUwMjI=",
                        "name": "trino",
                        "full_name": "trinodb/trino",
                        "private": false,
                        "owner": {
                            "login": "trinodb",
                            "id": 34147222,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/trinodb",
                            "html_url": "https://github.com/trinodb",
                            "followers_url": "https://api.github.com/users/trinodb/followers",
                            "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                            "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                            "organizations_url": "https://api.github.com/users/trinodb/orgs",
                            "repos_url": "https://api.github.com/users/trinodb/repos",
                            "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/trinodb/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/trinodb/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": false,
                        "url": "https://api.github.com/repos/trinodb/trino",
                        "forks_url": "https://api.github.com/repos/trinodb/trino/forks",
                        "keys_url": "https://api.github.com/repos/trinodb/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/trinodb/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/trinodb/trino/teams",
                        "hooks_url": "https://api.github.com/repos/trinodb/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/trinodb/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/trinodb/trino/events",
                        "assignees_url": "https://api.github.com/repos/trinodb/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/trinodb/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/trinodb/trino/tags",
                        "blobs_url": "https://api.github.com/repos/trinodb/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/trinodb/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/trinodb/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/trinodb/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/trinodb/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/trinodb/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/trinodb/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/trinodb/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/trinodb/trino/subscription",
                        "commits_url": "https://api.github.com/repos/trinodb/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/trinodb/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/trinodb/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/trinodb/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/trinodb/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/trinodb/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/trinodb/trino/merges",
                        "archive_url": "https://api.github.com/repos/trinodb/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/trinodb/trino/downloads",
                        "issues_url": "https://api.github.com/repos/trinodb/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/trinodb/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/trinodb/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/trinodb/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/trinodb/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/trinodb/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/trinodb/trino/deployments",
                        "created_at": "2019-01-19T06:38:14Z",
                        "updated_at": "2022-12-07T15:05:28Z",
                        "pushed_at": "2022-12-07T17:54:40Z",
                        "git_url": "git://github.com/trinodb/trino.git",
                        "ssh_url": "git@github.com:trinodb/trino.git",
                        "clone_url": "https://github.com/trinodb/trino.git",
                        "svn_url": "https://github.com/trinodb/trino",
                        "homepage": "https://trino.io",
                        "size": 197717,
                        "stargazers_count": 6791,
                        "watchers_count": 6791,
                        "language": "Java",
                        "has_issues": true,
                        "has_projects": false,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": true,
                        "forks_count": 2083,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 2092,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "analytics",
                            "big-data",
                            "data-science",
                            "database",
                            "databases",
                            "datalake",
                            "distributed-database",
                            "distributed-databases",
                            "distributed-systems",
                            "hadoop",
                            "hive",
                            "java",
                            "jdbc",
                            "presto",
                            "prestodb",
                            "query-engine",
                            "sql",
                            "trino"
                        ],
                        "visibility": "public",
                        "forks": 2083,
                        "open_issues": 2092,
                        "watchers": 6791,
                        "default_branch": "master"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337"
                    },
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15337"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15337"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15337/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/trinodb/trino/statuses/f88ba0cee83615211a54a7351df5656d7688ae1c"
                    }
                },
                "author_association": "MEMBER",
                "auto_merge": null,
                "active_lock_reason": null,
                "merged": false,
                "mergeable": null,
                "rebaseable": null,
                "mergeable_state": "unknown",
                "merged_by": null,
                "comments": 0,
                "review_comments": 0,
                "maintainer_can_modify": true,
                "commits": 1,
                "additions": 354,
                "deletions": 1,
                "changed_files": 2
            }
        },
        "public": true,
        "created_at": "2022-12-07T17:54:41Z",
        "org": {
            "id": 34147222,
            "login": "trinodb",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/trinodb",
            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?"
        }
    },
    {
        "id": "25727745214",
        "type": "PushEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 509274784,
            "name": "metadaddy/trino",
            "url": "https://api.github.com/repos/metadaddy/trino"
        },
        "payload": {
            "push_id": 11917788963,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/fix-formatdatarate-test",
            "head": "f88ba0cee83615211a54a7351df5656d7688ae1c",
            "before": "a8ca5fe5f1f6a4ed9b00988d1f9db1d06a9d3bf0",
            "commits": [
                {
                    "sha": "f88ba0cee83615211a54a7351df5656d7688ae1c",
                    "author": {
                        "email": "pat@backblaze.com",
                        "name": "Pat Patterson"
                    },
                    "message": "Fix test for invalid rate in FormatUtils.formatDataRate()",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/f88ba0cee83615211a54a7351df5656d7688ae1c"
                }
            ]
        },
        "public": true,
        "created_at": "2022-12-07T17:50:12Z"
    },
    {
        "id": "25727428214",
        "type": "PushEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 509274784,
            "name": "metadaddy/trino",
            "url": "https://api.github.com/repos/metadaddy/trino"
        },
        "payload": {
            "push_id": 11917639194,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/fix-formatdatarate-test",
            "head": "a8ca5fe5f1f6a4ed9b00988d1f9db1d06a9d3bf0",
            "before": "3fa5fb40530b65f9c54c1e5bfd7778be41de9a90",
            "commits": [
                {
                    "sha": "a8ca5fe5f1f6a4ed9b00988d1f9db1d06a9d3bf0",
                    "author": {
                        "email": "pat@backblaze.com",
                        "name": "Pat Patterson"
                    },
                    "message": "Fix test for invalid rate in FormatUtils.formatDataRate()",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/a8ca5fe5f1f6a4ed9b00988d1f9db1d06a9d3bf0"
                }
            ]
        },
        "public": true,
        "created_at": "2022-12-07T17:37:02Z"
    },
    {
        "id": "25727169150",
        "type": "CreateEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 509274784,
            "name": "metadaddy/trino",
            "url": "https://api.github.com/repos/metadaddy/trino"
        },
        "payload": {
            "ref": "fix-formatdatarate-test",
            "ref_type": "branch",
            "master_branch": "master",
            "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
            "pusher_type": "user"
        },
        "public": true,
        "created_at": "2022-12-07T17:26:34Z"
    },
    {
        "id": "25604456116",
        "type": "PullRequestEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 294804856,
            "name": "appwrite/demos-for-react",
            "url": "https://api.github.com/repos/appwrite/demos-for-react"
        },
        "payload": {
            "action": "opened",
            "number": 23,
            "pull_request": {
                "url": "https://api.github.com/repos/appwrite/demos-for-react/pulls/23",
                "id": 1142564849,
                "node_id": "PR_kwDOEZJdeM5EGifx",
                "html_url": "https://github.com/appwrite/demos-for-react/pull/23",
                "diff_url": "https://github.com/appwrite/demos-for-react/pull/23.diff",
                "patch_url": "https://github.com/appwrite/demos-for-react/pull/23.patch",
                "issue_url": "https://api.github.com/repos/appwrite/demos-for-react/issues/23",
                "number": 23,
                "state": "open",
                "locked": false,
                "title": "Add Images with React sample",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "<!--\r\nThank you for sending the PR! We appreciate you spending the time to work on these changes.\r\n\r\nHelp us understand your motivation by explaining why you decided to make this change.\r\n\r\nYou can learn more about contributing to appwrite here: https://github.com/appwrite/appwrite/blob/master/CONTRIBUTING.md\r\n\r\nHappy contributing!\r\n\r\n-->\r\n\r\n## What does this PR do?\r\n\r\nThis PR adds a new sample React app and tutorial showing how to use Appwrite Storage.\r\n\r\n## Test Plan\r\n\r\nAt present, in common with the [Todo with React](https://github.com/appwrite/demo-todo-with-react) sample that this app is based on, there is no test code.\r\n\r\n### Have you read the [Contributing Guidelines on issues](https://github.com/appwrite/appwrite/blob/master/CONTRIBUTING.md)?\r\n\r\nYes!",
                "created_at": "2022-12-01T23:44:44Z",
                "updated_at": "2022-12-01T23:44:44Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": null,
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/appwrite/demos-for-react/pulls/23/commits",
                "review_comments_url": "https://api.github.com/repos/appwrite/demos-for-react/pulls/23/comments",
                "review_comment_url": "https://api.github.com/repos/appwrite/demos-for-react/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/appwrite/demos-for-react/issues/23/comments",
                "statuses_url": "https://api.github.com/repos/appwrite/demos-for-react/statuses/4a226a8bc97d8e739b1915f9199477433ff36d3b",
                "head": {
                    "label": "metadaddy:master",
                    "ref": "master",
                    "sha": "4a226a8bc97d8e739b1915f9199477433ff36d3b",
                    "user": {
                        "login": "metadaddy",
                        "id": 723517,
                        "node_id": "MDQ6VXNlcjcyMzUxNw==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/metadaddy",
                        "html_url": "https://github.com/metadaddy",
                        "followers_url": "https://api.github.com/users/metadaddy/followers",
                        "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                        "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                        "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                        "repos_url": "https://api.github.com/users/metadaddy/repos",
                        "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 573059111,
                        "node_id": "R_kgDOIigwJw",
                        "name": "demos-for-react",
                        "full_name": "metadaddy/demos-for-react",
                        "private": false,
                        "owner": {
                            "login": "metadaddy",
                            "id": 723517,
                            "node_id": "MDQ6VXNlcjcyMzUxNw==",
                            "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/metadaddy",
                            "html_url": "https://github.com/metadaddy",
                            "followers_url": "https://api.github.com/users/metadaddy/followers",
                            "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                            "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                            "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                            "repos_url": "https://api.github.com/users/metadaddy/repos",
                            "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/metadaddy/demos-for-react",
                        "description": "Demos and tutorials for getting started with Appwrite + React JS",
                        "fork": true,
                        "url": "https://api.github.com/repos/metadaddy/demos-for-react",
                        "forks_url": "https://api.github.com/repos/metadaddy/demos-for-react/forks",
                        "keys_url": "https://api.github.com/repos/metadaddy/demos-for-react/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/metadaddy/demos-for-react/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/metadaddy/demos-for-react/teams",
                        "hooks_url": "https://api.github.com/repos/metadaddy/demos-for-react/hooks",
                        "issue_events_url": "https://api.github.com/repos/metadaddy/demos-for-react/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/metadaddy/demos-for-react/events",
                        "assignees_url": "https://api.github.com/repos/metadaddy/demos-for-react/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/metadaddy/demos-for-react/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/metadaddy/demos-for-react/tags",
                        "blobs_url": "https://api.github.com/repos/metadaddy/demos-for-react/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/metadaddy/demos-for-react/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/metadaddy/demos-for-react/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/metadaddy/demos-for-react/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/metadaddy/demos-for-react/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/metadaddy/demos-for-react/languages",
                        "stargazers_url": "https://api.github.com/repos/metadaddy/demos-for-react/stargazers",
                        "contributors_url": "https://api.github.com/repos/metadaddy/demos-for-react/contributors",
                        "subscribers_url": "https://api.github.com/repos/metadaddy/demos-for-react/subscribers",
                        "subscription_url": "https://api.github.com/repos/metadaddy/demos-for-react/subscription",
                        "commits_url": "https://api.github.com/repos/metadaddy/demos-for-react/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/metadaddy/demos-for-react/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/metadaddy/demos-for-react/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/metadaddy/demos-for-react/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/metadaddy/demos-for-react/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/metadaddy/demos-for-react/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/metadaddy/demos-for-react/merges",
                        "archive_url": "https://api.github.com/repos/metadaddy/demos-for-react/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/metadaddy/demos-for-react/downloads",
                        "issues_url": "https://api.github.com/repos/metadaddy/demos-for-react/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/metadaddy/demos-for-react/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/metadaddy/demos-for-react/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/metadaddy/demos-for-react/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/metadaddy/demos-for-react/labels{/name}",
                        "releases_url": "https://api.github.com/repos/metadaddy/demos-for-react/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/metadaddy/demos-for-react/deployments",
                        "created_at": "2022-12-01T15:58:10Z",
                        "updated_at": "2022-12-01T23:29:50Z",
                        "pushed_at": "2022-12-01T23:37:47Z",
                        "git_url": "git://github.com/metadaddy/demos-for-react.git",
                        "ssh_url": "git@github.com:metadaddy/demos-for-react.git",
                        "clone_url": "https://github.com/metadaddy/demos-for-react.git",
                        "svn_url": "https://github.com/metadaddy/demos-for-react",
                        "homepage": "https://appwrite.io",
                        "size": 15299,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": "JavaScript",
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "mit",
                            "name": "MIT License",
                            "spdx_id": "MIT",
                            "url": "https://api.github.com/licenses/mit",
                            "node_id": "MDc6TGljZW5zZTEz"
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "master"
                    }
                },
                "base": {
                    "label": "appwrite:master",
                    "ref": "master",
                    "sha": "24405590c3f7d460b69b2df9c3c80c77d8a05674",
                    "user": {
                        "login": "appwrite",
                        "id": 25003669,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjI1MDAzNjY5",
                        "avatar_url": "https://avatars.githubusercontent.com/u/25003669?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/appwrite",
                        "html_url": "https://github.com/appwrite",
                        "followers_url": "https://api.github.com/users/appwrite/followers",
                        "following_url": "https://api.github.com/users/appwrite/following{/other_user}",
                        "gists_url": "https://api.github.com/users/appwrite/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/appwrite/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/appwrite/subscriptions",
                        "organizations_url": "https://api.github.com/users/appwrite/orgs",
                        "repos_url": "https://api.github.com/users/appwrite/repos",
                        "events_url": "https://api.github.com/users/appwrite/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/appwrite/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 294804856,
                        "node_id": "MDEwOlJlcG9zaXRvcnkyOTQ4MDQ4NTY=",
                        "name": "demos-for-react",
                        "full_name": "appwrite/demos-for-react",
                        "private": false,
                        "owner": {
                            "login": "appwrite",
                            "id": 25003669,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjI1MDAzNjY5",
                            "avatar_url": "https://avatars.githubusercontent.com/u/25003669?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/appwrite",
                            "html_url": "https://github.com/appwrite",
                            "followers_url": "https://api.github.com/users/appwrite/followers",
                            "following_url": "https://api.github.com/users/appwrite/following{/other_user}",
                            "gists_url": "https://api.github.com/users/appwrite/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/appwrite/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/appwrite/subscriptions",
                            "organizations_url": "https://api.github.com/users/appwrite/orgs",
                            "repos_url": "https://api.github.com/users/appwrite/repos",
                            "events_url": "https://api.github.com/users/appwrite/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/appwrite/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/appwrite/demos-for-react",
                        "description": "Demos and tutorials for getting started with Appwrite + React JS",
                        "fork": false,
                        "url": "https://api.github.com/repos/appwrite/demos-for-react",
                        "forks_url": "https://api.github.com/repos/appwrite/demos-for-react/forks",
                        "keys_url": "https://api.github.com/repos/appwrite/demos-for-react/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/appwrite/demos-for-react/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/appwrite/demos-for-react/teams",
                        "hooks_url": "https://api.github.com/repos/appwrite/demos-for-react/hooks",
                        "issue_events_url": "https://api.github.com/repos/appwrite/demos-for-react/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/appwrite/demos-for-react/events",
                        "assignees_url": "https://api.github.com/repos/appwrite/demos-for-react/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/appwrite/demos-for-react/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/appwrite/demos-for-react/tags",
                        "blobs_url": "https://api.github.com/repos/appwrite/demos-for-react/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/appwrite/demos-for-react/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/appwrite/demos-for-react/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/appwrite/demos-for-react/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/appwrite/demos-for-react/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/appwrite/demos-for-react/languages",
                        "stargazers_url": "https://api.github.com/repos/appwrite/demos-for-react/stargazers",
                        "contributors_url": "https://api.github.com/repos/appwrite/demos-for-react/contributors",
                        "subscribers_url": "https://api.github.com/repos/appwrite/demos-for-react/subscribers",
                        "subscription_url": "https://api.github.com/repos/appwrite/demos-for-react/subscription",
                        "commits_url": "https://api.github.com/repos/appwrite/demos-for-react/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/appwrite/demos-for-react/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/appwrite/demos-for-react/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/appwrite/demos-for-react/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/appwrite/demos-for-react/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/appwrite/demos-for-react/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/appwrite/demos-for-react/merges",
                        "archive_url": "https://api.github.com/repos/appwrite/demos-for-react/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/appwrite/demos-for-react/downloads",
                        "issues_url": "https://api.github.com/repos/appwrite/demos-for-react/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/appwrite/demos-for-react/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/appwrite/demos-for-react/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/appwrite/demos-for-react/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/appwrite/demos-for-react/labels{/name}",
                        "releases_url": "https://api.github.com/repos/appwrite/demos-for-react/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/appwrite/demos-for-react/deployments",
                        "created_at": "2020-09-11T20:21:55Z",
                        "updated_at": "2022-11-22T14:03:03Z",
                        "pushed_at": "2022-12-01T23:44:45Z",
                        "git_url": "git://github.com/appwrite/demos-for-react.git",
                        "ssh_url": "git@github.com:appwrite/demos-for-react.git",
                        "clone_url": "https://github.com/appwrite/demos-for-react.git",
                        "svn_url": "https://github.com/appwrite/demos-for-react",
                        "homepage": "https://appwrite.io",
                        "size": 15299,
                        "stargazers_count": 46,
                        "watchers_count": 46,
                        "language": "JavaScript",
                        "has_issues": true,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 26,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 6,
                        "license": {
                            "key": "mit",
                            "name": "MIT License",
                            "spdx_id": "MIT",
                            "url": "https://api.github.com/licenses/mit",
                            "node_id": "MDc6TGljZW5zZTEz"
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "appwrite",
                            "hacktoberfest",
                            "react",
                            "reactjs"
                        ],
                        "visibility": "public",
                        "forks": 26,
                        "open_issues": 6,
                        "watchers": 46,
                        "default_branch": "master"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/appwrite/demos-for-react/pulls/23"
                    },
                    "html": {
                        "href": "https://github.com/appwrite/demos-for-react/pull/23"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/appwrite/demos-for-react/issues/23"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/appwrite/demos-for-react/issues/23/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/appwrite/demos-for-react/pulls/23/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/appwrite/demos-for-react/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/appwrite/demos-for-react/pulls/23/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/appwrite/demos-for-react/statuses/4a226a8bc97d8e739b1915f9199477433ff36d3b"
                    }
                },
                "author_association": "NONE",
                "auto_merge": null,
                "active_lock_reason": null,
                "merged": false,
                "mergeable": null,
                "rebaseable": null,
                "mergeable_state": "unknown",
                "merged_by": null,
                "comments": 0,
                "review_comments": 0,
                "maintainer_can_modify": true,
                "commits": 1,
                "additions": 41352,
                "deletions": 2,
                "changed_files": 37
            }
        },
        "public": true,
        "created_at": "2022-12-01T23:44:45Z",
        "org": {
            "id": 25003669,
            "login": "appwrite",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/appwrite",
            "avatar_url": "https://avatars.githubusercontent.com/u/25003669?"
        }
    },
    {
        "id": "25604373520",
        "type": "PushEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 573059111,
            "name": "metadaddy/demos-for-react",
            "url": "https://api.github.com/repos/metadaddy/demos-for-react"
        },
        "payload": {
            "push_id": 11854639616,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/master",
            "head": "4a226a8bc97d8e739b1915f9199477433ff36d3b",
            "before": "0162e33140f1342dbfb9b8cb3a700b7e9bc50536",
            "commits": [
                {
                    "sha": "4a226a8bc97d8e739b1915f9199477433ff36d3b",
                    "author": {
                        "email": "pat@backblaze.com",
                        "name": "Pat Patterson"
                    },
                    "message": "Add Images with React sample",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/demos-for-react/commits/4a226a8bc97d8e739b1915f9199477433ff36d3b"
                }
            ]
        },
        "public": true,
        "created_at": "2022-12-01T23:37:47Z"
    },
    {
        "id": "25604361672",
        "type": "PushEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 573059111,
            "name": "metadaddy/demos-for-react",
            "url": "https://api.github.com/repos/metadaddy/demos-for-react"
        },
        "payload": {
            "push_id": 11854633166,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/master",
            "head": "0162e33140f1342dbfb9b8cb3a700b7e9bc50536",
            "before": "4461553bf33da9b01dd0cd3507b87c87b1e15c3e",
            "commits": [
                {
                    "sha": "0162e33140f1342dbfb9b8cb3a700b7e9bc50536",
                    "author": {
                        "email": "pat@backblaze.com",
                        "name": "Pat Patterson"
                    },
                    "message": "Add Images with React sample",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/demos-for-react/commits/0162e33140f1342dbfb9b8cb3a700b7e9bc50536"
                }
            ]
        },
        "public": true,
        "created_at": "2022-12-01T23:36:47Z"
    },
    {
        "id": "25604294607",
        "type": "PushEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 573059111,
            "name": "metadaddy/demos-for-react",
            "url": "https://api.github.com/repos/metadaddy/demos-for-react"
        },
        "payload": {
            "push_id": 11854596843,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/master",
            "head": "4461553bf33da9b01dd0cd3507b87c87b1e15c3e",
            "before": "7f467b41101e883ff580d8adb5775d6f1e9e7860",
            "commits": [
                {
                    "sha": "4461553bf33da9b01dd0cd3507b87c87b1e15c3e",
                    "author": {
                        "email": "pat@backblaze.com",
                        "name": "Pat Patterson"
                    },
                    "message": "Add Images with React sample",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/demos-for-react/commits/4461553bf33da9b01dd0cd3507b87c87b1e15c3e"
                }
            ]
        },
        "public": true,
        "created_at": "2022-12-01T23:31:12Z"
    },
    {
        "id": "25604277199",
        "type": "PushEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 573059111,
            "name": "metadaddy/demos-for-react",
            "url": "https://api.github.com/repos/metadaddy/demos-for-react"
        },
        "payload": {
            "push_id": 11854587308,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/master",
            "head": "7f467b41101e883ff580d8adb5775d6f1e9e7860",
            "before": "24405590c3f7d460b69b2df9c3c80c77d8a05674",
            "commits": [
                {
                    "sha": "7f467b41101e883ff580d8adb5775d6f1e9e7860",
                    "author": {
                        "email": "pat@backblaze.com",
                        "name": "Pat Patterson"
                    },
                    "message": "Add Images with React sample",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/demos-for-react/commits/7f467b41101e883ff580d8adb5775d6f1e9e7860"
                }
            ]
        },
        "public": true,
        "created_at": "2022-12-01T23:29:47Z"
    },
    {
        "id": "25595578683",
        "type": "ForkEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 294804856,
            "name": "appwrite/demos-for-react",
            "url": "https://api.github.com/repos/appwrite/demos-for-react"
        },
        "payload": {
            "forkee": {
                "id": 573059111,
                "node_id": "R_kgDOIigwJw",
                "name": "demos-for-react",
                "full_name": "metadaddy/demos-for-react",
                "private": false,
                "owner": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "html_url": "https://github.com/metadaddy/demos-for-react",
                "description": "Demos and tutorials for getting started with Appwrite + React JS",
                "fork": true,
                "url": "https://api.github.com/repos/metadaddy/demos-for-react",
                "forks_url": "https://api.github.com/repos/metadaddy/demos-for-react/forks",
                "keys_url": "https://api.github.com/repos/metadaddy/demos-for-react/keys{/key_id}",
                "collaborators_url": "https://api.github.com/repos/metadaddy/demos-for-react/collaborators{/collaborator}",
                "teams_url": "https://api.github.com/repos/metadaddy/demos-for-react/teams",
                "hooks_url": "https://api.github.com/repos/metadaddy/demos-for-react/hooks",
                "issue_events_url": "https://api.github.com/repos/metadaddy/demos-for-react/issues/events{/number}",
                "events_url": "https://api.github.com/repos/metadaddy/demos-for-react/events",
                "assignees_url": "https://api.github.com/repos/metadaddy/demos-for-react/assignees{/user}",
                "branches_url": "https://api.github.com/repos/metadaddy/demos-for-react/branches{/branch}",
                "tags_url": "https://api.github.com/repos/metadaddy/demos-for-react/tags",
                "blobs_url": "https://api.github.com/repos/metadaddy/demos-for-react/git/blobs{/sha}",
                "git_tags_url": "https://api.github.com/repos/metadaddy/demos-for-react/git/tags{/sha}",
                "git_refs_url": "https://api.github.com/repos/metadaddy/demos-for-react/git/refs{/sha}",
                "trees_url": "https://api.github.com/repos/metadaddy/demos-for-react/git/trees{/sha}",
                "statuses_url": "https://api.github.com/repos/metadaddy/demos-for-react/statuses/{sha}",
                "languages_url": "https://api.github.com/repos/metadaddy/demos-for-react/languages",
                "stargazers_url": "https://api.github.com/repos/metadaddy/demos-for-react/stargazers",
                "contributors_url": "https://api.github.com/repos/metadaddy/demos-for-react/contributors",
                "subscribers_url": "https://api.github.com/repos/metadaddy/demos-for-react/subscribers",
                "subscription_url": "https://api.github.com/repos/metadaddy/demos-for-react/subscription",
                "commits_url": "https://api.github.com/repos/metadaddy/demos-for-react/commits{/sha}",
                "git_commits_url": "https://api.github.com/repos/metadaddy/demos-for-react/git/commits{/sha}",
                "comments_url": "https://api.github.com/repos/metadaddy/demos-for-react/comments{/number}",
                "issue_comment_url": "https://api.github.com/repos/metadaddy/demos-for-react/issues/comments{/number}",
                "contents_url": "https://api.github.com/repos/metadaddy/demos-for-react/contents/{+path}",
                "compare_url": "https://api.github.com/repos/metadaddy/demos-for-react/compare/{base}...{head}",
                "merges_url": "https://api.github.com/repos/metadaddy/demos-for-react/merges",
                "archive_url": "https://api.github.com/repos/metadaddy/demos-for-react/{archive_format}{/ref}",
                "downloads_url": "https://api.github.com/repos/metadaddy/demos-for-react/downloads",
                "issues_url": "https://api.github.com/repos/metadaddy/demos-for-react/issues{/number}",
                "pulls_url": "https://api.github.com/repos/metadaddy/demos-for-react/pulls{/number}",
                "milestones_url": "https://api.github.com/repos/metadaddy/demos-for-react/milestones{/number}",
                "notifications_url": "https://api.github.com/repos/metadaddy/demos-for-react/notifications{?since,all,participating}",
                "labels_url": "https://api.github.com/repos/metadaddy/demos-for-react/labels{/name}",
                "releases_url": "https://api.github.com/repos/metadaddy/demos-for-react/releases{/id}",
                "deployments_url": "https://api.github.com/repos/metadaddy/demos-for-react/deployments",
                "created_at": "2022-12-01T15:58:10Z",
                "updated_at": "2022-11-22T14:03:03Z",
                "pushed_at": "2022-11-18T01:07:58Z",
                "git_url": "git://github.com/metadaddy/demos-for-react.git",
                "ssh_url": "git@github.com:metadaddy/demos-for-react.git",
                "clone_url": "https://github.com/metadaddy/demos-for-react.git",
                "svn_url": "https://github.com/metadaddy/demos-for-react",
                "homepage": "https://appwrite.io",
                "size": 15299,
                "stargazers_count": 0,
                "watchers_count": 0,
                "language": null,
                "has_issues": false,
                "has_projects": true,
                "has_downloads": true,
                "has_wiki": true,
                "has_pages": false,
                "has_discussions": false,
                "forks_count": 0,
                "mirror_url": null,
                "archived": false,
                "disabled": false,
                "open_issues_count": 0,
                "license": {
                    "key": "mit",
                    "name": "MIT License",
                    "spdx_id": "MIT",
                    "url": "https://api.github.com/licenses/mit",
                    "node_id": "MDc6TGljZW5zZTEz"
                },
                "allow_forking": true,
                "is_template": false,
                "web_commit_signoff_required": false,
                "topics": [],
                "visibility": "public",
                "forks": 0,
                "open_issues": 0,
                "watchers": 0,
                "default_branch": "master",
                "public": true
            }
        },
        "public": true,
        "created_at": "2022-12-01T15:58:11Z",
        "org": {
            "id": 25003669,
            "login": "appwrite",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/appwrite",
            "avatar_url": "https://avatars.githubusercontent.com/u/25003669?"
        }
    },
    {
        "id": "25577124268",
        "type": "PushEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 567902821,
            "name": "backblaze-b2-samples/cloudflare-b2",
            "url": "https://api.github.com/repos/backblaze-b2-samples/cloudflare-b2"
        },
        "payload": {
            "push_id": 11841034209,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/main",
            "head": "289e15eac44d52ba1592fbeca3a69cd472142aa2",
            "before": "ff556be29f8e8295fb9672a4aa4b0db4ba962444",
            "commits": [
                {
                    "sha": "289e15eac44d52ba1592fbeca3a69cd472142aa2",
                    "author": {
                        "email": "pat@backblaze.com",
                        "name": "Pat Patterson"
                    },
                    "message": "Add ALLOW_LIST_BUCKET",
                    "distinct": true,
                    "url": "https://api.github.com/repos/backblaze-b2-samples/cloudflare-b2/commits/289e15eac44d52ba1592fbeca3a69cd472142aa2"
                }
            ]
        },
        "public": true,
        "created_at": "2022-11-30T23:24:21Z",
        "org": {
            "id": 17604039,
            "login": "backblaze-b2-samples",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/backblaze-b2-samples",
            "avatar_url": "https://avatars.githubusercontent.com/u/17604039?"
        }
    },
    {
        "id": "25573284296",
        "type": "IssuesEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 166515022,
            "name": "trinodb/trino",
            "url": "https://api.github.com/repos/trinodb/trino"
        },
        "payload": {
            "action": "opened",
            "issue": {
                "url": "https://api.github.com/repos/trinodb/trino/issues/15259",
                "repository_url": "https://api.github.com/repos/trinodb/trino",
                "labels_url": "https://api.github.com/repos/trinodb/trino/issues/15259/labels{/name}",
                "comments_url": "https://api.github.com/repos/trinodb/trino/issues/15259/comments",
                "events_url": "https://api.github.com/repos/trinodb/trino/issues/15259/events",
                "html_url": "https://github.com/trinodb/trino/issues/15259",
                "id": 1470129150,
                "node_id": "I_kwDOCezRTs5XoGP-",
                "number": 15259,
                "title": "Document how the Hive connector can anonymously access a public S3 bucket",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 0,
                "created_at": "2022-11-30T19:37:12Z",
                "updated_at": "2022-11-30T19:37:12Z",
                "closed_at": null,
                "author_association": "MEMBER",
                "active_lock_reason": null,
                "body": "Issue #6127 requested a mechanism to allow the Hive connector to anonymously access a public S3 bucket. It turns out that it is possible to achieve this via configuration:\r\n\r\nIn the catalog properties, specify the `NoOpSigner` for anonymous S3 requests from the connector:\r\n\r\n```\r\nhive.s3.signer-class=com.amazonaws.auth.NoOpSigner\r\n```\r\n\r\nAnd, in `conf/metastore-site.xml`, specify the `AnonymousAWSCredentialsProvider`, either globally or on a per-bucket basis:\r\n\r\n```xml\r\n<!-- Global configuration -->\r\n<property>\r\n    <name>fs.s3a.aws.credentials.provider</name>\r\n    <value>org.apache.hadoop.fs.s3a.AnonymousAWSCredentialsProvider</value>\r\n</property>\r\n```\r\n\r\nor\r\n\r\n```xml\r\n<!-- Per-bucket configuration -->\r\n<property>\r\n    <name>fs.s3a.bucket.BUCKETNAME.aws.credentials.provider</name>\r\n    <value>org.apache.hadoop.fs.s3a.AnonymousAWSCredentialsProvider</value>\r\n</property>\r\n```",
                "reactions": {
                    "url": "https://api.github.com/repos/trinodb/trino/issues/15259/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/trinodb/trino/issues/15259/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            }
        },
        "public": true,
        "created_at": "2022-11-30T19:37:12Z",
        "org": {
            "id": 34147222,
            "login": "trinodb",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/trinodb",
            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?"
        }
    },
    {
        "id": "25572758687",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 166515022,
            "name": "trinodb/trino",
            "url": "https://api.github.com/repos/trinodb/trino"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/trinodb/trino/issues/6127",
                "repository_url": "https://api.github.com/repos/trinodb/trino",
                "labels_url": "https://api.github.com/repos/trinodb/trino/issues/6127/labels{/name}",
                "comments_url": "https://api.github.com/repos/trinodb/trino/issues/6127/comments",
                "events_url": "https://api.github.com/repos/trinodb/trino/issues/6127/events",
                "html_url": "https://github.com/trinodb/trino/issues/6127",
                "id": 752511898,
                "node_id": "MDU6SXNzdWU3NTI1MTE4OTg=",
                "number": 6127,
                "title": "Support public S3 bucket access (unsigned requests/anonymousCredentials)",
                "user": {
                    "login": "tooptoop4",
                    "id": 33283496,
                    "node_id": "MDQ6VXNlcjMzMjgzNDk2",
                    "avatar_url": "https://avatars.githubusercontent.com/u/33283496?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/tooptoop4",
                    "html_url": "https://github.com/tooptoop4",
                    "followers_url": "https://api.github.com/users/tooptoop4/followers",
                    "following_url": "https://api.github.com/users/tooptoop4/following{/other_user}",
                    "gists_url": "https://api.github.com/users/tooptoop4/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/tooptoop4/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/tooptoop4/subscriptions",
                    "organizations_url": "https://api.github.com/users/tooptoop4/orgs",
                    "repos_url": "https://api.github.com/users/tooptoop4/repos",
                    "events_url": "https://api.github.com/users/tooptoop4/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/tooptoop4/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 1,
                "created_at": "2020-11-28T00:14:35Z",
                "updated_at": "2022-11-30T19:08:26Z",
                "closed_at": null,
                "author_association": "CONTRIBUTOR",
                "active_lock_reason": null,
                "body": "1. - https://github.com/prestosql/presto/pull/6131  for below:\r\n\r\nhow to make presto read data from a public s3 bucket? ie the details on https://registry.opendata.aws/deutsche-boerse-pds/.  when I try to create external table it complains that s3 access key/secret key must be provided. But AWS CLI commands work\r\n\r\n\"We would need equivalent of --no-sign-request probably\"\r\n\r\nSome research:\r\nhttps://issues.apache.org/jira/browse/HADOOP-13237\r\nhttps://github.com/aws/aws-sdk-java/issues/1122\r\n\r\nMy guess would be https://github.com/prestosql/presto/blob/347/presto-hive/src/main/java/io/prestosql/plugin/hive/s3/PrestoS3FileSystem.java#L891 adding a check if certain config set then use AnonymousAWSCredentialsProvider\r\n\r\n2. hive.s3.endpoint=https://s3.amazonaws.com or not setting hive.s3.endpoint solves below:\r\n\r\nDifferent public datasets are in different regions. ie https://registry.opendata.aws/rapid7-fdns-any/ and https://registry.opendata.aws/fsf-flood-risk/\r\na) creating a separate presto catalog per s3 region does not feel right. It can lead to a clutter of catalogs being setup (with less than 5 tables each catalog), need to bounce presto server and users will need to lookup system.jdbc.tables to know which public dataset belongs to each catalog, whereas if CREATE TABLE syntax accepted s3 region argument then there could be single presto catalog for all s3 datasets. Or 2nd-best would be one presto catalog for company's private s3 (let's assume its single region) and a different catalog for public s3 (can be across many regions, ie us-west-2, us-east-1, eu-central-1..etc)\r\nb) perhaps defining region can be completely optional? ie aws s3 ls s3://deutsche-boerse-eurex-pds/ --no-sign-request works without specifying any region\r\n\r\n3. - https://github.com/prestosql/presto/pull/6182 for below:\r\n\r\nthis particular dataset does not follow hive style partitioning ie it uses s3://deutsche-boerse-eurex-pds/2020-11-26/ instead of s3://deutsche-boerse-eurex-pds/mystringcolumnname=2020-11-26/\r\ncan presto still interpret all these partitions positionally ie if it is one folder deep and my table DDL has partitioned_by = ARRAY['mystringcolumnname']? using single command to sync all partitions, else I can fallback to manual ADD PARTITION for each one with full path\r\n\r\n\r\nAPPENDIX for point 1\r\n1. trying to create table in hiveserver2\r\nError: org.apache.hive.service.cli.HiveSQLException: Error while processing statement: FAILED: Execution Error, return code 1 from org.apache.hadoop.hive.ql.exec.DDLTask. MetaException(message:com.amazonaws.AmazonClientException: Unable to load AWS credentials from any provider in the chain)\r\n\tat org.apache.hive.service.cli.operation.Operation.toSQLException(Operation.java:380)\r\n\tat org.apache.hive.service.cli.operation.SQLOperation.runQuery(SQLOperation.java:257)\r\n\tat org.apache.hive.service.cli.operation.SQLOperation.access$800(SQLOperation.java:91)\r\n\tat org.apache.hive.service.cli.operation.SQLOperation$BackgroundWork$1.run(SQLOperation.java:348)\r\n\tat java.security.AccessController.doPrivileged(Native Method)\r\n\tat javax.security.auth.Subject.doAs(Subject.java:422)\r\n\tat org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1657)\r\n\tat org.apache.hive.service.cli.operation.SQLOperation$BackgroundWork.run(SQLOperation.java:362)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.hadoop.hive.ql.metadata.HiveException: MetaException(message:com.amazonaws.AmazonClientException: Unable to load AWS credentials from any provider in the chain)\r\n\tat org.apache.hadoop.hive.ql.metadata.Hive.createTable(Hive.java:862)\r\n\tat org.apache.hadoop.hive.ql.metadata.Hive.createTable(Hive.java:867)\r\n\tat org.apache.hadoop.hive.ql.exec.DDLTask.createTable(DDLTask.java:4356)\r\n\tat org.apache.hadoop.hive.ql.exec.DDLTask.execute(DDLTask.java:354)\r\n\tat org.apache.hadoop.hive.ql.exec.Task.executeTask(Task.java:199)\r\n\tat org.apache.hadoop.hive.ql.exec.TaskRunner.runSequential(TaskRunner.java:100)\r\n\tat org.apache.hadoop.hive.ql.Driver.launchTask(Driver.java:2183)\r\n\tat org.apache.hadoop.hive.ql.Driver.execute(Driver.java:1839)\r\n\tat org.apache.hadoop.hive.ql.Driver.runInternal(Driver.java:1526)\r\n\tat org.apache.hadoop.hive.ql.Driver.run(Driver.java:1237)\r\n\tat org.apache.hadoop.hive.ql.Driver.run(Driver.java:1232)\r\n\tat org.apache.hive.service.cli.operation.SQLOperation.runQuery(SQLOperation.java:255)\r\n\t... 11 more\r\nCaused by: MetaException(message:com.amazonaws.AmazonClientException: Unable to load AWS credentials from any provider in the chain)\r\n\tat org.apache.hadoop.hive.metastore.api.ThriftHiveMetastore$create_table_with_environment_context_result$create_table_with_environment_context_resultStandardScheme.read(ThriftHiveMetastore.java:42070)\r\n\tat org.apache.hadoop.hive.metastore.api.ThriftHiveMetastore$create_table_with_environment_context_result$create_table_with_environment_context_resultStandardScheme.read(ThriftHiveMetastore.java:42038)\r\n\tat org.apache.hadoop.hive.metastore.api.ThriftHiveMetastore$create_table_with_environment_context_result.read(ThriftHiveMetastore.java:41964)\r\n\tat org.apache.thrift.TServiceClient.receiveBase(TServiceClient.java:86)\r\n\tat org.apache.hadoop.hive.metastore.api.ThriftHiveMetastore$Client.recv_create_table_with_environment_context(ThriftHiveMetastore.java:1199)\r\n\tat org.apache.hadoop.hive.metastore.api.ThriftHiveMetastore$Client.create_table_with_environment_context(ThriftHiveMetastore.java:1185)\r\n\tat org.apache.hadoop.hive.metastore.HiveMetaStoreClient.create_table_with_environment_context(HiveMetaStoreClient.java:2399)\r\n\tat org.apache.hadoop.hive.ql.metadata.SessionHiveMetaStoreClient.create_table_with_environment_context(SessionHiveMetaStoreClient.java:93)\r\n\tat org.apache.hadoop.hive.metastore.HiveMetaStoreClient.createTable(HiveMetaStoreClient.java:752)\r\n\tat org.apache.hadoop.hive.metastore.HiveMetaStoreClient.createTable(HiveMetaStoreClient.java:740)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.apache.hadoop.hive.metastore.RetryingMetaStoreClient.invoke(RetryingMetaStoreClient.java:173)\r\n\tat com.sun.proxy.$Proxy27.createTable(Unknown Source)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.apache.hadoop.hive.metastore.HiveMetaStoreClient$SynchronizedHandler.invoke(HiveMetaStoreClient.java:2330)\r\n\tat com.sun.proxy.$Proxy27.createTable(Unknown Source)\r\n\tat org.apache.hadoop.hive.ql.metadata.Hive.createTable(Hive.java:852)\r\n\t... 22 more (state=08S01,code=1)\r\n2. add <property>\r\n        <name>fs.s3a.aws.credentials.provider</name>\r\n        <value>org.apache.hadoop.fs.s3a.AnonymousAWSCredentialsProvider</value>\r\n      </property> to hive-site.xml\r\n3. create table in hiveserver2 and select from table in hiveserver2 works\r\n4. select from table in presto gives this error:\r\nio.prestosql.spi.PrestoException: Unable to load AWS credentials from any provider in the chain: [EnvironmentVariableCredentialsProvider: Unable to load AWS credentials from environment variables (AWS_ACCESS_KEY_ID (or AWS_ACCESS_KEY) and AWS_SECRET_KEY (or AWS_SECRET_ACCESS_KEY)), SystemPropertiesCredentialsProvider: Unable to load AWS credentials from Java system properties (aws.accessKeyId and aws.secretKey), com.amazonaws.auth.profile.ProfileCredentialsProvider@1037c40f: profile file cannot be null, com.amazonaws.auth.EC2ContainerCredentialsProviderWrapper@28877425: Unable to load credentials from service endpoint]\r\n        \tat io.prestosql.plugin.hive.BackgroundHiveSplitLoader$HiveSplitLoaderTask.process(BackgroundHiveSplitLoader.java:207)\r\n        \tat io.prestosql.plugin.hive.util.ResumableTasks.safeProcessTask(ResumableTasks.java:47)\r\n        \tat io.prestosql.plugin.hive.util.ResumableTasks.access$000(ResumableTasks.java:20)\r\n        \tat io.prestosql.plugin.hive.util.ResumableTasks$1.run(ResumableTasks.java:35)\r\n        \tat io.prestosql.$gen.Presto_318____20201128_084331_1.run(Unknown Source)\r\n        \tat io.airlift.concurrent.BoundedExecutor.drainQueue(BoundedExecutor.java:78)\r\n        \tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n        \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n        \tat java.lang.Thread.run(Thread.java:748)\r\n        Caused by: com.amazonaws.SdkClientException: Unable to load AWS credentials from any provider in the chain: [EnvironmentVariableCredentialsProvider: Unable to load AWS credentials from environment variables (AWS_ACCESS_KEY_ID (or AWS_ACCESS_KEY) and AWS_SECRET_KEY (or AWS_SECRET_ACCESS_KEY)), SystemPropertiesCredentialsProvider: Unable to load AWS credentials from Java system properties (aws.accessKeyId and aws.secretKey), com.amazonaws.auth.profile.ProfileCredentialsProvider@1037c40f: profile file cannot be null, com.amazonaws.auth.EC2ContainerCredentialsProviderWrapper@28877425: Unable to load credentials from service endpoint]\r\n        \tat com.amazonaws.auth.AWSCredentialsProviderChain.getCredentials(AWSCredentialsProviderChain.java:136)\r\n        \tat com.amazonaws.http.AmazonHttpClient$RequestExecutor.getCredentialsFromContext(AmazonHttpClient.java:1225)\r\n        \tat com.amazonaws.http.AmazonHttpClient$RequestExecutor.runBeforeRequestHandlers(AmazonHttpClient.java:801)\r\n        \tat com.amazonaws.http.AmazonHttpClient$RequestExecutor.doExecute(AmazonHttpClient.java:751)\r\n        \tat com.amazonaws.http.AmazonHttpClient$RequestExecutor.executeWithTimer(AmazonHttpClient.java:744)\r\n        \tat com.amazonaws.http.AmazonHttpClient$RequestExecutor.execute(AmazonHttpClient.java:726)\r\n        \tat com.amazonaws.http.AmazonHttpClient$RequestExecutor.access$500(AmazonHttpClient.java:686)\r\n        \tat com.amazonaws.http.AmazonHttpClient$RequestExecutionBuilderImpl.execute(AmazonHttpClient.java:668)\r\n        \tat com.amazonaws.http.AmazonHttpClient.execute(AmazonHttpClient.java:532)\r\n        \tat com.amazonaws.http.AmazonHttpClient.execute(AmazonHttpClient.java:512)\r\n        \tat com.amazonaws.services.s3.AmazonS3Client.invoke(AmazonS3Client.java:4921)\r\n        \tat com.amazonaws.services.s3.AmazonS3Client.invoke(AmazonS3Client.java:4867)\r\n        \tat com.amazonaws.services.s3.AmazonS3Client.invoke(AmazonS3Client.java:4861)\r\n        \tat com.amazonaws.services.s3.AmazonS3Client.listObjects(AmazonS3Client.java:880)\r\n        \tat io.prestosql.plugin.hive.s3.PrestoS3FileSystem.listPrefix(PrestoS3FileSystem.java:524)\r\n        \tat io.prestosql.plugin.hive.s3.PrestoS3FileSystem.access$000(PrestoS3FileSystem.java:132)\r\n        \tat io.prestosql.plugin.hive.s3.PrestoS3FileSystem$1.<init>(PrestoS3FileSystem.java:304)\r\n        \tat io.prestosql.plugin.hive.s3.PrestoS3FileSystem.listLocatedStatus(PrestoS3FileSystem.java:302)\r\n        \tat org.apache.hadoop.fs.FilterFileSystem.listLocatedStatus(FilterFileSystem.java:283)\r\n        \tat io.prestosql.plugin.hive.CachingDirectoryLister.list(CachingDirectoryLister.java:81)\r\n        \tat io.prestosql.plugin.hive.util.HiveFileIterator$FileStatusIterator.<init>(HiveFileIterator.java:134)\r\n        \tat io.prestosql.plugin.hive.util.HiveFileIterator$FileStatusIterator.<init>(HiveFileIterator.java:122)\r\n        \tat io.prestosql.plugin.hive.util.HiveFileIterator.getLocatedFileStatusRemoteIterator(HiveFileIterator.java:111)\r\n        \tat io.prestosql.plugin.hive.util.HiveFileIterator.computeNext(HiveFileIterator.java:104)\r\n        \tat io.prestosql.plugin.hive.util.HiveFileIterator.computeNext(HiveFileIterator.java:38)\r\n        \tat com.google.common.collect.AbstractIterator.tryToComputeNext(AbstractIterator.java:141)\r\n        \tat com.google.common.collect.AbstractIterator.hasNext(AbstractIterator.java:136)\r\n        \tat java.util.Spliterators$IteratorSpliterator.tryAdvance(Spliterators.java:1811)\r\n        \tat java.util.stream.StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0(StreamSpliterators.java:295)\r\n        \tat java.util.stream.StreamSpliterators$AbstractWrappingSpliterator.fillBuffer(StreamSpliterators.java:207)\r\n        \tat java.util.stream.StreamSpliterators$AbstractWrappingSpliterator.doAdvance(StreamSpliterators.java:162)\r\n        \tat java.util.stream.StreamSpliterators$WrappingSpliterator.tryAdvance(StreamSpliterators.java:301)\r\n        \tat java.util.Spliterators$1Adapter.hasNext(Spliterators.java:681)\r\n        \tat io.prestosql.plugin.hive.BackgroundHiveSplitLoader.loadSplits(BackgroundHiveSplitLoader.java:274)\r\n        \tat io.prestosql.plugin.hive.BackgroundHiveSplitLoader.access$300(BackgroundHiveSplitLoader.java:100)\r\n        \tat io.prestosql.plugin.hive.BackgroundHiveSplitLoader$HiveSplitLoaderTask.process(BackgroundHiveSplitLoader.java:200)\r\n        \t... 8 more\r\n5. try create within presto gives:\r\n      io.prestosql.spi.PrestoException: java.lang.IllegalArgumentException: AWS Access Key ID and Secret Access Key must be specified by setting the fs.s3.awsAccessKeyId and fs.s3.awsSecretAccessKey properties (respectively).\r\n\tat io.prestosql.plugin.hive.metastore.thrift.ThriftHiveMetastore.createTable(ThriftHiveMetastore.java:862)\r\n\tat io.prestosql.plugin.hive.metastore.thrift.BridgingHiveMetastore.createTable(BridgingHiveMetastore.java:164)\r\n\tat io.prestosql.plugin.hive.metastore.cache.CachingHiveMetastore.createTable(CachingHiveMetastore.java:431)\r\n\tat io.prestosql.plugin.hive.metastore.cache.CachingHiveMetastore.createTable(CachingHiveMetastore.java:431)\r\n\tat io.prestosql.plugin.hive.metastore.SemiTransactionalHiveMetastore$CreateTableOperation.run(SemiTransactionalHiveMetastore.java:2404)\r\n\tat io.prestosql.plugin.hive.metastore.SemiTransactionalHiveMetastore$Committer.executeAddTableOperations(SemiTransactionalHiveMetastore.java:1424)\r\n\tat io.prestosql.plugin.hive.metastore.SemiTransactionalHiveMetastore$Committer.access$1000(SemiTransactionalHiveMetastore.java:1043)\r\n\tat io.prestosql.plugin.hive.metastore.SemiTransactionalHiveMetastore.commitShared(SemiTransactionalHiveMetastore.java:986)\r\n\tat io.prestosql.plugin.hive.metastore.SemiTransactionalHiveMetastore.commit(SemiTransactionalHiveMetastore.java:891)\r\n\tat io.prestosql.plugin.hive.HiveMetadata.commit(HiveMetadata.java:2212)\r\n\tat io.prestosql.plugin.hive.HiveConnector.commit(HiveConnector.java:198)\r\n\tat io.prestosql.transaction.InMemoryTransactionManager$TransactionMetadata$ConnectorTransactionMetadata.commit(InMemoryTransactionManager.java:595)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat com.google.common.util.concurrent.TrustedListenableFutureTask$TrustedFutureInterruptibleTask.runInterruptibly(TrustedListenableFutureTask.java:125)\r\n\tat com.google.common.util.concurrent.InterruptibleTask.run(InterruptibleTask.java:57)\r\n\tat com.google.common.util.concurrent.TrustedListenableFutureTask.run(TrustedListenableFutureTask.java:78)\r\n\tat io.airlift.concurrent.BoundedExecutor.drainQueue(BoundedExecutor.java:78)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.hadoop.hive.metastore.api.MetaException: java.lang.IllegalArgumentException: AWS Access Key ID and Secret Access Key must be specified by setting the fs.s3.awsAccessKeyId and fs.s3.awsSecretAccessKey properties (respectively).\r\n\tat org.apache.hadoop.hive.metastore.api.ThriftHiveMetastore$create_table_result$create_table_resultStandardScheme.read(ThriftHiveMetastore.java:52658)\r\n\tat org.apache.hadoop.hive.metastore.api.ThriftHiveMetastore$create_table_result$create_table_resultStandardScheme.read(ThriftHiveMetastore.java:52626)\r\n\tat org.apache.hadoop.hive.metastore.api.ThriftHiveMetastore$create_table_result.read(ThriftHiveMetastore.java:52552)\r\n\tat org.apache.thrift.TServiceClient.receiveBase(TServiceClient.java:86)\r\n\tat org.apache.hadoop.hive.metastore.api.ThriftHiveMetastore$Client.recv_create_table(ThriftHiveMetastore.java:1490)\r\n\tat org.apache.hadoop.hive.metastore.api.ThriftHiveMetastore$Client.create_table(ThriftHiveMetastore.java:1477)\r\n\tat io.prestosql.plugin.hive.metastore.thrift.ThriftHiveMetastoreClient.createTable(ThriftHiveMetastoreClient.java:135)\r\n\tat io.prestosql.plugin.hive.metastore.thrift.ThriftHiveMetastore.lambda$createTable$36(ThriftHiveMetastore.java:850)\r\n\tat io.prestosql.plugin.hive.metastore.thrift.ThriftMetastoreApiStats.lambda$wrap$0(ThriftMetastoreApiStats.java:42)\r\n\tat io.prestosql.plugin.hive.util.RetryDriver.run(RetryDriver.java:130)\r\n\tat io.prestosql.plugin.hive.metastore.thrift.ThriftHiveMetastore.createTable(ThriftHiveMetastore.java:848)\r\n\t... 19 more\r\n\r\nhttps://github.com/verdict-project/docker-presto-with-hadoop used for the experiments since Hadoop 2.8 minimum required",
                "reactions": {
                    "url": "https://api.github.com/repos/trinodb/trino/issues/6127/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/trinodb/trino/issues/6127/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/trinodb/trino/issues/comments/1332611575",
                "html_url": "https://github.com/trinodb/trino/issues/6127#issuecomment-1332611575",
                "issue_url": "https://api.github.com/repos/trinodb/trino/issues/6127",
                "id": 1332611575,
                "node_id": "IC_kwDOCezRTs5Pbgn3",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2022-11-30T19:08:26Z",
                "updated_at": "2022-11-30T19:08:26Z",
                "author_association": "MEMBER",
                "body": "@tooptoop4 I discovered a configuration that allows anonymous access to public S3 buckets, no code changes required:\r\n\r\nhttps://github.com/trinodb/trino/pull/15246#issuecomment-1332607435\r\n\r\nIf this works for you, I think we can close this issue. I'll open an issue and create a PR at https://github.com/trinodb/docs.trino.io",
                "reactions": {
                    "url": "https://api.github.com/repos/trinodb/trino/issues/comments/1332611575/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2022-11-30T19:08:26Z",
        "org": {
            "id": 34147222,
            "login": "trinodb",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/trinodb",
            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?"
        }
    },
    {
        "id": "25572683237",
        "type": "PullRequestEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 166515022,
            "name": "trinodb/trino",
            "url": "https://api.github.com/repos/trinodb/trino"
        },
        "payload": {
            "action": "closed",
            "number": 15246,
            "pull_request": {
                "url": "https://api.github.com/repos/trinodb/trino/pulls/15246",
                "id": 1139513259,
                "node_id": "PR_kwDOCezRTs5D65er",
                "html_url": "https://github.com/trinodb/trino/pull/15246",
                "diff_url": "https://github.com/trinodb/trino/pull/15246.diff",
                "patch_url": "https://github.com/trinodb/trino/pull/15246.patch",
                "issue_url": "https://api.github.com/repos/trinodb/trino/issues/15246",
                "number": 15246,
                "state": "closed",
                "locked": false,
                "title": "Allow Hive connector to read files from public S3 buckets",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "## Description\r\n\r\nAllow Hive connector to read files from public S3 buckets. Fixes #6127\r\n\r\nAdds boolean connector property `hive.s3.anonymous-requests.enabled` to access a public bucket (no AWS access key or secret key is required).\r\n\r\n<!-- Provide details that would help an engineer who is unfamiliar with this part of the code. -->\r\n## Additional context\r\n\r\nBefore this change, attempts to access a public S3 bucket fail with `AccessDeniedException`. Now, when `hive.s3.anonymous-requests.enabled` is set to `true`, `TrinoS3FileSystem` creates the appropriate `AWSCredentialsProvider` to access the public bucket anonymously.\r\n\r\n<!-- Mark the appropriate option with an (x). Propose a release note if you can. -->\r\n## Release notes\r\n\r\n( ) This is not user-visible or docs only and no release notes are required.\r\n( ) Release notes are required, please propose a release note for me.\r\n(x) Release notes are required, with the following suggested text:\r\n\r\nAllow Hive connector to read data from public S3 buckets via a new `hive.s3.anonymous-requests.enabled` connector property. (#6127)\r\n\r\n## Acknowledgements\r\n\r\nMany thanks to @tooptoop4 for the bulk of the work. I just rebased their changes and added tests and docs.",
                "created_at": "2022-11-29T20:44:22Z",
                "updated_at": "2022-11-30T19:04:30Z",
                "closed_at": "2022-11-30T19:04:29Z",
                "merged_at": null,
                "merge_commit_sha": "caf079a4861801dd77ff5b5f8b5447bb8313b365",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [
                    {
                        "login": "electrum",
                        "id": 9230,
                        "node_id": "MDQ6VXNlcjkyMzA=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/9230?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/electrum",
                        "html_url": "https://github.com/electrum",
                        "followers_url": "https://api.github.com/users/electrum/followers",
                        "following_url": "https://api.github.com/users/electrum/following{/other_user}",
                        "gists_url": "https://api.github.com/users/electrum/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/electrum/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/electrum/subscriptions",
                        "organizations_url": "https://api.github.com/users/electrum/orgs",
                        "repos_url": "https://api.github.com/users/electrum/repos",
                        "events_url": "https://api.github.com/users/electrum/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/electrum/received_events",
                        "type": "User",
                        "site_admin": false
                    }
                ],
                "requested_teams": [],
                "labels": [
                    {
                        "id": 1202580151,
                        "node_id": "MDU6TGFiZWwxMjAyNTgwMTUx",
                        "url": "https://api.github.com/repos/trinodb/trino/labels/cla-signed",
                        "name": "cla-signed",
                        "color": "ededed",
                        "default": false,
                        "description": null
                    },
                    {
                        "id": 1754928339,
                        "node_id": "MDU6TGFiZWwxNzU0OTI4MzM5",
                        "url": "https://api.github.com/repos/trinodb/trino/labels/docs",
                        "name": "docs",
                        "color": "ebf49a",
                        "default": false,
                        "description": ""
                    },
                    {
                        "id": 2848487174,
                        "node_id": "MDU6TGFiZWwyODQ4NDg3MTc0",
                        "url": "https://api.github.com/repos/trinodb/trino/labels/tests:hive",
                        "name": "tests:hive",
                        "color": "FBCA04",
                        "default": false,
                        "description": "Run Hive tests on all tested Hive distributions"
                    }
                ],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/trinodb/trino/pulls/15246/commits",
                "review_comments_url": "https://api.github.com/repos/trinodb/trino/pulls/15246/comments",
                "review_comment_url": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/trinodb/trino/issues/15246/comments",
                "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/a88eab9b966d9482404eca0938b37ee82d6e582e",
                "head": {
                    "label": "metadaddy:support-public-bucket",
                    "ref": "support-public-bucket",
                    "sha": "a88eab9b966d9482404eca0938b37ee82d6e582e",
                    "user": {
                        "login": "metadaddy",
                        "id": 723517,
                        "node_id": "MDQ6VXNlcjcyMzUxNw==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/metadaddy",
                        "html_url": "https://github.com/metadaddy",
                        "followers_url": "https://api.github.com/users/metadaddy/followers",
                        "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                        "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                        "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                        "repos_url": "https://api.github.com/users/metadaddy/repos",
                        "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 509274784,
                        "node_id": "R_kgDOHlrqoA",
                        "name": "trino",
                        "full_name": "metadaddy/trino",
                        "private": false,
                        "owner": {
                            "login": "metadaddy",
                            "id": 723517,
                            "node_id": "MDQ6VXNlcjcyMzUxNw==",
                            "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/metadaddy",
                            "html_url": "https://github.com/metadaddy",
                            "followers_url": "https://api.github.com/users/metadaddy/followers",
                            "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                            "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                            "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                            "repos_url": "https://api.github.com/users/metadaddy/repos",
                            "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/metadaddy/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": true,
                        "url": "https://api.github.com/repos/metadaddy/trino",
                        "forks_url": "https://api.github.com/repos/metadaddy/trino/forks",
                        "keys_url": "https://api.github.com/repos/metadaddy/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/metadaddy/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/metadaddy/trino/teams",
                        "hooks_url": "https://api.github.com/repos/metadaddy/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/metadaddy/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/metadaddy/trino/events",
                        "assignees_url": "https://api.github.com/repos/metadaddy/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/metadaddy/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/metadaddy/trino/tags",
                        "blobs_url": "https://api.github.com/repos/metadaddy/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/metadaddy/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/metadaddy/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/metadaddy/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/metadaddy/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/metadaddy/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/metadaddy/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/metadaddy/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/metadaddy/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/metadaddy/trino/subscription",
                        "commits_url": "https://api.github.com/repos/metadaddy/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/metadaddy/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/metadaddy/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/metadaddy/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/metadaddy/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/metadaddy/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/metadaddy/trino/merges",
                        "archive_url": "https://api.github.com/repos/metadaddy/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/metadaddy/trino/downloads",
                        "issues_url": "https://api.github.com/repos/metadaddy/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/metadaddy/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/metadaddy/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/metadaddy/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/metadaddy/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/metadaddy/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/metadaddy/trino/deployments",
                        "created_at": "2022-07-01T00:43:32Z",
                        "updated_at": "2022-07-06T01:44:20Z",
                        "pushed_at": "2022-11-29T23:15:19Z",
                        "git_url": "git://github.com/metadaddy/trino.git",
                        "ssh_url": "git@github.com:metadaddy/trino.git",
                        "clone_url": "https://github.com/metadaddy/trino.git",
                        "svn_url": "https://github.com/metadaddy/trino",
                        "homepage": "https://trino.io",
                        "size": 192368,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": "Java",
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "master"
                    }
                },
                "base": {
                    "label": "trinodb:master",
                    "ref": "master",
                    "sha": "861d51c8b8047d43f017e887231edf01d1561c65",
                    "user": {
                        "login": "trinodb",
                        "id": 34147222,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                        "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/trinodb",
                        "html_url": "https://github.com/trinodb",
                        "followers_url": "https://api.github.com/users/trinodb/followers",
                        "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                        "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                        "organizations_url": "https://api.github.com/users/trinodb/orgs",
                        "repos_url": "https://api.github.com/users/trinodb/repos",
                        "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/trinodb/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 166515022,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNjY1MTUwMjI=",
                        "name": "trino",
                        "full_name": "trinodb/trino",
                        "private": false,
                        "owner": {
                            "login": "trinodb",
                            "id": 34147222,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/trinodb",
                            "html_url": "https://github.com/trinodb",
                            "followers_url": "https://api.github.com/users/trinodb/followers",
                            "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                            "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                            "organizations_url": "https://api.github.com/users/trinodb/orgs",
                            "repos_url": "https://api.github.com/users/trinodb/repos",
                            "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/trinodb/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/trinodb/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": false,
                        "url": "https://api.github.com/repos/trinodb/trino",
                        "forks_url": "https://api.github.com/repos/trinodb/trino/forks",
                        "keys_url": "https://api.github.com/repos/trinodb/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/trinodb/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/trinodb/trino/teams",
                        "hooks_url": "https://api.github.com/repos/trinodb/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/trinodb/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/trinodb/trino/events",
                        "assignees_url": "https://api.github.com/repos/trinodb/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/trinodb/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/trinodb/trino/tags",
                        "blobs_url": "https://api.github.com/repos/trinodb/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/trinodb/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/trinodb/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/trinodb/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/trinodb/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/trinodb/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/trinodb/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/trinodb/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/trinodb/trino/subscription",
                        "commits_url": "https://api.github.com/repos/trinodb/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/trinodb/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/trinodb/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/trinodb/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/trinodb/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/trinodb/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/trinodb/trino/merges",
                        "archive_url": "https://api.github.com/repos/trinodb/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/trinodb/trino/downloads",
                        "issues_url": "https://api.github.com/repos/trinodb/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/trinodb/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/trinodb/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/trinodb/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/trinodb/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/trinodb/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/trinodb/trino/deployments",
                        "created_at": "2019-01-19T06:38:14Z",
                        "updated_at": "2022-11-30T15:00:26Z",
                        "pushed_at": "2022-11-30T18:44:47Z",
                        "git_url": "git://github.com/trinodb/trino.git",
                        "ssh_url": "git@github.com:trinodb/trino.git",
                        "clone_url": "https://github.com/trinodb/trino.git",
                        "svn_url": "https://github.com/trinodb/trino",
                        "homepage": "https://trino.io",
                        "size": 192628,
                        "stargazers_count": 6740,
                        "watchers_count": 6740,
                        "language": "Java",
                        "has_issues": true,
                        "has_projects": false,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": true,
                        "forks_count": 2080,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 2130,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "analytics",
                            "big-data",
                            "data-science",
                            "database",
                            "databases",
                            "datalake",
                            "distributed-database",
                            "distributed-databases",
                            "distributed-systems",
                            "hadoop",
                            "hive",
                            "java",
                            "jdbc",
                            "presto",
                            "prestodb",
                            "query-engine",
                            "sql",
                            "trino"
                        ],
                        "visibility": "public",
                        "forks": 2080,
                        "open_issues": 2130,
                        "watchers": 6740,
                        "default_branch": "master"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15246"
                    },
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15246"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15246"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15246/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15246/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15246/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/trinodb/trino/statuses/a88eab9b966d9482404eca0938b37ee82d6e582e"
                    }
                },
                "author_association": "MEMBER",
                "auto_merge": null,
                "active_lock_reason": null,
                "merged": false,
                "mergeable": true,
                "rebaseable": false,
                "mergeable_state": "clean",
                "merged_by": null,
                "comments": 1,
                "review_comments": 5,
                "maintainer_can_modify": false,
                "commits": 2,
                "additions": 84,
                "deletions": 2,
                "changed_files": 6
            }
        },
        "public": true,
        "created_at": "2022-11-30T19:04:30Z",
        "org": {
            "id": 34147222,
            "login": "trinodb",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/trinodb",
            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?"
        }
    },
    {
        "id": "25572683062",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 166515022,
            "name": "trinodb/trino",
            "url": "https://api.github.com/repos/trinodb/trino"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/trinodb/trino/issues/15246",
                "repository_url": "https://api.github.com/repos/trinodb/trino",
                "labels_url": "https://api.github.com/repos/trinodb/trino/issues/15246/labels{/name}",
                "comments_url": "https://api.github.com/repos/trinodb/trino/issues/15246/comments",
                "events_url": "https://api.github.com/repos/trinodb/trino/issues/15246/events",
                "html_url": "https://github.com/trinodb/trino/pull/15246",
                "id": 1468674025,
                "node_id": "PR_kwDOCezRTs5D65er",
                "number": 15246,
                "title": "Allow Hive connector to read files from public S3 buckets",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 1202580151,
                        "node_id": "MDU6TGFiZWwxMjAyNTgwMTUx",
                        "url": "https://api.github.com/repos/trinodb/trino/labels/cla-signed",
                        "name": "cla-signed",
                        "color": "ededed",
                        "default": false,
                        "description": null
                    },
                    {
                        "id": 1754928339,
                        "node_id": "MDU6TGFiZWwxNzU0OTI4MzM5",
                        "url": "https://api.github.com/repos/trinodb/trino/labels/docs",
                        "name": "docs",
                        "color": "ebf49a",
                        "default": false,
                        "description": ""
                    },
                    {
                        "id": 2848487174,
                        "node_id": "MDU6TGFiZWwyODQ4NDg3MTc0",
                        "url": "https://api.github.com/repos/trinodb/trino/labels/tests:hive",
                        "name": "tests:hive",
                        "color": "FBCA04",
                        "default": false,
                        "description": "Run Hive tests on all tested Hive distributions"
                    }
                ],
                "state": "closed",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 1,
                "created_at": "2022-11-29T20:44:22Z",
                "updated_at": "2022-11-30T19:04:30Z",
                "closed_at": "2022-11-30T19:04:29Z",
                "author_association": "MEMBER",
                "active_lock_reason": null,
                "draft": false,
                "pull_request": {
                    "url": "https://api.github.com/repos/trinodb/trino/pulls/15246",
                    "html_url": "https://github.com/trinodb/trino/pull/15246",
                    "diff_url": "https://github.com/trinodb/trino/pull/15246.diff",
                    "patch_url": "https://github.com/trinodb/trino/pull/15246.patch",
                    "merged_at": null
                },
                "body": "## Description\r\n\r\nAllow Hive connector to read files from public S3 buckets. Fixes #6127\r\n\r\nAdds boolean connector property `hive.s3.anonymous-requests.enabled` to access a public bucket (no AWS access key or secret key is required).\r\n\r\n<!-- Provide details that would help an engineer who is unfamiliar with this part of the code. -->\r\n## Additional context\r\n\r\nBefore this change, attempts to access a public S3 bucket fail with `AccessDeniedException`. Now, when `hive.s3.anonymous-requests.enabled` is set to `true`, `TrinoS3FileSystem` creates the appropriate `AWSCredentialsProvider` to access the public bucket anonymously.\r\n\r\n<!-- Mark the appropriate option with an (x). Propose a release note if you can. -->\r\n## Release notes\r\n\r\n( ) This is not user-visible or docs only and no release notes are required.\r\n( ) Release notes are required, please propose a release note for me.\r\n(x) Release notes are required, with the following suggested text:\r\n\r\nAllow Hive connector to read data from public S3 buckets via a new `hive.s3.anonymous-requests.enabled` connector property. (#6127)\r\n\r\n## Acknowledgements\r\n\r\nMany thanks to @tooptoop4 for the bulk of the work. I just rebased their changes and added tests and docs.",
                "reactions": {
                    "url": "https://api.github.com/repos/trinodb/trino/issues/15246/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/trinodb/trino/issues/15246/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/trinodb/trino/issues/comments/1332607435",
                "html_url": "https://github.com/trinodb/trino/pull/15246#issuecomment-1332607435",
                "issue_url": "https://api.github.com/repos/trinodb/trino/issues/15246",
                "id": 1332607435,
                "node_id": "IC_kwDOCezRTs5PbfnL",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2022-11-30T19:04:29Z",
                "updated_at": "2022-11-30T19:04:29Z",
                "author_association": "MEMBER",
                "body": "Closing this PR, since it is possible for the Hive connector to anonymously access public S3 buckets with the following catalog configuration:\r\n\r\n```\r\nhive.s3.signer-class=com.amazonaws.auth.NoOpSigner\r\n```\r\n\r\nAnd, in `conf/metastore-site.xml`:\r\n\r\n```xml\r\n<!-- Global configuration -->\r\n<property>\r\n    <name>fs.s3a.aws.credentials.provider</name>\r\n    <value>org.apache.hadoop.fs.s3a.AnonymousAWSCredentialsProvider</value>\r\n</property>\r\n```\r\n\r\nor\r\n\r\n```xml\r\n<!-- Per-bucket configuration -->\r\n<property>\r\n    <name>fs.s3a.bucket.BUCKETNAME.aws.credentials.provider</name>\r\n    <value>org.apache.hadoop.fs.s3a.AnonymousAWSCredentialsProvider</value>\r\n</property>\r\n```",
                "reactions": {
                    "url": "https://api.github.com/repos/trinodb/trino/issues/comments/1332607435/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2022-11-30T19:04:30Z",
        "org": {
            "id": 34147222,
            "login": "trinodb",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/trinodb",
            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?"
        }
    },
    {
        "id": "25572560662",
        "type": "PullRequestReviewCommentEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 166515022,
            "name": "trinodb/trino",
            "url": "https://api.github.com/repos/trinodb/trino"
        },
        "payload": {
            "action": "created",
            "comment": {
                "url": "https://api.github.com/repos/trinodb/trino/pulls/comments/1036340715",
                "pull_request_review_id": 1199865851,
                "id": 1036340715,
                "node_id": "PRRC_kwDOCezRTs49xU3r",
                "diff_hunk": "@@ -1016,6 +1020,10 @@ private static Optional<EncryptionMaterialsProvider> createEncryptionMaterialsPr\n \n     private AWSCredentialsProvider createAwsCredentialsProvider(URI uri, Configuration conf)\n     {\n+        if (anonymousRequestsEnabled) {",
                "path": "plugin/trino-hive/src/main/java/io/trino/plugin/hive/s3/TrinoS3FileSystem.java",
                "position": 36,
                "original_position": 36,
                "commit_id": "a88eab9b966d9482404eca0938b37ee82d6e582e",
                "original_commit_id": "a88eab9b966d9482404eca0938b37ee82d6e582e",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "@ebyhr `org.apache.hadoop.fs.s3a.AnonymousAWSCredentialsProvider` wouldn't work, since the class specified by `trino.s3.credentials-provider` needs to:\r\n\r\n> provide a two-argument constructor that takes a `java.net.URI` and a Hadoop `org.apache.hadoop.conf.Configuration` as arguments\r\n\r\n(from the [Trino Hive/S3 docs](https://trino.io/docs/current/connector/hive-s3.html#custom-s3-credentials-provider)).\r\n\r\nHowever, I just discovered a configuration change that _does_ work, with no code change required:\r\n\r\n```\r\nhive.s3.signer-class=com.amazonaws.auth.NoOpSigner\r\n```\r\n\r\nThis simply replaces the default S3 signer with one that does nothing - exactly what we need for anonymous access to public buckets!\r\n\r\nNote that you also need the following in `conf/metastore-site.xml`:\r\n\r\n```xml\r\n<property>\r\n    <name>fs.s3a.aws.credentials.provider</name>\r\n    <value>org.apache.hadoop.fs.s3a.AnonymousAWSCredentialsProvider</value>\r\n</property>\r\n```\r\n\r\nI'll open a ticket and file a PR over at https://github.com/trinodb/docs.trino.io\r\n\r\n@hashhar The problem is, `TrinoS3FileSystem` doesn't know if the configured credentials will work until it later tries to use them. The way the connector is currently written, all buckets accessed by the connector have to be accessible with the same set of credentials.",
                "created_at": "2022-11-30T18:58:16Z",
                "updated_at": "2022-11-30T18:58:17Z",
                "html_url": "https://github.com/trinodb/trino/pull/15246#discussion_r1036340715",
                "pull_request_url": "https://api.github.com/repos/trinodb/trino/pulls/15246",
                "author_association": "MEMBER",
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/comments/1036340715"
                    },
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15246#discussion_r1036340715"
                    },
                    "pull_request": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15246"
                    }
                },
                "reactions": {
                    "url": "https://api.github.com/repos/trinodb/trino/pulls/comments/1036340715/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "start_line": null,
                "original_start_line": null,
                "start_side": null,
                "line": 1023,
                "original_line": 1023,
                "side": "RIGHT",
                "in_reply_to_id": 1035439256
            },
            "pull_request": {
                "url": "https://api.github.com/repos/trinodb/trino/pulls/15246",
                "id": 1139513259,
                "node_id": "PR_kwDOCezRTs5D65er",
                "html_url": "https://github.com/trinodb/trino/pull/15246",
                "diff_url": "https://github.com/trinodb/trino/pull/15246.diff",
                "patch_url": "https://github.com/trinodb/trino/pull/15246.patch",
                "issue_url": "https://api.github.com/repos/trinodb/trino/issues/15246",
                "number": 15246,
                "state": "open",
                "locked": false,
                "title": "Allow Hive connector to read files from public S3 buckets",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "## Description\r\n\r\nAllow Hive connector to read files from public S3 buckets. Fixes #6127\r\n\r\nAdds boolean connector property `hive.s3.anonymous-requests.enabled` to access a public bucket (no AWS access key or secret key is required).\r\n\r\n<!-- Provide details that would help an engineer who is unfamiliar with this part of the code. -->\r\n## Additional context\r\n\r\nBefore this change, attempts to access a public S3 bucket fail with `AccessDeniedException`. Now, when `hive.s3.anonymous-requests.enabled` is set to `true`, `TrinoS3FileSystem` creates the appropriate `AWSCredentialsProvider` to access the public bucket anonymously.\r\n\r\n<!-- Mark the appropriate option with an (x). Propose a release note if you can. -->\r\n## Release notes\r\n\r\n( ) This is not user-visible or docs only and no release notes are required.\r\n( ) Release notes are required, please propose a release note for me.\r\n(x) Release notes are required, with the following suggested text:\r\n\r\nAllow Hive connector to read data from public S3 buckets via a new `hive.s3.anonymous-requests.enabled` connector property. (#6127)\r\n\r\n## Acknowledgements\r\n\r\nMany thanks to @tooptoop4 for the bulk of the work. I just rebased their changes and added tests and docs.",
                "created_at": "2022-11-29T20:44:22Z",
                "updated_at": "2022-11-30T18:58:17Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": "caf079a4861801dd77ff5b5f8b5447bb8313b365",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [
                    {
                        "login": "electrum",
                        "id": 9230,
                        "node_id": "MDQ6VXNlcjkyMzA=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/9230?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/electrum",
                        "html_url": "https://github.com/electrum",
                        "followers_url": "https://api.github.com/users/electrum/followers",
                        "following_url": "https://api.github.com/users/electrum/following{/other_user}",
                        "gists_url": "https://api.github.com/users/electrum/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/electrum/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/electrum/subscriptions",
                        "organizations_url": "https://api.github.com/users/electrum/orgs",
                        "repos_url": "https://api.github.com/users/electrum/repos",
                        "events_url": "https://api.github.com/users/electrum/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/electrum/received_events",
                        "type": "User",
                        "site_admin": false
                    }
                ],
                "requested_teams": [],
                "labels": [
                    {
                        "id": 1202580151,
                        "node_id": "MDU6TGFiZWwxMjAyNTgwMTUx",
                        "url": "https://api.github.com/repos/trinodb/trino/labels/cla-signed",
                        "name": "cla-signed",
                        "color": "ededed",
                        "default": false,
                        "description": null
                    },
                    {
                        "id": 1754928339,
                        "node_id": "MDU6TGFiZWwxNzU0OTI4MzM5",
                        "url": "https://api.github.com/repos/trinodb/trino/labels/docs",
                        "name": "docs",
                        "color": "ebf49a",
                        "default": false,
                        "description": ""
                    },
                    {
                        "id": 2848487174,
                        "node_id": "MDU6TGFiZWwyODQ4NDg3MTc0",
                        "url": "https://api.github.com/repos/trinodb/trino/labels/tests:hive",
                        "name": "tests:hive",
                        "color": "FBCA04",
                        "default": false,
                        "description": "Run Hive tests on all tested Hive distributions"
                    }
                ],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/trinodb/trino/pulls/15246/commits",
                "review_comments_url": "https://api.github.com/repos/trinodb/trino/pulls/15246/comments",
                "review_comment_url": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/trinodb/trino/issues/15246/comments",
                "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/a88eab9b966d9482404eca0938b37ee82d6e582e",
                "head": {
                    "label": "metadaddy:support-public-bucket",
                    "ref": "support-public-bucket",
                    "sha": "a88eab9b966d9482404eca0938b37ee82d6e582e",
                    "user": {
                        "login": "metadaddy",
                        "id": 723517,
                        "node_id": "MDQ6VXNlcjcyMzUxNw==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/metadaddy",
                        "html_url": "https://github.com/metadaddy",
                        "followers_url": "https://api.github.com/users/metadaddy/followers",
                        "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                        "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                        "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                        "repos_url": "https://api.github.com/users/metadaddy/repos",
                        "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 509274784,
                        "node_id": "R_kgDOHlrqoA",
                        "name": "trino",
                        "full_name": "metadaddy/trino",
                        "private": false,
                        "owner": {
                            "login": "metadaddy",
                            "id": 723517,
                            "node_id": "MDQ6VXNlcjcyMzUxNw==",
                            "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/metadaddy",
                            "html_url": "https://github.com/metadaddy",
                            "followers_url": "https://api.github.com/users/metadaddy/followers",
                            "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                            "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                            "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                            "repos_url": "https://api.github.com/users/metadaddy/repos",
                            "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/metadaddy/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": true,
                        "url": "https://api.github.com/repos/metadaddy/trino",
                        "forks_url": "https://api.github.com/repos/metadaddy/trino/forks",
                        "keys_url": "https://api.github.com/repos/metadaddy/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/metadaddy/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/metadaddy/trino/teams",
                        "hooks_url": "https://api.github.com/repos/metadaddy/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/metadaddy/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/metadaddy/trino/events",
                        "assignees_url": "https://api.github.com/repos/metadaddy/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/metadaddy/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/metadaddy/trino/tags",
                        "blobs_url": "https://api.github.com/repos/metadaddy/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/metadaddy/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/metadaddy/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/metadaddy/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/metadaddy/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/metadaddy/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/metadaddy/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/metadaddy/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/metadaddy/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/metadaddy/trino/subscription",
                        "commits_url": "https://api.github.com/repos/metadaddy/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/metadaddy/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/metadaddy/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/metadaddy/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/metadaddy/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/metadaddy/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/metadaddy/trino/merges",
                        "archive_url": "https://api.github.com/repos/metadaddy/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/metadaddy/trino/downloads",
                        "issues_url": "https://api.github.com/repos/metadaddy/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/metadaddy/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/metadaddy/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/metadaddy/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/metadaddy/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/metadaddy/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/metadaddy/trino/deployments",
                        "created_at": "2022-07-01T00:43:32Z",
                        "updated_at": "2022-07-06T01:44:20Z",
                        "pushed_at": "2022-11-29T23:15:19Z",
                        "git_url": "git://github.com/metadaddy/trino.git",
                        "ssh_url": "git@github.com:metadaddy/trino.git",
                        "clone_url": "https://github.com/metadaddy/trino.git",
                        "svn_url": "https://github.com/metadaddy/trino",
                        "homepage": "https://trino.io",
                        "size": 192368,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": "Java",
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "master"
                    }
                },
                "base": {
                    "label": "trinodb:master",
                    "ref": "master",
                    "sha": "861d51c8b8047d43f017e887231edf01d1561c65",
                    "user": {
                        "login": "trinodb",
                        "id": 34147222,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                        "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/trinodb",
                        "html_url": "https://github.com/trinodb",
                        "followers_url": "https://api.github.com/users/trinodb/followers",
                        "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                        "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                        "organizations_url": "https://api.github.com/users/trinodb/orgs",
                        "repos_url": "https://api.github.com/users/trinodb/repos",
                        "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/trinodb/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 166515022,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNjY1MTUwMjI=",
                        "name": "trino",
                        "full_name": "trinodb/trino",
                        "private": false,
                        "owner": {
                            "login": "trinodb",
                            "id": 34147222,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/trinodb",
                            "html_url": "https://github.com/trinodb",
                            "followers_url": "https://api.github.com/users/trinodb/followers",
                            "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                            "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                            "organizations_url": "https://api.github.com/users/trinodb/orgs",
                            "repos_url": "https://api.github.com/users/trinodb/repos",
                            "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/trinodb/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/trinodb/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": false,
                        "url": "https://api.github.com/repos/trinodb/trino",
                        "forks_url": "https://api.github.com/repos/trinodb/trino/forks",
                        "keys_url": "https://api.github.com/repos/trinodb/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/trinodb/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/trinodb/trino/teams",
                        "hooks_url": "https://api.github.com/repos/trinodb/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/trinodb/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/trinodb/trino/events",
                        "assignees_url": "https://api.github.com/repos/trinodb/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/trinodb/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/trinodb/trino/tags",
                        "blobs_url": "https://api.github.com/repos/trinodb/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/trinodb/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/trinodb/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/trinodb/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/trinodb/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/trinodb/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/trinodb/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/trinodb/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/trinodb/trino/subscription",
                        "commits_url": "https://api.github.com/repos/trinodb/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/trinodb/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/trinodb/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/trinodb/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/trinodb/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/trinodb/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/trinodb/trino/merges",
                        "archive_url": "https://api.github.com/repos/trinodb/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/trinodb/trino/downloads",
                        "issues_url": "https://api.github.com/repos/trinodb/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/trinodb/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/trinodb/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/trinodb/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/trinodb/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/trinodb/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/trinodb/trino/deployments",
                        "created_at": "2019-01-19T06:38:14Z",
                        "updated_at": "2022-11-30T15:00:26Z",
                        "pushed_at": "2022-11-30T18:44:47Z",
                        "git_url": "git://github.com/trinodb/trino.git",
                        "ssh_url": "git@github.com:trinodb/trino.git",
                        "clone_url": "https://github.com/trinodb/trino.git",
                        "svn_url": "https://github.com/trinodb/trino",
                        "homepage": "https://trino.io",
                        "size": 192628,
                        "stargazers_count": 6740,
                        "watchers_count": 6740,
                        "language": "Java",
                        "has_issues": true,
                        "has_projects": false,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": true,
                        "forks_count": 2080,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 2131,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "analytics",
                            "big-data",
                            "data-science",
                            "database",
                            "databases",
                            "datalake",
                            "distributed-database",
                            "distributed-databases",
                            "distributed-systems",
                            "hadoop",
                            "hive",
                            "java",
                            "jdbc",
                            "presto",
                            "prestodb",
                            "query-engine",
                            "sql",
                            "trino"
                        ],
                        "visibility": "public",
                        "forks": 2080,
                        "open_issues": 2131,
                        "watchers": 6740,
                        "default_branch": "master"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15246"
                    },
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15246"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15246"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15246/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15246/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15246/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/trinodb/trino/statuses/a88eab9b966d9482404eca0938b37ee82d6e582e"
                    }
                },
                "author_association": "MEMBER",
                "auto_merge": null,
                "active_lock_reason": null
            }
        },
        "public": true,
        "created_at": "2022-11-30T18:58:16Z",
        "org": {
            "id": 34147222,
            "login": "trinodb",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/trinodb",
            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?"
        }
    },
    {
        "id": "25572560605",
        "type": "PullRequestReviewEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 166515022,
            "name": "trinodb/trino",
            "url": "https://api.github.com/repos/trinodb/trino"
        },
        "payload": {
            "action": "created",
            "review": {
                "id": 1199865851,
                "node_id": "PRR_kwDOCezRTs5HhH_7",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": null,
                "commit_id": "a88eab9b966d9482404eca0938b37ee82d6e582e",
                "submitted_at": "2022-11-30T18:58:17Z",
                "state": "commented",
                "html_url": "https://github.com/trinodb/trino/pull/15246#pullrequestreview-1199865851",
                "pull_request_url": "https://api.github.com/repos/trinodb/trino/pulls/15246",
                "author_association": "MEMBER",
                "_links": {
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15246#pullrequestreview-1199865851"
                    },
                    "pull_request": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15246"
                    }
                }
            },
            "pull_request": {
                "url": "https://api.github.com/repos/trinodb/trino/pulls/15246",
                "id": 1139513259,
                "node_id": "PR_kwDOCezRTs5D65er",
                "html_url": "https://github.com/trinodb/trino/pull/15246",
                "diff_url": "https://github.com/trinodb/trino/pull/15246.diff",
                "patch_url": "https://github.com/trinodb/trino/pull/15246.patch",
                "issue_url": "https://api.github.com/repos/trinodb/trino/issues/15246",
                "number": 15246,
                "state": "open",
                "locked": false,
                "title": "Allow Hive connector to read files from public S3 buckets",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "## Description\r\n\r\nAllow Hive connector to read files from public S3 buckets. Fixes #6127\r\n\r\nAdds boolean connector property `hive.s3.anonymous-requests.enabled` to access a public bucket (no AWS access key or secret key is required).\r\n\r\n<!-- Provide details that would help an engineer who is unfamiliar with this part of the code. -->\r\n## Additional context\r\n\r\nBefore this change, attempts to access a public S3 bucket fail with `AccessDeniedException`. Now, when `hive.s3.anonymous-requests.enabled` is set to `true`, `TrinoS3FileSystem` creates the appropriate `AWSCredentialsProvider` to access the public bucket anonymously.\r\n\r\n<!-- Mark the appropriate option with an (x). Propose a release note if you can. -->\r\n## Release notes\r\n\r\n( ) This is not user-visible or docs only and no release notes are required.\r\n( ) Release notes are required, please propose a release note for me.\r\n(x) Release notes are required, with the following suggested text:\r\n\r\nAllow Hive connector to read data from public S3 buckets via a new `hive.s3.anonymous-requests.enabled` connector property. (#6127)\r\n\r\n## Acknowledgements\r\n\r\nMany thanks to @tooptoop4 for the bulk of the work. I just rebased their changes and added tests and docs.",
                "created_at": "2022-11-29T20:44:22Z",
                "updated_at": "2022-11-30T18:58:17Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": "caf079a4861801dd77ff5b5f8b5447bb8313b365",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [
                    {
                        "login": "electrum",
                        "id": 9230,
                        "node_id": "MDQ6VXNlcjkyMzA=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/9230?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/electrum",
                        "html_url": "https://github.com/electrum",
                        "followers_url": "https://api.github.com/users/electrum/followers",
                        "following_url": "https://api.github.com/users/electrum/following{/other_user}",
                        "gists_url": "https://api.github.com/users/electrum/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/electrum/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/electrum/subscriptions",
                        "organizations_url": "https://api.github.com/users/electrum/orgs",
                        "repos_url": "https://api.github.com/users/electrum/repos",
                        "events_url": "https://api.github.com/users/electrum/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/electrum/received_events",
                        "type": "User",
                        "site_admin": false
                    }
                ],
                "requested_teams": [],
                "labels": [
                    {
                        "id": 1202580151,
                        "node_id": "MDU6TGFiZWwxMjAyNTgwMTUx",
                        "url": "https://api.github.com/repos/trinodb/trino/labels/cla-signed",
                        "name": "cla-signed",
                        "color": "ededed",
                        "default": false,
                        "description": null
                    },
                    {
                        "id": 1754928339,
                        "node_id": "MDU6TGFiZWwxNzU0OTI4MzM5",
                        "url": "https://api.github.com/repos/trinodb/trino/labels/docs",
                        "name": "docs",
                        "color": "ebf49a",
                        "default": false,
                        "description": ""
                    },
                    {
                        "id": 2848487174,
                        "node_id": "MDU6TGFiZWwyODQ4NDg3MTc0",
                        "url": "https://api.github.com/repos/trinodb/trino/labels/tests:hive",
                        "name": "tests:hive",
                        "color": "FBCA04",
                        "default": false,
                        "description": "Run Hive tests on all tested Hive distributions"
                    }
                ],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/trinodb/trino/pulls/15246/commits",
                "review_comments_url": "https://api.github.com/repos/trinodb/trino/pulls/15246/comments",
                "review_comment_url": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/trinodb/trino/issues/15246/comments",
                "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/a88eab9b966d9482404eca0938b37ee82d6e582e",
                "head": {
                    "label": "metadaddy:support-public-bucket",
                    "ref": "support-public-bucket",
                    "sha": "a88eab9b966d9482404eca0938b37ee82d6e582e",
                    "user": {
                        "login": "metadaddy",
                        "id": 723517,
                        "node_id": "MDQ6VXNlcjcyMzUxNw==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/metadaddy",
                        "html_url": "https://github.com/metadaddy",
                        "followers_url": "https://api.github.com/users/metadaddy/followers",
                        "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                        "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                        "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                        "repos_url": "https://api.github.com/users/metadaddy/repos",
                        "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 509274784,
                        "node_id": "R_kgDOHlrqoA",
                        "name": "trino",
                        "full_name": "metadaddy/trino",
                        "private": false,
                        "owner": {
                            "login": "metadaddy",
                            "id": 723517,
                            "node_id": "MDQ6VXNlcjcyMzUxNw==",
                            "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/metadaddy",
                            "html_url": "https://github.com/metadaddy",
                            "followers_url": "https://api.github.com/users/metadaddy/followers",
                            "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                            "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                            "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                            "repos_url": "https://api.github.com/users/metadaddy/repos",
                            "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/metadaddy/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": true,
                        "url": "https://api.github.com/repos/metadaddy/trino",
                        "forks_url": "https://api.github.com/repos/metadaddy/trino/forks",
                        "keys_url": "https://api.github.com/repos/metadaddy/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/metadaddy/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/metadaddy/trino/teams",
                        "hooks_url": "https://api.github.com/repos/metadaddy/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/metadaddy/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/metadaddy/trino/events",
                        "assignees_url": "https://api.github.com/repos/metadaddy/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/metadaddy/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/metadaddy/trino/tags",
                        "blobs_url": "https://api.github.com/repos/metadaddy/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/metadaddy/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/metadaddy/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/metadaddy/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/metadaddy/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/metadaddy/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/metadaddy/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/metadaddy/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/metadaddy/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/metadaddy/trino/subscription",
                        "commits_url": "https://api.github.com/repos/metadaddy/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/metadaddy/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/metadaddy/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/metadaddy/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/metadaddy/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/metadaddy/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/metadaddy/trino/merges",
                        "archive_url": "https://api.github.com/repos/metadaddy/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/metadaddy/trino/downloads",
                        "issues_url": "https://api.github.com/repos/metadaddy/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/metadaddy/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/metadaddy/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/metadaddy/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/metadaddy/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/metadaddy/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/metadaddy/trino/deployments",
                        "created_at": "2022-07-01T00:43:32Z",
                        "updated_at": "2022-07-06T01:44:20Z",
                        "pushed_at": "2022-11-29T23:15:19Z",
                        "git_url": "git://github.com/metadaddy/trino.git",
                        "ssh_url": "git@github.com:metadaddy/trino.git",
                        "clone_url": "https://github.com/metadaddy/trino.git",
                        "svn_url": "https://github.com/metadaddy/trino",
                        "homepage": "https://trino.io",
                        "size": 192368,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": "Java",
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "master"
                    }
                },
                "base": {
                    "label": "trinodb:master",
                    "ref": "master",
                    "sha": "861d51c8b8047d43f017e887231edf01d1561c65",
                    "user": {
                        "login": "trinodb",
                        "id": 34147222,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                        "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/trinodb",
                        "html_url": "https://github.com/trinodb",
                        "followers_url": "https://api.github.com/users/trinodb/followers",
                        "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                        "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                        "organizations_url": "https://api.github.com/users/trinodb/orgs",
                        "repos_url": "https://api.github.com/users/trinodb/repos",
                        "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/trinodb/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 166515022,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNjY1MTUwMjI=",
                        "name": "trino",
                        "full_name": "trinodb/trino",
                        "private": false,
                        "owner": {
                            "login": "trinodb",
                            "id": 34147222,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/trinodb",
                            "html_url": "https://github.com/trinodb",
                            "followers_url": "https://api.github.com/users/trinodb/followers",
                            "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                            "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                            "organizations_url": "https://api.github.com/users/trinodb/orgs",
                            "repos_url": "https://api.github.com/users/trinodb/repos",
                            "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/trinodb/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/trinodb/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": false,
                        "url": "https://api.github.com/repos/trinodb/trino",
                        "forks_url": "https://api.github.com/repos/trinodb/trino/forks",
                        "keys_url": "https://api.github.com/repos/trinodb/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/trinodb/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/trinodb/trino/teams",
                        "hooks_url": "https://api.github.com/repos/trinodb/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/trinodb/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/trinodb/trino/events",
                        "assignees_url": "https://api.github.com/repos/trinodb/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/trinodb/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/trinodb/trino/tags",
                        "blobs_url": "https://api.github.com/repos/trinodb/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/trinodb/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/trinodb/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/trinodb/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/trinodb/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/trinodb/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/trinodb/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/trinodb/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/trinodb/trino/subscription",
                        "commits_url": "https://api.github.com/repos/trinodb/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/trinodb/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/trinodb/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/trinodb/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/trinodb/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/trinodb/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/trinodb/trino/merges",
                        "archive_url": "https://api.github.com/repos/trinodb/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/trinodb/trino/downloads",
                        "issues_url": "https://api.github.com/repos/trinodb/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/trinodb/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/trinodb/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/trinodb/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/trinodb/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/trinodb/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/trinodb/trino/deployments",
                        "created_at": "2019-01-19T06:38:14Z",
                        "updated_at": "2022-11-30T15:00:26Z",
                        "pushed_at": "2022-11-30T18:44:47Z",
                        "git_url": "git://github.com/trinodb/trino.git",
                        "ssh_url": "git@github.com:trinodb/trino.git",
                        "clone_url": "https://github.com/trinodb/trino.git",
                        "svn_url": "https://github.com/trinodb/trino",
                        "homepage": "https://trino.io",
                        "size": 192628,
                        "stargazers_count": 6740,
                        "watchers_count": 6740,
                        "language": "Java",
                        "has_issues": true,
                        "has_projects": false,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": true,
                        "forks_count": 2080,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 2131,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "analytics",
                            "big-data",
                            "data-science",
                            "database",
                            "databases",
                            "datalake",
                            "distributed-database",
                            "distributed-databases",
                            "distributed-systems",
                            "hadoop",
                            "hive",
                            "java",
                            "jdbc",
                            "presto",
                            "prestodb",
                            "query-engine",
                            "sql",
                            "trino"
                        ],
                        "visibility": "public",
                        "forks": 2080,
                        "open_issues": 2131,
                        "watchers": 6740,
                        "default_branch": "master"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15246"
                    },
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15246"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15246"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15246/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15246/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15246/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/trinodb/trino/statuses/a88eab9b966d9482404eca0938b37ee82d6e582e"
                    }
                },
                "author_association": "MEMBER",
                "auto_merge": null,
                "active_lock_reason": null
            }
        },
        "public": true,
        "created_at": "2022-11-30T18:58:17Z",
        "org": {
            "id": 34147222,
            "login": "trinodb",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/trinodb",
            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?"
        }
    },
    {
        "id": "25551642090",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 166515022,
            "name": "trinodb/trino",
            "url": "https://api.github.com/repos/trinodb/trino"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/trinodb/trino/issues/14859",
                "repository_url": "https://api.github.com/repos/trinodb/trino",
                "labels_url": "https://api.github.com/repos/trinodb/trino/issues/14859/labels{/name}",
                "comments_url": "https://api.github.com/repos/trinodb/trino/issues/14859/comments",
                "events_url": "https://api.github.com/repos/trinodb/trino/issues/14859/events",
                "html_url": "https://github.com/trinodb/trino/pull/14859",
                "id": 1431822188,
                "node_id": "PR_kwDOCezRTs5B_M_I",
                "number": 14859,
                "title": "Use correct abbreviations for data quantities. Fixes #13054",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 1202580151,
                        "node_id": "MDU6TGFiZWwxMjAyNTgwMTUx",
                        "url": "https://api.github.com/repos/trinodb/trino/labels/cla-signed",
                        "name": "cla-signed",
                        "color": "ededed",
                        "default": false,
                        "description": null
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 2,
                "created_at": "2022-11-01T17:41:35Z",
                "updated_at": "2022-11-30T00:35:32Z",
                "closed_at": null,
                "author_association": "MEMBER",
                "active_lock_reason": null,
                "draft": false,
                "pull_request": {
                    "url": "https://api.github.com/repos/trinodb/trino/pulls/14859",
                    "html_url": "https://github.com/trinodb/trino/pull/14859",
                    "diff_url": "https://github.com/trinodb/trino/pull/14859.diff",
                    "patch_url": "https://github.com/trinodb/trino/pull/14859.patch",
                    "merged_at": null
                },
                "body": "<!-- Thank you for submitting a pull request! Find more information in our development guide at https://github.com/trinodb/trino/blob/master/.github/DEVELOPMENT.md and contact us on #dev in Slack. -->\r\n<!-- Provide an overview of the PR for maintainers and reviewers. -->\r\n## Description\r\n\r\nThe Trino CLI currently reports data size incorrectly, using the legacy, 1,024-based, values for K, M, G etc rather than the modern 1,000-based values.\r\n\r\n> Is this change a fix, improvement, new feature, refactoring, or other?\r\n\r\nFix\r\n\r\n> Is this a change to the core query engine, a connector, client library, or the SPI interfaces? (be specific)\r\n\r\nCLI\r\n\r\n<!-- Provide a user-friendly explanation, keep it brief if it isn't user-visible. -->\r\n## Non-technical explanation\r\n\r\nThis change corrects the display of data sizes in the CLI to use KiB, MiB for 1,024-based values and adds a command option, `--decimal-data-size` to display data sizes in 1,000-based units.\r\n\r\n<!-- Mark the appropriate option with an (x). Propose a release note if you can. -->\r\n## Release notes\r\n\r\n( ) This is not user-visible or docs only and no release notes are required.\r\n( ) Release notes are required, please propose a release note for me.\r\n(x) Release notes are required, with the following suggested text:\r\n\r\nThe CLI now shows data sizes and rates with binary (1024-based) abbreviations: KiB, MiB, etc. A new command option, `--decimal-data-size`, shows decimal (1000-based) values and abbreviations: KB, MB, etc. (#13054)\r\n\r\n## Related issues, pull requests, and links\r\n\r\n* Fixes #13054\r\n* Replaces #13095 ",
                "reactions": {
                    "url": "https://api.github.com/repos/trinodb/trino/issues/14859/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/trinodb/trino/issues/14859/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/trinodb/trino/issues/comments/1331496588",
                "html_url": "https://github.com/trinodb/trino/pull/14859#issuecomment-1331496588",
                "issue_url": "https://api.github.com/repos/trinodb/trino/issues/14859",
                "id": 1331496588,
                "node_id": "IC_kwDOCezRTs5PXQaM",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2022-11-30T00:35:32Z",
                "updated_at": "2022-11-30T00:35:32Z",
                "author_association": "MEMBER",
                "body": "The impact on the formatting of the CLI is minimal:\r\n\r\n```\r\ntrino:ds> select count(*) from drivestats;\r\n   _col0   \r\n-----------\r\n 346006813 \r\n(1 row)\r\n\r\nQuery 20221129_225226_00008_9q4rt, FINISHED, 1 node\r\nSplits: 420 total, 420 done (100.00%)\r\n12.27 [346M rows, 4.66MiB] [28.2M rows/s, 389KiB/s]\r\n```\r\n\r\nSame query with `--decimal-data-size `:\r\n\r\n```\r\ntrino:ds> select count(*) from drivestats;\r\n   _col0   \r\n-----------\r\n 346006813 \r\n(1 row)\r\n\r\nQuery 20221129_225715_00012_9q4rt, FINISHED, 1 node\r\nSplits: 421 total, 421 done (100.00%)\r\n11.02 [346M rows, 4.89MB] [31.4M rows/s, 443KB/s]\r\n```",
                "reactions": {
                    "url": "https://api.github.com/repos/trinodb/trino/issues/comments/1331496588/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2022-11-30T00:35:32Z",
        "org": {
            "id": 34147222,
            "login": "trinodb",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/trinodb",
            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?"
        }
    },
    {
        "id": "25551317564",
        "type": "PushEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 572285370,
            "name": "metadaddy/blazer",
            "url": "https://api.github.com/repos/metadaddy/blazer"
        },
        "payload": {
            "push_id": 11828041512,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/master",
            "head": "b7a0f71d776b6d011833f7a8f2991ec87c44c76c",
            "before": "33365de0f2390cd5c67560303706a9d7e39043a2",
            "commits": [
                {
                    "sha": "b7a0f71d776b6d011833f7a8f2991ec87c44c76c",
                    "author": {
                        "email": "pat@backblaze.com",
                        "name": "Pat Patterson"
                    },
                    "message": "Remove Travic build status",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/blazer/commits/b7a0f71d776b6d011833f7a8f2991ec87c44c76c"
                }
            ]
        },
        "public": true,
        "created_at": "2022-11-30T00:09:12Z"
    },
    {
        "id": "25551286746",
        "type": "PullRequestEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 572276134,
            "name": "Backblaze/blazer",
            "url": "https://api.github.com/repos/Backblaze/blazer"
        },
        "payload": {
            "action": "opened",
            "number": 1,
            "pull_request": {
                "url": "https://api.github.com/repos/Backblaze/blazer/pulls/1",
                "id": 1139682845,
                "node_id": "PR_kwDOIhw9ps5D7i4d",
                "html_url": "https://github.com/Backblaze/blazer/pull/1",
                "diff_url": "https://github.com/Backblaze/blazer/pull/1.diff",
                "patch_url": "https://github.com/Backblaze/blazer/pull/1.patch",
                "issue_url": "https://api.github.com/repos/Backblaze/blazer/issues/1",
                "number": 1,
                "state": "open",
                "locked": false,
                "title": "Update README",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "Updated README:\r\n* Credit @kurin as the original creator\r\n* Remove Travis CI build status\r\n* Change the example from using account id/master key to application key id/application key",
                "created_at": "2022-11-30T00:06:44Z",
                "updated_at": "2022-11-30T00:06:44Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": null,
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/Backblaze/blazer/pulls/1/commits",
                "review_comments_url": "https://api.github.com/repos/Backblaze/blazer/pulls/1/comments",
                "review_comment_url": "https://api.github.com/repos/Backblaze/blazer/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/Backblaze/blazer/issues/1/comments",
                "statuses_url": "https://api.github.com/repos/Backblaze/blazer/statuses/33365de0f2390cd5c67560303706a9d7e39043a2",
                "head": {
                    "label": "metadaddy:master",
                    "ref": "master",
                    "sha": "33365de0f2390cd5c67560303706a9d7e39043a2",
                    "user": {
                        "login": "metadaddy",
                        "id": 723517,
                        "node_id": "MDQ6VXNlcjcyMzUxNw==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/metadaddy",
                        "html_url": "https://github.com/metadaddy",
                        "followers_url": "https://api.github.com/users/metadaddy/followers",
                        "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                        "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                        "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                        "repos_url": "https://api.github.com/users/metadaddy/repos",
                        "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 572285370,
                        "node_id": "R_kgDOIhxhug",
                        "name": "blazer",
                        "full_name": "metadaddy/blazer",
                        "private": false,
                        "owner": {
                            "login": "metadaddy",
                            "id": 723517,
                            "node_id": "MDQ6VXNlcjcyMzUxNw==",
                            "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/metadaddy",
                            "html_url": "https://github.com/metadaddy",
                            "followers_url": "https://api.github.com/users/metadaddy/followers",
                            "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                            "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                            "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                            "repos_url": "https://api.github.com/users/metadaddy/repos",
                            "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/metadaddy/blazer",
                        "description": "A Go library for Backblaze's B2.",
                        "fork": true,
                        "url": "https://api.github.com/repos/metadaddy/blazer",
                        "forks_url": "https://api.github.com/repos/metadaddy/blazer/forks",
                        "keys_url": "https://api.github.com/repos/metadaddy/blazer/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/metadaddy/blazer/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/metadaddy/blazer/teams",
                        "hooks_url": "https://api.github.com/repos/metadaddy/blazer/hooks",
                        "issue_events_url": "https://api.github.com/repos/metadaddy/blazer/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/metadaddy/blazer/events",
                        "assignees_url": "https://api.github.com/repos/metadaddy/blazer/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/metadaddy/blazer/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/metadaddy/blazer/tags",
                        "blobs_url": "https://api.github.com/repos/metadaddy/blazer/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/metadaddy/blazer/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/metadaddy/blazer/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/metadaddy/blazer/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/metadaddy/blazer/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/metadaddy/blazer/languages",
                        "stargazers_url": "https://api.github.com/repos/metadaddy/blazer/stargazers",
                        "contributors_url": "https://api.github.com/repos/metadaddy/blazer/contributors",
                        "subscribers_url": "https://api.github.com/repos/metadaddy/blazer/subscribers",
                        "subscription_url": "https://api.github.com/repos/metadaddy/blazer/subscription",
                        "commits_url": "https://api.github.com/repos/metadaddy/blazer/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/metadaddy/blazer/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/metadaddy/blazer/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/metadaddy/blazer/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/metadaddy/blazer/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/metadaddy/blazer/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/metadaddy/blazer/merges",
                        "archive_url": "https://api.github.com/repos/metadaddy/blazer/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/metadaddy/blazer/downloads",
                        "issues_url": "https://api.github.com/repos/metadaddy/blazer/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/metadaddy/blazer/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/metadaddy/blazer/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/metadaddy/blazer/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/metadaddy/blazer/labels{/name}",
                        "releases_url": "https://api.github.com/repos/metadaddy/blazer/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/metadaddy/blazer/deployments",
                        "created_at": "2022-11-30T00:02:22Z",
                        "updated_at": "2022-11-30T00:03:02Z",
                        "pushed_at": "2022-11-30T00:02:57Z",
                        "git_url": "git://github.com/metadaddy/blazer.git",
                        "ssh_url": "git@github.com:metadaddy/blazer.git",
                        "clone_url": "https://github.com/metadaddy/blazer.git",
                        "svn_url": "https://github.com/metadaddy/blazer",
                        "homepage": "",
                        "size": 615,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": "Go",
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "other",
                            "name": "Other",
                            "spdx_id": "NOASSERTION",
                            "url": null,
                            "node_id": "MDc6TGljZW5zZTA="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "master"
                    }
                },
                "base": {
                    "label": "Backblaze:master",
                    "ref": "master",
                    "sha": "ba894c124ac6006bd739246ed772ba2fe5d68620",
                    "user": {
                        "login": "Backblaze",
                        "id": 10283486,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjEwMjgzNDg2",
                        "avatar_url": "https://avatars.githubusercontent.com/u/10283486?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/Backblaze",
                        "html_url": "https://github.com/Backblaze",
                        "followers_url": "https://api.github.com/users/Backblaze/followers",
                        "following_url": "https://api.github.com/users/Backblaze/following{/other_user}",
                        "gists_url": "https://api.github.com/users/Backblaze/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/Backblaze/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/Backblaze/subscriptions",
                        "organizations_url": "https://api.github.com/users/Backblaze/orgs",
                        "repos_url": "https://api.github.com/users/Backblaze/repos",
                        "events_url": "https://api.github.com/users/Backblaze/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/Backblaze/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 572276134,
                        "node_id": "R_kgDOIhw9pg",
                        "name": "blazer",
                        "full_name": "Backblaze/blazer",
                        "private": false,
                        "owner": {
                            "login": "Backblaze",
                            "id": 10283486,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjEwMjgzNDg2",
                            "avatar_url": "https://avatars.githubusercontent.com/u/10283486?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/Backblaze",
                            "html_url": "https://github.com/Backblaze",
                            "followers_url": "https://api.github.com/users/Backblaze/followers",
                            "following_url": "https://api.github.com/users/Backblaze/following{/other_user}",
                            "gists_url": "https://api.github.com/users/Backblaze/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/Backblaze/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/Backblaze/subscriptions",
                            "organizations_url": "https://api.github.com/users/Backblaze/orgs",
                            "repos_url": "https://api.github.com/users/Backblaze/repos",
                            "events_url": "https://api.github.com/users/Backblaze/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/Backblaze/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/Backblaze/blazer",
                        "description": "A Go library for Backblaze's B2.",
                        "fork": true,
                        "url": "https://api.github.com/repos/Backblaze/blazer",
                        "forks_url": "https://api.github.com/repos/Backblaze/blazer/forks",
                        "keys_url": "https://api.github.com/repos/Backblaze/blazer/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/Backblaze/blazer/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/Backblaze/blazer/teams",
                        "hooks_url": "https://api.github.com/repos/Backblaze/blazer/hooks",
                        "issue_events_url": "https://api.github.com/repos/Backblaze/blazer/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/Backblaze/blazer/events",
                        "assignees_url": "https://api.github.com/repos/Backblaze/blazer/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/Backblaze/blazer/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/Backblaze/blazer/tags",
                        "blobs_url": "https://api.github.com/repos/Backblaze/blazer/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/Backblaze/blazer/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/Backblaze/blazer/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/Backblaze/blazer/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/Backblaze/blazer/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/Backblaze/blazer/languages",
                        "stargazers_url": "https://api.github.com/repos/Backblaze/blazer/stargazers",
                        "contributors_url": "https://api.github.com/repos/Backblaze/blazer/contributors",
                        "subscribers_url": "https://api.github.com/repos/Backblaze/blazer/subscribers",
                        "subscription_url": "https://api.github.com/repos/Backblaze/blazer/subscription",
                        "commits_url": "https://api.github.com/repos/Backblaze/blazer/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/Backblaze/blazer/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/Backblaze/blazer/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/Backblaze/blazer/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/Backblaze/blazer/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/Backblaze/blazer/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/Backblaze/blazer/merges",
                        "archive_url": "https://api.github.com/repos/Backblaze/blazer/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/Backblaze/blazer/downloads",
                        "issues_url": "https://api.github.com/repos/Backblaze/blazer/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/Backblaze/blazer/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/Backblaze/blazer/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/Backblaze/blazer/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/Backblaze/blazer/labels{/name}",
                        "releases_url": "https://api.github.com/repos/Backblaze/blazer/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/Backblaze/blazer/deployments",
                        "created_at": "2022-11-29T23:22:18Z",
                        "updated_at": "2022-09-15T03:28:49Z",
                        "pushed_at": "2022-05-11T18:58:16Z",
                        "git_url": "git://github.com/Backblaze/blazer.git",
                        "ssh_url": "git@github.com:Backblaze/blazer.git",
                        "clone_url": "https://github.com/Backblaze/blazer.git",
                        "svn_url": "https://github.com/Backblaze/blazer",
                        "homepage": "",
                        "size": 615,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": null,
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 1,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 1,
                        "license": {
                            "key": "other",
                            "name": "Other",
                            "spdx_id": "NOASSERTION",
                            "url": null,
                            "node_id": "MDc6TGljZW5zZTA="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 1,
                        "open_issues": 1,
                        "watchers": 0,
                        "default_branch": "master"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/Backblaze/blazer/pulls/1"
                    },
                    "html": {
                        "href": "https://github.com/Backblaze/blazer/pull/1"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/Backblaze/blazer/issues/1"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/Backblaze/blazer/issues/1/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/Backblaze/blazer/pulls/1/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/Backblaze/blazer/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/Backblaze/blazer/pulls/1/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/Backblaze/blazer/statuses/33365de0f2390cd5c67560303706a9d7e39043a2"
                    }
                },
                "author_association": "MEMBER",
                "auto_merge": null,
                "active_lock_reason": null,
                "merged": false,
                "mergeable": null,
                "rebaseable": null,
                "mergeable_state": "unknown",
                "merged_by": null,
                "comments": 0,
                "review_comments": 0,
                "maintainer_can_modify": true,
                "commits": 1,
                "additions": 11,
                "deletions": 16,
                "changed_files": 1
            }
        },
        "public": true,
        "created_at": "2022-11-30T00:06:44Z",
        "org": {
            "id": 10283486,
            "login": "Backblaze",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/Backblaze",
            "avatar_url": "https://avatars.githubusercontent.com/u/10283486?"
        }
    },
    {
        "id": "25551238562",
        "type": "PushEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 572285370,
            "name": "metadaddy/blazer",
            "url": "https://api.github.com/repos/metadaddy/blazer"
        },
        "payload": {
            "push_id": 11827999289,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/master",
            "head": "33365de0f2390cd5c67560303706a9d7e39043a2",
            "before": "ba894c124ac6006bd739246ed772ba2fe5d68620",
            "commits": [
                {
                    "sha": "33365de0f2390cd5c67560303706a9d7e39043a2",
                    "author": {
                        "email": "pat@backblaze.com",
                        "name": "Pat Patterson"
                    },
                    "message": "Update README",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/blazer/commits/33365de0f2390cd5c67560303706a9d7e39043a2"
                }
            ]
        },
        "public": true,
        "created_at": "2022-11-30T00:02:57Z"
    },
    {
        "id": "25551231420",
        "type": "ForkEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 572276134,
            "name": "Backblaze/blazer",
            "url": "https://api.github.com/repos/Backblaze/blazer"
        },
        "payload": {
            "forkee": {
                "id": 572285370,
                "node_id": "R_kgDOIhxhug",
                "name": "blazer",
                "full_name": "metadaddy/blazer",
                "private": false,
                "owner": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "html_url": "https://github.com/metadaddy/blazer",
                "description": "A Go library for Backblaze's B2.",
                "fork": true,
                "url": "https://api.github.com/repos/metadaddy/blazer",
                "forks_url": "https://api.github.com/repos/metadaddy/blazer/forks",
                "keys_url": "https://api.github.com/repos/metadaddy/blazer/keys{/key_id}",
                "collaborators_url": "https://api.github.com/repos/metadaddy/blazer/collaborators{/collaborator}",
                "teams_url": "https://api.github.com/repos/metadaddy/blazer/teams",
                "hooks_url": "https://api.github.com/repos/metadaddy/blazer/hooks",
                "issue_events_url": "https://api.github.com/repos/metadaddy/blazer/issues/events{/number}",
                "events_url": "https://api.github.com/repos/metadaddy/blazer/events",
                "assignees_url": "https://api.github.com/repos/metadaddy/blazer/assignees{/user}",
                "branches_url": "https://api.github.com/repos/metadaddy/blazer/branches{/branch}",
                "tags_url": "https://api.github.com/repos/metadaddy/blazer/tags",
                "blobs_url": "https://api.github.com/repos/metadaddy/blazer/git/blobs{/sha}",
                "git_tags_url": "https://api.github.com/repos/metadaddy/blazer/git/tags{/sha}",
                "git_refs_url": "https://api.github.com/repos/metadaddy/blazer/git/refs{/sha}",
                "trees_url": "https://api.github.com/repos/metadaddy/blazer/git/trees{/sha}",
                "statuses_url": "https://api.github.com/repos/metadaddy/blazer/statuses/{sha}",
                "languages_url": "https://api.github.com/repos/metadaddy/blazer/languages",
                "stargazers_url": "https://api.github.com/repos/metadaddy/blazer/stargazers",
                "contributors_url": "https://api.github.com/repos/metadaddy/blazer/contributors",
                "subscribers_url": "https://api.github.com/repos/metadaddy/blazer/subscribers",
                "subscription_url": "https://api.github.com/repos/metadaddy/blazer/subscription",
                "commits_url": "https://api.github.com/repos/metadaddy/blazer/commits{/sha}",
                "git_commits_url": "https://api.github.com/repos/metadaddy/blazer/git/commits{/sha}",
                "comments_url": "https://api.github.com/repos/metadaddy/blazer/comments{/number}",
                "issue_comment_url": "https://api.github.com/repos/metadaddy/blazer/issues/comments{/number}",
                "contents_url": "https://api.github.com/repos/metadaddy/blazer/contents/{+path}",
                "compare_url": "https://api.github.com/repos/metadaddy/blazer/compare/{base}...{head}",
                "merges_url": "https://api.github.com/repos/metadaddy/blazer/merges",
                "archive_url": "https://api.github.com/repos/metadaddy/blazer/{archive_format}{/ref}",
                "downloads_url": "https://api.github.com/repos/metadaddy/blazer/downloads",
                "issues_url": "https://api.github.com/repos/metadaddy/blazer/issues{/number}",
                "pulls_url": "https://api.github.com/repos/metadaddy/blazer/pulls{/number}",
                "milestones_url": "https://api.github.com/repos/metadaddy/blazer/milestones{/number}",
                "notifications_url": "https://api.github.com/repos/metadaddy/blazer/notifications{?since,all,participating}",
                "labels_url": "https://api.github.com/repos/metadaddy/blazer/labels{/name}",
                "releases_url": "https://api.github.com/repos/metadaddy/blazer/releases{/id}",
                "deployments_url": "https://api.github.com/repos/metadaddy/blazer/deployments",
                "created_at": "2022-11-30T00:02:22Z",
                "updated_at": "2022-09-15T03:28:49Z",
                "pushed_at": "2022-05-11T18:58:16Z",
                "git_url": "git://github.com/metadaddy/blazer.git",
                "ssh_url": "git@github.com:metadaddy/blazer.git",
                "clone_url": "https://github.com/metadaddy/blazer.git",
                "svn_url": "https://github.com/metadaddy/blazer",
                "homepage": "",
                "size": 615,
                "stargazers_count": 0,
                "watchers_count": 0,
                "language": null,
                "has_issues": false,
                "has_projects": true,
                "has_downloads": true,
                "has_wiki": true,
                "has_pages": false,
                "has_discussions": false,
                "forks_count": 0,
                "mirror_url": null,
                "archived": false,
                "disabled": false,
                "open_issues_count": 0,
                "license": {
                    "key": "other",
                    "name": "Other",
                    "spdx_id": "NOASSERTION",
                    "url": null,
                    "node_id": "MDc6TGljZW5zZTA="
                },
                "allow_forking": true,
                "is_template": false,
                "web_commit_signoff_required": false,
                "topics": [],
                "visibility": "public",
                "forks": 0,
                "open_issues": 0,
                "watchers": 0,
                "default_branch": "master",
                "public": true
            }
        },
        "public": true,
        "created_at": "2022-11-30T00:02:24Z",
        "org": {
            "id": 10283486,
            "login": "Backblaze",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/Backblaze",
            "avatar_url": "https://avatars.githubusercontent.com/u/10283486?"
        }
    },
    {
        "id": "25550618758",
        "type": "PushEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 509274784,
            "name": "metadaddy/trino",
            "url": "https://api.github.com/repos/metadaddy/trino"
        },
        "payload": {
            "push_id": 11827673037,
            "size": 400,
            "distinct_size": 2,
            "ref": "refs/heads/cli-wrong-units",
            "head": "affc258106e74e4ec67b39a29fd78174b3f75e70",
            "before": "9a8ab094ee16249b0c601aedb0c364b300c19c55",
            "commits": [
                {
                    "sha": "f78923b19e63788afb6005e99a5094c5376712ed",
                    "author": {
                        "email": "ashhar.hasan@starburstdata.com",
                        "name": "Ashhar Hasan"
                    },
                    "message": "Update Druid JDBC driver version",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/f78923b19e63788afb6005e99a5094c5376712ed"
                },
                {
                    "sha": "c8f2949d6233c2df1023248c85ba38e61417159c",
                    "author": {
                        "email": "ashhar.hasan@starburstdata.com",
                        "name": "Ashhar Hasan"
                    },
                    "message": "Update protobuf-java version in Pinot connector",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/c8f2949d6233c2df1023248c85ba38e61417159c"
                },
                {
                    "sha": "89ee3a3b5461d2695b3b6a79aae7850195f44be2",
                    "author": {
                        "email": "ashhar.hasan@starburstdata.com",
                        "name": "Ashhar Hasan"
                    },
                    "message": "Update Redshift JDBC driver\n\nThe newer driver fixes some issues with metadata queries where incorrect\ndata type or precision/decimal digits can be returned",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/89ee3a3b5461d2695b3b6a79aae7850195f44be2"
                },
                {
                    "sha": "e98e17ad9199ae85862d95731dbb7d8288fb4ef5",
                    "author": {
                        "email": "ashhar.hasan@starburstdata.com",
                        "name": "Ashhar Hasan"
                    },
                    "message": "Update AWS Java SDK to address CVE-2022-31159\n\nNote that Trino doesn't use TransferManager and is not actually affected.",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/e98e17ad9199ae85862d95731dbb7d8288fb4ef5"
                },
                {
                    "sha": "f9e51977aad684e16a715dcd5e5f25354f7f185b",
                    "author": {
                        "email": "surpass.simple@gmail.com",
                        "name": "tangjiangling"
                    },
                    "message": "Use arrays to initialize the member variables of MultilevelSplitQueue\n\nPreviously in `MultilevelSplitQueue`, `levelScheduledTime` and\n`levelMinPriority` were initialized using arrays, while\n`levelWaitingSplits` and `selectedLevelCounters` were initialized using\n`List`, this commit unifies the style by making all these variables\ninitialized using array style.",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/f9e51977aad684e16a715dcd5e5f25354f7f185b"
                },
                {
                    "sha": "4f5bc7c236f786a6890a10e504ef21f68ca78388",
                    "author": {
                        "email": "surpass.simple@gmail.com",
                        "name": "tangjiangling"
                    },
                    "message": "Rename variables for readability\n\nThe indexes of these arrays are all \"level\" related, so we can rename\nthem.",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/4f5bc7c236f786a6890a10e504ef21f68ca78388"
                },
                {
                    "sha": "c3ebf6e4c94a622878bf80b38629ab565776c715",
                    "author": {
                        "email": "surpass.simple@gmail.com",
                        "name": "tangjiangling"
                    },
                    "message": "Replace `Stream#toArray` with `toArray`",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/c3ebf6e4c94a622878bf80b38629ab565776c715"
                },
                {
                    "sha": "40711d82f43a3b43a4217683843f893cfa470573",
                    "author": {
                        "email": "surpass.simple@gmail.com",
                        "name": "tangjiangling"
                    },
                    "message": "Replace lambda with method reference",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/40711d82f43a3b43a4217683843f893cfa470573"
                },
                {
                    "sha": "b52e31860893f67f9626d7ab38abd4fe1f2b957c",
                    "author": {
                        "email": "surpass.simple@gmail.com",
                        "name": "tangjiangling"
                    },
                    "message": "Simplify with functional style expression",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/b52e31860893f67f9626d7ab38abd4fe1f2b957c"
                },
                {
                    "sha": "b012d610796a6a434f9b1b772cc317ee02e5d96e",
                    "author": {
                        "email": "surpass.simple@gmail.com",
                        "name": "tangjiangling"
                    },
                    "message": "Fix typos",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/b012d610796a6a434f9b1b772cc317ee02e5d96e"
                },
                {
                    "sha": "a1e87ba3de9e55cc2aec9590836142e0cac932bd",
                    "author": {
                        "email": "surpass.simple@gmail.com",
                        "name": "tangjiangling"
                    },
                    "message": "Remove unnecessary boxing",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/a1e87ba3de9e55cc2aec9590836142e0cac932bd"
                },
                {
                    "sha": "3f4771cee916ca244b049eeeb505a541015cb176",
                    "author": {
                        "email": "jacob.baskin@gmail.com",
                        "name": "Jacob Baskin"
                    },
                    "message": "Ensure concurrency/write parallelism for product tests",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/3f4771cee916ca244b049eeeb505a541015cb176"
                },
                {
                    "sha": "0ae69d20d2b9e9ca3e4acd9dadab6a2ae6d69f1c",
                    "author": {
                        "email": "mtraverso@gmail.com",
                        "name": "Martin Traverso"
                    },
                    "message": "Migrate TestRowOperators to new assertions",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/0ae69d20d2b9e9ca3e4acd9dadab6a2ae6d69f1c"
                },
                {
                    "sha": "993b0f18f506d28721c5e98932608740167e7e80",
                    "author": {
                        "email": "mtraverso@gmail.com",
                        "name": "Martin Traverso"
                    },
                    "message": "Migrate TestDateTimeFunctions to new assertions",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/993b0f18f506d28721c5e98932608740167e7e80"
                },
                {
                    "sha": "fdec4b93bde0103588659eafa585a95ede135518",
                    "author": {
                        "email": "mtraverso@gmail.com",
                        "name": "Martin Traverso"
                    },
                    "message": "Use switch expression",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/fdec4b93bde0103588659eafa585a95ede135518"
                },
                {
                    "sha": "49aa6f04ddd57907d89e5017643fdf4ab19ed527",
                    "author": {
                        "email": "mtraverso@gmail.com",
                        "name": "Martin Traverso"
                    },
                    "message": "Migrate TestExpressionCompiler to new assertions",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/49aa6f04ddd57907d89e5017643fdf4ab19ed527"
                },
                {
                    "sha": "fda40d421c0669e055d8cb172296f6820804081a",
                    "author": {
                        "email": "mtraverso@gmail.com",
                        "name": "Martin Traverso"
                    },
                    "message": "Remove support for parallel execution in TestExpressioCompiler\n\nIt's already disabled, it doesn't actually work (tests fail if enabled),\nand the whole suite takes under two minutes to run, so it seems unnecessary.",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/fda40d421c0669e055d8cb172296f6820804081a"
                },
                {
                    "sha": "bd143ce94700dce802289a65a5cc1ef48bcfd6b4",
                    "author": {
                        "email": "mtraverso@gmail.com",
                        "name": "Martin Traverso"
                    },
                    "message": "Migrate test to JUnit 5",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/bd143ce94700dce802289a65a5cc1ef48bcfd6b4"
                },
                {
                    "sha": "ac8f435bc9065d9ab5bc9e8a15dd19014519daed",
                    "author": {
                        "email": "mtraverso@gmail.com",
                        "name": "Martin Traverso"
                    },
                    "message": "Rename methods",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/ac8f435bc9065d9ab5bc9e8a15dd19014519daed"
                },
                {
                    "sha": "29f1c9258d9a7bff185b6516c26da72bd14bb2cb",
                    "author": {
                        "email": "mtraverso@gmail.com",
                        "name": "Martin Traverso"
                    },
                    "message": "Remove unused methods",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/29f1c9258d9a7bff185b6516c26da72bd14bb2cb"
                }
            ]
        },
        "public": true,
        "created_at": "2022-11-29T23:15:20Z"
    },
    {
        "id": "25550505281",
        "type": "PushEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 509274784,
            "name": "metadaddy/trino",
            "url": "https://api.github.com/repos/metadaddy/trino"
        },
        "payload": {
            "push_id": 11827616407,
            "size": 399,
            "distinct_size": 399,
            "ref": "refs/heads/cli-wrong-units",
            "head": "9a8ab094ee16249b0c601aedb0c364b300c19c55",
            "before": "3f602f00ac8f1e2dc2f365791b58e5b9db6f6693",
            "commits": [
                {
                    "sha": "f5d2a223f9ba4bd1498dfd2bdc36c6c9a13e2d7e",
                    "author": {
                        "email": "ashhar.hasan@starburstdata.com",
                        "name": "Ashhar Hasan"
                    },
                    "message": "Update Druid JDBC driver version",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/f5d2a223f9ba4bd1498dfd2bdc36c6c9a13e2d7e"
                },
                {
                    "sha": "c6f707f6e4fed5bd7d5b97e493768af551e57f84",
                    "author": {
                        "email": "ashhar.hasan@starburstdata.com",
                        "name": "Ashhar Hasan"
                    },
                    "message": "Update protobuf-java version in Pinot connector",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/c6f707f6e4fed5bd7d5b97e493768af551e57f84"
                },
                {
                    "sha": "5008a5fe136bb90232cdf0ee8306fe1d3192ff24",
                    "author": {
                        "email": "ashhar.hasan@starburstdata.com",
                        "name": "Ashhar Hasan"
                    },
                    "message": "Update Redshift JDBC driver\n\nThe newer driver fixes some issues with metadata queries where incorrect\ndata type or precision/decimal digits can be returned",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/5008a5fe136bb90232cdf0ee8306fe1d3192ff24"
                },
                {
                    "sha": "a97e00590c978bab03db04a68bdce4fa5acbfe65",
                    "author": {
                        "email": "ashhar.hasan@starburstdata.com",
                        "name": "Ashhar Hasan"
                    },
                    "message": "Update AWS Java SDK to address CVE-2022-31159\n\nNote that Trino doesn't use TransferManager and is not actually affected.",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/a97e00590c978bab03db04a68bdce4fa5acbfe65"
                },
                {
                    "sha": "50bae1409e13447fd70440ecff9323d58d7e8e20",
                    "author": {
                        "email": "surpass.simple@gmail.com",
                        "name": "tangjiangling"
                    },
                    "message": "Use arrays to initialize the member variables of MultilevelSplitQueue\n\nPreviously in `MultilevelSplitQueue`, `levelScheduledTime` and\n`levelMinPriority` were initialized using arrays, while\n`levelWaitingSplits` and `selectedLevelCounters` were initialized using\n`List`, this commit unifies the style by making all these variables\ninitialized using array style.",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/50bae1409e13447fd70440ecff9323d58d7e8e20"
                },
                {
                    "sha": "4d5f4e8d820807baba61582534dbbf574fe5156d",
                    "author": {
                        "email": "surpass.simple@gmail.com",
                        "name": "tangjiangling"
                    },
                    "message": "Rename variables for readability\n\nThe indexes of these arrays are all \"level\" related, so we can rename\nthem.",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/4d5f4e8d820807baba61582534dbbf574fe5156d"
                },
                {
                    "sha": "fd835de13fbafaff34b249a692214ace48ecbbbe",
                    "author": {
                        "email": "surpass.simple@gmail.com",
                        "name": "tangjiangling"
                    },
                    "message": "Replace `Stream#toArray` with `toArray`",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/fd835de13fbafaff34b249a692214ace48ecbbbe"
                },
                {
                    "sha": "e4493906ff6d694a0e5d3bd77c15e5ccc70cc5f5",
                    "author": {
                        "email": "surpass.simple@gmail.com",
                        "name": "tangjiangling"
                    },
                    "message": "Replace lambda with method reference",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/e4493906ff6d694a0e5d3bd77c15e5ccc70cc5f5"
                },
                {
                    "sha": "5eeef2a7feb6ff4a7bcd785e2472f408572032db",
                    "author": {
                        "email": "surpass.simple@gmail.com",
                        "name": "tangjiangling"
                    },
                    "message": "Simplify with functional style expression",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/5eeef2a7feb6ff4a7bcd785e2472f408572032db"
                },
                {
                    "sha": "7bb006265b5ce7351a82fa6003b5945696da7608",
                    "author": {
                        "email": "surpass.simple@gmail.com",
                        "name": "tangjiangling"
                    },
                    "message": "Fix typos",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/7bb006265b5ce7351a82fa6003b5945696da7608"
                },
                {
                    "sha": "36de654dd86df8bc87a88329793d144649b94be0",
                    "author": {
                        "email": "surpass.simple@gmail.com",
                        "name": "tangjiangling"
                    },
                    "message": "Remove unnecessary boxing",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/36de654dd86df8bc87a88329793d144649b94be0"
                },
                {
                    "sha": "bef4b9b1272a2be017ed254186d4686df2421b15",
                    "author": {
                        "email": "jacob.baskin@gmail.com",
                        "name": "Jacob Baskin"
                    },
                    "message": "Ensure concurrency/write parallelism for product tests",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/bef4b9b1272a2be017ed254186d4686df2421b15"
                },
                {
                    "sha": "fd440d593728599c8baa1c967c9b727098fe28ac",
                    "author": {
                        "email": "mtraverso@gmail.com",
                        "name": "Martin Traverso"
                    },
                    "message": "Migrate TestRowOperators to new assertions",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/fd440d593728599c8baa1c967c9b727098fe28ac"
                },
                {
                    "sha": "683a5e12bed678624f319c46b19c6413606ba0d5",
                    "author": {
                        "email": "mtraverso@gmail.com",
                        "name": "Martin Traverso"
                    },
                    "message": "Migrate TestDateTimeFunctions to new assertions",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/683a5e12bed678624f319c46b19c6413606ba0d5"
                },
                {
                    "sha": "26174812c71c85c1461946f2e23f57c14fe1f36a",
                    "author": {
                        "email": "mtraverso@gmail.com",
                        "name": "Martin Traverso"
                    },
                    "message": "Use switch expression",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/26174812c71c85c1461946f2e23f57c14fe1f36a"
                },
                {
                    "sha": "46409d52483ca204fd95e540b4d28df83b957e11",
                    "author": {
                        "email": "mtraverso@gmail.com",
                        "name": "Martin Traverso"
                    },
                    "message": "Migrate TestExpressionCompiler to new assertions",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/46409d52483ca204fd95e540b4d28df83b957e11"
                },
                {
                    "sha": "c4e8860750075f07f362cac41fe0d3319a855a7a",
                    "author": {
                        "email": "mtraverso@gmail.com",
                        "name": "Martin Traverso"
                    },
                    "message": "Remove support for parallel execution in TestExpressioCompiler\n\nIt's already disabled, it doesn't actually work (tests fail if enabled),\nand the whole suite takes under two minutes to run, so it seems unnecessary.",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/c4e8860750075f07f362cac41fe0d3319a855a7a"
                },
                {
                    "sha": "7d770b22c47437eba0a288e95b910e32ae099153",
                    "author": {
                        "email": "mtraverso@gmail.com",
                        "name": "Martin Traverso"
                    },
                    "message": "Migrate test to JUnit 5",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/7d770b22c47437eba0a288e95b910e32ae099153"
                },
                {
                    "sha": "dddaa265c8c2783b8756cedaae5c24290443c8f4",
                    "author": {
                        "email": "mtraverso@gmail.com",
                        "name": "Martin Traverso"
                    },
                    "message": "Rename methods",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/dddaa265c8c2783b8756cedaae5c24290443c8f4"
                },
                {
                    "sha": "e472dc67565d5e04439ae75b575bcff8085121e2",
                    "author": {
                        "email": "mtraverso@gmail.com",
                        "name": "Martin Traverso"
                    },
                    "message": "Remove unused methods",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/e472dc67565d5e04439ae75b575bcff8085121e2"
                }
            ]
        },
        "public": true,
        "created_at": "2022-11-29T23:08:01Z"
    },
    {
        "id": "25548103926",
        "type": "PullRequestEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 166515022,
            "name": "trinodb/trino",
            "url": "https://api.github.com/repos/trinodb/trino"
        },
        "payload": {
            "action": "opened",
            "number": 15246,
            "pull_request": {
                "url": "https://api.github.com/repos/trinodb/trino/pulls/15246",
                "id": 1139513259,
                "node_id": "PR_kwDOCezRTs5D65er",
                "html_url": "https://github.com/trinodb/trino/pull/15246",
                "diff_url": "https://github.com/trinodb/trino/pull/15246.diff",
                "patch_url": "https://github.com/trinodb/trino/pull/15246.patch",
                "issue_url": "https://api.github.com/repos/trinodb/trino/issues/15246",
                "number": 15246,
                "state": "open",
                "locked": false,
                "title": "Support public bucket",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "## Description\r\n\r\nAllow Hive connector to read files from public S3 buckets. Fixes #6127\r\n\r\nAdds boolean connector property `hive.s3.anonymous-requests.enabled` to access a public bucket (no AWS access key or secret key is required).\r\n\r\n<!-- Provide details that would help an engineer who is unfamiliar with this part of the code. -->\r\n## Additional context\r\n\r\nBefore this change, attempts to access a public S3 bucket fail with `AccessDeniedException`. Now, when `hive.s3.anonymous-requests.enabled` is set to `true`, `TrinoS3FileSystem` creates the appropriate `AWSCredentialsProvider` to access the public bucket anonymously.\r\n\r\n<!-- Mark the appropriate option with an (x). Propose a release note if you can. -->\r\n## Release notes\r\n\r\n( ) This is not user-visible or docs only and no release notes are required.\r\n( ) Release notes are required, please propose a release note for me.\r\n(x) Release notes are required, with the following suggested text:\r\n\r\nAllow Hive connector to read data from public S3 buckets via a new `hive.s3.anonymous-requests.enabled` connector property. (#6127)\r\n\r\n## Acknowledgements\r\n\r\nMany thanks to @tooptoop4 for the bulk of the work. I just rebased their changes and added tests and docs.",
                "created_at": "2022-11-29T20:44:22Z",
                "updated_at": "2022-11-29T20:44:22Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": null,
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/trinodb/trino/pulls/15246/commits",
                "review_comments_url": "https://api.github.com/repos/trinodb/trino/pulls/15246/comments",
                "review_comment_url": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/trinodb/trino/issues/15246/comments",
                "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/a88eab9b966d9482404eca0938b37ee82d6e582e",
                "head": {
                    "label": "metadaddy:support-public-bucket",
                    "ref": "support-public-bucket",
                    "sha": "a88eab9b966d9482404eca0938b37ee82d6e582e",
                    "user": {
                        "login": "metadaddy",
                        "id": 723517,
                        "node_id": "MDQ6VXNlcjcyMzUxNw==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/metadaddy",
                        "html_url": "https://github.com/metadaddy",
                        "followers_url": "https://api.github.com/users/metadaddy/followers",
                        "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                        "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                        "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                        "repos_url": "https://api.github.com/users/metadaddy/repos",
                        "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 509274784,
                        "node_id": "R_kgDOHlrqoA",
                        "name": "trino",
                        "full_name": "metadaddy/trino",
                        "private": false,
                        "owner": {
                            "login": "metadaddy",
                            "id": 723517,
                            "node_id": "MDQ6VXNlcjcyMzUxNw==",
                            "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/metadaddy",
                            "html_url": "https://github.com/metadaddy",
                            "followers_url": "https://api.github.com/users/metadaddy/followers",
                            "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                            "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                            "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                            "repos_url": "https://api.github.com/users/metadaddy/repos",
                            "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/metadaddy/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": true,
                        "url": "https://api.github.com/repos/metadaddy/trino",
                        "forks_url": "https://api.github.com/repos/metadaddy/trino/forks",
                        "keys_url": "https://api.github.com/repos/metadaddy/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/metadaddy/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/metadaddy/trino/teams",
                        "hooks_url": "https://api.github.com/repos/metadaddy/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/metadaddy/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/metadaddy/trino/events",
                        "assignees_url": "https://api.github.com/repos/metadaddy/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/metadaddy/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/metadaddy/trino/tags",
                        "blobs_url": "https://api.github.com/repos/metadaddy/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/metadaddy/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/metadaddy/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/metadaddy/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/metadaddy/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/metadaddy/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/metadaddy/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/metadaddy/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/metadaddy/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/metadaddy/trino/subscription",
                        "commits_url": "https://api.github.com/repos/metadaddy/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/metadaddy/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/metadaddy/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/metadaddy/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/metadaddy/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/metadaddy/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/metadaddy/trino/merges",
                        "archive_url": "https://api.github.com/repos/metadaddy/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/metadaddy/trino/downloads",
                        "issues_url": "https://api.github.com/repos/metadaddy/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/metadaddy/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/metadaddy/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/metadaddy/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/metadaddy/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/metadaddy/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/metadaddy/trino/deployments",
                        "created_at": "2022-07-01T00:43:32Z",
                        "updated_at": "2022-07-06T01:44:20Z",
                        "pushed_at": "2022-11-29T20:31:06Z",
                        "git_url": "git://github.com/metadaddy/trino.git",
                        "ssh_url": "git@github.com:metadaddy/trino.git",
                        "clone_url": "https://github.com/metadaddy/trino.git",
                        "svn_url": "https://github.com/metadaddy/trino",
                        "homepage": "https://trino.io",
                        "size": 179144,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": "Java",
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "master"
                    }
                },
                "base": {
                    "label": "trinodb:master",
                    "ref": "master",
                    "sha": "861d51c8b8047d43f017e887231edf01d1561c65",
                    "user": {
                        "login": "trinodb",
                        "id": 34147222,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                        "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/trinodb",
                        "html_url": "https://github.com/trinodb",
                        "followers_url": "https://api.github.com/users/trinodb/followers",
                        "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                        "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                        "organizations_url": "https://api.github.com/users/trinodb/orgs",
                        "repos_url": "https://api.github.com/users/trinodb/repos",
                        "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/trinodb/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 166515022,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNjY1MTUwMjI=",
                        "name": "trino",
                        "full_name": "trinodb/trino",
                        "private": false,
                        "owner": {
                            "login": "trinodb",
                            "id": 34147222,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/trinodb",
                            "html_url": "https://github.com/trinodb",
                            "followers_url": "https://api.github.com/users/trinodb/followers",
                            "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                            "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                            "organizations_url": "https://api.github.com/users/trinodb/orgs",
                            "repos_url": "https://api.github.com/users/trinodb/repos",
                            "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/trinodb/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/trinodb/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": false,
                        "url": "https://api.github.com/repos/trinodb/trino",
                        "forks_url": "https://api.github.com/repos/trinodb/trino/forks",
                        "keys_url": "https://api.github.com/repos/trinodb/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/trinodb/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/trinodb/trino/teams",
                        "hooks_url": "https://api.github.com/repos/trinodb/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/trinodb/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/trinodb/trino/events",
                        "assignees_url": "https://api.github.com/repos/trinodb/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/trinodb/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/trinodb/trino/tags",
                        "blobs_url": "https://api.github.com/repos/trinodb/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/trinodb/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/trinodb/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/trinodb/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/trinodb/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/trinodb/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/trinodb/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/trinodb/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/trinodb/trino/subscription",
                        "commits_url": "https://api.github.com/repos/trinodb/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/trinodb/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/trinodb/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/trinodb/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/trinodb/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/trinodb/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/trinodb/trino/merges",
                        "archive_url": "https://api.github.com/repos/trinodb/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/trinodb/trino/downloads",
                        "issues_url": "https://api.github.com/repos/trinodb/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/trinodb/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/trinodb/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/trinodb/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/trinodb/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/trinodb/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/trinodb/trino/deployments",
                        "created_at": "2019-01-19T06:38:14Z",
                        "updated_at": "2022-11-29T19:42:12Z",
                        "pushed_at": "2022-11-29T20:24:16Z",
                        "git_url": "git://github.com/trinodb/trino.git",
                        "ssh_url": "git@github.com:trinodb/trino.git",
                        "clone_url": "https://github.com/trinodb/trino.git",
                        "svn_url": "https://github.com/trinodb/trino",
                        "homepage": "https://trino.io",
                        "size": 192385,
                        "stargazers_count": 6732,
                        "watchers_count": 6732,
                        "language": "Java",
                        "has_issues": true,
                        "has_projects": false,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": true,
                        "forks_count": 2081,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 2136,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "analytics",
                            "big-data",
                            "data-science",
                            "database",
                            "databases",
                            "datalake",
                            "distributed-database",
                            "distributed-databases",
                            "distributed-systems",
                            "hadoop",
                            "hive",
                            "java",
                            "jdbc",
                            "presto",
                            "prestodb",
                            "query-engine",
                            "sql",
                            "trino"
                        ],
                        "visibility": "public",
                        "forks": 2081,
                        "open_issues": 2136,
                        "watchers": 6732,
                        "default_branch": "master"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15246"
                    },
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15246"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15246"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15246/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15246/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15246/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/trinodb/trino/statuses/a88eab9b966d9482404eca0938b37ee82d6e582e"
                    }
                },
                "author_association": "MEMBER",
                "auto_merge": null,
                "active_lock_reason": null,
                "merged": false,
                "mergeable": null,
                "rebaseable": null,
                "mergeable_state": "unknown",
                "merged_by": null,
                "comments": 0,
                "review_comments": 0,
                "maintainer_can_modify": true,
                "commits": 2,
                "additions": 84,
                "deletions": 2,
                "changed_files": 6
            }
        },
        "public": true,
        "created_at": "2022-11-29T20:44:22Z",
        "org": {
            "id": 34147222,
            "login": "trinodb",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/trinodb",
            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?"
        }
    },
    {
        "id": "25547870741",
        "type": "PushEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 509274784,
            "name": "metadaddy/trino",
            "url": "https://api.github.com/repos/metadaddy/trino"
        },
        "payload": {
            "push_id": 11826293121,
            "size": 400,
            "distinct_size": 2,
            "ref": "refs/heads/support-public-bucket",
            "head": "a88eab9b966d9482404eca0938b37ee82d6e582e",
            "before": "269b16abe95d5016bb844b8f65d3f225e4a350a4",
            "commits": [
                {
                    "sha": "f78923b19e63788afb6005e99a5094c5376712ed",
                    "author": {
                        "email": "ashhar.hasan@starburstdata.com",
                        "name": "Ashhar Hasan"
                    },
                    "message": "Update Druid JDBC driver version",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/f78923b19e63788afb6005e99a5094c5376712ed"
                },
                {
                    "sha": "c8f2949d6233c2df1023248c85ba38e61417159c",
                    "author": {
                        "email": "ashhar.hasan@starburstdata.com",
                        "name": "Ashhar Hasan"
                    },
                    "message": "Update protobuf-java version in Pinot connector",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/c8f2949d6233c2df1023248c85ba38e61417159c"
                },
                {
                    "sha": "89ee3a3b5461d2695b3b6a79aae7850195f44be2",
                    "author": {
                        "email": "ashhar.hasan@starburstdata.com",
                        "name": "Ashhar Hasan"
                    },
                    "message": "Update Redshift JDBC driver\n\nThe newer driver fixes some issues with metadata queries where incorrect\ndata type or precision/decimal digits can be returned",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/89ee3a3b5461d2695b3b6a79aae7850195f44be2"
                },
                {
                    "sha": "e98e17ad9199ae85862d95731dbb7d8288fb4ef5",
                    "author": {
                        "email": "ashhar.hasan@starburstdata.com",
                        "name": "Ashhar Hasan"
                    },
                    "message": "Update AWS Java SDK to address CVE-2022-31159\n\nNote that Trino doesn't use TransferManager and is not actually affected.",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/e98e17ad9199ae85862d95731dbb7d8288fb4ef5"
                },
                {
                    "sha": "f9e51977aad684e16a715dcd5e5f25354f7f185b",
                    "author": {
                        "email": "surpass.simple@gmail.com",
                        "name": "tangjiangling"
                    },
                    "message": "Use arrays to initialize the member variables of MultilevelSplitQueue\n\nPreviously in `MultilevelSplitQueue`, `levelScheduledTime` and\n`levelMinPriority` were initialized using arrays, while\n`levelWaitingSplits` and `selectedLevelCounters` were initialized using\n`List`, this commit unifies the style by making all these variables\ninitialized using array style.",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/f9e51977aad684e16a715dcd5e5f25354f7f185b"
                },
                {
                    "sha": "4f5bc7c236f786a6890a10e504ef21f68ca78388",
                    "author": {
                        "email": "surpass.simple@gmail.com",
                        "name": "tangjiangling"
                    },
                    "message": "Rename variables for readability\n\nThe indexes of these arrays are all \"level\" related, so we can rename\nthem.",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/4f5bc7c236f786a6890a10e504ef21f68ca78388"
                },
                {
                    "sha": "c3ebf6e4c94a622878bf80b38629ab565776c715",
                    "author": {
                        "email": "surpass.simple@gmail.com",
                        "name": "tangjiangling"
                    },
                    "message": "Replace `Stream#toArray` with `toArray`",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/c3ebf6e4c94a622878bf80b38629ab565776c715"
                },
                {
                    "sha": "40711d82f43a3b43a4217683843f893cfa470573",
                    "author": {
                        "email": "surpass.simple@gmail.com",
                        "name": "tangjiangling"
                    },
                    "message": "Replace lambda with method reference",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/40711d82f43a3b43a4217683843f893cfa470573"
                },
                {
                    "sha": "b52e31860893f67f9626d7ab38abd4fe1f2b957c",
                    "author": {
                        "email": "surpass.simple@gmail.com",
                        "name": "tangjiangling"
                    },
                    "message": "Simplify with functional style expression",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/b52e31860893f67f9626d7ab38abd4fe1f2b957c"
                },
                {
                    "sha": "b012d610796a6a434f9b1b772cc317ee02e5d96e",
                    "author": {
                        "email": "surpass.simple@gmail.com",
                        "name": "tangjiangling"
                    },
                    "message": "Fix typos",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/b012d610796a6a434f9b1b772cc317ee02e5d96e"
                },
                {
                    "sha": "a1e87ba3de9e55cc2aec9590836142e0cac932bd",
                    "author": {
                        "email": "surpass.simple@gmail.com",
                        "name": "tangjiangling"
                    },
                    "message": "Remove unnecessary boxing",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/a1e87ba3de9e55cc2aec9590836142e0cac932bd"
                },
                {
                    "sha": "3f4771cee916ca244b049eeeb505a541015cb176",
                    "author": {
                        "email": "jacob.baskin@gmail.com",
                        "name": "Jacob Baskin"
                    },
                    "message": "Ensure concurrency/write parallelism for product tests",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/3f4771cee916ca244b049eeeb505a541015cb176"
                },
                {
                    "sha": "0ae69d20d2b9e9ca3e4acd9dadab6a2ae6d69f1c",
                    "author": {
                        "email": "mtraverso@gmail.com",
                        "name": "Martin Traverso"
                    },
                    "message": "Migrate TestRowOperators to new assertions",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/0ae69d20d2b9e9ca3e4acd9dadab6a2ae6d69f1c"
                },
                {
                    "sha": "993b0f18f506d28721c5e98932608740167e7e80",
                    "author": {
                        "email": "mtraverso@gmail.com",
                        "name": "Martin Traverso"
                    },
                    "message": "Migrate TestDateTimeFunctions to new assertions",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/993b0f18f506d28721c5e98932608740167e7e80"
                },
                {
                    "sha": "fdec4b93bde0103588659eafa585a95ede135518",
                    "author": {
                        "email": "mtraverso@gmail.com",
                        "name": "Martin Traverso"
                    },
                    "message": "Use switch expression",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/fdec4b93bde0103588659eafa585a95ede135518"
                },
                {
                    "sha": "49aa6f04ddd57907d89e5017643fdf4ab19ed527",
                    "author": {
                        "email": "mtraverso@gmail.com",
                        "name": "Martin Traverso"
                    },
                    "message": "Migrate TestExpressionCompiler to new assertions",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/49aa6f04ddd57907d89e5017643fdf4ab19ed527"
                },
                {
                    "sha": "fda40d421c0669e055d8cb172296f6820804081a",
                    "author": {
                        "email": "mtraverso@gmail.com",
                        "name": "Martin Traverso"
                    },
                    "message": "Remove support for parallel execution in TestExpressioCompiler\n\nIt's already disabled, it doesn't actually work (tests fail if enabled),\nand the whole suite takes under two minutes to run, so it seems unnecessary.",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/fda40d421c0669e055d8cb172296f6820804081a"
                },
                {
                    "sha": "bd143ce94700dce802289a65a5cc1ef48bcfd6b4",
                    "author": {
                        "email": "mtraverso@gmail.com",
                        "name": "Martin Traverso"
                    },
                    "message": "Migrate test to JUnit 5",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/bd143ce94700dce802289a65a5cc1ef48bcfd6b4"
                },
                {
                    "sha": "ac8f435bc9065d9ab5bc9e8a15dd19014519daed",
                    "author": {
                        "email": "mtraverso@gmail.com",
                        "name": "Martin Traverso"
                    },
                    "message": "Rename methods",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/ac8f435bc9065d9ab5bc9e8a15dd19014519daed"
                },
                {
                    "sha": "29f1c9258d9a7bff185b6516c26da72bd14bb2cb",
                    "author": {
                        "email": "mtraverso@gmail.com",
                        "name": "Martin Traverso"
                    },
                    "message": "Remove unused methods",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/29f1c9258d9a7bff185b6516c26da72bd14bb2cb"
                }
            ]
        },
        "public": true,
        "created_at": "2022-11-29T20:31:07Z"
    },
    {
        "id": "25547826392",
        "type": "PushEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 509274784,
            "name": "metadaddy/trino",
            "url": "https://api.github.com/repos/metadaddy/trino"
        },
        "payload": {
            "push_id": 11826270030,
            "size": 398,
            "distinct_size": 398,
            "ref": "refs/heads/master",
            "head": "861d51c8b8047d43f017e887231edf01d1561c65",
            "before": "62349751f1c337bee4b93c290cbd1ae563d75a3b",
            "commits": [
                {
                    "sha": "f78923b19e63788afb6005e99a5094c5376712ed",
                    "author": {
                        "email": "ashhar.hasan@starburstdata.com",
                        "name": "Ashhar Hasan"
                    },
                    "message": "Update Druid JDBC driver version",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/f78923b19e63788afb6005e99a5094c5376712ed"
                },
                {
                    "sha": "c8f2949d6233c2df1023248c85ba38e61417159c",
                    "author": {
                        "email": "ashhar.hasan@starburstdata.com",
                        "name": "Ashhar Hasan"
                    },
                    "message": "Update protobuf-java version in Pinot connector",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/c8f2949d6233c2df1023248c85ba38e61417159c"
                },
                {
                    "sha": "89ee3a3b5461d2695b3b6a79aae7850195f44be2",
                    "author": {
                        "email": "ashhar.hasan@starburstdata.com",
                        "name": "Ashhar Hasan"
                    },
                    "message": "Update Redshift JDBC driver\n\nThe newer driver fixes some issues with metadata queries where incorrect\ndata type or precision/decimal digits can be returned",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/89ee3a3b5461d2695b3b6a79aae7850195f44be2"
                },
                {
                    "sha": "e98e17ad9199ae85862d95731dbb7d8288fb4ef5",
                    "author": {
                        "email": "ashhar.hasan@starburstdata.com",
                        "name": "Ashhar Hasan"
                    },
                    "message": "Update AWS Java SDK to address CVE-2022-31159\n\nNote that Trino doesn't use TransferManager and is not actually affected.",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/e98e17ad9199ae85862d95731dbb7d8288fb4ef5"
                },
                {
                    "sha": "f9e51977aad684e16a715dcd5e5f25354f7f185b",
                    "author": {
                        "email": "surpass.simple@gmail.com",
                        "name": "tangjiangling"
                    },
                    "message": "Use arrays to initialize the member variables of MultilevelSplitQueue\n\nPreviously in `MultilevelSplitQueue`, `levelScheduledTime` and\n`levelMinPriority` were initialized using arrays, while\n`levelWaitingSplits` and `selectedLevelCounters` were initialized using\n`List`, this commit unifies the style by making all these variables\ninitialized using array style.",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/f9e51977aad684e16a715dcd5e5f25354f7f185b"
                },
                {
                    "sha": "4f5bc7c236f786a6890a10e504ef21f68ca78388",
                    "author": {
                        "email": "surpass.simple@gmail.com",
                        "name": "tangjiangling"
                    },
                    "message": "Rename variables for readability\n\nThe indexes of these arrays are all \"level\" related, so we can rename\nthem.",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/4f5bc7c236f786a6890a10e504ef21f68ca78388"
                },
                {
                    "sha": "c3ebf6e4c94a622878bf80b38629ab565776c715",
                    "author": {
                        "email": "surpass.simple@gmail.com",
                        "name": "tangjiangling"
                    },
                    "message": "Replace `Stream#toArray` with `toArray`",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/c3ebf6e4c94a622878bf80b38629ab565776c715"
                },
                {
                    "sha": "40711d82f43a3b43a4217683843f893cfa470573",
                    "author": {
                        "email": "surpass.simple@gmail.com",
                        "name": "tangjiangling"
                    },
                    "message": "Replace lambda with method reference",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/40711d82f43a3b43a4217683843f893cfa470573"
                },
                {
                    "sha": "b52e31860893f67f9626d7ab38abd4fe1f2b957c",
                    "author": {
                        "email": "surpass.simple@gmail.com",
                        "name": "tangjiangling"
                    },
                    "message": "Simplify with functional style expression",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/b52e31860893f67f9626d7ab38abd4fe1f2b957c"
                },
                {
                    "sha": "b012d610796a6a434f9b1b772cc317ee02e5d96e",
                    "author": {
                        "email": "surpass.simple@gmail.com",
                        "name": "tangjiangling"
                    },
                    "message": "Fix typos",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/b012d610796a6a434f9b1b772cc317ee02e5d96e"
                },
                {
                    "sha": "a1e87ba3de9e55cc2aec9590836142e0cac932bd",
                    "author": {
                        "email": "surpass.simple@gmail.com",
                        "name": "tangjiangling"
                    },
                    "message": "Remove unnecessary boxing",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/a1e87ba3de9e55cc2aec9590836142e0cac932bd"
                },
                {
                    "sha": "3f4771cee916ca244b049eeeb505a541015cb176",
                    "author": {
                        "email": "jacob.baskin@gmail.com",
                        "name": "Jacob Baskin"
                    },
                    "message": "Ensure concurrency/write parallelism for product tests",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/3f4771cee916ca244b049eeeb505a541015cb176"
                },
                {
                    "sha": "0ae69d20d2b9e9ca3e4acd9dadab6a2ae6d69f1c",
                    "author": {
                        "email": "mtraverso@gmail.com",
                        "name": "Martin Traverso"
                    },
                    "message": "Migrate TestRowOperators to new assertions",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/0ae69d20d2b9e9ca3e4acd9dadab6a2ae6d69f1c"
                },
                {
                    "sha": "993b0f18f506d28721c5e98932608740167e7e80",
                    "author": {
                        "email": "mtraverso@gmail.com",
                        "name": "Martin Traverso"
                    },
                    "message": "Migrate TestDateTimeFunctions to new assertions",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/993b0f18f506d28721c5e98932608740167e7e80"
                },
                {
                    "sha": "fdec4b93bde0103588659eafa585a95ede135518",
                    "author": {
                        "email": "mtraverso@gmail.com",
                        "name": "Martin Traverso"
                    },
                    "message": "Use switch expression",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/fdec4b93bde0103588659eafa585a95ede135518"
                },
                {
                    "sha": "49aa6f04ddd57907d89e5017643fdf4ab19ed527",
                    "author": {
                        "email": "mtraverso@gmail.com",
                        "name": "Martin Traverso"
                    },
                    "message": "Migrate TestExpressionCompiler to new assertions",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/49aa6f04ddd57907d89e5017643fdf4ab19ed527"
                },
                {
                    "sha": "fda40d421c0669e055d8cb172296f6820804081a",
                    "author": {
                        "email": "mtraverso@gmail.com",
                        "name": "Martin Traverso"
                    },
                    "message": "Remove support for parallel execution in TestExpressioCompiler\n\nIt's already disabled, it doesn't actually work (tests fail if enabled),\nand the whole suite takes under two minutes to run, so it seems unnecessary.",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/fda40d421c0669e055d8cb172296f6820804081a"
                },
                {
                    "sha": "bd143ce94700dce802289a65a5cc1ef48bcfd6b4",
                    "author": {
                        "email": "mtraverso@gmail.com",
                        "name": "Martin Traverso"
                    },
                    "message": "Migrate test to JUnit 5",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/bd143ce94700dce802289a65a5cc1ef48bcfd6b4"
                },
                {
                    "sha": "ac8f435bc9065d9ab5bc9e8a15dd19014519daed",
                    "author": {
                        "email": "mtraverso@gmail.com",
                        "name": "Martin Traverso"
                    },
                    "message": "Rename methods",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/ac8f435bc9065d9ab5bc9e8a15dd19014519daed"
                },
                {
                    "sha": "29f1c9258d9a7bff185b6516c26da72bd14bb2cb",
                    "author": {
                        "email": "mtraverso@gmail.com",
                        "name": "Martin Traverso"
                    },
                    "message": "Remove unused methods",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/29f1c9258d9a7bff185b6516c26da72bd14bb2cb"
                }
            ]
        },
        "public": true,
        "created_at": "2022-11-29T20:28:37Z"
    },
    {
        "id": "25547773914",
        "type": "CreateEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 509274784,
            "name": "metadaddy/trino",
            "url": "https://api.github.com/repos/metadaddy/trino"
        },
        "payload": {
            "ref": "support-public-bucket",
            "ref_type": "branch",
            "master_branch": "master",
            "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
            "pusher_type": "user"
        },
        "public": true,
        "created_at": "2022-11-29T20:25:39Z"
    },
    {
        "id": "25519446534",
        "type": "PushEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 567902821,
            "name": "backblaze-b2-samples/cloudflare-b2",
            "url": "https://api.github.com/repos/backblaze-b2-samples/cloudflare-b2"
        },
        "payload": {
            "push_id": 11812077664,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/main",
            "head": "ff556be29f8e8295fb9672a4aa4b0db4ba962444",
            "before": "116bd68b5004a4f0e28fa95362e1b74f08696599",
            "commits": [
                {
                    "sha": "ff556be29f8e8295fb9672a4aa4b0db4ba962444",
                    "author": {
                        "email": "pat@backblaze.com",
                        "name": "Pat Patterson"
                    },
                    "message": "Minor fix to README",
                    "distinct": true,
                    "url": "https://api.github.com/repos/backblaze-b2-samples/cloudflare-b2/commits/ff556be29f8e8295fb9672a4aa4b0db4ba962444"
                }
            ]
        },
        "public": true,
        "created_at": "2022-11-28T19:08:01Z",
        "org": {
            "id": 17604039,
            "login": "backblaze-b2-samples",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/backblaze-b2-samples",
            "avatar_url": "https://avatars.githubusercontent.com/u/17604039?"
        }
    },
    {
        "id": "25519362476",
        "type": "PushEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 567902821,
            "name": "backblaze-b2-samples/cloudflare-b2",
            "url": "https://api.github.com/repos/backblaze-b2-samples/cloudflare-b2"
        },
        "payload": {
            "push_id": 11812039810,
            "size": 3,
            "distinct_size": 3,
            "ref": "refs/heads/main",
            "head": "116bd68b5004a4f0e28fa95362e1b74f08696599",
            "before": "f5380671f1b5cfe8b9227aa441c0eb3b730bc866",
            "commits": [
                {
                    "sha": "0e3f2faaa088de326acf1443167d0a8148add125",
                    "author": {
                        "email": "pat@backblaze.com",
                        "name": "Pat Patterson"
                    },
                    "message": "Rework bucket naming",
                    "distinct": true,
                    "url": "https://api.github.com/repos/backblaze-b2-samples/cloudflare-b2/commits/0e3f2faaa088de326acf1443167d0a8148add125"
                },
                {
                    "sha": "68ca73b448df5fab8c9eedf97040dcaf701b3107",
                    "author": {
                        "email": "pat@backblaze.com",
                        "name": "Pat Patterson"
                    },
                    "message": "Rework bucket naming",
                    "distinct": true,
                    "url": "https://api.github.com/repos/backblaze-b2-samples/cloudflare-b2/commits/68ca73b448df5fab8c9eedf97040dcaf701b3107"
                },
                {
                    "sha": "116bd68b5004a4f0e28fa95362e1b74f08696599",
                    "author": {
                        "email": "pat@backblaze.com",
                        "name": "Pat Patterson"
                    },
                    "message": "Redo config naming",
                    "distinct": true,
                    "url": "https://api.github.com/repos/backblaze-b2-samples/cloudflare-b2/commits/116bd68b5004a4f0e28fa95362e1b74f08696599"
                }
            ]
        },
        "public": true,
        "created_at": "2022-11-28T19:04:22Z",
        "org": {
            "id": 17604039,
            "login": "backblaze-b2-samples",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/backblaze-b2-samples",
            "avatar_url": "https://avatars.githubusercontent.com/u/17604039?"
        }
    },
    {
        "id": "25393422026",
        "type": "PushEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 567902821,
            "name": "backblaze-b2-samples/cloudflare-b2",
            "url": "https://api.github.com/repos/backblaze-b2-samples/cloudflare-b2"
        },
        "payload": {
            "push_id": 11744554881,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/main",
            "head": "f5380671f1b5cfe8b9227aa441c0eb3b730bc866",
            "before": "29a38f154c6d74ef49ac93a5e4e33339e1adf15c",
            "commits": [
                {
                    "sha": "f5380671f1b5cfe8b9227aa441c0eb3b730bc866",
                    "author": {
                        "email": "pat@backblaze.com",
                        "name": "Pat Patterson"
                    },
                    "message": "Disallow list bucket requests",
                    "distinct": true,
                    "url": "https://api.github.com/repos/backblaze-b2-samples/cloudflare-b2/commits/f5380671f1b5cfe8b9227aa441c0eb3b730bc866"
                }
            ]
        },
        "public": true,
        "created_at": "2022-11-22T06:31:57Z",
        "org": {
            "id": 17604039,
            "login": "backblaze-b2-samples",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/backblaze-b2-samples",
            "avatar_url": "https://avatars.githubusercontent.com/u/17604039?"
        }
    },
    {
        "id": "25383731379",
        "type": "PushEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 500179197,
            "name": "metadaddy/metadaddy.github.io",
            "url": "https://api.github.com/repos/metadaddy/metadaddy.github.io"
        },
        "payload": {
            "push_id": 11739675512,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/master",
            "head": "92361b633e663e59faabf24baa9d64ecfb0289bb",
            "before": "2b2247cc6a796ef13ae94181c59611cc60f449b6",
            "commits": [
                {
                    "sha": "92361b633e663e59faabf24baa9d64ecfb0289bb",
                    "author": {
                        "email": "pat@superpat.com",
                        "name": "Pat Patterson"
                    },
                    "message": "Move <a> on index to <link> in head",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/metadaddy.github.io/commits/92361b633e663e59faabf24baa9d64ecfb0289bb"
                }
            ]
        },
        "public": true,
        "created_at": "2022-11-21T19:53:19Z"
    },
    {
        "id": "25349645226",
        "type": "PushEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 567902821,
            "name": "backblaze-b2-samples/cloudflare-b2",
            "url": "https://api.github.com/repos/backblaze-b2-samples/cloudflare-b2"
        },
        "payload": {
            "push_id": 11720375061,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/main",
            "head": "29a38f154c6d74ef49ac93a5e4e33339e1adf15c",
            "before": "4feebaa5da599cfaa504f28b32a1c0e0f14f0023",
            "commits": [
                {
                    "sha": "29a38f154c6d74ef49ac93a5e4e33339e1adf15c",
                    "author": {
                        "email": "pat@backblaze.com",
                        "name": "Pat Patterson"
                    },
                    "message": "Initial version",
                    "distinct": true,
                    "url": "https://api.github.com/repos/backblaze-b2-samples/cloudflare-b2/commits/29a38f154c6d74ef49ac93a5e4e33339e1adf15c"
                }
            ]
        },
        "public": true,
        "created_at": "2022-11-19T16:07:43Z",
        "org": {
            "id": 17604039,
            "login": "backblaze-b2-samples",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/backblaze-b2-samples",
            "avatar_url": "https://avatars.githubusercontent.com/u/17604039?"
        }
    },
    {
        "id": "25349612544",
        "type": "PushEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 567902821,
            "name": "backblaze-b2-samples/cloudflare-b2",
            "url": "https://api.github.com/repos/backblaze-b2-samples/cloudflare-b2"
        },
        "payload": {
            "push_id": 11720352979,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/main",
            "head": "4feebaa5da599cfaa504f28b32a1c0e0f14f0023",
            "before": "a7805984a48c50c8837de6391235cc09d1c34969",
            "commits": [
                {
                    "sha": "4feebaa5da599cfaa504f28b32a1c0e0f14f0023",
                    "author": {
                        "email": "pat@backblaze.com",
                        "name": "Pat Patterson"
                    },
                    "message": "README tweaks",
                    "distinct": true,
                    "url": "https://api.github.com/repos/backblaze-b2-samples/cloudflare-b2/commits/4feebaa5da599cfaa504f28b32a1c0e0f14f0023"
                }
            ]
        },
        "public": true,
        "created_at": "2022-11-19T16:03:15Z",
        "org": {
            "id": 17604039,
            "login": "backblaze-b2-samples",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/backblaze-b2-samples",
            "avatar_url": "https://avatars.githubusercontent.com/u/17604039?"
        }
    },
    {
        "id": "25313608348",
        "type": "WatchEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 6500920,
            "name": "gregrahn/tpcds-kit",
            "url": "https://api.github.com/repos/gregrahn/tpcds-kit"
        },
        "payload": {
            "action": "started"
        },
        "public": true,
        "created_at": "2022-11-17T19:33:51Z"
    },
    {
        "id": "25187991310",
        "type": "PushEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 506752547,
            "name": "metadaddy/trino-getting-started",
            "url": "https://api.github.com/repos/metadaddy/trino-getting-started"
        },
        "payload": {
            "push_id": 11635460736,
            "size": 4,
            "distinct_size": 2,
            "ref": "refs/heads/main",
            "head": "5e0963ba0e3bf267b911925439f90b8e31279c19",
            "before": "58790e463b29274a2011524e05f8de84cbbe8306",
            "commits": [
                {
                    "sha": "4de2e90a5209e8281f4c0186d552720d62d0f17c",
                    "author": {
                        "email": "pat@backblaze.com",
                        "name": "Pat Patterson"
                    },
                    "message": "A few minor README tweaks and corrections",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino-getting-started/commits/4de2e90a5209e8281f4c0186d552720d62d0f17c"
                },
                {
                    "sha": "9a4f44e31df09b83d2ecfd2a4fbaa88b0da8e6f6",
                    "author": {
                        "email": "findinpath@gmail.com",
                        "name": "Marius Grama"
                    },
                    "message": "Merge pull request #10 from metadaddy/readme-corrections\n\nA few minor README tweaks and corrections",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino-getting-started/commits/9a4f44e31df09b83d2ecfd2a4fbaa88b0da8e6f6"
                },
                {
                    "sha": "fb6ea5ceaae7db7dfb374b5b502b76c2b522fd83",
                    "author": {
                        "email": "pat@backblaze.com",
                        "name": "Pat Patterson"
                    },
                    "message": "Add date column to drivestats table",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino-getting-started/commits/fb6ea5ceaae7db7dfb374b5b502b76c2b522fd83"
                },
                {
                    "sha": "5e0963ba0e3bf267b911925439f90b8e31279c19",
                    "author": {
                        "email": "findinpath@gmail.com",
                        "name": "Marius Grama"
                    },
                    "message": "Merge pull request #11 from metadaddy/readme-corrections\n\nAdd date column to drivestats table",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino-getting-started/commits/5e0963ba0e3bf267b911925439f90b8e31279c19"
                }
            ]
        },
        "public": true,
        "created_at": "2022-11-11T20:13:45Z"
    },
    {
        "id": "25186107590",
        "type": "ForkEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 311406909,
            "name": "Backblaze/terraform-provider-b2",
            "url": "https://api.github.com/repos/Backblaze/terraform-provider-b2"
        },
        "payload": {
            "forkee": {
                "id": 564879470,
                "node_id": "R_kgDOIatgbg",
                "name": "terraform-provider-b2",
                "full_name": "metadaddy/terraform-provider-b2",
                "private": false,
                "owner": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "html_url": "https://github.com/metadaddy/terraform-provider-b2",
                "description": "Terraform Provider for Backblaze B2 Cloud Storage",
                "fork": true,
                "url": "https://api.github.com/repos/metadaddy/terraform-provider-b2",
                "forks_url": "https://api.github.com/repos/metadaddy/terraform-provider-b2/forks",
                "keys_url": "https://api.github.com/repos/metadaddy/terraform-provider-b2/keys{/key_id}",
                "collaborators_url": "https://api.github.com/repos/metadaddy/terraform-provider-b2/collaborators{/collaborator}",
                "teams_url": "https://api.github.com/repos/metadaddy/terraform-provider-b2/teams",
                "hooks_url": "https://api.github.com/repos/metadaddy/terraform-provider-b2/hooks",
                "issue_events_url": "https://api.github.com/repos/metadaddy/terraform-provider-b2/issues/events{/number}",
                "events_url": "https://api.github.com/repos/metadaddy/terraform-provider-b2/events",
                "assignees_url": "https://api.github.com/repos/metadaddy/terraform-provider-b2/assignees{/user}",
                "branches_url": "https://api.github.com/repos/metadaddy/terraform-provider-b2/branches{/branch}",
                "tags_url": "https://api.github.com/repos/metadaddy/terraform-provider-b2/tags",
                "blobs_url": "https://api.github.com/repos/metadaddy/terraform-provider-b2/git/blobs{/sha}",
                "git_tags_url": "https://api.github.com/repos/metadaddy/terraform-provider-b2/git/tags{/sha}",
                "git_refs_url": "https://api.github.com/repos/metadaddy/terraform-provider-b2/git/refs{/sha}",
                "trees_url": "https://api.github.com/repos/metadaddy/terraform-provider-b2/git/trees{/sha}",
                "statuses_url": "https://api.github.com/repos/metadaddy/terraform-provider-b2/statuses/{sha}",
                "languages_url": "https://api.github.com/repos/metadaddy/terraform-provider-b2/languages",
                "stargazers_url": "https://api.github.com/repos/metadaddy/terraform-provider-b2/stargazers",
                "contributors_url": "https://api.github.com/repos/metadaddy/terraform-provider-b2/contributors",
                "subscribers_url": "https://api.github.com/repos/metadaddy/terraform-provider-b2/subscribers",
                "subscription_url": "https://api.github.com/repos/metadaddy/terraform-provider-b2/subscription",
                "commits_url": "https://api.github.com/repos/metadaddy/terraform-provider-b2/commits{/sha}",
                "git_commits_url": "https://api.github.com/repos/metadaddy/terraform-provider-b2/git/commits{/sha}",
                "comments_url": "https://api.github.com/repos/metadaddy/terraform-provider-b2/comments{/number}",
                "issue_comment_url": "https://api.github.com/repos/metadaddy/terraform-provider-b2/issues/comments{/number}",
                "contents_url": "https://api.github.com/repos/metadaddy/terraform-provider-b2/contents/{+path}",
                "compare_url": "https://api.github.com/repos/metadaddy/terraform-provider-b2/compare/{base}...{head}",
                "merges_url": "https://api.github.com/repos/metadaddy/terraform-provider-b2/merges",
                "archive_url": "https://api.github.com/repos/metadaddy/terraform-provider-b2/{archive_format}{/ref}",
                "downloads_url": "https://api.github.com/repos/metadaddy/terraform-provider-b2/downloads",
                "issues_url": "https://api.github.com/repos/metadaddy/terraform-provider-b2/issues{/number}",
                "pulls_url": "https://api.github.com/repos/metadaddy/terraform-provider-b2/pulls{/number}",
                "milestones_url": "https://api.github.com/repos/metadaddy/terraform-provider-b2/milestones{/number}",
                "notifications_url": "https://api.github.com/repos/metadaddy/terraform-provider-b2/notifications{?since,all,participating}",
                "labels_url": "https://api.github.com/repos/metadaddy/terraform-provider-b2/labels{/name}",
                "releases_url": "https://api.github.com/repos/metadaddy/terraform-provider-b2/releases{/id}",
                "deployments_url": "https://api.github.com/repos/metadaddy/terraform-provider-b2/deployments",
                "created_at": "2022-11-11T18:08:19Z",
                "updated_at": "2022-10-25T04:13:24Z",
                "pushed_at": "2022-06-24T06:18:57Z",
                "git_url": "git://github.com/metadaddy/terraform-provider-b2.git",
                "ssh_url": "git@github.com:metadaddy/terraform-provider-b2.git",
                "clone_url": "https://github.com/metadaddy/terraform-provider-b2.git",
                "svn_url": "https://github.com/metadaddy/terraform-provider-b2",
                "homepage": "",
                "size": 408,
                "stargazers_count": 0,
                "watchers_count": 0,
                "language": null,
                "has_issues": false,
                "has_projects": true,
                "has_downloads": true,
                "has_wiki": true,
                "has_pages": false,
                "has_discussions": false,
                "forks_count": 0,
                "mirror_url": null,
                "archived": false,
                "disabled": false,
                "open_issues_count": 0,
                "license": {
                    "key": "other",
                    "name": "Other",
                    "spdx_id": "NOASSERTION",
                    "url": null,
                    "node_id": "MDc6TGljZW5zZTA="
                },
                "allow_forking": true,
                "is_template": false,
                "web_commit_signoff_required": false,
                "topics": [],
                "visibility": "public",
                "forks": 0,
                "open_issues": 0,
                "watchers": 0,
                "default_branch": "master",
                "public": true
            }
        },
        "public": true,
        "created_at": "2022-11-11T18:08:20Z",
        "org": {
            "id": 10283486,
            "login": "Backblaze",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/Backblaze",
            "avatar_url": "https://avatars.githubusercontent.com/u/10283486?"
        }
    },
    {
        "id": "25079948402",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 341978481,
            "name": "bitsondatadev/trino-getting-started",
            "url": "https://api.github.com/repos/bitsondatadev/trino-getting-started"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/issues/11",
                "repository_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started",
                "labels_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/issues/11/labels{/name}",
                "comments_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/issues/11/comments",
                "events_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/issues/11/events",
                "html_url": "https://github.com/bitsondatadev/trino-getting-started/pull/11",
                "id": 1436736346,
                "node_id": "PR_kwDOFGItcc5CPq5U",
                "number": 11,
                "title": "Add date column to drivestats table",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 1,
                "created_at": "2022-11-04T23:55:43Z",
                "updated_at": "2022-11-07T18:23:33Z",
                "closed_at": null,
                "author_association": "CONTRIBUTOR",
                "active_lock_reason": null,
                "draft": false,
                "pull_request": {
                    "url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/pulls/11",
                    "html_url": "https://github.com/bitsondatadev/trino-getting-started/pull/11",
                    "diff_url": "https://github.com/bitsondatadev/trino-getting-started/pull/11.diff",
                    "patch_url": "https://github.com/bitsondatadev/trino-getting-started/pull/11.patch",
                    "merged_at": null
                },
                "body": "We added a `date` column to the drivestats table to allow for easier querying - it's much easier to, for example, find the most recent entry in the data set than it was using the `year`, `month` and `day` columns.",
                "reactions": {
                    "url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/issues/11/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/issues/11/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/issues/comments/1306014509",
                "html_url": "https://github.com/bitsondatadev/trino-getting-started/pull/11#issuecomment-1306014509",
                "issue_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/issues/11",
                "id": 1306014509,
                "node_id": "IC_kwDOFGItcc5N2DMt",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2022-11-07T18:23:33Z",
                "updated_at": "2022-11-07T18:23:33Z",
                "author_association": "CONTRIBUTOR",
                "body": "Hi @findinpath,\r\n\r\nThe queries in the README don't go into too much detail, but in writing [this blog post on querying the Drive Stats data using Trino](https://www.backblaze.com/blog/querying-a-decade-of-drive-stats-data/), I had to write queries such as:\r\n\r\n```\r\nSELECT serial_number, MAX(DATE(FORMAT('%04d-%02d-%02d', \r\nyear, month, day))) AS date\r\n    FROM drivestats \r\n    GROUP BY serial_number;\r\n```\r\n\r\nI realized that adding the date column to the schema, alongside the year/month/day we originally specified for the sake of partitioning, would make this sort of query much more straightforward. Of course, this should all go away if/when we migrate from Hive to Iceberg.\r\n\r\nI've regenerated the Parquet data in B2 with the `date` column, so I'd like the schema here to match it.",
                "reactions": {
                    "url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/issues/comments/1306014509/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2022-11-07T18:23:33Z"
    },
    {
        "id": "25050054104",
        "type": "PushEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 500179197,
            "name": "metadaddy/metadaddy.github.io",
            "url": "https://api.github.com/repos/metadaddy/metadaddy.github.io"
        },
        "payload": {
            "push_id": 11564842079,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/master",
            "head": "2b2247cc6a796ef13ae94181c59611cc60f449b6",
            "before": "c571bb8304c324d960e8b5a8fa607f031822f50a",
            "commits": [
                {
                    "sha": "2b2247cc6a796ef13ae94181c59611cc60f449b6",
                    "author": {
                        "email": "pat@superpat.com",
                        "name": "Pat Patterson"
                    },
                    "message": "Add fosstodon link",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/metadaddy.github.io/commits/2b2247cc6a796ef13ae94181c59611cc60f449b6"
                }
            ]
        },
        "public": true,
        "created_at": "2022-11-05T19:21:03Z"
    },
    {
        "id": "25049524711",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 166515022,
            "name": "trinodb/trino",
            "url": "https://api.github.com/repos/trinodb/trino"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/trinodb/trino/issues/6131",
                "repository_url": "https://api.github.com/repos/trinodb/trino",
                "labels_url": "https://api.github.com/repos/trinodb/trino/issues/6131/labels{/name}",
                "comments_url": "https://api.github.com/repos/trinodb/trino/issues/6131/comments",
                "events_url": "https://api.github.com/repos/trinodb/trino/issues/6131/events",
                "html_url": "https://github.com/trinodb/trino/pull/6131",
                "id": 752676545,
                "node_id": "MDExOlB1bGxSZXF1ZXN0NTI4OTQ4MTI5",
                "number": 6131,
                "title": "Support public S3 bucket access",
                "user": {
                    "login": "tooptoop4",
                    "id": 33283496,
                    "node_id": "MDQ6VXNlcjMzMjgzNDk2",
                    "avatar_url": "https://avatars.githubusercontent.com/u/33283496?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/tooptoop4",
                    "html_url": "https://github.com/tooptoop4",
                    "followers_url": "https://api.github.com/users/tooptoop4/followers",
                    "following_url": "https://api.github.com/users/tooptoop4/following{/other_user}",
                    "gists_url": "https://api.github.com/users/tooptoop4/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/tooptoop4/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/tooptoop4/subscriptions",
                    "organizations_url": "https://api.github.com/users/tooptoop4/orgs",
                    "repos_url": "https://api.github.com/users/tooptoop4/repos",
                    "events_url": "https://api.github.com/users/tooptoop4/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/tooptoop4/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 1202580151,
                        "node_id": "MDU6TGFiZWwxMjAyNTgwMTUx",
                        "url": "https://api.github.com/repos/trinodb/trino/labels/cla-signed",
                        "name": "cla-signed",
                        "color": "ededed",
                        "default": false,
                        "description": null
                    }
                ],
                "state": "closed",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 8,
                "created_at": "2020-11-28T13:27:44Z",
                "updated_at": "2022-11-05T17:58:06Z",
                "closed_at": "2022-10-21T06:29:58Z",
                "author_association": "CONTRIBUTOR",
                "active_lock_reason": null,
                "draft": false,
                "pull_request": {
                    "url": "https://api.github.com/repos/trinodb/trino/pulls/6131",
                    "html_url": "https://github.com/trinodb/trino/pull/6131",
                    "diff_url": "https://github.com/trinodb/trino/pull/6131.diff",
                    "patch_url": "https://github.com/trinodb/trino/pull/6131.patch",
                    "merged_at": null
                },
                "body": "Fixes https://github.com/prestosql/presto/issues/6127",
                "reactions": {
                    "url": "https://api.github.com/repos/trinodb/trino/issues/6131/reactions",
                    "total_count": 2,
                    "+1": 2,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/trinodb/trino/issues/6131/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/trinodb/trino/issues/comments/1304601171",
                "html_url": "https://github.com/trinodb/trino/pull/6131#issuecomment-1304601171",
                "issue_url": "https://api.github.com/repos/trinodb/trino/issues/6131",
                "id": 1304601171,
                "node_id": "IC_kwDOCezRTs5NwqJT",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2022-11-05T17:58:06Z",
                "updated_at": "2022-11-05T17:58:06Z",
                "author_association": "MEMBER",
                "body": "BTW - I've rebased @tooptoop4's changes into the current master, and I'm currently testing them. I'll submit a new PR in the next week or so.",
                "reactions": {
                    "url": "https://api.github.com/repos/trinodb/trino/issues/comments/1304601171/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2022-11-05T17:58:06Z",
        "org": {
            "id": 34147222,
            "login": "trinodb",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/trinodb",
            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?"
        }
    },
    {
        "id": "25043027248",
        "type": "PullRequestEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 341978481,
            "name": "bitsondatadev/trino-getting-started",
            "url": "https://api.github.com/repos/bitsondatadev/trino-getting-started"
        },
        "payload": {
            "action": "opened",
            "number": 11,
            "pull_request": {
                "url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/pulls/11",
                "id": 1111404116,
                "node_id": "PR_kwDOFGItcc5CPq5U",
                "html_url": "https://github.com/bitsondatadev/trino-getting-started/pull/11",
                "diff_url": "https://github.com/bitsondatadev/trino-getting-started/pull/11.diff",
                "patch_url": "https://github.com/bitsondatadev/trino-getting-started/pull/11.patch",
                "issue_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/issues/11",
                "number": 11,
                "state": "open",
                "locked": false,
                "title": "Add date column to drivestats table",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "We added a `date` column to the drivestats table to allow for easier querying - it's much easier to, for example, find the most recent entry in the data set than it was using the `year`, `month` and `day' columns.",
                "created_at": "2022-11-04T23:55:43Z",
                "updated_at": "2022-11-04T23:55:43Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": null,
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/pulls/11/commits",
                "review_comments_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/pulls/11/comments",
                "review_comment_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/issues/11/comments",
                "statuses_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/statuses/fb6ea5ceaae7db7dfb374b5b502b76c2b522fd83",
                "head": {
                    "label": "metadaddy:readme-corrections",
                    "ref": "readme-corrections",
                    "sha": "fb6ea5ceaae7db7dfb374b5b502b76c2b522fd83",
                    "user": {
                        "login": "metadaddy",
                        "id": 723517,
                        "node_id": "MDQ6VXNlcjcyMzUxNw==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/metadaddy",
                        "html_url": "https://github.com/metadaddy",
                        "followers_url": "https://api.github.com/users/metadaddy/followers",
                        "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                        "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                        "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                        "repos_url": "https://api.github.com/users/metadaddy/repos",
                        "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 506752547,
                        "node_id": "R_kgDOHjRuIw",
                        "name": "trino-getting-started",
                        "full_name": "metadaddy/trino-getting-started",
                        "private": false,
                        "owner": {
                            "login": "metadaddy",
                            "id": 723517,
                            "node_id": "MDQ6VXNlcjcyMzUxNw==",
                            "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/metadaddy",
                            "html_url": "https://github.com/metadaddy",
                            "followers_url": "https://api.github.com/users/metadaddy/followers",
                            "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                            "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                            "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                            "repos_url": "https://api.github.com/users/metadaddy/repos",
                            "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/metadaddy/trino-getting-started",
                        "description": null,
                        "fork": true,
                        "url": "https://api.github.com/repos/metadaddy/trino-getting-started",
                        "forks_url": "https://api.github.com/repos/metadaddy/trino-getting-started/forks",
                        "keys_url": "https://api.github.com/repos/metadaddy/trino-getting-started/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/metadaddy/trino-getting-started/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/metadaddy/trino-getting-started/teams",
                        "hooks_url": "https://api.github.com/repos/metadaddy/trino-getting-started/hooks",
                        "issue_events_url": "https://api.github.com/repos/metadaddy/trino-getting-started/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/metadaddy/trino-getting-started/events",
                        "assignees_url": "https://api.github.com/repos/metadaddy/trino-getting-started/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/metadaddy/trino-getting-started/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/metadaddy/trino-getting-started/tags",
                        "blobs_url": "https://api.github.com/repos/metadaddy/trino-getting-started/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/metadaddy/trino-getting-started/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/metadaddy/trino-getting-started/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/metadaddy/trino-getting-started/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/metadaddy/trino-getting-started/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/metadaddy/trino-getting-started/languages",
                        "stargazers_url": "https://api.github.com/repos/metadaddy/trino-getting-started/stargazers",
                        "contributors_url": "https://api.github.com/repos/metadaddy/trino-getting-started/contributors",
                        "subscribers_url": "https://api.github.com/repos/metadaddy/trino-getting-started/subscribers",
                        "subscription_url": "https://api.github.com/repos/metadaddy/trino-getting-started/subscription",
                        "commits_url": "https://api.github.com/repos/metadaddy/trino-getting-started/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/metadaddy/trino-getting-started/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/metadaddy/trino-getting-started/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/metadaddy/trino-getting-started/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/metadaddy/trino-getting-started/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/metadaddy/trino-getting-started/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/metadaddy/trino-getting-started/merges",
                        "archive_url": "https://api.github.com/repos/metadaddy/trino-getting-started/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/metadaddy/trino-getting-started/downloads",
                        "issues_url": "https://api.github.com/repos/metadaddy/trino-getting-started/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/metadaddy/trino-getting-started/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/metadaddy/trino-getting-started/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/metadaddy/trino-getting-started/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/metadaddy/trino-getting-started/labels{/name}",
                        "releases_url": "https://api.github.com/repos/metadaddy/trino-getting-started/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/metadaddy/trino-getting-started/deployments",
                        "created_at": "2022-06-23T18:37:35Z",
                        "updated_at": "2022-08-27T02:19:58Z",
                        "pushed_at": "2022-11-04T23:53:17Z",
                        "git_url": "git://github.com/metadaddy/trino-getting-started.git",
                        "ssh_url": "git@github.com:metadaddy/trino-getting-started.git",
                        "clone_url": "https://github.com/metadaddy/trino-getting-started.git",
                        "svn_url": "https://github.com/metadaddy/trino-getting-started",
                        "homepage": null,
                        "size": 21866,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": "Python",
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "main"
                    }
                },
                "base": {
                    "label": "bitsondatadev:main",
                    "ref": "main",
                    "sha": "9a4f44e31df09b83d2ecfd2a4fbaa88b0da8e6f6",
                    "user": {
                        "login": "bitsondatadev",
                        "id": 8547669,
                        "node_id": "MDQ6VXNlcjg1NDc2Njk=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/8547669?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/bitsondatadev",
                        "html_url": "https://github.com/bitsondatadev",
                        "followers_url": "https://api.github.com/users/bitsondatadev/followers",
                        "following_url": "https://api.github.com/users/bitsondatadev/following{/other_user}",
                        "gists_url": "https://api.github.com/users/bitsondatadev/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/bitsondatadev/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/bitsondatadev/subscriptions",
                        "organizations_url": "https://api.github.com/users/bitsondatadev/orgs",
                        "repos_url": "https://api.github.com/users/bitsondatadev/repos",
                        "events_url": "https://api.github.com/users/bitsondatadev/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/bitsondatadev/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 341978481,
                        "node_id": "MDEwOlJlcG9zaXRvcnkzNDE5Nzg0ODE=",
                        "name": "trino-getting-started",
                        "full_name": "bitsondatadev/trino-getting-started",
                        "private": false,
                        "owner": {
                            "login": "bitsondatadev",
                            "id": 8547669,
                            "node_id": "MDQ6VXNlcjg1NDc2Njk=",
                            "avatar_url": "https://avatars.githubusercontent.com/u/8547669?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/bitsondatadev",
                            "html_url": "https://github.com/bitsondatadev",
                            "followers_url": "https://api.github.com/users/bitsondatadev/followers",
                            "following_url": "https://api.github.com/users/bitsondatadev/following{/other_user}",
                            "gists_url": "https://api.github.com/users/bitsondatadev/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/bitsondatadev/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/bitsondatadev/subscriptions",
                            "organizations_url": "https://api.github.com/users/bitsondatadev/orgs",
                            "repos_url": "https://api.github.com/users/bitsondatadev/repos",
                            "events_url": "https://api.github.com/users/bitsondatadev/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/bitsondatadev/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/bitsondatadev/trino-getting-started",
                        "description": null,
                        "fork": false,
                        "url": "https://api.github.com/repos/bitsondatadev/trino-getting-started",
                        "forks_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/forks",
                        "keys_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/teams",
                        "hooks_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/hooks",
                        "issue_events_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/events",
                        "assignees_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/tags",
                        "blobs_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/languages",
                        "stargazers_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/stargazers",
                        "contributors_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/contributors",
                        "subscribers_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/subscribers",
                        "subscription_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/subscription",
                        "commits_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/merges",
                        "archive_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/downloads",
                        "issues_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/labels{/name}",
                        "releases_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/deployments",
                        "created_at": "2021-02-24T17:23:52Z",
                        "updated_at": "2022-11-01T18:33:10Z",
                        "pushed_at": "2022-11-04T23:55:44Z",
                        "git_url": "git://github.com/bitsondatadev/trino-getting-started.git",
                        "ssh_url": "git@github.com:bitsondatadev/trino-getting-started.git",
                        "clone_url": "https://github.com/bitsondatadev/trino-getting-started.git",
                        "svn_url": "https://github.com/bitsondatadev/trino-getting-started",
                        "homepage": null,
                        "size": 21867,
                        "stargazers_count": 129,
                        "watchers_count": 129,
                        "language": "Python",
                        "has_issues": true,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "forks_count": 48,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 5,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 48,
                        "open_issues": 5,
                        "watchers": 129,
                        "default_branch": "main"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/bitsondatadev/trino-getting-started/pulls/11"
                    },
                    "html": {
                        "href": "https://github.com/bitsondatadev/trino-getting-started/pull/11"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/bitsondatadev/trino-getting-started/issues/11"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/bitsondatadev/trino-getting-started/issues/11/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/bitsondatadev/trino-getting-started/pulls/11/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/bitsondatadev/trino-getting-started/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/bitsondatadev/trino-getting-started/pulls/11/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/bitsondatadev/trino-getting-started/statuses/fb6ea5ceaae7db7dfb374b5b502b76c2b522fd83"
                    }
                },
                "author_association": "CONTRIBUTOR",
                "auto_merge": null,
                "active_lock_reason": null,
                "merged": false,
                "mergeable": null,
                "rebaseable": null,
                "mergeable_state": "unknown",
                "merged_by": null,
                "comments": 0,
                "review_comments": 0,
                "maintainer_can_modify": true,
                "commits": 1,
                "additions": 2,
                "deletions": 0,
                "changed_files": 1
            }
        },
        "public": true,
        "created_at": "2022-11-04T23:55:44Z"
    },
    {
        "id": "25043010432",
        "type": "PushEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 506752547,
            "name": "metadaddy/trino-getting-started",
            "url": "https://api.github.com/repos/metadaddy/trino-getting-started"
        },
        "payload": {
            "push_id": 11560148359,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/readme-corrections",
            "head": "fb6ea5ceaae7db7dfb374b5b502b76c2b522fd83",
            "before": "4de2e90a5209e8281f4c0186d552720d62d0f17c",
            "commits": [
                {
                    "sha": "fb6ea5ceaae7db7dfb374b5b502b76c2b522fd83",
                    "author": {
                        "email": "pat@backblaze.com",
                        "name": "Pat Patterson"
                    },
                    "message": "Add date column to drivestats table",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino-getting-started/commits/fb6ea5ceaae7db7dfb374b5b502b76c2b522fd83"
                }
            ]
        },
        "public": true,
        "created_at": "2022-11-04T23:53:18Z"
    },
    {
        "id": "24994763180",
        "type": "PullRequestEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 560949628,
            "name": "rmoff/devrel-mastodon",
            "url": "https://api.github.com/repos/rmoff/devrel-mastodon"
        },
        "payload": {
            "action": "opened",
            "number": 8,
            "pull_request": {
                "url": "https://api.github.com/repos/rmoff/devrel-mastodon/pulls/8",
                "id": 1108900143,
                "node_id": "PR_kwDOIW9pfM5CGHkv",
                "html_url": "https://github.com/rmoff/devrel-mastodon/pull/8",
                "diff_url": "https://github.com/rmoff/devrel-mastodon/pull/8.diff",
                "patch_url": "https://github.com/rmoff/devrel-mastodon/pull/8.patch",
                "issue_url": "https://api.github.com/repos/rmoff/devrel-mastodon/issues/8",
                "number": 8,
                "state": "open",
                "locked": false,
                "title": "Add metadaddy",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": null,
                "created_at": "2022-11-02T22:27:58Z",
                "updated_at": "2022-11-02T22:27:58Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": null,
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/rmoff/devrel-mastodon/pulls/8/commits",
                "review_comments_url": "https://api.github.com/repos/rmoff/devrel-mastodon/pulls/8/comments",
                "review_comment_url": "https://api.github.com/repos/rmoff/devrel-mastodon/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/rmoff/devrel-mastodon/issues/8/comments",
                "statuses_url": "https://api.github.com/repos/rmoff/devrel-mastodon/statuses/8c56616d2029a3bf37b9f8b56ee63b0fd435560c",
                "head": {
                    "label": "metadaddy:add-metadaddy",
                    "ref": "add-metadaddy",
                    "sha": "8c56616d2029a3bf37b9f8b56ee63b0fd435560c",
                    "user": {
                        "login": "metadaddy",
                        "id": 723517,
                        "node_id": "MDQ6VXNlcjcyMzUxNw==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/metadaddy",
                        "html_url": "https://github.com/metadaddy",
                        "followers_url": "https://api.github.com/users/metadaddy/followers",
                        "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                        "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                        "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                        "repos_url": "https://api.github.com/users/metadaddy/repos",
                        "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 561068352,
                        "node_id": "R_kgDOIXE5QA",
                        "name": "devrel-mastodon",
                        "full_name": "metadaddy/devrel-mastodon",
                        "private": false,
                        "owner": {
                            "login": "metadaddy",
                            "id": 723517,
                            "node_id": "MDQ6VXNlcjcyMzUxNw==",
                            "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/metadaddy",
                            "html_url": "https://github.com/metadaddy",
                            "followers_url": "https://api.github.com/users/metadaddy/followers",
                            "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                            "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                            "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                            "repos_url": "https://api.github.com/users/metadaddy/repos",
                            "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/metadaddy/devrel-mastodon",
                        "description": "List of DevRel folk on Mastodon",
                        "fork": true,
                        "url": "https://api.github.com/repos/metadaddy/devrel-mastodon",
                        "forks_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/forks",
                        "keys_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/teams",
                        "hooks_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/hooks",
                        "issue_events_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/events",
                        "assignees_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/tags",
                        "blobs_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/languages",
                        "stargazers_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/stargazers",
                        "contributors_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/contributors",
                        "subscribers_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/subscribers",
                        "subscription_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/subscription",
                        "commits_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/merges",
                        "archive_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/downloads",
                        "issues_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/labels{/name}",
                        "releases_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/deployments",
                        "created_at": "2022-11-02T21:54:14Z",
                        "updated_at": "2022-11-02T19:59:14Z",
                        "pushed_at": "2022-11-02T22:27:47Z",
                        "git_url": "git://github.com/metadaddy/devrel-mastodon.git",
                        "ssh_url": "git@github.com:metadaddy/devrel-mastodon.git",
                        "clone_url": "https://github.com/metadaddy/devrel-mastodon.git",
                        "svn_url": "https://github.com/metadaddy/devrel-mastodon",
                        "homepage": "",
                        "size": 11,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": null,
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": false,
                        "has_pages": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": null,
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "main"
                    }
                },
                "base": {
                    "label": "rmoff:main",
                    "ref": "main",
                    "sha": "c8dd21bc7145719d3a137be85f2ccf5f4d6545a6",
                    "user": {
                        "login": "rmoff",
                        "id": 3671582,
                        "node_id": "MDQ6VXNlcjM2NzE1ODI=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/3671582?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/rmoff",
                        "html_url": "https://github.com/rmoff",
                        "followers_url": "https://api.github.com/users/rmoff/followers",
                        "following_url": "https://api.github.com/users/rmoff/following{/other_user}",
                        "gists_url": "https://api.github.com/users/rmoff/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/rmoff/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/rmoff/subscriptions",
                        "organizations_url": "https://api.github.com/users/rmoff/orgs",
                        "repos_url": "https://api.github.com/users/rmoff/repos",
                        "events_url": "https://api.github.com/users/rmoff/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/rmoff/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 560949628,
                        "node_id": "R_kgDOIW9pfA",
                        "name": "devrel-mastodon",
                        "full_name": "rmoff/devrel-mastodon",
                        "private": false,
                        "owner": {
                            "login": "rmoff",
                            "id": 3671582,
                            "node_id": "MDQ6VXNlcjM2NzE1ODI=",
                            "avatar_url": "https://avatars.githubusercontent.com/u/3671582?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/rmoff",
                            "html_url": "https://github.com/rmoff",
                            "followers_url": "https://api.github.com/users/rmoff/followers",
                            "following_url": "https://api.github.com/users/rmoff/following{/other_user}",
                            "gists_url": "https://api.github.com/users/rmoff/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/rmoff/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/rmoff/subscriptions",
                            "organizations_url": "https://api.github.com/users/rmoff/orgs",
                            "repos_url": "https://api.github.com/users/rmoff/repos",
                            "events_url": "https://api.github.com/users/rmoff/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/rmoff/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/rmoff/devrel-mastodon",
                        "description": "List of DevRel folk on Mastodon",
                        "fork": false,
                        "url": "https://api.github.com/repos/rmoff/devrel-mastodon",
                        "forks_url": "https://api.github.com/repos/rmoff/devrel-mastodon/forks",
                        "keys_url": "https://api.github.com/repos/rmoff/devrel-mastodon/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/rmoff/devrel-mastodon/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/rmoff/devrel-mastodon/teams",
                        "hooks_url": "https://api.github.com/repos/rmoff/devrel-mastodon/hooks",
                        "issue_events_url": "https://api.github.com/repos/rmoff/devrel-mastodon/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/rmoff/devrel-mastodon/events",
                        "assignees_url": "https://api.github.com/repos/rmoff/devrel-mastodon/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/rmoff/devrel-mastodon/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/rmoff/devrel-mastodon/tags",
                        "blobs_url": "https://api.github.com/repos/rmoff/devrel-mastodon/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/rmoff/devrel-mastodon/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/rmoff/devrel-mastodon/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/rmoff/devrel-mastodon/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/rmoff/devrel-mastodon/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/rmoff/devrel-mastodon/languages",
                        "stargazers_url": "https://api.github.com/repos/rmoff/devrel-mastodon/stargazers",
                        "contributors_url": "https://api.github.com/repos/rmoff/devrel-mastodon/contributors",
                        "subscribers_url": "https://api.github.com/repos/rmoff/devrel-mastodon/subscribers",
                        "subscription_url": "https://api.github.com/repos/rmoff/devrel-mastodon/subscription",
                        "commits_url": "https://api.github.com/repos/rmoff/devrel-mastodon/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/rmoff/devrel-mastodon/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/rmoff/devrel-mastodon/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/rmoff/devrel-mastodon/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/rmoff/devrel-mastodon/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/rmoff/devrel-mastodon/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/rmoff/devrel-mastodon/merges",
                        "archive_url": "https://api.github.com/repos/rmoff/devrel-mastodon/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/rmoff/devrel-mastodon/downloads",
                        "issues_url": "https://api.github.com/repos/rmoff/devrel-mastodon/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/rmoff/devrel-mastodon/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/rmoff/devrel-mastodon/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/rmoff/devrel-mastodon/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/rmoff/devrel-mastodon/labels{/name}",
                        "releases_url": "https://api.github.com/repos/rmoff/devrel-mastodon/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/rmoff/devrel-mastodon/deployments",
                        "created_at": "2022-11-02T16:01:51Z",
                        "updated_at": "2022-11-02T19:59:14Z",
                        "pushed_at": "2022-11-02T21:21:36Z",
                        "git_url": "git://github.com/rmoff/devrel-mastodon.git",
                        "ssh_url": "git@github.com:rmoff/devrel-mastodon.git",
                        "clone_url": "https://github.com/rmoff/devrel-mastodon.git",
                        "svn_url": "https://github.com/rmoff/devrel-mastodon",
                        "homepage": "",
                        "size": 11,
                        "stargazers_count": 1,
                        "watchers_count": 1,
                        "language": null,
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": false,
                        "has_pages": false,
                        "forks_count": 9,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 4,
                        "license": null,
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "devrel",
                            "mastodon"
                        ],
                        "visibility": "public",
                        "forks": 9,
                        "open_issues": 4,
                        "watchers": 1,
                        "default_branch": "main"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/rmoff/devrel-mastodon/pulls/8"
                    },
                    "html": {
                        "href": "https://github.com/rmoff/devrel-mastodon/pull/8"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/rmoff/devrel-mastodon/issues/8"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/rmoff/devrel-mastodon/issues/8/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/rmoff/devrel-mastodon/pulls/8/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/rmoff/devrel-mastodon/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/rmoff/devrel-mastodon/pulls/8/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/rmoff/devrel-mastodon/statuses/8c56616d2029a3bf37b9f8b56ee63b0fd435560c"
                    }
                },
                "author_association": "NONE",
                "auto_merge": null,
                "active_lock_reason": null,
                "merged": false,
                "mergeable": null,
                "rebaseable": null,
                "mergeable_state": "unknown",
                "merged_by": null,
                "comments": 0,
                "review_comments": 0,
                "maintainer_can_modify": true,
                "commits": 1,
                "additions": 1,
                "deletions": 0,
                "changed_files": 1
            }
        },
        "public": true,
        "created_at": "2022-11-02T22:27:59Z"
    },
    {
        "id": "24994760655",
        "type": "CreateEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 561068352,
            "name": "metadaddy/devrel-mastodon",
            "url": "https://api.github.com/repos/metadaddy/devrel-mastodon"
        },
        "payload": {
            "ref": "add-metadaddy",
            "ref_type": "branch",
            "master_branch": "main",
            "description": "List of DevRel folk on Mastodon",
            "pusher_type": "user"
        },
        "public": true,
        "created_at": "2022-11-02T22:27:48Z"
    },
    {
        "id": "24994269382",
        "type": "ForkEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 560949628,
            "name": "rmoff/devrel-mastodon",
            "url": "https://api.github.com/repos/rmoff/devrel-mastodon"
        },
        "payload": {
            "forkee": {
                "id": 561068352,
                "node_id": "R_kgDOIXE5QA",
                "name": "devrel-mastodon",
                "full_name": "metadaddy/devrel-mastodon",
                "private": false,
                "owner": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "html_url": "https://github.com/metadaddy/devrel-mastodon",
                "description": "List of DevRel folk on Mastodon",
                "fork": true,
                "url": "https://api.github.com/repos/metadaddy/devrel-mastodon",
                "forks_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/forks",
                "keys_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/keys{/key_id}",
                "collaborators_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/collaborators{/collaborator}",
                "teams_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/teams",
                "hooks_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/hooks",
                "issue_events_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/issues/events{/number}",
                "events_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/events",
                "assignees_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/assignees{/user}",
                "branches_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/branches{/branch}",
                "tags_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/tags",
                "blobs_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/git/blobs{/sha}",
                "git_tags_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/git/tags{/sha}",
                "git_refs_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/git/refs{/sha}",
                "trees_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/git/trees{/sha}",
                "statuses_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/statuses/{sha}",
                "languages_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/languages",
                "stargazers_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/stargazers",
                "contributors_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/contributors",
                "subscribers_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/subscribers",
                "subscription_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/subscription",
                "commits_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/commits{/sha}",
                "git_commits_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/git/commits{/sha}",
                "comments_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/comments{/number}",
                "issue_comment_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/issues/comments{/number}",
                "contents_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/contents/{+path}",
                "compare_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/compare/{base}...{head}",
                "merges_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/merges",
                "archive_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/{archive_format}{/ref}",
                "downloads_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/downloads",
                "issues_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/issues{/number}",
                "pulls_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/pulls{/number}",
                "milestones_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/milestones{/number}",
                "notifications_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/notifications{?since,all,participating}",
                "labels_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/labels{/name}",
                "releases_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/releases{/id}",
                "deployments_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/deployments",
                "created_at": "2022-11-02T21:54:14Z",
                "updated_at": "2022-11-02T19:59:14Z",
                "pushed_at": "2022-11-02T21:21:36Z",
                "git_url": "git://github.com/metadaddy/devrel-mastodon.git",
                "ssh_url": "git@github.com:metadaddy/devrel-mastodon.git",
                "clone_url": "https://github.com/metadaddy/devrel-mastodon.git",
                "svn_url": "https://github.com/metadaddy/devrel-mastodon",
                "homepage": "",
                "size": 11,
                "stargazers_count": 0,
                "watchers_count": 0,
                "language": null,
                "has_issues": false,
                "has_projects": true,
                "has_downloads": true,
                "has_wiki": false,
                "has_pages": false,
                "forks_count": 0,
                "mirror_url": null,
                "archived": false,
                "disabled": false,
                "open_issues_count": 0,
                "license": null,
                "allow_forking": true,
                "is_template": false,
                "web_commit_signoff_required": false,
                "topics": [],
                "visibility": "public",
                "forks": 0,
                "open_issues": 0,
                "watchers": 0,
                "default_branch": "main",
                "public": true
            }
        },
        "public": true,
        "created_at": "2022-11-02T21:54:15Z"
    },
    {
        "id": "24973802364",
        "type": "PullRequestEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 341978481,
            "name": "bitsondatadev/trino-getting-started",
            "url": "https://api.github.com/repos/bitsondatadev/trino-getting-started"
        },
        "payload": {
            "action": "opened",
            "number": 10,
            "pull_request": {
                "url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/pulls/10",
                "id": 1107700733,
                "node_id": "PR_kwDOFGItcc5CBiv9",
                "html_url": "https://github.com/bitsondatadev/trino-getting-started/pull/10",
                "diff_url": "https://github.com/bitsondatadev/trino-getting-started/pull/10.diff",
                "patch_url": "https://github.com/bitsondatadev/trino-getting-started/pull/10.patch",
                "issue_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/issues/10",
                "number": 10,
                "state": "open",
                "locked": false,
                "title": "A few minor README tweaks and corrections",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": null,
                "created_at": "2022-11-02T05:19:06Z",
                "updated_at": "2022-11-02T05:19:06Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": null,
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/pulls/10/commits",
                "review_comments_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/pulls/10/comments",
                "review_comment_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/issues/10/comments",
                "statuses_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/statuses/4de2e90a5209e8281f4c0186d552720d62d0f17c",
                "head": {
                    "label": "metadaddy:readme-corrections",
                    "ref": "readme-corrections",
                    "sha": "4de2e90a5209e8281f4c0186d552720d62d0f17c",
                    "user": {
                        "login": "metadaddy",
                        "id": 723517,
                        "node_id": "MDQ6VXNlcjcyMzUxNw==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/metadaddy",
                        "html_url": "https://github.com/metadaddy",
                        "followers_url": "https://api.github.com/users/metadaddy/followers",
                        "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                        "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                        "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                        "repos_url": "https://api.github.com/users/metadaddy/repos",
                        "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 506752547,
                        "node_id": "R_kgDOHjRuIw",
                        "name": "trino-getting-started",
                        "full_name": "metadaddy/trino-getting-started",
                        "private": false,
                        "owner": {
                            "login": "metadaddy",
                            "id": 723517,
                            "node_id": "MDQ6VXNlcjcyMzUxNw==",
                            "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/metadaddy",
                            "html_url": "https://github.com/metadaddy",
                            "followers_url": "https://api.github.com/users/metadaddy/followers",
                            "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                            "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                            "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                            "repos_url": "https://api.github.com/users/metadaddy/repos",
                            "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/metadaddy/trino-getting-started",
                        "description": null,
                        "fork": true,
                        "url": "https://api.github.com/repos/metadaddy/trino-getting-started",
                        "forks_url": "https://api.github.com/repos/metadaddy/trino-getting-started/forks",
                        "keys_url": "https://api.github.com/repos/metadaddy/trino-getting-started/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/metadaddy/trino-getting-started/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/metadaddy/trino-getting-started/teams",
                        "hooks_url": "https://api.github.com/repos/metadaddy/trino-getting-started/hooks",
                        "issue_events_url": "https://api.github.com/repos/metadaddy/trino-getting-started/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/metadaddy/trino-getting-started/events",
                        "assignees_url": "https://api.github.com/repos/metadaddy/trino-getting-started/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/metadaddy/trino-getting-started/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/metadaddy/trino-getting-started/tags",
                        "blobs_url": "https://api.github.com/repos/metadaddy/trino-getting-started/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/metadaddy/trino-getting-started/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/metadaddy/trino-getting-started/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/metadaddy/trino-getting-started/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/metadaddy/trino-getting-started/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/metadaddy/trino-getting-started/languages",
                        "stargazers_url": "https://api.github.com/repos/metadaddy/trino-getting-started/stargazers",
                        "contributors_url": "https://api.github.com/repos/metadaddy/trino-getting-started/contributors",
                        "subscribers_url": "https://api.github.com/repos/metadaddy/trino-getting-started/subscribers",
                        "subscription_url": "https://api.github.com/repos/metadaddy/trino-getting-started/subscription",
                        "commits_url": "https://api.github.com/repos/metadaddy/trino-getting-started/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/metadaddy/trino-getting-started/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/metadaddy/trino-getting-started/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/metadaddy/trino-getting-started/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/metadaddy/trino-getting-started/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/metadaddy/trino-getting-started/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/metadaddy/trino-getting-started/merges",
                        "archive_url": "https://api.github.com/repos/metadaddy/trino-getting-started/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/metadaddy/trino-getting-started/downloads",
                        "issues_url": "https://api.github.com/repos/metadaddy/trino-getting-started/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/metadaddy/trino-getting-started/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/metadaddy/trino-getting-started/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/metadaddy/trino-getting-started/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/metadaddy/trino-getting-started/labels{/name}",
                        "releases_url": "https://api.github.com/repos/metadaddy/trino-getting-started/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/metadaddy/trino-getting-started/deployments",
                        "created_at": "2022-06-23T18:37:35Z",
                        "updated_at": "2022-08-27T02:19:58Z",
                        "pushed_at": "2022-11-02T05:18:04Z",
                        "git_url": "git://github.com/metadaddy/trino-getting-started.git",
                        "ssh_url": "git@github.com:metadaddy/trino-getting-started.git",
                        "clone_url": "https://github.com/metadaddy/trino-getting-started.git",
                        "svn_url": "https://github.com/metadaddy/trino-getting-started",
                        "homepage": null,
                        "size": 21865,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": "Python",
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "main"
                    }
                },
                "base": {
                    "label": "bitsondatadev:main",
                    "ref": "main",
                    "sha": "58790e463b29274a2011524e05f8de84cbbe8306",
                    "user": {
                        "login": "bitsondatadev",
                        "id": 8547669,
                        "node_id": "MDQ6VXNlcjg1NDc2Njk=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/8547669?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/bitsondatadev",
                        "html_url": "https://github.com/bitsondatadev",
                        "followers_url": "https://api.github.com/users/bitsondatadev/followers",
                        "following_url": "https://api.github.com/users/bitsondatadev/following{/other_user}",
                        "gists_url": "https://api.github.com/users/bitsondatadev/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/bitsondatadev/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/bitsondatadev/subscriptions",
                        "organizations_url": "https://api.github.com/users/bitsondatadev/orgs",
                        "repos_url": "https://api.github.com/users/bitsondatadev/repos",
                        "events_url": "https://api.github.com/users/bitsondatadev/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/bitsondatadev/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 341978481,
                        "node_id": "MDEwOlJlcG9zaXRvcnkzNDE5Nzg0ODE=",
                        "name": "trino-getting-started",
                        "full_name": "bitsondatadev/trino-getting-started",
                        "private": false,
                        "owner": {
                            "login": "bitsondatadev",
                            "id": 8547669,
                            "node_id": "MDQ6VXNlcjg1NDc2Njk=",
                            "avatar_url": "https://avatars.githubusercontent.com/u/8547669?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/bitsondatadev",
                            "html_url": "https://github.com/bitsondatadev",
                            "followers_url": "https://api.github.com/users/bitsondatadev/followers",
                            "following_url": "https://api.github.com/users/bitsondatadev/following{/other_user}",
                            "gists_url": "https://api.github.com/users/bitsondatadev/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/bitsondatadev/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/bitsondatadev/subscriptions",
                            "organizations_url": "https://api.github.com/users/bitsondatadev/orgs",
                            "repos_url": "https://api.github.com/users/bitsondatadev/repos",
                            "events_url": "https://api.github.com/users/bitsondatadev/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/bitsondatadev/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/bitsondatadev/trino-getting-started",
                        "description": null,
                        "fork": false,
                        "url": "https://api.github.com/repos/bitsondatadev/trino-getting-started",
                        "forks_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/forks",
                        "keys_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/teams",
                        "hooks_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/hooks",
                        "issue_events_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/events",
                        "assignees_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/tags",
                        "blobs_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/languages",
                        "stargazers_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/stargazers",
                        "contributors_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/contributors",
                        "subscribers_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/subscribers",
                        "subscription_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/subscription",
                        "commits_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/merges",
                        "archive_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/downloads",
                        "issues_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/labels{/name}",
                        "releases_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/deployments",
                        "created_at": "2021-02-24T17:23:52Z",
                        "updated_at": "2022-11-01T18:33:10Z",
                        "pushed_at": "2022-11-02T05:19:06Z",
                        "git_url": "git://github.com/bitsondatadev/trino-getting-started.git",
                        "ssh_url": "git@github.com:bitsondatadev/trino-getting-started.git",
                        "clone_url": "https://github.com/bitsondatadev/trino-getting-started.git",
                        "svn_url": "https://github.com/bitsondatadev/trino-getting-started",
                        "homepage": null,
                        "size": 21865,
                        "stargazers_count": 129,
                        "watchers_count": 129,
                        "language": "Python",
                        "has_issues": true,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "forks_count": 48,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 5,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 48,
                        "open_issues": 5,
                        "watchers": 129,
                        "default_branch": "main"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/bitsondatadev/trino-getting-started/pulls/10"
                    },
                    "html": {
                        "href": "https://github.com/bitsondatadev/trino-getting-started/pull/10"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/bitsondatadev/trino-getting-started/issues/10"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/bitsondatadev/trino-getting-started/issues/10/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/bitsondatadev/trino-getting-started/pulls/10/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/bitsondatadev/trino-getting-started/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/bitsondatadev/trino-getting-started/pulls/10/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/bitsondatadev/trino-getting-started/statuses/4de2e90a5209e8281f4c0186d552720d62d0f17c"
                    }
                },
                "author_association": "CONTRIBUTOR",
                "auto_merge": null,
                "active_lock_reason": null,
                "merged": false,
                "mergeable": null,
                "rebaseable": null,
                "mergeable_state": "unknown",
                "merged_by": null,
                "comments": 0,
                "review_comments": 0,
                "maintainer_can_modify": true,
                "commits": 1,
                "additions": 6,
                "deletions": 6,
                "changed_files": 1
            }
        },
        "public": true,
        "created_at": "2022-11-02T05:19:06Z"
    },
    {
        "id": "24973791100",
        "type": "CreateEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 506752547,
            "name": "metadaddy/trino-getting-started",
            "url": "https://api.github.com/repos/metadaddy/trino-getting-started"
        },
        "payload": {
            "ref": "readme-corrections",
            "ref_type": "branch",
            "master_branch": "main",
            "description": null,
            "pusher_type": "user"
        },
        "public": true,
        "created_at": "2022-11-02T05:18:05Z"
    },
    {
        "id": "24964939740",
        "type": "WatchEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 341978481,
            "name": "bitsondatadev/trino-getting-started",
            "url": "https://api.github.com/repos/bitsondatadev/trino-getting-started"
        },
        "payload": {
            "action": "started"
        },
        "public": true,
        "created_at": "2022-11-01T18:33:10Z"
    },
    {
        "id": "24964111403",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 166515022,
            "name": "trinodb/trino",
            "url": "https://api.github.com/repos/trinodb/trino"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/trinodb/trino/issues/6131",
                "repository_url": "https://api.github.com/repos/trinodb/trino",
                "labels_url": "https://api.github.com/repos/trinodb/trino/issues/6131/labels{/name}",
                "comments_url": "https://api.github.com/repos/trinodb/trino/issues/6131/comments",
                "events_url": "https://api.github.com/repos/trinodb/trino/issues/6131/events",
                "html_url": "https://github.com/trinodb/trino/pull/6131",
                "id": 752676545,
                "node_id": "MDExOlB1bGxSZXF1ZXN0NTI4OTQ4MTI5",
                "number": 6131,
                "title": "Support public S3 bucket access",
                "user": {
                    "login": "tooptoop4",
                    "id": 33283496,
                    "node_id": "MDQ6VXNlcjMzMjgzNDk2",
                    "avatar_url": "https://avatars.githubusercontent.com/u/33283496?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/tooptoop4",
                    "html_url": "https://github.com/tooptoop4",
                    "followers_url": "https://api.github.com/users/tooptoop4/followers",
                    "following_url": "https://api.github.com/users/tooptoop4/following{/other_user}",
                    "gists_url": "https://api.github.com/users/tooptoop4/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/tooptoop4/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/tooptoop4/subscriptions",
                    "organizations_url": "https://api.github.com/users/tooptoop4/orgs",
                    "repos_url": "https://api.github.com/users/tooptoop4/repos",
                    "events_url": "https://api.github.com/users/tooptoop4/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/tooptoop4/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 1202580151,
                        "node_id": "MDU6TGFiZWwxMjAyNTgwMTUx",
                        "url": "https://api.github.com/repos/trinodb/trino/labels/cla-signed",
                        "name": "cla-signed",
                        "color": "ededed",
                        "default": false,
                        "description": null
                    }
                ],
                "state": "closed",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 6,
                "created_at": "2020-11-28T13:27:44Z",
                "updated_at": "2022-11-01T17:53:30Z",
                "closed_at": "2022-10-21T06:29:58Z",
                "author_association": "CONTRIBUTOR",
                "active_lock_reason": null,
                "draft": false,
                "pull_request": {
                    "url": "https://api.github.com/repos/trinodb/trino/pulls/6131",
                    "html_url": "https://github.com/trinodb/trino/pull/6131",
                    "diff_url": "https://github.com/trinodb/trino/pull/6131.diff",
                    "patch_url": "https://github.com/trinodb/trino/pull/6131.patch",
                    "merged_at": null
                },
                "body": "Fixes https://github.com/prestosql/presto/issues/6127",
                "reactions": {
                    "url": "https://api.github.com/repos/trinodb/trino/issues/6131/reactions",
                    "total_count": 2,
                    "+1": 2,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/trinodb/trino/issues/6131/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/trinodb/trino/issues/comments/1298898008",
                "html_url": "https://github.com/trinodb/trino/pull/6131#issuecomment-1298898008",
                "issue_url": "https://api.github.com/repos/trinodb/trino/issues/6131",
                "id": 1298898008,
                "node_id": "IC_kwDOCezRTs5Na5xY",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2022-11-01T17:53:30Z",
                "updated_at": "2022-11-01T17:53:30Z",
                "author_association": "MEMBER",
                "body": "@mosabua From inspecting the code in the master branch, I can confidently say that this feature is not already available.",
                "reactions": {
                    "url": "https://api.github.com/repos/trinodb/trino/issues/comments/1298898008/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2022-11-01T17:53:30Z",
        "org": {
            "id": 34147222,
            "login": "trinodb",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/trinodb",
            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?"
        }
    },
    {
        "id": "24963884562",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 166515022,
            "name": "trinodb/trino",
            "url": "https://api.github.com/repos/trinodb/trino"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/trinodb/trino/issues/13095",
                "repository_url": "https://api.github.com/repos/trinodb/trino",
                "labels_url": "https://api.github.com/repos/trinodb/trino/issues/13095/labels{/name}",
                "comments_url": "https://api.github.com/repos/trinodb/trino/issues/13095/comments",
                "events_url": "https://api.github.com/repos/trinodb/trino/issues/13095/events",
                "html_url": "https://github.com/trinodb/trino/pull/13095",
                "id": 1295003432,
                "node_id": "PR_kwDOCezRTs465Hjk",
                "number": 13095,
                "title": "Use correct abbreviations for data quantities",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 1202580151,
                        "node_id": "MDU6TGFiZWwxMjAyNTgwMTUx",
                        "url": "https://api.github.com/repos/trinodb/trino/labels/cla-signed",
                        "name": "cla-signed",
                        "color": "ededed",
                        "default": false,
                        "description": null
                    }
                ],
                "state": "closed",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 8,
                "created_at": "2022-07-06T01:57:55Z",
                "updated_at": "2022-11-01T17:42:17Z",
                "closed_at": "2022-11-01T00:37:01Z",
                "author_association": "MEMBER",
                "active_lock_reason": null,
                "draft": false,
                "pull_request": {
                    "url": "https://api.github.com/repos/trinodb/trino/pulls/13095",
                    "html_url": "https://github.com/trinodb/trino/pull/13095",
                    "diff_url": "https://github.com/trinodb/trino/pull/13095.diff",
                    "patch_url": "https://github.com/trinodb/trino/pull/13095.patch",
                    "merged_at": null
                },
                "body": "## Description\r\n\r\nThe Trino CLI currently reports data size incorrectly, using the legacy, 1,024-based, values for K, M, G etc rather than the modern 1,000-based values.\r\n\r\n> Is this change a fix, improvement, new feature, refactoring, or other?\r\n\r\nFix\r\n\r\n> Is this a change to the core query engine, a connector, client library, or the SPI interfaces? (be specific)\r\n\r\nCLI\r\n\r\n> How would you describe this change to a non-technical end user or system administrator?\r\n\r\nThis change corrects the display of data sizes in the CLI to use 1,000-based units.\r\n\r\n## Related issues, pull requests, and links\r\n\r\n* Fixes #13054\r\n\r\n<!-- The following sections are filled in by the maintainer with input from the contributor:\r\nUse :white_check_mark: or (x) to signal selection.\r\n-->\r\n\r\n## Documentation\r\n\r\n( ) No documentation is needed.\r\n( ) Sufficient documentation is included in this PR.\r\n( ) Documentation PR is available with #prnumber.\r\n( ) Documentation issue #issuenumber is filed, and can be handled later.\r\n\r\n## Release notes\r\n\r\n( ) No release notes entries required.\r\n( ) Release notes entries required with the following suggested text:\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/trinodb/trino/issues/13095/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/trinodb/trino/issues/13095/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/trinodb/trino/issues/comments/1298885394",
                "html_url": "https://github.com/trinodb/trino/pull/13095#issuecomment-1298885394",
                "issue_url": "https://api.github.com/repos/trinodb/trino/issues/13095",
                "id": 1298885394,
                "node_id": "IC_kwDOCezRTs5Na2sS",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2022-11-01T17:42:17Z",
                "updated_at": "2022-11-01T17:42:17Z",
                "author_association": "MEMBER",
                "body": "Replaced by #14859",
                "reactions": {
                    "url": "https://api.github.com/repos/trinodb/trino/issues/comments/1298885394/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2022-11-01T17:42:18Z",
        "org": {
            "id": 34147222,
            "login": "trinodb",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/trinodb",
            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?"
        }
    },
    {
        "id": "24963869963",
        "type": "PullRequestEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 166515022,
            "name": "trinodb/trino",
            "url": "https://api.github.com/repos/trinodb/trino"
        },
        "payload": {
            "action": "opened",
            "number": 14859,
            "pull_request": {
                "url": "https://api.github.com/repos/trinodb/trino/pulls/14859",
                "id": 1107087304,
                "node_id": "PR_kwDOCezRTs5B_M_I",
                "html_url": "https://github.com/trinodb/trino/pull/14859",
                "diff_url": "https://github.com/trinodb/trino/pull/14859.diff",
                "patch_url": "https://github.com/trinodb/trino/pull/14859.patch",
                "issue_url": "https://api.github.com/repos/trinodb/trino/issues/14859",
                "number": 14859,
                "state": "open",
                "locked": false,
                "title": "Use correct abbreviations for data quantities. Fixes #13054",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "<!-- Thank you for submitting a pull request! Find more information in our development guide at https://github.com/trinodb/trino/blob/master/.github/DEVELOPMENT.md and contact us on #dev in Slack. -->\r\n<!-- Provide an overview of the PR for maintainers and reviewers. -->\r\n## Description\r\n\r\nThe Trino CLI currently reports data size incorrectly, using the legacy, 1,024-based, values for K, M, G etc rather than the modern 1,000-based values.\r\n\r\n> Is this change a fix, improvement, new feature, refactoring, or other?\r\n\r\nFix\r\n\r\n> Is this a change to the core query engine, a connector, client library, or the SPI interfaces? (be specific)\r\n\r\nCLI\r\n\r\n<!-- Provide a user-friendly explanation, keep it brief if it isn't user-visible. -->\r\n## Non-technical explanation\r\n\r\nThis change corrects the display of data sizes in the CLI to use 1,000-based units.\r\n\r\n\r\n<!-- Mark the appropriate option with an (x). Propose a release note if you can. -->\r\n## Release notes\r\n\r\n( ) This is not user-visible or docs only and no release notes are required.\r\n( ) Release notes are required, please propose a release note for me.\r\n( ) Release notes are required, with the following suggested text:\r\n\r\n## Related issues, pull requests, and links\r\n\r\n* Fixes #13054\r\n* Replaces #13095 ",
                "created_at": "2022-11-01T17:41:35Z",
                "updated_at": "2022-11-01T17:41:35Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": null,
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/trinodb/trino/pulls/14859/commits",
                "review_comments_url": "https://api.github.com/repos/trinodb/trino/pulls/14859/comments",
                "review_comment_url": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/trinodb/trino/issues/14859/comments",
                "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/3f602f00ac8f1e2dc2f365791b58e5b9db6f6693",
                "head": {
                    "label": "metadaddy:cli-wrong-units",
                    "ref": "cli-wrong-units",
                    "sha": "3f602f00ac8f1e2dc2f365791b58e5b9db6f6693",
                    "user": {
                        "login": "metadaddy",
                        "id": 723517,
                        "node_id": "MDQ6VXNlcjcyMzUxNw==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/metadaddy",
                        "html_url": "https://github.com/metadaddy",
                        "followers_url": "https://api.github.com/users/metadaddy/followers",
                        "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                        "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                        "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                        "repos_url": "https://api.github.com/users/metadaddy/repos",
                        "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 509274784,
                        "node_id": "R_kgDOHlrqoA",
                        "name": "trino",
                        "full_name": "metadaddy/trino",
                        "private": false,
                        "owner": {
                            "login": "metadaddy",
                            "id": 723517,
                            "node_id": "MDQ6VXNlcjcyMzUxNw==",
                            "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/metadaddy",
                            "html_url": "https://github.com/metadaddy",
                            "followers_url": "https://api.github.com/users/metadaddy/followers",
                            "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                            "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                            "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                            "repos_url": "https://api.github.com/users/metadaddy/repos",
                            "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/metadaddy/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": true,
                        "url": "https://api.github.com/repos/metadaddy/trino",
                        "forks_url": "https://api.github.com/repos/metadaddy/trino/forks",
                        "keys_url": "https://api.github.com/repos/metadaddy/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/metadaddy/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/metadaddy/trino/teams",
                        "hooks_url": "https://api.github.com/repos/metadaddy/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/metadaddy/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/metadaddy/trino/events",
                        "assignees_url": "https://api.github.com/repos/metadaddy/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/metadaddy/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/metadaddy/trino/tags",
                        "blobs_url": "https://api.github.com/repos/metadaddy/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/metadaddy/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/metadaddy/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/metadaddy/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/metadaddy/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/metadaddy/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/metadaddy/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/metadaddy/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/metadaddy/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/metadaddy/trino/subscription",
                        "commits_url": "https://api.github.com/repos/metadaddy/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/metadaddy/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/metadaddy/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/metadaddy/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/metadaddy/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/metadaddy/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/metadaddy/trino/merges",
                        "archive_url": "https://api.github.com/repos/metadaddy/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/metadaddy/trino/downloads",
                        "issues_url": "https://api.github.com/repos/metadaddy/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/metadaddy/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/metadaddy/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/metadaddy/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/metadaddy/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/metadaddy/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/metadaddy/trino/deployments",
                        "created_at": "2022-07-01T00:43:32Z",
                        "updated_at": "2022-07-06T01:44:20Z",
                        "pushed_at": "2022-11-01T17:34:20Z",
                        "git_url": "git://github.com/metadaddy/trino.git",
                        "ssh_url": "git@github.com:metadaddy/trino.git",
                        "clone_url": "https://github.com/metadaddy/trino.git",
                        "svn_url": "https://github.com/metadaddy/trino",
                        "homepage": "https://trino.io",
                        "size": 179161,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": "Java",
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "master"
                    }
                },
                "base": {
                    "label": "trinodb:master",
                    "ref": "master",
                    "sha": "a1e87ba3de9e55cc2aec9590836142e0cac932bd",
                    "user": {
                        "login": "trinodb",
                        "id": 34147222,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                        "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/trinodb",
                        "html_url": "https://github.com/trinodb",
                        "followers_url": "https://api.github.com/users/trinodb/followers",
                        "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                        "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                        "organizations_url": "https://api.github.com/users/trinodb/orgs",
                        "repos_url": "https://api.github.com/users/trinodb/repos",
                        "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/trinodb/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 166515022,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNjY1MTUwMjI=",
                        "name": "trino",
                        "full_name": "trinodb/trino",
                        "private": false,
                        "owner": {
                            "login": "trinodb",
                            "id": 34147222,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/trinodb",
                            "html_url": "https://github.com/trinodb",
                            "followers_url": "https://api.github.com/users/trinodb/followers",
                            "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                            "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                            "organizations_url": "https://api.github.com/users/trinodb/orgs",
                            "repos_url": "https://api.github.com/users/trinodb/repos",
                            "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/trinodb/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/trinodb/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": false,
                        "url": "https://api.github.com/repos/trinodb/trino",
                        "forks_url": "https://api.github.com/repos/trinodb/trino/forks",
                        "keys_url": "https://api.github.com/repos/trinodb/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/trinodb/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/trinodb/trino/teams",
                        "hooks_url": "https://api.github.com/repos/trinodb/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/trinodb/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/trinodb/trino/events",
                        "assignees_url": "https://api.github.com/repos/trinodb/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/trinodb/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/trinodb/trino/tags",
                        "blobs_url": "https://api.github.com/repos/trinodb/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/trinodb/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/trinodb/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/trinodb/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/trinodb/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/trinodb/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/trinodb/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/trinodb/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/trinodb/trino/subscription",
                        "commits_url": "https://api.github.com/repos/trinodb/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/trinodb/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/trinodb/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/trinodb/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/trinodb/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/trinodb/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/trinodb/trino/merges",
                        "archive_url": "https://api.github.com/repos/trinodb/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/trinodb/trino/downloads",
                        "issues_url": "https://api.github.com/repos/trinodb/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/trinodb/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/trinodb/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/trinodb/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/trinodb/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/trinodb/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/trinodb/trino/deployments",
                        "created_at": "2019-01-19T06:38:14Z",
                        "updated_at": "2022-11-01T16:53:32Z",
                        "pushed_at": "2022-11-01T17:41:35Z",
                        "git_url": "git://github.com/trinodb/trino.git",
                        "ssh_url": "git@github.com:trinodb/trino.git",
                        "clone_url": "https://github.com/trinodb/trino.git",
                        "svn_url": "https://github.com/trinodb/trino",
                        "homepage": "https://trino.io",
                        "size": 179133,
                        "stargazers_count": 6435,
                        "watchers_count": 6435,
                        "language": "Java",
                        "has_issues": true,
                        "has_projects": false,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "forks_count": 2020,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 2205,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "analytics",
                            "big-data",
                            "data-science",
                            "database",
                            "databases",
                            "datalake",
                            "distributed-database",
                            "distributed-databases",
                            "distributed-systems",
                            "hadoop",
                            "hive",
                            "java",
                            "jdbc",
                            "presto",
                            "prestodb",
                            "query-engine",
                            "sql",
                            "trino"
                        ],
                        "visibility": "public",
                        "forks": 2020,
                        "open_issues": 2205,
                        "watchers": 6435,
                        "default_branch": "master"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/14859"
                    },
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/14859"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/14859"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/14859/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/14859/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/14859/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/trinodb/trino/statuses/3f602f00ac8f1e2dc2f365791b58e5b9db6f6693"
                    }
                },
                "author_association": "MEMBER",
                "auto_merge": null,
                "active_lock_reason": null,
                "merged": false,
                "mergeable": null,
                "rebaseable": null,
                "mergeable_state": "unknown",
                "merged_by": null,
                "comments": 0,
                "review_comments": 0,
                "maintainer_can_modify": true,
                "commits": 1,
                "additions": 364,
                "deletions": 10,
                "changed_files": 2
            }
        },
        "public": true,
        "created_at": "2022-11-01T17:41:35Z",
        "org": {
            "id": 34147222,
            "login": "trinodb",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/trinodb",
            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?"
        }
    },
    {
        "id": "24963725482",
        "type": "PushEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 509274784,
            "name": "metadaddy/trino",
            "url": "https://api.github.com/repos/metadaddy/trino"
        },
        "payload": {
            "push_id": 11519836897,
            "size": 1000,
            "distinct_size": 1,
            "ref": "refs/heads/cli-wrong-units",
            "head": "3f602f00ac8f1e2dc2f365791b58e5b9db6f6693",
            "before": "0b7a691461216fa9c06dfaf63899574f4a0e7a22",
            "commits": [
                {
                    "sha": "624fedb3cf139f76f9f2e1d773773f75afa01fe1",
                    "author": {
                        "email": "andriyrosa@gmail.com",
                        "name": "Andrii Rosa"
                    },
                    "message": "Change randomized prefix to contain only hex characters\n\nSome storage systems prefer the prefix to be hexadecimal characters",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/624fedb3cf139f76f9f2e1d773773f75afa01fe1"
                },
                {
                    "sha": "d4288f6fffca2bf850bd1c8c50ff2f6416694b29",
                    "author": {
                        "email": "ashhar.hasan@starburstdata.com",
                        "name": "Ashhar Hasan"
                    },
                    "message": "Disallow table creation in BigQuery with query retries enabled\n\nBigQuery connector doesn't support fault tolerant execution yet.",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/d4288f6fffca2bf850bd1c8c50ff2f6416694b29"
                },
                {
                    "sha": "42f3b8a3bf158352b11ec34dc14be8dbd5ea5ad4",
                    "author": {
                        "email": "ashhar.hasan@starburstdata.com",
                        "name": "Ashhar Hasan"
                    },
                    "message": "Add test to verify CREATE SCHEMA with case-insensitive matching",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/42f3b8a3bf158352b11ec34dc14be8dbd5ea5ad4"
                },
                {
                    "sha": "8fea27c974e5078e8d1105fdb56a2dd417f7750b",
                    "author": {
                        "email": "surpass.simple@gmail.com",
                        "name": "tangjiangling"
                    },
                    "message": "Rename variables for readability\n\nNow this variable only holds the result of the low bound comparison, so\nit could be renamed.",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/8fea27c974e5078e8d1105fdb56a2dd417f7750b"
                },
                {
                    "sha": "1e61a7ce05ce21f9f54f18cf8ba8e38187e38d67",
                    "author": {
                        "email": "mateusz.gajewski@gmail.com",
                        "name": "Mateusz Gajewski"
                    },
                    "message": "Squash Phoenix environment extender into EnvMultinodePhoenix5",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/1e61a7ce05ce21f9f54f18cf8ba8e38187e38d67"
                },
                {
                    "sha": "9ce301813e2de8bc3137e2664fb6b54112f34c3f",
                    "author": {
                        "email": "ebyhry@gmail.com",
                        "name": "Yuya Ebihara"
                    },
                    "message": "Add main method to S3HiveQueryRunner",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/9ce301813e2de8bc3137e2664fb6b54112f34c3f"
                },
                {
                    "sha": "19c2bc45aaa4e5eb90c33c910628cbf09da2b093",
                    "author": {
                        "email": "andriyrosa@gmail.com",
                        "name": "Andrii Rosa"
                    },
                    "message": "Remove unused method in StageTaskSourceFactory",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/19c2bc45aaa4e5eb90c33c910628cbf09da2b093"
                },
                {
                    "sha": "d9402bc77994d858672313b68cacac623d8f3c14",
                    "author": {
                        "email": "andriyrosa@gmail.com",
                        "name": "Andrii Rosa"
                    },
                    "message": "Support coordinator task scheduling in fault tolerant scheduler",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/d9402bc77994d858672313b68cacac623d8f3c14"
                },
                {
                    "sha": "170faf53cd1c6a1a39118ae6d9475f21926b3885",
                    "author": {
                        "email": "andriyrosa@gmail.com",
                        "name": "Andrii Rosa"
                    },
                    "message": "Fix FaultTolerantStageScheduler#isFinished\n\nWait for split enumeration feature to finish before returning true from isFinished",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/170faf53cd1c6a1a39118ae6d9475f21926b3885"
                },
                {
                    "sha": "a183959a962b8c9b012547afc02d566a10cf2591",
                    "author": {
                        "email": "andriyrosa@gmail.com",
                        "name": "Andrii Rosa"
                    },
                    "message": "Transition stage to FINISHED state early\n\nIn FTE a stage is transtitioned to FINISHED only after query completion.\nThis was needed to allow certain tasks to be rescheduled to reconstruct\nlost data (due to unreliable exchange). This mechanism has never been\nutilized and likely will never be as currently the solution is built\nunder assumption that exchange is reliable.",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/a183959a962b8c9b012547afc02d566a10cf2591"
                },
                {
                    "sha": "43d61ab04bef3cbc844193d1f8cc616778fc1cc1",
                    "author": {
                        "email": "andriyrosa@gmail.com",
                        "name": "Andrii Rosa"
                    },
                    "message": "Abort / cancel tasks only once",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/43d61ab04bef3cbc844193d1f8cc616778fc1cc1"
                },
                {
                    "sha": "c9e27f895fb78fab06b9aeb422ed56cb37b79858",
                    "author": {
                        "email": "andriyrosa@gmail.com",
                        "name": "Andrii Rosa"
                    },
                    "message": "Remove FaultTolerantStageSchedule#reportTaskFailure\n\nWith only spooling exchange being used in fault tolerant execution\nthere's no need to report task failures from coordinator what was only\nneeded with direct exchange",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/c9e27f895fb78fab06b9aeb422ed56cb37b79858"
                },
                {
                    "sha": "26ba659305d698eafb5b1d6f5a98a49f27d480f8",
                    "author": {
                        "email": "andriyrosa@gmail.com",
                        "name": "Andrii Rosa"
                    },
                    "message": "Fail tasks directly through SqlStage\n\nTo avoid unnecessary indirections",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/26ba659305d698eafb5b1d6f5a98a49f27d480f8"
                },
                {
                    "sha": "5f685f5cc0fb27fc1cf50dfe2e4b6c2b479b0833",
                    "author": {
                        "email": "andriyrosa@gmail.com",
                        "name": "Andrii Rosa"
                    },
                    "message": "Extract StageManager into a standalone class",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/5f685f5cc0fb27fc1cf50dfe2e4b6c2b479b0833"
                },
                {
                    "sha": "7990d40ea28f548aefde10d1eed147dfe741b84f",
                    "author": {
                        "email": "andriyrosa@gmail.com",
                        "name": "Andrii Rosa"
                    },
                    "message": "Refactor StageManager\n\nDo not pass session separately as it can be obtained through\nQueryStateMachine",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/7990d40ea28f548aefde10d1eed147dfe741b84f"
                },
                {
                    "sha": "d0b0994531c8ebd2c38a88592400410f1dc31d17",
                    "author": {
                        "email": "andriyrosa@gmail.com",
                        "name": "Andrii Rosa"
                    },
                    "message": "Separate fault tolerant and pipelined scheduler implementations",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/d0b0994531c8ebd2c38a88592400410f1dc31d17"
                },
                {
                    "sha": "a977d88b051e6616d1fd9c355362627383abec29",
                    "author": {
                        "email": "lukasz@osipiuk.net",
                        "name": "\u0141ukasz Osipiuk"
                    },
                    "message": "Change data ownership contract in call of ExchangeSink.add\n\nAfter the change the contract changes in a way that ownership of data\npassed as an argument is passed from caller to callee.\nApart from usage in DeduplicatingDirectExchangeBuffer the Slices passed\nas to ExchangeSink.add were single-use and not mutataded/reclaimed\nafterwards.\n\nThe semantics change allows for simplere and more effective\nimplementations of ExchangeSinks as no extra data copying is enforced.",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/a977d88b051e6616d1fd9c355362627383abec29"
                },
                {
                    "sha": "f7ad25addca4aad78acda38bc947523c3a7f88d6",
                    "author": {
                        "email": "ebyhry@gmail.com",
                        "name": "Yuya Ebihara"
                    },
                    "message": "Check error code for RENAME COLUMN failure in MariaDB\n\nSQLSyntaxErrorException contains invalid column name.",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/f7ad25addca4aad78acda38bc947523c3a7f88d6"
                },
                {
                    "sha": "0547b321937befa4ed95ea2b065dd16ec4bbecf9",
                    "author": {
                        "email": "ebyhry@gmail.com",
                        "name": "Yuya Ebihara"
                    },
                    "message": "Set SUPPORTS_RENAME_COLUMN as false in unsupported connectors\n\ntestRenameColumn was skipped by SUPPORTS_CREATE_TABLE\ncondition.",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/0547b321937befa4ed95ea2b065dd16ec4bbecf9"
                },
                {
                    "sha": "d9aa5b328345218916deba29aad5274d98ce577a",
                    "author": {
                        "email": "ebyhry@gmail.com",
                        "name": "Yuya Ebihara"
                    },
                    "message": "Add renameColumnSql method to JDBC connectors",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/d9aa5b328345218916deba29aad5274d98ce577a"
                }
            ]
        },
        "public": true,
        "created_at": "2022-11-01T17:34:23Z"
    },
    {
        "id": "24963592773",
        "type": "CreateEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 509274784,
            "name": "metadaddy/trino",
            "url": "https://api.github.com/repos/metadaddy/trino"
        },
        "payload": {
            "ref": "cli-wrong-units",
            "ref_type": "branch",
            "master_branch": "master",
            "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
            "pusher_type": "user"
        },
        "public": true,
        "created_at": "2022-11-01T17:28:08Z"
    },
    {
        "id": "24963511754",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 166515022,
            "name": "trinodb/trino",
            "url": "https://api.github.com/repos/trinodb/trino"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/trinodb/trino/issues/13095",
                "repository_url": "https://api.github.com/repos/trinodb/trino",
                "labels_url": "https://api.github.com/repos/trinodb/trino/issues/13095/labels{/name}",
                "comments_url": "https://api.github.com/repos/trinodb/trino/issues/13095/comments",
                "events_url": "https://api.github.com/repos/trinodb/trino/issues/13095/events",
                "html_url": "https://github.com/trinodb/trino/pull/13095",
                "id": 1295003432,
                "node_id": "PR_kwDOCezRTs465Hjk",
                "number": 13095,
                "title": "Use correct abbreviations for data quantities",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 1202580151,
                        "node_id": "MDU6TGFiZWwxMjAyNTgwMTUx",
                        "url": "https://api.github.com/repos/trinodb/trino/labels/cla-signed",
                        "name": "cla-signed",
                        "color": "ededed",
                        "default": false,
                        "description": null
                    }
                ],
                "state": "closed",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 7,
                "created_at": "2022-07-06T01:57:55Z",
                "updated_at": "2022-11-01T17:24:09Z",
                "closed_at": "2022-11-01T00:37:01Z",
                "author_association": "MEMBER",
                "active_lock_reason": null,
                "draft": false,
                "pull_request": {
                    "url": "https://api.github.com/repos/trinodb/trino/pulls/13095",
                    "html_url": "https://github.com/trinodb/trino/pull/13095",
                    "diff_url": "https://github.com/trinodb/trino/pull/13095.diff",
                    "patch_url": "https://github.com/trinodb/trino/pull/13095.patch",
                    "merged_at": null
                },
                "body": "## Description\r\n\r\nThe Trino CLI currently reports data size incorrectly, using the legacy, 1,024-based, values for K, M, G etc rather than the modern 1,000-based values.\r\n\r\n> Is this change a fix, improvement, new feature, refactoring, or other?\r\n\r\nFix\r\n\r\n> Is this a change to the core query engine, a connector, client library, or the SPI interfaces? (be specific)\r\n\r\nCLI\r\n\r\n> How would you describe this change to a non-technical end user or system administrator?\r\n\r\nThis change corrects the display of data sizes in the CLI to use 1,000-based units.\r\n\r\n## Related issues, pull requests, and links\r\n\r\n* Fixes #13054\r\n\r\n<!-- The following sections are filled in by the maintainer with input from the contributor:\r\nUse :white_check_mark: or (x) to signal selection.\r\n-->\r\n\r\n## Documentation\r\n\r\n( ) No documentation is needed.\r\n( ) Sufficient documentation is included in this PR.\r\n( ) Documentation PR is available with #prnumber.\r\n( ) Documentation issue #issuenumber is filed, and can be handled later.\r\n\r\n## Release notes\r\n\r\n( ) No release notes entries required.\r\n( ) Release notes entries required with the following suggested text:\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/trinodb/trino/issues/13095/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/trinodb/trino/issues/13095/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/trinodb/trino/issues/comments/1298864456",
                "html_url": "https://github.com/trinodb/trino/pull/13095#issuecomment-1298864456",
                "issue_url": "https://api.github.com/repos/trinodb/trino/issues/13095",
                "id": 1298864456,
                "node_id": "IC_kwDOCezRTs5NaxlI",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2022-11-01T17:24:09Z",
                "updated_at": "2022-11-01T17:24:09Z",
                "author_association": "MEMBER",
                "body": "Oops - I submitted this PR from my master branch, then I needed to sync back for another change. I'll submit another PR with a different branch and reference this one.",
                "reactions": {
                    "url": "https://api.github.com/repos/trinodb/trino/issues/comments/1298864456/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2022-11-01T17:24:10Z",
        "org": {
            "id": 34147222,
            "login": "trinodb",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/trinodb",
            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?"
        }
    },
    {
        "id": "24946246970",
        "type": "PushEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 509274784,
            "name": "metadaddy/trino",
            "url": "https://api.github.com/repos/metadaddy/trino"
        },
        "payload": {
            "push_id": 11511040508,
            "size": 1000,
            "distinct_size": 1610,
            "ref": "refs/heads/master",
            "head": "62349751f1c337bee4b93c290cbd1ae563d75a3b",
            "before": "6cb319916328184a673d3ca9eb204cc5181c9f25",
            "commits": [
                {
                    "sha": "a6a0b6b172e255cfb9ed1254e726a61a14e20d25",
                    "author": {
                        "email": "jan.was@starburstdata.com",
                        "name": "Jan Wa\u015b"
                    },
                    "message": "Add comment explaining why CI cleans local Maven repo",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/a6a0b6b172e255cfb9ed1254e726a61a14e20d25"
                },
                {
                    "sha": "624fedb3cf139f76f9f2e1d773773f75afa01fe1",
                    "author": {
                        "email": "andriyrosa@gmail.com",
                        "name": "Andrii Rosa"
                    },
                    "message": "Change randomized prefix to contain only hex characters\n\nSome storage systems prefer the prefix to be hexadecimal characters",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/624fedb3cf139f76f9f2e1d773773f75afa01fe1"
                },
                {
                    "sha": "d4288f6fffca2bf850bd1c8c50ff2f6416694b29",
                    "author": {
                        "email": "ashhar.hasan@starburstdata.com",
                        "name": "Ashhar Hasan"
                    },
                    "message": "Disallow table creation in BigQuery with query retries enabled\n\nBigQuery connector doesn't support fault tolerant execution yet.",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/d4288f6fffca2bf850bd1c8c50ff2f6416694b29"
                },
                {
                    "sha": "42f3b8a3bf158352b11ec34dc14be8dbd5ea5ad4",
                    "author": {
                        "email": "ashhar.hasan@starburstdata.com",
                        "name": "Ashhar Hasan"
                    },
                    "message": "Add test to verify CREATE SCHEMA with case-insensitive matching",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/42f3b8a3bf158352b11ec34dc14be8dbd5ea5ad4"
                },
                {
                    "sha": "8fea27c974e5078e8d1105fdb56a2dd417f7750b",
                    "author": {
                        "email": "surpass.simple@gmail.com",
                        "name": "tangjiangling"
                    },
                    "message": "Rename variables for readability\n\nNow this variable only holds the result of the low bound comparison, so\nit could be renamed.",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/8fea27c974e5078e8d1105fdb56a2dd417f7750b"
                },
                {
                    "sha": "1e61a7ce05ce21f9f54f18cf8ba8e38187e38d67",
                    "author": {
                        "email": "mateusz.gajewski@gmail.com",
                        "name": "Mateusz Gajewski"
                    },
                    "message": "Squash Phoenix environment extender into EnvMultinodePhoenix5",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/1e61a7ce05ce21f9f54f18cf8ba8e38187e38d67"
                },
                {
                    "sha": "9ce301813e2de8bc3137e2664fb6b54112f34c3f",
                    "author": {
                        "email": "ebyhry@gmail.com",
                        "name": "Yuya Ebihara"
                    },
                    "message": "Add main method to S3HiveQueryRunner",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/9ce301813e2de8bc3137e2664fb6b54112f34c3f"
                },
                {
                    "sha": "19c2bc45aaa4e5eb90c33c910628cbf09da2b093",
                    "author": {
                        "email": "andriyrosa@gmail.com",
                        "name": "Andrii Rosa"
                    },
                    "message": "Remove unused method in StageTaskSourceFactory",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/19c2bc45aaa4e5eb90c33c910628cbf09da2b093"
                },
                {
                    "sha": "d9402bc77994d858672313b68cacac623d8f3c14",
                    "author": {
                        "email": "andriyrosa@gmail.com",
                        "name": "Andrii Rosa"
                    },
                    "message": "Support coordinator task scheduling in fault tolerant scheduler",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/d9402bc77994d858672313b68cacac623d8f3c14"
                },
                {
                    "sha": "170faf53cd1c6a1a39118ae6d9475f21926b3885",
                    "author": {
                        "email": "andriyrosa@gmail.com",
                        "name": "Andrii Rosa"
                    },
                    "message": "Fix FaultTolerantStageScheduler#isFinished\n\nWait for split enumeration feature to finish before returning true from isFinished",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/170faf53cd1c6a1a39118ae6d9475f21926b3885"
                },
                {
                    "sha": "a183959a962b8c9b012547afc02d566a10cf2591",
                    "author": {
                        "email": "andriyrosa@gmail.com",
                        "name": "Andrii Rosa"
                    },
                    "message": "Transition stage to FINISHED state early\n\nIn FTE a stage is transtitioned to FINISHED only after query completion.\nThis was needed to allow certain tasks to be rescheduled to reconstruct\nlost data (due to unreliable exchange). This mechanism has never been\nutilized and likely will never be as currently the solution is built\nunder assumption that exchange is reliable.",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/a183959a962b8c9b012547afc02d566a10cf2591"
                },
                {
                    "sha": "43d61ab04bef3cbc844193d1f8cc616778fc1cc1",
                    "author": {
                        "email": "andriyrosa@gmail.com",
                        "name": "Andrii Rosa"
                    },
                    "message": "Abort / cancel tasks only once",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/43d61ab04bef3cbc844193d1f8cc616778fc1cc1"
                },
                {
                    "sha": "c9e27f895fb78fab06b9aeb422ed56cb37b79858",
                    "author": {
                        "email": "andriyrosa@gmail.com",
                        "name": "Andrii Rosa"
                    },
                    "message": "Remove FaultTolerantStageSchedule#reportTaskFailure\n\nWith only spooling exchange being used in fault tolerant execution\nthere's no need to report task failures from coordinator what was only\nneeded with direct exchange",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/c9e27f895fb78fab06b9aeb422ed56cb37b79858"
                },
                {
                    "sha": "26ba659305d698eafb5b1d6f5a98a49f27d480f8",
                    "author": {
                        "email": "andriyrosa@gmail.com",
                        "name": "Andrii Rosa"
                    },
                    "message": "Fail tasks directly through SqlStage\n\nTo avoid unnecessary indirections",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/26ba659305d698eafb5b1d6f5a98a49f27d480f8"
                },
                {
                    "sha": "5f685f5cc0fb27fc1cf50dfe2e4b6c2b479b0833",
                    "author": {
                        "email": "andriyrosa@gmail.com",
                        "name": "Andrii Rosa"
                    },
                    "message": "Extract StageManager into a standalone class",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/5f685f5cc0fb27fc1cf50dfe2e4b6c2b479b0833"
                },
                {
                    "sha": "7990d40ea28f548aefde10d1eed147dfe741b84f",
                    "author": {
                        "email": "andriyrosa@gmail.com",
                        "name": "Andrii Rosa"
                    },
                    "message": "Refactor StageManager\n\nDo not pass session separately as it can be obtained through\nQueryStateMachine",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/7990d40ea28f548aefde10d1eed147dfe741b84f"
                },
                {
                    "sha": "d0b0994531c8ebd2c38a88592400410f1dc31d17",
                    "author": {
                        "email": "andriyrosa@gmail.com",
                        "name": "Andrii Rosa"
                    },
                    "message": "Separate fault tolerant and pipelined scheduler implementations",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/d0b0994531c8ebd2c38a88592400410f1dc31d17"
                },
                {
                    "sha": "a977d88b051e6616d1fd9c355362627383abec29",
                    "author": {
                        "email": "lukasz@osipiuk.net",
                        "name": "\u0141ukasz Osipiuk"
                    },
                    "message": "Change data ownership contract in call of ExchangeSink.add\n\nAfter the change the contract changes in a way that ownership of data\npassed as an argument is passed from caller to callee.\nApart from usage in DeduplicatingDirectExchangeBuffer the Slices passed\nas to ExchangeSink.add were single-use and not mutataded/reclaimed\nafterwards.\n\nThe semantics change allows for simplere and more effective\nimplementations of ExchangeSinks as no extra data copying is enforced.",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/a977d88b051e6616d1fd9c355362627383abec29"
                },
                {
                    "sha": "f7ad25addca4aad78acda38bc947523c3a7f88d6",
                    "author": {
                        "email": "ebyhry@gmail.com",
                        "name": "Yuya Ebihara"
                    },
                    "message": "Check error code for RENAME COLUMN failure in MariaDB\n\nSQLSyntaxErrorException contains invalid column name.",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/f7ad25addca4aad78acda38bc947523c3a7f88d6"
                },
                {
                    "sha": "0547b321937befa4ed95ea2b065dd16ec4bbecf9",
                    "author": {
                        "email": "ebyhry@gmail.com",
                        "name": "Yuya Ebihara"
                    },
                    "message": "Set SUPPORTS_RENAME_COLUMN as false in unsupported connectors\n\ntestRenameColumn was skipped by SUPPORTS_CREATE_TABLE\ncondition.",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/0547b321937befa4ed95ea2b065dd16ec4bbecf9"
                }
            ]
        },
        "public": true,
        "created_at": "2022-11-01T00:37:18Z"
    },
    {
        "id": "24946244232",
        "type": "PullRequestEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 166515022,
            "name": "trinodb/trino",
            "url": "https://api.github.com/repos/trinodb/trino"
        },
        "payload": {
            "action": "closed",
            "number": 13095,
            "pull_request": {
                "url": "https://api.github.com/repos/trinodb/trino/pulls/13095",
                "id": 988051684,
                "node_id": "PR_kwDOCezRTs465Hjk",
                "html_url": "https://github.com/trinodb/trino/pull/13095",
                "diff_url": "https://github.com/trinodb/trino/pull/13095.diff",
                "patch_url": "https://github.com/trinodb/trino/pull/13095.patch",
                "issue_url": "https://api.github.com/repos/trinodb/trino/issues/13095",
                "number": 13095,
                "state": "closed",
                "locked": false,
                "title": "Use correct abbreviations for data quantities",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "## Description\r\n\r\nThe Trino CLI currently reports data size incorrectly, using the legacy, 1,024-based, values for K, M, G etc rather than the modern 1,000-based values.\r\n\r\n> Is this change a fix, improvement, new feature, refactoring, or other?\r\n\r\nFix\r\n\r\n> Is this a change to the core query engine, a connector, client library, or the SPI interfaces? (be specific)\r\n\r\nCLI\r\n\r\n> How would you describe this change to a non-technical end user or system administrator?\r\n\r\nThis change corrects the display of data sizes in the CLI to use 1,000-based units.\r\n\r\n## Related issues, pull requests, and links\r\n\r\n* Fixes #13054\r\n\r\n<!-- The following sections are filled in by the maintainer with input from the contributor:\r\nUse :white_check_mark: or (x) to signal selection.\r\n-->\r\n\r\n## Documentation\r\n\r\n( ) No documentation is needed.\r\n( ) Sufficient documentation is included in this PR.\r\n( ) Documentation PR is available with #prnumber.\r\n( ) Documentation issue #issuenumber is filed, and can be handled later.\r\n\r\n## Release notes\r\n\r\n( ) No release notes entries required.\r\n( ) Release notes entries required with the following suggested text:\r\n",
                "created_at": "2022-07-06T01:57:55Z",
                "updated_at": "2022-11-01T00:37:02Z",
                "closed_at": "2022-11-01T00:37:01Z",
                "merged_at": null,
                "merge_commit_sha": "332a51ddc6060cc9b7aa06ee2b8102bc3e6bcdb2",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/trinodb/trino/pulls/13095/commits",
                "review_comments_url": "https://api.github.com/repos/trinodb/trino/pulls/13095/comments",
                "review_comment_url": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/trinodb/trino/issues/13095/comments",
                "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/6cb319916328184a673d3ca9eb204cc5181c9f25",
                "head": {
                    "label": "metadaddy:master",
                    "ref": "master",
                    "sha": "6cb319916328184a673d3ca9eb204cc5181c9f25",
                    "user": {
                        "login": "metadaddy",
                        "id": 723517,
                        "node_id": "MDQ6VXNlcjcyMzUxNw==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/metadaddy",
                        "html_url": "https://github.com/metadaddy",
                        "followers_url": "https://api.github.com/users/metadaddy/followers",
                        "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                        "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                        "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                        "repos_url": "https://api.github.com/users/metadaddy/repos",
                        "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 509274784,
                        "node_id": "R_kgDOHlrqoA",
                        "name": "trino",
                        "full_name": "metadaddy/trino",
                        "private": false,
                        "owner": {
                            "login": "metadaddy",
                            "id": 723517,
                            "node_id": "MDQ6VXNlcjcyMzUxNw==",
                            "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/metadaddy",
                            "html_url": "https://github.com/metadaddy",
                            "followers_url": "https://api.github.com/users/metadaddy/followers",
                            "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                            "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                            "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                            "repos_url": "https://api.github.com/users/metadaddy/repos",
                            "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/metadaddy/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": true,
                        "url": "https://api.github.com/repos/metadaddy/trino",
                        "forks_url": "https://api.github.com/repos/metadaddy/trino/forks",
                        "keys_url": "https://api.github.com/repos/metadaddy/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/metadaddy/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/metadaddy/trino/teams",
                        "hooks_url": "https://api.github.com/repos/metadaddy/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/metadaddy/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/metadaddy/trino/events",
                        "assignees_url": "https://api.github.com/repos/metadaddy/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/metadaddy/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/metadaddy/trino/tags",
                        "blobs_url": "https://api.github.com/repos/metadaddy/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/metadaddy/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/metadaddy/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/metadaddy/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/metadaddy/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/metadaddy/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/metadaddy/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/metadaddy/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/metadaddy/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/metadaddy/trino/subscription",
                        "commits_url": "https://api.github.com/repos/metadaddy/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/metadaddy/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/metadaddy/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/metadaddy/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/metadaddy/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/metadaddy/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/metadaddy/trino/merges",
                        "archive_url": "https://api.github.com/repos/metadaddy/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/metadaddy/trino/downloads",
                        "issues_url": "https://api.github.com/repos/metadaddy/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/metadaddy/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/metadaddy/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/metadaddy/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/metadaddy/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/metadaddy/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/metadaddy/trino/deployments",
                        "created_at": "2022-07-01T00:43:32Z",
                        "updated_at": "2022-07-06T01:44:20Z",
                        "pushed_at": "2022-11-01T00:36:59Z",
                        "git_url": "git://github.com/metadaddy/trino.git",
                        "ssh_url": "git@github.com:metadaddy/trino.git",
                        "clone_url": "https://github.com/metadaddy/trino.git",
                        "svn_url": "https://github.com/metadaddy/trino",
                        "homepage": "https://trino.io",
                        "size": 159789,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": "Java",
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "master"
                    }
                },
                "base": {
                    "label": "trinodb:master",
                    "ref": "master",
                    "sha": "62349751f1c337bee4b93c290cbd1ae563d75a3b",
                    "user": {
                        "login": "trinodb",
                        "id": 34147222,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                        "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/trinodb",
                        "html_url": "https://github.com/trinodb",
                        "followers_url": "https://api.github.com/users/trinodb/followers",
                        "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                        "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                        "organizations_url": "https://api.github.com/users/trinodb/orgs",
                        "repos_url": "https://api.github.com/users/trinodb/repos",
                        "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/trinodb/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 166515022,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNjY1MTUwMjI=",
                        "name": "trino",
                        "full_name": "trinodb/trino",
                        "private": false,
                        "owner": {
                            "login": "trinodb",
                            "id": 34147222,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/trinodb",
                            "html_url": "https://github.com/trinodb",
                            "followers_url": "https://api.github.com/users/trinodb/followers",
                            "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                            "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                            "organizations_url": "https://api.github.com/users/trinodb/orgs",
                            "repos_url": "https://api.github.com/users/trinodb/repos",
                            "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/trinodb/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/trinodb/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": false,
                        "url": "https://api.github.com/repos/trinodb/trino",
                        "forks_url": "https://api.github.com/repos/trinodb/trino/forks",
                        "keys_url": "https://api.github.com/repos/trinodb/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/trinodb/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/trinodb/trino/teams",
                        "hooks_url": "https://api.github.com/repos/trinodb/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/trinodb/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/trinodb/trino/events",
                        "assignees_url": "https://api.github.com/repos/trinodb/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/trinodb/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/trinodb/trino/tags",
                        "blobs_url": "https://api.github.com/repos/trinodb/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/trinodb/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/trinodb/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/trinodb/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/trinodb/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/trinodb/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/trinodb/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/trinodb/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/trinodb/trino/subscription",
                        "commits_url": "https://api.github.com/repos/trinodb/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/trinodb/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/trinodb/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/trinodb/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/trinodb/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/trinodb/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/trinodb/trino/merges",
                        "archive_url": "https://api.github.com/repos/trinodb/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/trinodb/trino/downloads",
                        "issues_url": "https://api.github.com/repos/trinodb/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/trinodb/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/trinodb/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/trinodb/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/trinodb/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/trinodb/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/trinodb/trino/deployments",
                        "created_at": "2019-01-19T06:38:14Z",
                        "updated_at": "2022-10-31T23:36:51Z",
                        "pushed_at": "2022-11-01T00:19:03Z",
                        "git_url": "git://github.com/trinodb/trino.git",
                        "ssh_url": "git@github.com:trinodb/trino.git",
                        "clone_url": "https://github.com/trinodb/trino.git",
                        "svn_url": "https://github.com/trinodb/trino",
                        "homepage": "https://trino.io",
                        "size": 179068,
                        "stargazers_count": 6430,
                        "watchers_count": 6430,
                        "language": "Java",
                        "has_issues": true,
                        "has_projects": false,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "forks_count": 2016,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 2200,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "analytics",
                            "big-data",
                            "data-science",
                            "database",
                            "databases",
                            "datalake",
                            "distributed-database",
                            "distributed-databases",
                            "distributed-systems",
                            "hadoop",
                            "hive",
                            "java",
                            "jdbc",
                            "presto",
                            "prestodb",
                            "query-engine",
                            "sql",
                            "trino"
                        ],
                        "visibility": "public",
                        "forks": 2016,
                        "open_issues": 2200,
                        "watchers": 6430,
                        "default_branch": "master"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/13095"
                    },
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/13095"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/13095"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/13095/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/13095/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/13095/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/trinodb/trino/statuses/6cb319916328184a673d3ca9eb204cc5181c9f25"
                    }
                },
                "author_association": "MEMBER",
                "auto_merge": null,
                "active_lock_reason": null,
                "merged": false,
                "mergeable": null,
                "rebaseable": null,
                "mergeable_state": "unknown",
                "merged_by": null,
                "comments": 7,
                "review_comments": 0,
                "maintainer_can_modify": false,
                "commits": 0,
                "additions": 0,
                "deletions": 0,
                "changed_files": 0
            }
        },
        "public": true,
        "created_at": "2022-11-01T00:37:02Z",
        "org": {
            "id": 34147222,
            "login": "trinodb",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/trinodb",
            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?"
        }
    },
    {
        "id": "24946244012",
        "type": "PushEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 509274784,
            "name": "metadaddy/trino",
            "url": "https://api.github.com/repos/metadaddy/trino"
        },
        "payload": {
            "push_id": 11511039146,
            "size": 0,
            "distinct_size": 0,
            "ref": "refs/heads/master",
            "head": "6cb319916328184a673d3ca9eb204cc5181c9f25",
            "before": "0b7a691461216fa9c06dfaf63899574f4a0e7a22",
            "commits": []
        },
        "public": true,
        "created_at": "2022-11-01T00:37:01Z"
    },
    {
        "id": "24944622790",
        "type": "PushEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 556391398,
            "name": "backblaze-b2-samples/node-copy-http",
            "url": "https://api.github.com/repos/backblaze-b2-samples/node-copy-http"
        },
        "payload": {
            "push_id": 11510197618,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/main",
            "head": "dd6ac4cb8a7cc8fdfaeec98888baf295fd7de81f",
            "before": "98ba6d1cad50b54ea234445bcc7411b3d4ff29a1",
            "commits": [
                {
                    "sha": "dd6ac4cb8a7cc8fdfaeec98888baf295fd7de81f",
                    "author": {
                        "email": "pat@backblaze.com",
                        "name": "Pat Patterson"
                    },
                    "message": "Create README.md",
                    "distinct": true,
                    "url": "https://api.github.com/repos/backblaze-b2-samples/node-copy-http/commits/dd6ac4cb8a7cc8fdfaeec98888baf295fd7de81f"
                }
            ]
        },
        "public": true,
        "created_at": "2022-10-31T22:20:00Z",
        "org": {
            "id": 17604039,
            "login": "backblaze-b2-samples",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/backblaze-b2-samples",
            "avatar_url": "https://avatars.githubusercontent.com/u/17604039?"
        }
    },
    {
        "id": "24829244507",
        "type": "PushEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 506752547,
            "name": "metadaddy/trino-getting-started",
            "url": "https://api.github.com/repos/metadaddy/trino-getting-started"
        },
        "payload": {
            "push_id": 11449373493,
            "size": 6,
            "distinct_size": 6,
            "ref": "refs/heads/main",
            "head": "58790e463b29274a2011524e05f8de84cbbe8306",
            "before": "5100953e1462b18155efece1c86603c23d3668c5",
            "commits": [
                {
                    "sha": "b7ce0dfcc0c807ec68a0a72e7a062ea5675a09d1",
                    "author": {
                        "email": "zjffdu@apache.org",
                        "name": "Jeff Zhang"
                    },
                    "message": "Add Zeppelin docker-compose example",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino-getting-started/commits/b7ce0dfcc0c807ec68a0a72e7a062ea5675a09d1"
                },
                {
                    "sha": "a633f542f4be4887e707c14326c69d3857c580bc",
                    "author": {
                        "email": "vontikov@gmail.com",
                        "name": "Vladimir Ontikov"
                    },
                    "message": "Create Delta Lake S3 bucket at startup",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino-getting-started/commits/a633f542f4be4887e707c14326c69d3857c580bc"
                },
                {
                    "sha": "89a1bcb6268c2e6da08a7c322dcf4b69d8b7d9e6",
                    "author": {
                        "email": "bits@bitsondata.dev",
                        "name": "bitsondatadev"
                    },
                    "message": "Add init hudi env - not working yet",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino-getting-started/commits/89a1bcb6268c2e6da08a7c322dcf4b69d8b7d9e6"
                },
                {
                    "sha": "ff90dfeb1f637829c0ce274279771913bd394af8",
                    "author": {
                        "email": "bits@bitsondata.dev",
                        "name": "Brian \"bits\" Olsen"
                    },
                    "message": "Merge pull request #4 from zjffdu/zeppelin\n\nAdd Zeppelin docker-compose example",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino-getting-started/commits/ff90dfeb1f637829c0ce274279771913bd394af8"
                },
                {
                    "sha": "dc33ec6a4d2aa8c383404dc38826f1f1f877a763",
                    "author": {
                        "email": "bits@bitsondata.dev",
                        "name": "Brian \"bits\" Olsen"
                    },
                    "message": "Merge pull request #6 from vontikov/main\n\nCreate Delta Lake S3 bucket at startup",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino-getting-started/commits/dc33ec6a4d2aa8c383404dc38826f1f1f877a763"
                },
                {
                    "sha": "58790e463b29274a2011524e05f8de84cbbe8306",
                    "author": {
                        "email": "metadaddy@gmail.com",
                        "name": "Pat Patterson"
                    },
                    "message": "New Tutorial: Hive Connector over Backblaze B2 Cloud Storage (#8)\n\nAdded Trino/B2 example",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino-getting-started/commits/58790e463b29274a2011524e05f8de84cbbe8306"
                }
            ]
        },
        "public": true,
        "created_at": "2022-10-26T00:47:42Z"
    },
    {
        "id": "24776048024",
        "type": "PushEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 556391398,
            "name": "backblaze-b2-samples/node-copy-http",
            "url": "https://api.github.com/repos/backblaze-b2-samples/node-copy-http"
        },
        "payload": {
            "push_id": 11422606893,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/main",
            "head": "98ba6d1cad50b54ea234445bcc7411b3d4ff29a1",
            "before": "5160a7fa93f619f772fce32cf88b7f21e825b8b8",
            "commits": [
                {
                    "sha": "98ba6d1cad50b54ea234445bcc7411b3d4ff29a1",
                    "author": {
                        "email": "pat@backblaze.com",
                        "name": "Pat Patterson"
                    },
                    "message": "init",
                    "distinct": true,
                    "url": "https://api.github.com/repos/backblaze-b2-samples/node-copy-http/commits/98ba6d1cad50b54ea234445bcc7411b3d4ff29a1"
                }
            ]
        },
        "public": true,
        "created_at": "2022-10-23T18:48:09Z",
        "org": {
            "id": 17604039,
            "login": "backblaze-b2-samples",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/backblaze-b2-samples",
            "avatar_url": "https://avatars.githubusercontent.com/u/17604039?"
        }
    },
    {
        "id": "24776040745",
        "type": "CreateEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 556391398,
            "name": "backblaze-b2-samples/node-copy-http",
            "url": "https://api.github.com/repos/backblaze-b2-samples/node-copy-http"
        },
        "payload": {
            "ref": "main",
            "ref_type": "branch",
            "master_branch": "main",
            "description": "Fastly RisingCloud task demo for Tech Day 2022",
            "pusher_type": "user"
        },
        "public": true,
        "created_at": "2022-10-23T18:46:59Z",
        "org": {
            "id": 17604039,
            "login": "backblaze-b2-samples",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/backblaze-b2-samples",
            "avatar_url": "https://avatars.githubusercontent.com/u/17604039?"
        }
    },
    {
        "id": "24776040709",
        "type": "CreateEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 556391398,
            "name": "backblaze-b2-samples/node-copy-http",
            "url": "https://api.github.com/repos/backblaze-b2-samples/node-copy-http"
        },
        "payload": {
            "ref": null,
            "ref_type": "repository",
            "master_branch": "main",
            "description": "Fastly RisingCloud task demo for Tech Day 2022",
            "pusher_type": "user"
        },
        "public": true,
        "created_at": "2022-10-23T18:46:59Z",
        "org": {
            "id": 17604039,
            "login": "backblaze-b2-samples",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/backblaze-b2-samples",
            "avatar_url": "https://avatars.githubusercontent.com/u/17604039?"
        }
    },
    {
        "id": "24775902407",
        "type": "PushEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 556378910,
            "name": "backblaze-b2-samples/fastly-on-demand-migration",
            "url": "https://api.github.com/repos/backblaze-b2-samples/fastly-on-demand-migration"
        },
        "payload": {
            "push_id": 11422508597,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/main",
            "head": "696602315b0b3ff0bf735af31ddc8b4878291a3f",
            "before": "9fca5ba1e69075e17d17b1450fc5aa3532c0e46f",
            "commits": [
                {
                    "sha": "696602315b0b3ff0bf735af31ddc8b4878291a3f",
                    "author": {
                        "email": "pat@backblaze.com",
                        "name": "Pat Patterson"
                    },
                    "message": "Generify fastly.toml",
                    "distinct": true,
                    "url": "https://api.github.com/repos/backblaze-b2-samples/fastly-on-demand-migration/commits/696602315b0b3ff0bf735af31ddc8b4878291a3f"
                }
            ]
        },
        "public": true,
        "created_at": "2022-10-23T18:25:57Z",
        "org": {
            "id": 17604039,
            "login": "backblaze-b2-samples",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/backblaze-b2-samples",
            "avatar_url": "https://avatars.githubusercontent.com/u/17604039?"
        }
    },
    {
        "id": "24775834577",
        "type": "PushEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 556378910,
            "name": "backblaze-b2-samples/fastly-on-demand-migration",
            "url": "https://api.github.com/repos/backblaze-b2-samples/fastly-on-demand-migration"
        },
        "payload": {
            "push_id": 11422463627,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/main",
            "head": "9fca5ba1e69075e17d17b1450fc5aa3532c0e46f",
            "before": "416879c5deba7a945ac58935098621a313eb16b8",
            "commits": [
                {
                    "sha": "9fca5ba1e69075e17d17b1450fc5aa3532c0e46f",
                    "author": {
                        "email": "pat@backblaze.com",
                        "name": "Pat Patterson"
                    },
                    "message": "Update README",
                    "distinct": true,
                    "url": "https://api.github.com/repos/backblaze-b2-samples/fastly-on-demand-migration/commits/9fca5ba1e69075e17d17b1450fc5aa3532c0e46f"
                }
            ]
        },
        "public": true,
        "created_at": "2022-10-23T18:16:14Z",
        "org": {
            "id": 17604039,
            "login": "backblaze-b2-samples",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/backblaze-b2-samples",
            "avatar_url": "https://avatars.githubusercontent.com/u/17604039?"
        }
    },
    {
        "id": "24775819655",
        "type": "PushEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 556378910,
            "name": "backblaze-b2-samples/fastly-on-demand-migration",
            "url": "https://api.github.com/repos/backblaze-b2-samples/fastly-on-demand-migration"
        },
        "payload": {
            "push_id": 11422453301,
            "size": 4,
            "distinct_size": 4,
            "ref": "refs/heads/main",
            "head": "416879c5deba7a945ac58935098621a313eb16b8",
            "before": "39a2fa48e079c308cc7789f39be6efdc7d729356",
            "commits": [
                {
                    "sha": "6426dd9bcbc690d07860c29afe3159cc82cbd05f",
                    "author": {
                        "email": "pat@backblaze.com",
                        "name": "Pat Patterson"
                    },
                    "message": "init",
                    "distinct": true,
                    "url": "https://api.github.com/repos/backblaze-b2-samples/fastly-on-demand-migration/commits/6426dd9bcbc690d07860c29afe3159cc82cbd05f"
                },
                {
                    "sha": "1e5a79a283087ac74911a54dcd5dd5abf9d8f939",
                    "author": {
                        "email": "pat@backblaze.com",
                        "name": "Pat Patterson"
                    },
                    "message": "working",
                    "distinct": true,
                    "url": "https://api.github.com/repos/backblaze-b2-samples/fastly-on-demand-migration/commits/1e5a79a283087ac74911a54dcd5dd5abf9d8f939"
                },
                {
                    "sha": "f3cb8028deb637917043d46d93dc9cb390decbb1",
                    "author": {
                        "email": "pat@backblaze.com",
                        "name": "Pat Patterson"
                    },
                    "message": "Remove origin setting",
                    "distinct": true,
                    "url": "https://api.github.com/repos/backblaze-b2-samples/fastly-on-demand-migration/commits/f3cb8028deb637917043d46d93dc9cb390decbb1"
                },
                {
                    "sha": "416879c5deba7a945ac58935098621a313eb16b8",
                    "author": {
                        "email": "pat@backblaze.com",
                        "name": "Pat Patterson"
                    },
                    "message": "Commenting",
                    "distinct": true,
                    "url": "https://api.github.com/repos/backblaze-b2-samples/fastly-on-demand-migration/commits/416879c5deba7a945ac58935098621a313eb16b8"
                }
            ]
        },
        "public": true,
        "created_at": "2022-10-23T18:14:20Z",
        "org": {
            "id": 17604039,
            "login": "backblaze-b2-samples",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/backblaze-b2-samples",
            "avatar_url": "https://avatars.githubusercontent.com/u/17604039?"
        }
    },
    {
        "id": "24775789419",
        "type": "CreateEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 556378910,
            "name": "backblaze-b2-samples/fastly-on-demand-migration",
            "url": "https://api.github.com/repos/backblaze-b2-samples/fastly-on-demand-migration"
        },
        "payload": {
            "ref": "main",
            "ref_type": "branch",
            "master_branch": "main",
            "description": "Fastly Compute@Edge app demo for Tech Day 2022",
            "pusher_type": "user"
        },
        "public": true,
        "created_at": "2022-10-23T18:10:19Z",
        "org": {
            "id": 17604039,
            "login": "backblaze-b2-samples",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/backblaze-b2-samples",
            "avatar_url": "https://avatars.githubusercontent.com/u/17604039?"
        }
    },
    {
        "id": "24775789326",
        "type": "CreateEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 556378910,
            "name": "backblaze-b2-samples/fastly-on-demand-migration",
            "url": "https://api.github.com/repos/backblaze-b2-samples/fastly-on-demand-migration"
        },
        "payload": {
            "ref": null,
            "ref_type": "repository",
            "master_branch": "main",
            "description": "Fastly Compute@Edge app demo for Tech Day 2022",
            "pusher_type": "user"
        },
        "public": true,
        "created_at": "2022-10-23T18:10:18Z",
        "org": {
            "id": 17604039,
            "login": "backblaze-b2-samples",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/backblaze-b2-samples",
            "avatar_url": "https://avatars.githubusercontent.com/u/17604039?"
        }
    },
    {
        "id": "24737807745",
        "type": "PushEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 506752547,
            "name": "metadaddy/trino-getting-started",
            "url": "https://api.github.com/repos/metadaddy/trino-getting-started"
        },
        "payload": {
            "push_id": 11400827064,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/main",
            "head": "5100953e1462b18155efece1c86603c23d3668c5",
            "before": "2145bcd1ab76f4175197a1076e91155021b9c3db",
            "commits": [
                {
                    "sha": "5100953e1462b18155efece1c86603c23d3668c5",
                    "author": {
                        "email": "pat@backblaze.com",
                        "name": "Pat Patterson"
                    },
                    "message": "Fixed circular link",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino-getting-started/commits/5100953e1462b18155efece1c86603c23d3668c5"
                }
            ]
        },
        "public": true,
        "created_at": "2022-10-21T00:25:44Z"
    },
    {
        "id": "24737731092",
        "type": "PullRequestEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 341978481,
            "name": "bitsondatadev/trino-getting-started",
            "url": "https://api.github.com/repos/bitsondatadev/trino-getting-started"
        },
        "payload": {
            "action": "opened",
            "number": 8,
            "pull_request": {
                "url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/pulls/8",
                "id": 1094596852,
                "node_id": "PR_kwDOFGItcc5BPjj0",
                "html_url": "https://github.com/bitsondatadev/trino-getting-started/pull/8",
                "diff_url": "https://github.com/bitsondatadev/trino-getting-started/pull/8.diff",
                "patch_url": "https://github.com/bitsondatadev/trino-getting-started/pull/8.patch",
                "issue_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/issues/8",
                "number": 8,
                "state": "open",
                "locked": false,
                "title": "New Tutorial: Hive Connector over Backblaze B2 Cloud Storage",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "We've been [experimenting with using Backblaze B2 as cloud storage with Trino's Hive connector](https://www.backblaze.com/blog/storing-and-querying-analytical-data-in-backblaze-b2/) here at Backblaze. We got started from the excellent [MinIO tutorial](https://github.com/bitsondatadev/trino-getting-started/tree/main/hive/trino-minio), so, as I'm about to publish a second blog entry inviting the [Drive Stats](https://www.backblaze.com/drivestats) community to get to grips with the data, I added a tutorial for Backblaze B2, including the Drive Stats data set. Would you be interested in pulling it into your repo?",
                "created_at": "2022-10-21T00:18:55Z",
                "updated_at": "2022-10-21T00:18:55Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": null,
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/pulls/8/commits",
                "review_comments_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/pulls/8/comments",
                "review_comment_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/issues/8/comments",
                "statuses_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/statuses/2145bcd1ab76f4175197a1076e91155021b9c3db",
                "head": {
                    "label": "metadaddy:main",
                    "ref": "main",
                    "sha": "2145bcd1ab76f4175197a1076e91155021b9c3db",
                    "user": {
                        "login": "metadaddy",
                        "id": 723517,
                        "node_id": "MDQ6VXNlcjcyMzUxNw==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/metadaddy",
                        "html_url": "https://github.com/metadaddy",
                        "followers_url": "https://api.github.com/users/metadaddy/followers",
                        "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                        "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                        "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                        "repos_url": "https://api.github.com/users/metadaddy/repos",
                        "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 506752547,
                        "node_id": "R_kgDOHjRuIw",
                        "name": "trino-getting-started",
                        "full_name": "metadaddy/trino-getting-started",
                        "private": false,
                        "owner": {
                            "login": "metadaddy",
                            "id": 723517,
                            "node_id": "MDQ6VXNlcjcyMzUxNw==",
                            "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/metadaddy",
                            "html_url": "https://github.com/metadaddy",
                            "followers_url": "https://api.github.com/users/metadaddy/followers",
                            "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                            "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                            "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                            "repos_url": "https://api.github.com/users/metadaddy/repos",
                            "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/metadaddy/trino-getting-started",
                        "description": null,
                        "fork": true,
                        "url": "https://api.github.com/repos/metadaddy/trino-getting-started",
                        "forks_url": "https://api.github.com/repos/metadaddy/trino-getting-started/forks",
                        "keys_url": "https://api.github.com/repos/metadaddy/trino-getting-started/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/metadaddy/trino-getting-started/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/metadaddy/trino-getting-started/teams",
                        "hooks_url": "https://api.github.com/repos/metadaddy/trino-getting-started/hooks",
                        "issue_events_url": "https://api.github.com/repos/metadaddy/trino-getting-started/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/metadaddy/trino-getting-started/events",
                        "assignees_url": "https://api.github.com/repos/metadaddy/trino-getting-started/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/metadaddy/trino-getting-started/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/metadaddy/trino-getting-started/tags",
                        "blobs_url": "https://api.github.com/repos/metadaddy/trino-getting-started/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/metadaddy/trino-getting-started/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/metadaddy/trino-getting-started/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/metadaddy/trino-getting-started/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/metadaddy/trino-getting-started/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/metadaddy/trino-getting-started/languages",
                        "stargazers_url": "https://api.github.com/repos/metadaddy/trino-getting-started/stargazers",
                        "contributors_url": "https://api.github.com/repos/metadaddy/trino-getting-started/contributors",
                        "subscribers_url": "https://api.github.com/repos/metadaddy/trino-getting-started/subscribers",
                        "subscription_url": "https://api.github.com/repos/metadaddy/trino-getting-started/subscription",
                        "commits_url": "https://api.github.com/repos/metadaddy/trino-getting-started/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/metadaddy/trino-getting-started/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/metadaddy/trino-getting-started/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/metadaddy/trino-getting-started/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/metadaddy/trino-getting-started/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/metadaddy/trino-getting-started/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/metadaddy/trino-getting-started/merges",
                        "archive_url": "https://api.github.com/repos/metadaddy/trino-getting-started/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/metadaddy/trino-getting-started/downloads",
                        "issues_url": "https://api.github.com/repos/metadaddy/trino-getting-started/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/metadaddy/trino-getting-started/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/metadaddy/trino-getting-started/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/metadaddy/trino-getting-started/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/metadaddy/trino-getting-started/labels{/name}",
                        "releases_url": "https://api.github.com/repos/metadaddy/trino-getting-started/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/metadaddy/trino-getting-started/deployments",
                        "created_at": "2022-06-23T18:37:35Z",
                        "updated_at": "2022-08-27T02:19:58Z",
                        "pushed_at": "2022-10-21T00:10:41Z",
                        "git_url": "git://github.com/metadaddy/trino-getting-started.git",
                        "ssh_url": "git@github.com:metadaddy/trino-getting-started.git",
                        "clone_url": "https://github.com/metadaddy/trino-getting-started.git",
                        "svn_url": "https://github.com/metadaddy/trino-getting-started",
                        "homepage": null,
                        "size": 20729,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": "Python",
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "main"
                    }
                },
                "base": {
                    "label": "bitsondatadev:main",
                    "ref": "main",
                    "sha": "6a9aad4432b01705e247d9c2e1c8dff77d40cc4e",
                    "user": {
                        "login": "bitsondatadev",
                        "id": 8547669,
                        "node_id": "MDQ6VXNlcjg1NDc2Njk=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/8547669?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/bitsondatadev",
                        "html_url": "https://github.com/bitsondatadev",
                        "followers_url": "https://api.github.com/users/bitsondatadev/followers",
                        "following_url": "https://api.github.com/users/bitsondatadev/following{/other_user}",
                        "gists_url": "https://api.github.com/users/bitsondatadev/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/bitsondatadev/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/bitsondatadev/subscriptions",
                        "organizations_url": "https://api.github.com/users/bitsondatadev/orgs",
                        "repos_url": "https://api.github.com/users/bitsondatadev/repos",
                        "events_url": "https://api.github.com/users/bitsondatadev/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/bitsondatadev/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 341978481,
                        "node_id": "MDEwOlJlcG9zaXRvcnkzNDE5Nzg0ODE=",
                        "name": "trino-getting-started",
                        "full_name": "bitsondatadev/trino-getting-started",
                        "private": false,
                        "owner": {
                            "login": "bitsondatadev",
                            "id": 8547669,
                            "node_id": "MDQ6VXNlcjg1NDc2Njk=",
                            "avatar_url": "https://avatars.githubusercontent.com/u/8547669?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/bitsondatadev",
                            "html_url": "https://github.com/bitsondatadev",
                            "followers_url": "https://api.github.com/users/bitsondatadev/followers",
                            "following_url": "https://api.github.com/users/bitsondatadev/following{/other_user}",
                            "gists_url": "https://api.github.com/users/bitsondatadev/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/bitsondatadev/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/bitsondatadev/subscriptions",
                            "organizations_url": "https://api.github.com/users/bitsondatadev/orgs",
                            "repos_url": "https://api.github.com/users/bitsondatadev/repos",
                            "events_url": "https://api.github.com/users/bitsondatadev/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/bitsondatadev/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/bitsondatadev/trino-getting-started",
                        "description": null,
                        "fork": false,
                        "url": "https://api.github.com/repos/bitsondatadev/trino-getting-started",
                        "forks_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/forks",
                        "keys_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/teams",
                        "hooks_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/hooks",
                        "issue_events_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/events",
                        "assignees_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/tags",
                        "blobs_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/languages",
                        "stargazers_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/stargazers",
                        "contributors_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/contributors",
                        "subscribers_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/subscribers",
                        "subscription_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/subscription",
                        "commits_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/merges",
                        "archive_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/downloads",
                        "issues_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/labels{/name}",
                        "releases_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/deployments",
                        "created_at": "2021-02-24T17:23:52Z",
                        "updated_at": "2022-10-14T09:26:34Z",
                        "pushed_at": "2022-07-06T11:51:17Z",
                        "git_url": "git://github.com/bitsondatadev/trino-getting-started.git",
                        "ssh_url": "git@github.com:bitsondatadev/trino-getting-started.git",
                        "clone_url": "https://github.com/bitsondatadev/trino-getting-started.git",
                        "svn_url": "https://github.com/bitsondatadev/trino-getting-started",
                        "homepage": null,
                        "size": 20720,
                        "stargazers_count": 126,
                        "watchers_count": 126,
                        "language": "Python",
                        "has_issues": true,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "forks_count": 47,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 6,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 47,
                        "open_issues": 6,
                        "watchers": 126,
                        "default_branch": "main"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/bitsondatadev/trino-getting-started/pulls/8"
                    },
                    "html": {
                        "href": "https://github.com/bitsondatadev/trino-getting-started/pull/8"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/bitsondatadev/trino-getting-started/issues/8"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/bitsondatadev/trino-getting-started/issues/8/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/bitsondatadev/trino-getting-started/pulls/8/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/bitsondatadev/trino-getting-started/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/bitsondatadev/trino-getting-started/pulls/8/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/bitsondatadev/trino-getting-started/statuses/2145bcd1ab76f4175197a1076e91155021b9c3db"
                    }
                },
                "author_association": "NONE",
                "auto_merge": null,
                "active_lock_reason": null,
                "merged": false,
                "mergeable": null,
                "rebaseable": null,
                "mergeable_state": "unknown",
                "merged_by": null,
                "comments": 0,
                "review_comments": 0,
                "maintainer_can_modify": true,
                "commits": 12,
                "additions": 879,
                "deletions": 0,
                "changed_files": 23
            }
        },
        "public": true,
        "created_at": "2022-10-21T00:18:55Z"
    },
    {
        "id": "24737638743",
        "type": "PushEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 506752547,
            "name": "metadaddy/trino-getting-started",
            "url": "https://api.github.com/repos/metadaddy/trino-getting-started"
        },
        "payload": {
            "push_id": 11400739242,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/main",
            "head": "2145bcd1ab76f4175197a1076e91155021b9c3db",
            "before": "5ee077af85421d09ba1be882e2b28e3984748528",
            "commits": [
                {
                    "sha": "2145bcd1ab76f4175197a1076e91155021b9c3db",
                    "author": {
                        "email": "pat@backblaze.com",
                        "name": "Pat Patterson"
                    },
                    "message": "I'll get this right soon",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino-getting-started/commits/2145bcd1ab76f4175197a1076e91155021b9c3db"
                }
            ]
        },
        "public": true,
        "created_at": "2022-10-21T00:10:41Z"
    },
    {
        "id": "24737629710",
        "type": "PushEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 506752547,
            "name": "metadaddy/trino-getting-started",
            "url": "https://api.github.com/repos/metadaddy/trino-getting-started"
        },
        "payload": {
            "push_id": 11400734244,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/main",
            "head": "5ee077af85421d09ba1be882e2b28e3984748528",
            "before": "2bdd51f82be07da31d5a1672df8495cb22c2df09",
            "commits": [
                {
                    "sha": "5ee077af85421d09ba1be882e2b28e3984748528",
                    "author": {
                        "email": "pat@backblaze.com",
                        "name": "Pat Patterson"
                    },
                    "message": "Typo",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino-getting-started/commits/5ee077af85421d09ba1be882e2b28e3984748528"
                }
            ]
        },
        "public": true,
        "created_at": "2022-10-21T00:09:51Z"
    },
    {
        "id": "24737625161",
        "type": "PushEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 506752547,
            "name": "metadaddy/trino-getting-started",
            "url": "https://api.github.com/repos/metadaddy/trino-getting-started"
        },
        "payload": {
            "push_id": 11400731824,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/main",
            "head": "2bdd51f82be07da31d5a1672df8495cb22c2df09",
            "before": "7dce02b5a171bbca34b0994ada9a89fc06953292",
            "commits": [
                {
                    "sha": "2bdd51f82be07da31d5a1672df8495cb22c2df09",
                    "author": {
                        "email": "pat@backblaze.com",
                        "name": "Pat Patterson"
                    },
                    "message": "Fix drivestats.sql path",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino-getting-started/commits/2bdd51f82be07da31d5a1672df8495cb22c2df09"
                }
            ]
        },
        "public": true,
        "created_at": "2022-10-21T00:09:26Z"
    },
    {
        "id": "24737552137",
        "type": "PushEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 506752547,
            "name": "metadaddy/trino-getting-started",
            "url": "https://api.github.com/repos/metadaddy/trino-getting-started"
        },
        "payload": {
            "push_id": 11400693416,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/main",
            "head": "7dce02b5a171bbca34b0994ada9a89fc06953292",
            "before": "731524da5bfb78f950359b7cffb2581394ec3ab0",
            "commits": [
                {
                    "sha": "7dce02b5a171bbca34b0994ada9a89fc06953292",
                    "author": {
                        "email": "pat@backblaze.com",
                        "name": "Pat Patterson"
                    },
                    "message": "Yet more image sizing",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino-getting-started/commits/7dce02b5a171bbca34b0994ada9a89fc06953292"
                }
            ]
        },
        "public": true,
        "created_at": "2022-10-21T00:02:48Z"
    },
    {
        "id": "24737532939",
        "type": "PushEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 506752547,
            "name": "metadaddy/trino-getting-started",
            "url": "https://api.github.com/repos/metadaddy/trino-getting-started"
        },
        "payload": {
            "push_id": 11400683125,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/main",
            "head": "731524da5bfb78f950359b7cffb2581394ec3ab0",
            "before": "00ea30dacfde8c6307996577c9bf8387ad345297",
            "commits": [
                {
                    "sha": "731524da5bfb78f950359b7cffb2581394ec3ab0",
                    "author": {
                        "email": "pat@backblaze.com",
                        "name": "Pat Patterson"
                    },
                    "message": "More image sizing",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino-getting-started/commits/731524da5bfb78f950359b7cffb2581394ec3ab0"
                }
            ]
        },
        "public": true,
        "created_at": "2022-10-21T00:01:05Z"
    },
    {
        "id": "25757147946",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 166515022,
            "name": "trinodb/trino",
            "url": "https://api.github.com/repos/trinodb/trino"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/trinodb/trino/issues/15337",
                "repository_url": "https://api.github.com/repos/trinodb/trino",
                "labels_url": "https://api.github.com/repos/trinodb/trino/issues/15337/labels{/name}",
                "comments_url": "https://api.github.com/repos/trinodb/trino/issues/15337/comments",
                "events_url": "https://api.github.com/repos/trinodb/trino/issues/15337/events",
                "html_url": "https://github.com/trinodb/trino/pull/15337",
                "id": 1482501542,
                "node_id": "PR_kwDOCezRTs5Eq7bB",
                "number": 15337,
                "title": "Fix test for invalid rate in FormatUtils.formatDataRate()",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 1202580151,
                        "node_id": "MDU6TGFiZWwxMjAyNTgwMTUx",
                        "url": "https://api.github.com/repos/trinodb/trino/labels/cla-signed",
                        "name": "cla-signed",
                        "color": "ededed",
                        "default": false,
                        "description": null
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 2,
                "created_at": "2022-12-07T17:54:40Z",
                "updated_at": "2022-12-08T17:16:07Z",
                "closed_at": null,
                "author_association": "MEMBER",
                "active_lock_reason": null,
                "draft": false,
                "pull_request": {
                    "url": "https://api.github.com/repos/trinodb/trino/pulls/15337",
                    "html_url": "https://github.com/trinodb/trino/pull/15337",
                    "diff_url": "https://github.com/trinodb/trino/pull/15337.diff",
                    "patch_url": "https://github.com/trinodb/trino/pull/15337.patch",
                    "merged_at": null
                },
                "body": "<!-- Thank you for submitting a pull request! Find more information in our development guide at https://github.com/trinodb/trino/blob/master/.github/DEVELOPMENT.md and contact us on #dev in Slack. -->\r\n<!-- Provide an overview of the PR for maintainers and reviewers. -->\r\n## Description\r\n\r\n`FormatUtils.formatDataRate()` contains the following code:\r\n\r\n```java\r\nlong rate = Math.round(dataSize.toBytes() / duration.getValue(SECONDS));\r\nif (Double.isNaN(rate) || Double.isInfinite(rate)) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nThe test can never evaluate as `true`, since both functions will return false for any `long`.\r\n\r\nThe correct test is:\r\n\r\n```java\r\nif (rate == Long.MAX_VALUE) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nIt's not necessary to test for `Long.MIN_VALUE`, since neither `dataSize` nor `duration` can be negative.\r\n\r\n<!-- Provide details that would help an engineer who is unfamiliar with this part of the code. -->\r\n## Unit Test\r\n\r\nI added a new class, `TestFormatUtils` to test both this fix and the rest of `FormatUtils`. The tests for this change are:\r\n\r\n```java\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), false), \"0B\");\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), true), \"0B/s\");\r\n```\r\n\r\n<!-- Mark the appropriate option with an (x). Propose a release note if you can. -->\r\n## Release notes\r\n\r\n(x) This is not user-visible or docs only and no release notes are required.\r\n( ) Release notes are required, please propose a release note for me.\r\n( ) Release notes are required, with the following suggested text:\r\n\r\n## Related Issue\r\n\r\nFixes #13093",
                "reactions": {
                    "url": "https://api.github.com/repos/trinodb/trino/issues/15337/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/trinodb/trino/issues/15337/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/trinodb/trino/issues/comments/1343042979",
                "html_url": "https://github.com/trinodb/trino/pull/15337#issuecomment-1343042979",
                "issue_url": "https://api.github.com/repos/trinodb/trino/issues/15337",
                "id": 1343042979,
                "node_id": "IC_kwDOCezRTs5QDTWj",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2022-12-08T17:16:07Z",
                "updated_at": "2022-12-08T17:16:07Z",
                "author_association": "MEMBER",
                "body": "Force-pushed the fix for the failing maven check (`import static io.trino.cli.FormatUtils.*`)",
                "reactions": {
                    "url": "https://api.github.com/repos/trinodb/trino/issues/comments/1343042979/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2022-12-08T17:16:08Z",
        "org": {
            "id": 34147222,
            "login": "trinodb",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/trinodb",
            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?"
        }
    },
    {
        "id": "25757121052",
        "type": "PushEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 509274784,
            "name": "metadaddy/trino",
            "url": "https://api.github.com/repos/metadaddy/trino"
        },
        "payload": {
            "push_id": 11931950930,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/fix-formatdatarate-test",
            "head": "ed8e1a6d52194b8ac9f2807f4ca8a5d1cdb63965",
            "before": "a3ff14606d70a46f592dbdd56eb32cb71a79ef91",
            "commits": [
                {
                    "sha": "ed8e1a6d52194b8ac9f2807f4ca8a5d1cdb63965",
                    "author": {
                        "email": "pat@backblaze.com",
                        "name": "Pat Patterson"
                    },
                    "message": "Fix check for invalid rate in FormatUtils.formatDataRate()",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/ed8e1a6d52194b8ac9f2807f4ca8a5d1cdb63965"
                }
            ]
        },
        "public": true,
        "created_at": "2022-12-08T17:15:00Z"
    },
    {
        "id": "25756989078",
        "type": "PullRequestReviewCommentEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 166515022,
            "name": "trinodb/trino",
            "url": "https://api.github.com/repos/trinodb/trino"
        },
        "payload": {
            "action": "created",
            "comment": {
                "url": "https://api.github.com/repos/trinodb/trino/pulls/comments/1043598007",
                "pull_request_review_id": 1210447926,
                "id": 1043598007,
                "node_id": "PRRC_kwDOCezRTs4-NAq3",
                "diff_hunk": "@@ -0,0 +1,353 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.trino.cli;\n+\n+import io.airlift.units.DataSize;\n+import io.airlift.units.Duration;\n+import org.testng.annotations.Test;\n+\n+import static org.testng.Assert.assertEquals;\n+\n+public class TestFormatUtils\n+{\n+    @Test\n+    public void testFormatCount()\n+    {\n+        assertEquals(FormatUtils.formatCount(1L), \"1\");\n+        assertEquals(FormatUtils.formatCount(12L), \"12\");\n+        assertEquals(FormatUtils.formatCount(123L), \"123\");\n+        assertEquals(FormatUtils.formatCount(1234L), \"1.23K\");\n+        assertEquals(FormatUtils.formatCount(12345L), \"12.3K\");\n+        assertEquals(FormatUtils.formatCount(123456L), \"123K\");\n+        assertEquals(FormatUtils.formatCount(1234567L), \"1.23M\");\n+        assertEquals(FormatUtils.formatCount(12345678L), \"12.3M\");\n+        assertEquals(FormatUtils.formatCount(123456789L), \"123M\");\n+        assertEquals(FormatUtils.formatCount(1234567890L), \"1.23B\");\n+        assertEquals(FormatUtils.formatCount(12345678901L), \"12.3B\");\n+        assertEquals(FormatUtils.formatCount(123456789012L), \"123B\");\n+        assertEquals(FormatUtils.formatCount(1234567890123L), \"1.23T\");\n+        assertEquals(FormatUtils.formatCount(12345678901234L), \"12.3T\");\n+        assertEquals(FormatUtils.formatCount(123456789012345L), \"123T\");\n+        assertEquals(FormatUtils.formatCount(1234567890123456L), \"1.23Q\");\n+        assertEquals(FormatUtils.formatCount(12345678901234567L), \"12.3Q\");\n+        assertEquals(FormatUtils.formatCount(123456789012345678L), \"123Q\");\n+        assertEquals(FormatUtils.formatCount(1234567890123456789L), \"1235Q\");\n+    }\n+\n+    @Test\n+    public void formatCountRate()\n+    {\n+        assertEquals(FormatUtils.formatCountRate(0.0000000001D, Duration.valueOf(\"1ns\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(0.0000000001D, Duration.valueOf(\"1ns\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(0.000000001D, Duration.valueOf(\"1ns\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(0.000000001D, Duration.valueOf(\"1ns\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(0.0000000015D, Duration.valueOf(\"1ns\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(0.0000000015D, Duration.valueOf(\"1ns\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(1D, Duration.valueOf(\"1ns\"), false), \"1000M\");\n+        assertEquals(FormatUtils.formatCountRate(1D, Duration.valueOf(\"1ns\"), true), \"1000M/s\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"1ns\"), false), \"10B\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"1ns\"), true), \"10B/s\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"10ns\"), false), \"1000M\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"10ns\"), true), \"1000M/s\");\n+\n+        assertEquals(FormatUtils.formatCountRate(0.0000001D, Duration.valueOf(\"1us\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(0.0000001D, Duration.valueOf(\"1us\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(0.000001D, Duration.valueOf(\"1us\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(0.000001D, Duration.valueOf(\"1us\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(0.0000015D, Duration.valueOf(\"1us\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(0.0000015D, Duration.valueOf(\"1us\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(1D, Duration.valueOf(\"1us\"), false), \"1000K\");\n+        assertEquals(FormatUtils.formatCountRate(1D, Duration.valueOf(\"1us\"), true), \"1000K/s\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"1us\"), false), \"10M\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"1us\"), true), \"10M/s\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"10us\"), false), \"1000K\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"10us\"), true), \"1000K/s\");\n+\n+        assertEquals(FormatUtils.formatCountRate(0.0001D, Duration.valueOf(\"1ms\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(0.0001D, Duration.valueOf(\"1ms\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(0.001D, Duration.valueOf(\"1ms\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(0.001D, Duration.valueOf(\"1ms\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(0.0015D, Duration.valueOf(\"1ms\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(0.0015D, Duration.valueOf(\"1ms\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(1D, Duration.valueOf(\"1ms\"), false), \"1000\");\n+        assertEquals(FormatUtils.formatCountRate(1D, Duration.valueOf(\"1ms\"), true), \"1000/s\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"1ms\"), false), \"10K\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"1ms\"), true), \"10K/s\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"10ms\"), false), \"1000\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"10ms\"), true), \"1000/s\");\n+\n+        assertEquals(FormatUtils.formatCountRate(0.1D, Duration.valueOf(\"1s\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(0.1D, Duration.valueOf(\"1s\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"1s\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"1s\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"10s\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"10s\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(1.5D, Duration.valueOf(\"1s\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(1.5D, Duration.valueOf(\"1s\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"1s\"), false), \"10\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"1s\"), true), \"10/s\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"10s\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"10s\"), true), \"1/s\");\n+\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"1m\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"1m\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(60.0D, Duration.valueOf(\"1m\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(60.0D, Duration.valueOf(\"1m\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(600.0D, Duration.valueOf(\"1m\"), false), \"10\");\n+        assertEquals(FormatUtils.formatCountRate(600.0D, Duration.valueOf(\"1m\"), true), \"10/s\");\n+        assertEquals(FormatUtils.formatCountRate(100.0D, Duration.valueOf(\"10m\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(100.0D, Duration.valueOf(\"10m\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(600.0D, Duration.valueOf(\"10m\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(600.0D, Duration.valueOf(\"10m\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(6000.0D, Duration.valueOf(\"10m\"), false), \"10\");\n+        assertEquals(FormatUtils.formatCountRate(6000.0D, Duration.valueOf(\"10m\"), true), \"10/s\");\n+\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"1h\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"1h\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(3600.0D, Duration.valueOf(\"1h\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(3600.0D, Duration.valueOf(\"1h\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(36000.0D, Duration.valueOf(\"1h\"), false), \"10\");\n+        assertEquals(FormatUtils.formatCountRate(36000.0D, Duration.valueOf(\"1h\"), true), \"10/s\");\n+        assertEquals(FormatUtils.formatCountRate(100.0D, Duration.valueOf(\"10h\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(100.0D, Duration.valueOf(\"10h\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(36000.0D, Duration.valueOf(\"10h\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(36000.0D, Duration.valueOf(\"10h\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(360000.0D, Duration.valueOf(\"10h\"), false), \"10\");\n+        assertEquals(FormatUtils.formatCountRate(360000.0D, Duration.valueOf(\"10h\"), true), \"10/s\");\n+\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"1d\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"1d\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(86400.0D, Duration.valueOf(\"1d\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(86400.0D, Duration.valueOf(\"1d\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(864000.0D, Duration.valueOf(\"1d\"), false), \"10\");\n+        assertEquals(FormatUtils.formatCountRate(864000.0D, Duration.valueOf(\"1d\"), true), \"10/s\");\n+        assertEquals(FormatUtils.formatCountRate(86400.0D, Duration.valueOf(\"10d\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(86400.0D, Duration.valueOf(\"10d\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(864000.0D, Duration.valueOf(\"10d\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(864000.0D, Duration.valueOf(\"10d\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(8640000.0D, Duration.valueOf(\"10d\"), false), \"10\");\n+        assertEquals(FormatUtils.formatCountRate(8640000.0D, Duration.valueOf(\"10d\"), true), \"10/s\");\n+\n+        assertEquals(FormatUtils.formatCountRate(Double.NaN, Duration.valueOf(\"1s\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(Double.NaN, Duration.valueOf(\"1s\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(Double.POSITIVE_INFINITY, Duration.valueOf(\"1s\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(Double.POSITIVE_INFINITY, Duration.valueOf(\"1s\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(Double.NEGATIVE_INFINITY, Duration.valueOf(\"1s\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(Double.NEGATIVE_INFINITY, Duration.valueOf(\"1s\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"0s\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"0s\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(-1.0D, Duration.valueOf(\"0s\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(-1.0D, Duration.valueOf(\"0s\"), true), \"0/s\");\n+    }\n+\n+    @Test\n+    public void testFormatDataSize()\n+    {\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1L), false), \"1B\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1L), true), \"1B\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12L), false), \"12B\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12L), true), \"12B\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123L), false), \"123B\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123L), true), \"123B\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234L), false), \"1.21K\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234L), true), \"1.21KB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12345L), false), \"12.1K\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12345L), true), \"12.1KB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123456L), false), \"121K\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123456L), true), \"121KB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234567L), false), \"1.18M\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234567L), true), \"1.18MB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12345678L), false), \"11.8M\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12345678L), true), \"11.8MB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123456789L), false), \"118M\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123456789L), true), \"118MB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234567890L), false), \"1.15G\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234567890L), true), \"1.15GB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12345678901L), false), \"11.5G\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12345678901L), true), \"11.5GB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123456789012L), false), \"115G\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123456789012L), true), \"115GB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234567890123L), false), \"1.12T\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234567890123L), true), \"1.12TB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12345678901234L), false), \"11.2T\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12345678901234L), true), \"11.2TB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123456789012345L), false), \"112T\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123456789012345L), true), \"112TB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234567890123456L), false), \"1.1P\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234567890123456L), true), \"1.1PB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12345678901234567L), false), \"11P\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12345678901234567L), true), \"11PB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123456789012345678L), false), \"110P\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123456789012345678L), true), \"110PB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234567890123456789L), false), \"1097P\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234567890123456789L), true), \"1097PB\");\n+    }\n+\n+    @Test\n+    public void testFormatDataRate()\n+    {\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(0), Duration.valueOf(\"1ns\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(0), Duration.valueOf(\"1ns\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1ns\"), false), \"954M\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1ns\"), true), \"954MB/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"1ns\"), false), \"9.31G\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"1ns\"), true), \"9.31GB/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"10ns\"), false), \"954M\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"10ns\"), true), \"954MB/s\");\n+\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(0), Duration.valueOf(\"1us\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(0), Duration.valueOf(\"1us\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1us\"), false), \"977K\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1us\"), true), \"977KB/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"1us\"), false), \"9.54M\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"1us\"), true), \"9.54MB/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"10us\"), false), \"977K\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"10us\"), true), \"977KB/s\");\n+\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(0), Duration.valueOf(\"1ms\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(0), Duration.valueOf(\"1ms\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1ms\"), false), \"1000B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1ms\"), true), \"1000B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"1ms\"), false), \"9.77K\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"1ms\"), true), \"9.77KB/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"10ms\"), false), \"1000B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"10ms\"), true), \"1000B/s\");\n+\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(0), Duration.valueOf(\"1s\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(0), Duration.valueOf(\"1s\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1s\"), false), \"1B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1s\"), true), \"1B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"10s\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"10s\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"1s\"), false), \"10B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"1s\"), true), \"10B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"10s\"), false), \"1B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"10s\"), true), \"1B/s\");\n+\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1m\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1m\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(60), Duration.valueOf(\"1m\"), false), \"1B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(60), Duration.valueOf(\"1m\"), true), \"1B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(600), Duration.valueOf(\"1m\"), false), \"10B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(600), Duration.valueOf(\"1m\"), true), \"10B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(100), Duration.valueOf(\"10m\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(100), Duration.valueOf(\"10m\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(600), Duration.valueOf(\"10m\"), false), \"1B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(600), Duration.valueOf(\"10m\"), true), \"1B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(6000), Duration.valueOf(\"10m\"), false), \"10B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(6000), Duration.valueOf(\"10m\"), true), \"10B/s\");\n+\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1h\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1h\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(3600), Duration.valueOf(\"1h\"), false), \"1B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(3600), Duration.valueOf(\"1h\"), true), \"1B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(36000), Duration.valueOf(\"1h\"), false), \"10B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(36000), Duration.valueOf(\"1h\"), true), \"10B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(100), Duration.valueOf(\"10h\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(100), Duration.valueOf(\"10h\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(36000), Duration.valueOf(\"10h\"), false), \"1B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(36000), Duration.valueOf(\"10h\"), true), \"1B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(360000), Duration.valueOf(\"10h\"), false), \"10B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(360000), Duration.valueOf(\"10h\"), true), \"10B/s\");\n+\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1d\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1d\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(86400), Duration.valueOf(\"1d\"), false), \"1B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(86400), Duration.valueOf(\"1d\"), true), \"1B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(864000), Duration.valueOf(\"1d\"), false), \"10B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(864000), Duration.valueOf(\"1d\"), true), \"10B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(86400), Duration.valueOf(\"10d\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(86400), Duration.valueOf(\"10d\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(864000), Duration.valueOf(\"10d\"), false), \"1B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(864000), Duration.valueOf(\"10d\"), true), \"1B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(8640000), Duration.valueOf(\"10d\"), false), \"10B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(8640000), Duration.valueOf(\"10d\"), true), \"10B/s\");\n+\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), true), \"0B/s\");\n+    }\n+\n+    @Test\n+    public void testPluralize()",
                "path": "client/trino-cli/src/test/java/io/trino/cli/TestFormatUtils.java",
                "position": 284,
                "original_position": 282,
                "commit_id": "a3ff14606d70a46f592dbdd56eb32cb71a79ef91",
                "original_commit_id": "f88ba0cee83615211a54a7351df5656d7688ae1c",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "Done",
                "created_at": "2022-12-08T17:09:24Z",
                "updated_at": "2022-12-08T17:09:24Z",
                "html_url": "https://github.com/trinodb/trino/pull/15337#discussion_r1043598007",
                "pull_request_url": "https://api.github.com/repos/trinodb/trino/pulls/15337",
                "author_association": "MEMBER",
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/comments/1043598007"
                    },
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15337#discussion_r1043598007"
                    },
                    "pull_request": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337"
                    }
                },
                "reactions": {
                    "url": "https://api.github.com/repos/trinodb/trino/pulls/comments/1043598007/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "start_line": null,
                "original_start_line": null,
                "start_side": null,
                "line": 284,
                "original_line": 284,
                "side": "RIGHT",
                "in_reply_to_id": 1042707167
            },
            "pull_request": {
                "url": "https://api.github.com/repos/trinodb/trino/pulls/15337",
                "id": 1152104129,
                "node_id": "PR_kwDOCezRTs5Eq7bB",
                "html_url": "https://github.com/trinodb/trino/pull/15337",
                "diff_url": "https://github.com/trinodb/trino/pull/15337.diff",
                "patch_url": "https://github.com/trinodb/trino/pull/15337.patch",
                "issue_url": "https://api.github.com/repos/trinodb/trino/issues/15337",
                "number": 15337,
                "state": "open",
                "locked": false,
                "title": "Fix test for invalid rate in FormatUtils.formatDataRate()",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "<!-- Thank you for submitting a pull request! Find more information in our development guide at https://github.com/trinodb/trino/blob/master/.github/DEVELOPMENT.md and contact us on #dev in Slack. -->\r\n<!-- Provide an overview of the PR for maintainers and reviewers. -->\r\n## Description\r\n\r\n`FormatUtils.formatDataRate()` contains the following code:\r\n\r\n```java\r\nlong rate = Math.round(dataSize.toBytes() / duration.getValue(SECONDS));\r\nif (Double.isNaN(rate) || Double.isInfinite(rate)) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nThe test can never evaluate as `true`, since both functions will return false for any `long`.\r\n\r\nThe correct test is:\r\n\r\n```java\r\nif (rate == Long.MAX_VALUE) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nIt's not necessary to test for `Long.MIN_VALUE`, since neither `dataSize` nor `duration` can be negative.\r\n\r\n<!-- Provide details that would help an engineer who is unfamiliar with this part of the code. -->\r\n## Unit Test\r\n\r\nI added a new class, `TestFormatUtils` to test both this fix and the rest of `FormatUtils`. The tests for this change are:\r\n\r\n```java\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), false), \"0B\");\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), true), \"0B/s\");\r\n```\r\n\r\n<!-- Mark the appropriate option with an (x). Propose a release note if you can. -->\r\n## Release notes\r\n\r\n(x) This is not user-visible or docs only and no release notes are required.\r\n( ) Release notes are required, please propose a release note for me.\r\n( ) Release notes are required, with the following suggested text:\r\n\r\n## Related Issue\r\n\r\nFixes #13093",
                "created_at": "2022-12-07T17:54:40Z",
                "updated_at": "2022-12-08T17:09:24Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": "04709a71679326dfa2fa43ab44d4da90024bf8c7",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [
                    {
                        "id": 1202580151,
                        "node_id": "MDU6TGFiZWwxMjAyNTgwMTUx",
                        "url": "https://api.github.com/repos/trinodb/trino/labels/cla-signed",
                        "name": "cla-signed",
                        "color": "ededed",
                        "default": false,
                        "description": null
                    }
                ],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/trinodb/trino/pulls/15337/commits",
                "review_comments_url": "https://api.github.com/repos/trinodb/trino/pulls/15337/comments",
                "review_comment_url": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/trinodb/trino/issues/15337/comments",
                "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/a3ff14606d70a46f592dbdd56eb32cb71a79ef91",
                "head": {
                    "label": "metadaddy:fix-formatdatarate-test",
                    "ref": "fix-formatdatarate-test",
                    "sha": "a3ff14606d70a46f592dbdd56eb32cb71a79ef91",
                    "user": {
                        "login": "metadaddy",
                        "id": 723517,
                        "node_id": "MDQ6VXNlcjcyMzUxNw==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/metadaddy",
                        "html_url": "https://github.com/metadaddy",
                        "followers_url": "https://api.github.com/users/metadaddy/followers",
                        "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                        "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                        "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                        "repos_url": "https://api.github.com/users/metadaddy/repos",
                        "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 509274784,
                        "node_id": "R_kgDOHlrqoA",
                        "name": "trino",
                        "full_name": "metadaddy/trino",
                        "private": false,
                        "owner": {
                            "login": "metadaddy",
                            "id": 723517,
                            "node_id": "MDQ6VXNlcjcyMzUxNw==",
                            "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/metadaddy",
                            "html_url": "https://github.com/metadaddy",
                            "followers_url": "https://api.github.com/users/metadaddy/followers",
                            "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                            "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                            "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                            "repos_url": "https://api.github.com/users/metadaddy/repos",
                            "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/metadaddy/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": true,
                        "url": "https://api.github.com/repos/metadaddy/trino",
                        "forks_url": "https://api.github.com/repos/metadaddy/trino/forks",
                        "keys_url": "https://api.github.com/repos/metadaddy/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/metadaddy/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/metadaddy/trino/teams",
                        "hooks_url": "https://api.github.com/repos/metadaddy/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/metadaddy/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/metadaddy/trino/events",
                        "assignees_url": "https://api.github.com/repos/metadaddy/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/metadaddy/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/metadaddy/trino/tags",
                        "blobs_url": "https://api.github.com/repos/metadaddy/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/metadaddy/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/metadaddy/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/metadaddy/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/metadaddy/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/metadaddy/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/metadaddy/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/metadaddy/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/metadaddy/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/metadaddy/trino/subscription",
                        "commits_url": "https://api.github.com/repos/metadaddy/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/metadaddy/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/metadaddy/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/metadaddy/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/metadaddy/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/metadaddy/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/metadaddy/trino/merges",
                        "archive_url": "https://api.github.com/repos/metadaddy/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/metadaddy/trino/downloads",
                        "issues_url": "https://api.github.com/repos/metadaddy/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/metadaddy/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/metadaddy/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/metadaddy/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/metadaddy/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/metadaddy/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/metadaddy/trino/deployments",
                        "created_at": "2022-07-01T00:43:32Z",
                        "updated_at": "2022-07-06T01:44:20Z",
                        "pushed_at": "2022-12-08T02:39:50Z",
                        "git_url": "git://github.com/metadaddy/trino.git",
                        "ssh_url": "git@github.com:metadaddy/trino.git",
                        "clone_url": "https://github.com/metadaddy/trino.git",
                        "svn_url": "https://github.com/metadaddy/trino",
                        "homepage": "https://trino.io",
                        "size": 197784,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": "Java",
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "master"
                    }
                },
                "base": {
                    "label": "trinodb:master",
                    "ref": "master",
                    "sha": "81d1525c7b0d24433712957632c0895847a6788b",
                    "user": {
                        "login": "trinodb",
                        "id": 34147222,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                        "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/trinodb",
                        "html_url": "https://github.com/trinodb",
                        "followers_url": "https://api.github.com/users/trinodb/followers",
                        "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                        "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                        "organizations_url": "https://api.github.com/users/trinodb/orgs",
                        "repos_url": "https://api.github.com/users/trinodb/repos",
                        "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/trinodb/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 166515022,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNjY1MTUwMjI=",
                        "name": "trino",
                        "full_name": "trinodb/trino",
                        "private": false,
                        "owner": {
                            "login": "trinodb",
                            "id": 34147222,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/trinodb",
                            "html_url": "https://github.com/trinodb",
                            "followers_url": "https://api.github.com/users/trinodb/followers",
                            "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                            "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                            "organizations_url": "https://api.github.com/users/trinodb/orgs",
                            "repos_url": "https://api.github.com/users/trinodb/repos",
                            "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/trinodb/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/trinodb/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": false,
                        "url": "https://api.github.com/repos/trinodb/trino",
                        "forks_url": "https://api.github.com/repos/trinodb/trino/forks",
                        "keys_url": "https://api.github.com/repos/trinodb/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/trinodb/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/trinodb/trino/teams",
                        "hooks_url": "https://api.github.com/repos/trinodb/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/trinodb/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/trinodb/trino/events",
                        "assignees_url": "https://api.github.com/repos/trinodb/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/trinodb/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/trinodb/trino/tags",
                        "blobs_url": "https://api.github.com/repos/trinodb/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/trinodb/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/trinodb/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/trinodb/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/trinodb/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/trinodb/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/trinodb/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/trinodb/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/trinodb/trino/subscription",
                        "commits_url": "https://api.github.com/repos/trinodb/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/trinodb/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/trinodb/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/trinodb/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/trinodb/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/trinodb/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/trinodb/trino/merges",
                        "archive_url": "https://api.github.com/repos/trinodb/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/trinodb/trino/downloads",
                        "issues_url": "https://api.github.com/repos/trinodb/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/trinodb/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/trinodb/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/trinodb/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/trinodb/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/trinodb/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/trinodb/trino/deployments",
                        "created_at": "2019-01-19T06:38:14Z",
                        "updated_at": "2022-12-08T14:45:56Z",
                        "pushed_at": "2022-12-08T16:49:16Z",
                        "git_url": "git://github.com/trinodb/trino.git",
                        "ssh_url": "git@github.com:trinodb/trino.git",
                        "clone_url": "https://github.com/trinodb/trino.git",
                        "svn_url": "https://github.com/trinodb/trino",
                        "homepage": "https://trino.io",
                        "size": 198725,
                        "stargazers_count": 6805,
                        "watchers_count": 6805,
                        "language": "Java",
                        "has_issues": true,
                        "has_projects": false,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": true,
                        "forks_count": 2085,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 2089,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "analytics",
                            "big-data",
                            "data-science",
                            "database",
                            "databases",
                            "datalake",
                            "distributed-database",
                            "distributed-databases",
                            "distributed-systems",
                            "hadoop",
                            "hive",
                            "java",
                            "jdbc",
                            "presto",
                            "prestodb",
                            "query-engine",
                            "sql",
                            "trino"
                        ],
                        "visibility": "public",
                        "forks": 2085,
                        "open_issues": 2089,
                        "watchers": 6805,
                        "default_branch": "master"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337"
                    },
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15337"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15337"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15337/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/trinodb/trino/statuses/a3ff14606d70a46f592dbdd56eb32cb71a79ef91"
                    }
                },
                "author_association": "MEMBER",
                "auto_merge": null,
                "active_lock_reason": null
            }
        },
        "public": true,
        "created_at": "2022-12-08T17:09:24Z",
        "org": {
            "id": 34147222,
            "login": "trinodb",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/trinodb",
            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?"
        }
    },
    {
        "id": "25756988955",
        "type": "PullRequestReviewEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 166515022,
            "name": "trinodb/trino",
            "url": "https://api.github.com/repos/trinodb/trino"
        },
        "payload": {
            "action": "created",
            "review": {
                "id": 1210447926,
                "node_id": "PRR_kwDOCezRTs5IJfg2",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": null,
                "commit_id": "f88ba0cee83615211a54a7351df5656d7688ae1c",
                "submitted_at": "2022-12-08T17:09:24Z",
                "state": "commented",
                "html_url": "https://github.com/trinodb/trino/pull/15337#pullrequestreview-1210447926",
                "pull_request_url": "https://api.github.com/repos/trinodb/trino/pulls/15337",
                "author_association": "MEMBER",
                "_links": {
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15337#pullrequestreview-1210447926"
                    },
                    "pull_request": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337"
                    }
                }
            },
            "pull_request": {
                "url": "https://api.github.com/repos/trinodb/trino/pulls/15337",
                "id": 1152104129,
                "node_id": "PR_kwDOCezRTs5Eq7bB",
                "html_url": "https://github.com/trinodb/trino/pull/15337",
                "diff_url": "https://github.com/trinodb/trino/pull/15337.diff",
                "patch_url": "https://github.com/trinodb/trino/pull/15337.patch",
                "issue_url": "https://api.github.com/repos/trinodb/trino/issues/15337",
                "number": 15337,
                "state": "open",
                "locked": false,
                "title": "Fix test for invalid rate in FormatUtils.formatDataRate()",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "<!-- Thank you for submitting a pull request! Find more information in our development guide at https://github.com/trinodb/trino/blob/master/.github/DEVELOPMENT.md and contact us on #dev in Slack. -->\r\n<!-- Provide an overview of the PR for maintainers and reviewers. -->\r\n## Description\r\n\r\n`FormatUtils.formatDataRate()` contains the following code:\r\n\r\n```java\r\nlong rate = Math.round(dataSize.toBytes() / duration.getValue(SECONDS));\r\nif (Double.isNaN(rate) || Double.isInfinite(rate)) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nThe test can never evaluate as `true`, since both functions will return false for any `long`.\r\n\r\nThe correct test is:\r\n\r\n```java\r\nif (rate == Long.MAX_VALUE) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nIt's not necessary to test for `Long.MIN_VALUE`, since neither `dataSize` nor `duration` can be negative.\r\n\r\n<!-- Provide details that would help an engineer who is unfamiliar with this part of the code. -->\r\n## Unit Test\r\n\r\nI added a new class, `TestFormatUtils` to test both this fix and the rest of `FormatUtils`. The tests for this change are:\r\n\r\n```java\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), false), \"0B\");\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), true), \"0B/s\");\r\n```\r\n\r\n<!-- Mark the appropriate option with an (x). Propose a release note if you can. -->\r\n## Release notes\r\n\r\n(x) This is not user-visible or docs only and no release notes are required.\r\n( ) Release notes are required, please propose a release note for me.\r\n( ) Release notes are required, with the following suggested text:\r\n\r\n## Related Issue\r\n\r\nFixes #13093",
                "created_at": "2022-12-07T17:54:40Z",
                "updated_at": "2022-12-08T17:09:24Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": "04709a71679326dfa2fa43ab44d4da90024bf8c7",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [
                    {
                        "id": 1202580151,
                        "node_id": "MDU6TGFiZWwxMjAyNTgwMTUx",
                        "url": "https://api.github.com/repos/trinodb/trino/labels/cla-signed",
                        "name": "cla-signed",
                        "color": "ededed",
                        "default": false,
                        "description": null
                    }
                ],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/trinodb/trino/pulls/15337/commits",
                "review_comments_url": "https://api.github.com/repos/trinodb/trino/pulls/15337/comments",
                "review_comment_url": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/trinodb/trino/issues/15337/comments",
                "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/a3ff14606d70a46f592dbdd56eb32cb71a79ef91",
                "head": {
                    "label": "metadaddy:fix-formatdatarate-test",
                    "ref": "fix-formatdatarate-test",
                    "sha": "a3ff14606d70a46f592dbdd56eb32cb71a79ef91",
                    "user": {
                        "login": "metadaddy",
                        "id": 723517,
                        "node_id": "MDQ6VXNlcjcyMzUxNw==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/metadaddy",
                        "html_url": "https://github.com/metadaddy",
                        "followers_url": "https://api.github.com/users/metadaddy/followers",
                        "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                        "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                        "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                        "repos_url": "https://api.github.com/users/metadaddy/repos",
                        "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 509274784,
                        "node_id": "R_kgDOHlrqoA",
                        "name": "trino",
                        "full_name": "metadaddy/trino",
                        "private": false,
                        "owner": {
                            "login": "metadaddy",
                            "id": 723517,
                            "node_id": "MDQ6VXNlcjcyMzUxNw==",
                            "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/metadaddy",
                            "html_url": "https://github.com/metadaddy",
                            "followers_url": "https://api.github.com/users/metadaddy/followers",
                            "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                            "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                            "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                            "repos_url": "https://api.github.com/users/metadaddy/repos",
                            "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/metadaddy/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": true,
                        "url": "https://api.github.com/repos/metadaddy/trino",
                        "forks_url": "https://api.github.com/repos/metadaddy/trino/forks",
                        "keys_url": "https://api.github.com/repos/metadaddy/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/metadaddy/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/metadaddy/trino/teams",
                        "hooks_url": "https://api.github.com/repos/metadaddy/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/metadaddy/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/metadaddy/trino/events",
                        "assignees_url": "https://api.github.com/repos/metadaddy/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/metadaddy/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/metadaddy/trino/tags",
                        "blobs_url": "https://api.github.com/repos/metadaddy/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/metadaddy/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/metadaddy/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/metadaddy/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/metadaddy/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/metadaddy/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/metadaddy/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/metadaddy/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/metadaddy/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/metadaddy/trino/subscription",
                        "commits_url": "https://api.github.com/repos/metadaddy/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/metadaddy/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/metadaddy/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/metadaddy/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/metadaddy/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/metadaddy/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/metadaddy/trino/merges",
                        "archive_url": "https://api.github.com/repos/metadaddy/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/metadaddy/trino/downloads",
                        "issues_url": "https://api.github.com/repos/metadaddy/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/metadaddy/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/metadaddy/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/metadaddy/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/metadaddy/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/metadaddy/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/metadaddy/trino/deployments",
                        "created_at": "2022-07-01T00:43:32Z",
                        "updated_at": "2022-07-06T01:44:20Z",
                        "pushed_at": "2022-12-08T02:39:50Z",
                        "git_url": "git://github.com/metadaddy/trino.git",
                        "ssh_url": "git@github.com:metadaddy/trino.git",
                        "clone_url": "https://github.com/metadaddy/trino.git",
                        "svn_url": "https://github.com/metadaddy/trino",
                        "homepage": "https://trino.io",
                        "size": 197784,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": "Java",
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "master"
                    }
                },
                "base": {
                    "label": "trinodb:master",
                    "ref": "master",
                    "sha": "81d1525c7b0d24433712957632c0895847a6788b",
                    "user": {
                        "login": "trinodb",
                        "id": 34147222,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                        "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/trinodb",
                        "html_url": "https://github.com/trinodb",
                        "followers_url": "https://api.github.com/users/trinodb/followers",
                        "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                        "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                        "organizations_url": "https://api.github.com/users/trinodb/orgs",
                        "repos_url": "https://api.github.com/users/trinodb/repos",
                        "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/trinodb/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 166515022,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNjY1MTUwMjI=",
                        "name": "trino",
                        "full_name": "trinodb/trino",
                        "private": false,
                        "owner": {
                            "login": "trinodb",
                            "id": 34147222,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/trinodb",
                            "html_url": "https://github.com/trinodb",
                            "followers_url": "https://api.github.com/users/trinodb/followers",
                            "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                            "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                            "organizations_url": "https://api.github.com/users/trinodb/orgs",
                            "repos_url": "https://api.github.com/users/trinodb/repos",
                            "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/trinodb/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/trinodb/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": false,
                        "url": "https://api.github.com/repos/trinodb/trino",
                        "forks_url": "https://api.github.com/repos/trinodb/trino/forks",
                        "keys_url": "https://api.github.com/repos/trinodb/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/trinodb/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/trinodb/trino/teams",
                        "hooks_url": "https://api.github.com/repos/trinodb/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/trinodb/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/trinodb/trino/events",
                        "assignees_url": "https://api.github.com/repos/trinodb/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/trinodb/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/trinodb/trino/tags",
                        "blobs_url": "https://api.github.com/repos/trinodb/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/trinodb/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/trinodb/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/trinodb/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/trinodb/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/trinodb/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/trinodb/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/trinodb/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/trinodb/trino/subscription",
                        "commits_url": "https://api.github.com/repos/trinodb/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/trinodb/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/trinodb/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/trinodb/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/trinodb/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/trinodb/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/trinodb/trino/merges",
                        "archive_url": "https://api.github.com/repos/trinodb/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/trinodb/trino/downloads",
                        "issues_url": "https://api.github.com/repos/trinodb/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/trinodb/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/trinodb/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/trinodb/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/trinodb/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/trinodb/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/trinodb/trino/deployments",
                        "created_at": "2019-01-19T06:38:14Z",
                        "updated_at": "2022-12-08T14:45:56Z",
                        "pushed_at": "2022-12-08T16:49:16Z",
                        "git_url": "git://github.com/trinodb/trino.git",
                        "ssh_url": "git@github.com:trinodb/trino.git",
                        "clone_url": "https://github.com/trinodb/trino.git",
                        "svn_url": "https://github.com/trinodb/trino",
                        "homepage": "https://trino.io",
                        "size": 198725,
                        "stargazers_count": 6805,
                        "watchers_count": 6805,
                        "language": "Java",
                        "has_issues": true,
                        "has_projects": false,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": true,
                        "forks_count": 2085,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 2089,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "analytics",
                            "big-data",
                            "data-science",
                            "database",
                            "databases",
                            "datalake",
                            "distributed-database",
                            "distributed-databases",
                            "distributed-systems",
                            "hadoop",
                            "hive",
                            "java",
                            "jdbc",
                            "presto",
                            "prestodb",
                            "query-engine",
                            "sql",
                            "trino"
                        ],
                        "visibility": "public",
                        "forks": 2085,
                        "open_issues": 2089,
                        "watchers": 6805,
                        "default_branch": "master"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337"
                    },
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15337"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15337"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15337/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/trinodb/trino/statuses/a3ff14606d70a46f592dbdd56eb32cb71a79ef91"
                    }
                },
                "author_association": "MEMBER",
                "auto_merge": null,
                "active_lock_reason": null
            }
        },
        "public": true,
        "created_at": "2022-12-08T17:09:25Z",
        "org": {
            "id": 34147222,
            "login": "trinodb",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/trinodb",
            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?"
        }
    },
    {
        "id": "25756984491",
        "type": "PullRequestReviewCommentEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 166515022,
            "name": "trinodb/trino",
            "url": "https://api.github.com/repos/trinodb/trino"
        },
        "payload": {
            "action": "created",
            "comment": {
                "url": "https://api.github.com/repos/trinodb/trino/pulls/comments/1043597809",
                "pull_request_review_id": 1210447628,
                "id": 1043597809,
                "node_id": "PRRC_kwDOCezRTs4-NAnx",
                "diff_hunk": "@@ -115,7 +115,7 @@ else if (longForm) {\n     public static String formatDataRate(DataSize dataSize, Duration duration, boolean longForm)\n     {\n         long rate = Math.round(dataSize.toBytes() / duration.getValue(SECONDS));\n-        if (Double.isNaN(rate) || Double.isInfinite(rate)) {\n+        if (rate == Long.MAX_VALUE) {",
                "path": "client/trino-cli/src/main/java/io/trino/cli/FormatUtils.java",
                "position": 5,
                "original_position": 5,
                "commit_id": "a3ff14606d70a46f592dbdd56eb32cb71a79ef91",
                "original_commit_id": "f88ba0cee83615211a54a7351df5656d7688ae1c",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "Yes - this is how `formatCountRate` works. I'm merely fixing the check here so it works as intended.",
                "created_at": "2022-12-08T17:09:12Z",
                "updated_at": "2022-12-08T17:09:12Z",
                "html_url": "https://github.com/trinodb/trino/pull/15337#discussion_r1043597809",
                "pull_request_url": "https://api.github.com/repos/trinodb/trino/pulls/15337",
                "author_association": "MEMBER",
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/comments/1043597809"
                    },
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15337#discussion_r1043597809"
                    },
                    "pull_request": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337"
                    }
                },
                "reactions": {
                    "url": "https://api.github.com/repos/trinodb/trino/pulls/comments/1043597809/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "start_line": null,
                "original_start_line": null,
                "start_side": null,
                "line": 118,
                "original_line": 118,
                "side": "RIGHT",
                "in_reply_to_id": 1042706109
            },
            "pull_request": {
                "url": "https://api.github.com/repos/trinodb/trino/pulls/15337",
                "id": 1152104129,
                "node_id": "PR_kwDOCezRTs5Eq7bB",
                "html_url": "https://github.com/trinodb/trino/pull/15337",
                "diff_url": "https://github.com/trinodb/trino/pull/15337.diff",
                "patch_url": "https://github.com/trinodb/trino/pull/15337.patch",
                "issue_url": "https://api.github.com/repos/trinodb/trino/issues/15337",
                "number": 15337,
                "state": "open",
                "locked": false,
                "title": "Fix test for invalid rate in FormatUtils.formatDataRate()",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "<!-- Thank you for submitting a pull request! Find more information in our development guide at https://github.com/trinodb/trino/blob/master/.github/DEVELOPMENT.md and contact us on #dev in Slack. -->\r\n<!-- Provide an overview of the PR for maintainers and reviewers. -->\r\n## Description\r\n\r\n`FormatUtils.formatDataRate()` contains the following code:\r\n\r\n```java\r\nlong rate = Math.round(dataSize.toBytes() / duration.getValue(SECONDS));\r\nif (Double.isNaN(rate) || Double.isInfinite(rate)) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nThe test can never evaluate as `true`, since both functions will return false for any `long`.\r\n\r\nThe correct test is:\r\n\r\n```java\r\nif (rate == Long.MAX_VALUE) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nIt's not necessary to test for `Long.MIN_VALUE`, since neither `dataSize` nor `duration` can be negative.\r\n\r\n<!-- Provide details that would help an engineer who is unfamiliar with this part of the code. -->\r\n## Unit Test\r\n\r\nI added a new class, `TestFormatUtils` to test both this fix and the rest of `FormatUtils`. The tests for this change are:\r\n\r\n```java\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), false), \"0B\");\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), true), \"0B/s\");\r\n```\r\n\r\n<!-- Mark the appropriate option with an (x). Propose a release note if you can. -->\r\n## Release notes\r\n\r\n(x) This is not user-visible or docs only and no release notes are required.\r\n( ) Release notes are required, please propose a release note for me.\r\n( ) Release notes are required, with the following suggested text:\r\n\r\n## Related Issue\r\n\r\nFixes #13093",
                "created_at": "2022-12-07T17:54:40Z",
                "updated_at": "2022-12-08T17:09:12Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": "04709a71679326dfa2fa43ab44d4da90024bf8c7",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [
                    {
                        "id": 1202580151,
                        "node_id": "MDU6TGFiZWwxMjAyNTgwMTUx",
                        "url": "https://api.github.com/repos/trinodb/trino/labels/cla-signed",
                        "name": "cla-signed",
                        "color": "ededed",
                        "default": false,
                        "description": null
                    }
                ],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/trinodb/trino/pulls/15337/commits",
                "review_comments_url": "https://api.github.com/repos/trinodb/trino/pulls/15337/comments",
                "review_comment_url": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/trinodb/trino/issues/15337/comments",
                "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/a3ff14606d70a46f592dbdd56eb32cb71a79ef91",
                "head": {
                    "label": "metadaddy:fix-formatdatarate-test",
                    "ref": "fix-formatdatarate-test",
                    "sha": "a3ff14606d70a46f592dbdd56eb32cb71a79ef91",
                    "user": {
                        "login": "metadaddy",
                        "id": 723517,
                        "node_id": "MDQ6VXNlcjcyMzUxNw==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/metadaddy",
                        "html_url": "https://github.com/metadaddy",
                        "followers_url": "https://api.github.com/users/metadaddy/followers",
                        "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                        "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                        "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                        "repos_url": "https://api.github.com/users/metadaddy/repos",
                        "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 509274784,
                        "node_id": "R_kgDOHlrqoA",
                        "name": "trino",
                        "full_name": "metadaddy/trino",
                        "private": false,
                        "owner": {
                            "login": "metadaddy",
                            "id": 723517,
                            "node_id": "MDQ6VXNlcjcyMzUxNw==",
                            "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/metadaddy",
                            "html_url": "https://github.com/metadaddy",
                            "followers_url": "https://api.github.com/users/metadaddy/followers",
                            "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                            "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                            "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                            "repos_url": "https://api.github.com/users/metadaddy/repos",
                            "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/metadaddy/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": true,
                        "url": "https://api.github.com/repos/metadaddy/trino",
                        "forks_url": "https://api.github.com/repos/metadaddy/trino/forks",
                        "keys_url": "https://api.github.com/repos/metadaddy/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/metadaddy/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/metadaddy/trino/teams",
                        "hooks_url": "https://api.github.com/repos/metadaddy/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/metadaddy/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/metadaddy/trino/events",
                        "assignees_url": "https://api.github.com/repos/metadaddy/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/metadaddy/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/metadaddy/trino/tags",
                        "blobs_url": "https://api.github.com/repos/metadaddy/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/metadaddy/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/metadaddy/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/metadaddy/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/metadaddy/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/metadaddy/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/metadaddy/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/metadaddy/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/metadaddy/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/metadaddy/trino/subscription",
                        "commits_url": "https://api.github.com/repos/metadaddy/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/metadaddy/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/metadaddy/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/metadaddy/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/metadaddy/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/metadaddy/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/metadaddy/trino/merges",
                        "archive_url": "https://api.github.com/repos/metadaddy/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/metadaddy/trino/downloads",
                        "issues_url": "https://api.github.com/repos/metadaddy/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/metadaddy/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/metadaddy/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/metadaddy/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/metadaddy/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/metadaddy/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/metadaddy/trino/deployments",
                        "created_at": "2022-07-01T00:43:32Z",
                        "updated_at": "2022-07-06T01:44:20Z",
                        "pushed_at": "2022-12-08T02:39:50Z",
                        "git_url": "git://github.com/metadaddy/trino.git",
                        "ssh_url": "git@github.com:metadaddy/trino.git",
                        "clone_url": "https://github.com/metadaddy/trino.git",
                        "svn_url": "https://github.com/metadaddy/trino",
                        "homepage": "https://trino.io",
                        "size": 197784,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": "Java",
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "master"
                    }
                },
                "base": {
                    "label": "trinodb:master",
                    "ref": "master",
                    "sha": "81d1525c7b0d24433712957632c0895847a6788b",
                    "user": {
                        "login": "trinodb",
                        "id": 34147222,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                        "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/trinodb",
                        "html_url": "https://github.com/trinodb",
                        "followers_url": "https://api.github.com/users/trinodb/followers",
                        "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                        "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                        "organizations_url": "https://api.github.com/users/trinodb/orgs",
                        "repos_url": "https://api.github.com/users/trinodb/repos",
                        "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/trinodb/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 166515022,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNjY1MTUwMjI=",
                        "name": "trino",
                        "full_name": "trinodb/trino",
                        "private": false,
                        "owner": {
                            "login": "trinodb",
                            "id": 34147222,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/trinodb",
                            "html_url": "https://github.com/trinodb",
                            "followers_url": "https://api.github.com/users/trinodb/followers",
                            "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                            "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                            "organizations_url": "https://api.github.com/users/trinodb/orgs",
                            "repos_url": "https://api.github.com/users/trinodb/repos",
                            "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/trinodb/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/trinodb/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": false,
                        "url": "https://api.github.com/repos/trinodb/trino",
                        "forks_url": "https://api.github.com/repos/trinodb/trino/forks",
                        "keys_url": "https://api.github.com/repos/trinodb/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/trinodb/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/trinodb/trino/teams",
                        "hooks_url": "https://api.github.com/repos/trinodb/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/trinodb/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/trinodb/trino/events",
                        "assignees_url": "https://api.github.com/repos/trinodb/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/trinodb/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/trinodb/trino/tags",
                        "blobs_url": "https://api.github.com/repos/trinodb/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/trinodb/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/trinodb/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/trinodb/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/trinodb/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/trinodb/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/trinodb/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/trinodb/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/trinodb/trino/subscription",
                        "commits_url": "https://api.github.com/repos/trinodb/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/trinodb/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/trinodb/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/trinodb/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/trinodb/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/trinodb/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/trinodb/trino/merges",
                        "archive_url": "https://api.github.com/repos/trinodb/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/trinodb/trino/downloads",
                        "issues_url": "https://api.github.com/repos/trinodb/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/trinodb/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/trinodb/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/trinodb/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/trinodb/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/trinodb/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/trinodb/trino/deployments",
                        "created_at": "2019-01-19T06:38:14Z",
                        "updated_at": "2022-12-08T14:45:56Z",
                        "pushed_at": "2022-12-08T16:49:16Z",
                        "git_url": "git://github.com/trinodb/trino.git",
                        "ssh_url": "git@github.com:trinodb/trino.git",
                        "clone_url": "https://github.com/trinodb/trino.git",
                        "svn_url": "https://github.com/trinodb/trino",
                        "homepage": "https://trino.io",
                        "size": 198725,
                        "stargazers_count": 6805,
                        "watchers_count": 6805,
                        "language": "Java",
                        "has_issues": true,
                        "has_projects": false,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": true,
                        "forks_count": 2085,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 2089,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "analytics",
                            "big-data",
                            "data-science",
                            "database",
                            "databases",
                            "datalake",
                            "distributed-database",
                            "distributed-databases",
                            "distributed-systems",
                            "hadoop",
                            "hive",
                            "java",
                            "jdbc",
                            "presto",
                            "prestodb",
                            "query-engine",
                            "sql",
                            "trino"
                        ],
                        "visibility": "public",
                        "forks": 2085,
                        "open_issues": 2089,
                        "watchers": 6805,
                        "default_branch": "master"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337"
                    },
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15337"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15337"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15337/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/trinodb/trino/statuses/a3ff14606d70a46f592dbdd56eb32cb71a79ef91"
                    }
                },
                "author_association": "MEMBER",
                "auto_merge": null,
                "active_lock_reason": null
            }
        },
        "public": true,
        "created_at": "2022-12-08T17:09:12Z",
        "org": {
            "id": 34147222,
            "login": "trinodb",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/trinodb",
            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?"
        }
    },
    {
        "id": "25756984490",
        "type": "PullRequestReviewEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 166515022,
            "name": "trinodb/trino",
            "url": "https://api.github.com/repos/trinodb/trino"
        },
        "payload": {
            "action": "created",
            "review": {
                "id": 1210447628,
                "node_id": "PRR_kwDOCezRTs5IJfcM",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": null,
                "commit_id": "f88ba0cee83615211a54a7351df5656d7688ae1c",
                "submitted_at": "2022-12-08T17:09:12Z",
                "state": "commented",
                "html_url": "https://github.com/trinodb/trino/pull/15337#pullrequestreview-1210447628",
                "pull_request_url": "https://api.github.com/repos/trinodb/trino/pulls/15337",
                "author_association": "MEMBER",
                "_links": {
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15337#pullrequestreview-1210447628"
                    },
                    "pull_request": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337"
                    }
                }
            },
            "pull_request": {
                "url": "https://api.github.com/repos/trinodb/trino/pulls/15337",
                "id": 1152104129,
                "node_id": "PR_kwDOCezRTs5Eq7bB",
                "html_url": "https://github.com/trinodb/trino/pull/15337",
                "diff_url": "https://github.com/trinodb/trino/pull/15337.diff",
                "patch_url": "https://github.com/trinodb/trino/pull/15337.patch",
                "issue_url": "https://api.github.com/repos/trinodb/trino/issues/15337",
                "number": 15337,
                "state": "open",
                "locked": false,
                "title": "Fix test for invalid rate in FormatUtils.formatDataRate()",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "<!-- Thank you for submitting a pull request! Find more information in our development guide at https://github.com/trinodb/trino/blob/master/.github/DEVELOPMENT.md and contact us on #dev in Slack. -->\r\n<!-- Provide an overview of the PR for maintainers and reviewers. -->\r\n## Description\r\n\r\n`FormatUtils.formatDataRate()` contains the following code:\r\n\r\n```java\r\nlong rate = Math.round(dataSize.toBytes() / duration.getValue(SECONDS));\r\nif (Double.isNaN(rate) || Double.isInfinite(rate)) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nThe test can never evaluate as `true`, since both functions will return false for any `long`.\r\n\r\nThe correct test is:\r\n\r\n```java\r\nif (rate == Long.MAX_VALUE) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nIt's not necessary to test for `Long.MIN_VALUE`, since neither `dataSize` nor `duration` can be negative.\r\n\r\n<!-- Provide details that would help an engineer who is unfamiliar with this part of the code. -->\r\n## Unit Test\r\n\r\nI added a new class, `TestFormatUtils` to test both this fix and the rest of `FormatUtils`. The tests for this change are:\r\n\r\n```java\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), false), \"0B\");\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), true), \"0B/s\");\r\n```\r\n\r\n<!-- Mark the appropriate option with an (x). Propose a release note if you can. -->\r\n## Release notes\r\n\r\n(x) This is not user-visible or docs only and no release notes are required.\r\n( ) Release notes are required, please propose a release note for me.\r\n( ) Release notes are required, with the following suggested text:\r\n\r\n## Related Issue\r\n\r\nFixes #13093",
                "created_at": "2022-12-07T17:54:40Z",
                "updated_at": "2022-12-08T17:09:12Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": "04709a71679326dfa2fa43ab44d4da90024bf8c7",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [
                    {
                        "id": 1202580151,
                        "node_id": "MDU6TGFiZWwxMjAyNTgwMTUx",
                        "url": "https://api.github.com/repos/trinodb/trino/labels/cla-signed",
                        "name": "cla-signed",
                        "color": "ededed",
                        "default": false,
                        "description": null
                    }
                ],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/trinodb/trino/pulls/15337/commits",
                "review_comments_url": "https://api.github.com/repos/trinodb/trino/pulls/15337/comments",
                "review_comment_url": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/trinodb/trino/issues/15337/comments",
                "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/a3ff14606d70a46f592dbdd56eb32cb71a79ef91",
                "head": {
                    "label": "metadaddy:fix-formatdatarate-test",
                    "ref": "fix-formatdatarate-test",
                    "sha": "a3ff14606d70a46f592dbdd56eb32cb71a79ef91",
                    "user": {
                        "login": "metadaddy",
                        "id": 723517,
                        "node_id": "MDQ6VXNlcjcyMzUxNw==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/metadaddy",
                        "html_url": "https://github.com/metadaddy",
                        "followers_url": "https://api.github.com/users/metadaddy/followers",
                        "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                        "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                        "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                        "repos_url": "https://api.github.com/users/metadaddy/repos",
                        "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 509274784,
                        "node_id": "R_kgDOHlrqoA",
                        "name": "trino",
                        "full_name": "metadaddy/trino",
                        "private": false,
                        "owner": {
                            "login": "metadaddy",
                            "id": 723517,
                            "node_id": "MDQ6VXNlcjcyMzUxNw==",
                            "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/metadaddy",
                            "html_url": "https://github.com/metadaddy",
                            "followers_url": "https://api.github.com/users/metadaddy/followers",
                            "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                            "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                            "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                            "repos_url": "https://api.github.com/users/metadaddy/repos",
                            "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/metadaddy/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": true,
                        "url": "https://api.github.com/repos/metadaddy/trino",
                        "forks_url": "https://api.github.com/repos/metadaddy/trino/forks",
                        "keys_url": "https://api.github.com/repos/metadaddy/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/metadaddy/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/metadaddy/trino/teams",
                        "hooks_url": "https://api.github.com/repos/metadaddy/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/metadaddy/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/metadaddy/trino/events",
                        "assignees_url": "https://api.github.com/repos/metadaddy/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/metadaddy/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/metadaddy/trino/tags",
                        "blobs_url": "https://api.github.com/repos/metadaddy/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/metadaddy/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/metadaddy/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/metadaddy/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/metadaddy/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/metadaddy/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/metadaddy/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/metadaddy/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/metadaddy/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/metadaddy/trino/subscription",
                        "commits_url": "https://api.github.com/repos/metadaddy/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/metadaddy/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/metadaddy/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/metadaddy/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/metadaddy/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/metadaddy/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/metadaddy/trino/merges",
                        "archive_url": "https://api.github.com/repos/metadaddy/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/metadaddy/trino/downloads",
                        "issues_url": "https://api.github.com/repos/metadaddy/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/metadaddy/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/metadaddy/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/metadaddy/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/metadaddy/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/metadaddy/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/metadaddy/trino/deployments",
                        "created_at": "2022-07-01T00:43:32Z",
                        "updated_at": "2022-07-06T01:44:20Z",
                        "pushed_at": "2022-12-08T02:39:50Z",
                        "git_url": "git://github.com/metadaddy/trino.git",
                        "ssh_url": "git@github.com:metadaddy/trino.git",
                        "clone_url": "https://github.com/metadaddy/trino.git",
                        "svn_url": "https://github.com/metadaddy/trino",
                        "homepage": "https://trino.io",
                        "size": 197784,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": "Java",
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "master"
                    }
                },
                "base": {
                    "label": "trinodb:master",
                    "ref": "master",
                    "sha": "81d1525c7b0d24433712957632c0895847a6788b",
                    "user": {
                        "login": "trinodb",
                        "id": 34147222,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                        "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/trinodb",
                        "html_url": "https://github.com/trinodb",
                        "followers_url": "https://api.github.com/users/trinodb/followers",
                        "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                        "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                        "organizations_url": "https://api.github.com/users/trinodb/orgs",
                        "repos_url": "https://api.github.com/users/trinodb/repos",
                        "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/trinodb/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 166515022,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNjY1MTUwMjI=",
                        "name": "trino",
                        "full_name": "trinodb/trino",
                        "private": false,
                        "owner": {
                            "login": "trinodb",
                            "id": 34147222,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/trinodb",
                            "html_url": "https://github.com/trinodb",
                            "followers_url": "https://api.github.com/users/trinodb/followers",
                            "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                            "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                            "organizations_url": "https://api.github.com/users/trinodb/orgs",
                            "repos_url": "https://api.github.com/users/trinodb/repos",
                            "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/trinodb/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/trinodb/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": false,
                        "url": "https://api.github.com/repos/trinodb/trino",
                        "forks_url": "https://api.github.com/repos/trinodb/trino/forks",
                        "keys_url": "https://api.github.com/repos/trinodb/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/trinodb/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/trinodb/trino/teams",
                        "hooks_url": "https://api.github.com/repos/trinodb/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/trinodb/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/trinodb/trino/events",
                        "assignees_url": "https://api.github.com/repos/trinodb/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/trinodb/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/trinodb/trino/tags",
                        "blobs_url": "https://api.github.com/repos/trinodb/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/trinodb/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/trinodb/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/trinodb/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/trinodb/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/trinodb/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/trinodb/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/trinodb/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/trinodb/trino/subscription",
                        "commits_url": "https://api.github.com/repos/trinodb/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/trinodb/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/trinodb/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/trinodb/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/trinodb/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/trinodb/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/trinodb/trino/merges",
                        "archive_url": "https://api.github.com/repos/trinodb/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/trinodb/trino/downloads",
                        "issues_url": "https://api.github.com/repos/trinodb/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/trinodb/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/trinodb/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/trinodb/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/trinodb/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/trinodb/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/trinodb/trino/deployments",
                        "created_at": "2019-01-19T06:38:14Z",
                        "updated_at": "2022-12-08T14:45:56Z",
                        "pushed_at": "2022-12-08T16:49:16Z",
                        "git_url": "git://github.com/trinodb/trino.git",
                        "ssh_url": "git@github.com:trinodb/trino.git",
                        "clone_url": "https://github.com/trinodb/trino.git",
                        "svn_url": "https://github.com/trinodb/trino",
                        "homepage": "https://trino.io",
                        "size": 198725,
                        "stargazers_count": 6805,
                        "watchers_count": 6805,
                        "language": "Java",
                        "has_issues": true,
                        "has_projects": false,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": true,
                        "forks_count": 2085,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 2089,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "analytics",
                            "big-data",
                            "data-science",
                            "database",
                            "databases",
                            "datalake",
                            "distributed-database",
                            "distributed-databases",
                            "distributed-systems",
                            "hadoop",
                            "hive",
                            "java",
                            "jdbc",
                            "presto",
                            "prestodb",
                            "query-engine",
                            "sql",
                            "trino"
                        ],
                        "visibility": "public",
                        "forks": 2085,
                        "open_issues": 2089,
                        "watchers": 6805,
                        "default_branch": "master"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337"
                    },
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15337"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15337"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15337/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/trinodb/trino/statuses/a3ff14606d70a46f592dbdd56eb32cb71a79ef91"
                    }
                },
                "author_association": "MEMBER",
                "auto_merge": null,
                "active_lock_reason": null
            }
        },
        "public": true,
        "created_at": "2022-12-08T17:09:13Z",
        "org": {
            "id": 34147222,
            "login": "trinodb",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/trinodb",
            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?"
        }
    },
    {
        "id": "25756941369",
        "type": "PullRequestReviewCommentEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 166515022,
            "name": "trinodb/trino",
            "url": "https://api.github.com/repos/trinodb/trino"
        },
        "payload": {
            "action": "created",
            "comment": {
                "url": "https://api.github.com/repos/trinodb/trino/pulls/comments/1043596066",
                "pull_request_review_id": 1210444969,
                "id": 1043596066,
                "node_id": "PRRC_kwDOCezRTs4-NAMi",
                "diff_hunk": "@@ -275,6 +275,9 @@ public void testFormatDataRate()\n         assertEquals(formatDataRate(DataSize.ofBytes(864000), Duration.valueOf(\"10d\"), true), \"1B/s\");\n         assertEquals(formatDataRate(DataSize.ofBytes(8640000), Duration.valueOf(\"10d\"), false), \"10B\");\n         assertEquals(formatDataRate(DataSize.ofBytes(8640000), Duration.valueOf(\"10d\"), true), \"10B/s\");\n+\n+        assertEquals(formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), false), \"0B\");",
                "path": "client/trino-cli/src/test/java/io/trino/cli/TestFormatUtils.java",
                "position": 5,
                "original_position": 5,
                "commit_id": "a3ff14606d70a46f592dbdd56eb32cb71a79ef91",
                "original_commit_id": "a3ff14606d70a46f592dbdd56eb32cb71a79ef91",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "I don't know; I'm simply honoring the intent of the original code written by @electrum ",
                "created_at": "2022-12-08T17:07:22Z",
                "updated_at": "2022-12-08T17:07:22Z",
                "html_url": "https://github.com/trinodb/trino/pull/15337#discussion_r1043596066",
                "pull_request_url": "https://api.github.com/repos/trinodb/trino/pulls/15337",
                "author_association": "MEMBER",
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/comments/1043596066"
                    },
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15337#discussion_r1043596066"
                    },
                    "pull_request": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337"
                    }
                },
                "reactions": {
                    "url": "https://api.github.com/repos/trinodb/trino/pulls/comments/1043596066/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "start_line": null,
                "original_start_line": null,
                "start_side": null,
                "line": 279,
                "original_line": 279,
                "side": "RIGHT",
                "in_reply_to_id": 1043145437
            },
            "pull_request": {
                "url": "https://api.github.com/repos/trinodb/trino/pulls/15337",
                "id": 1152104129,
                "node_id": "PR_kwDOCezRTs5Eq7bB",
                "html_url": "https://github.com/trinodb/trino/pull/15337",
                "diff_url": "https://github.com/trinodb/trino/pull/15337.diff",
                "patch_url": "https://github.com/trinodb/trino/pull/15337.patch",
                "issue_url": "https://api.github.com/repos/trinodb/trino/issues/15337",
                "number": 15337,
                "state": "open",
                "locked": false,
                "title": "Fix test for invalid rate in FormatUtils.formatDataRate()",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "<!-- Thank you for submitting a pull request! Find more information in our development guide at https://github.com/trinodb/trino/blob/master/.github/DEVELOPMENT.md and contact us on #dev in Slack. -->\r\n<!-- Provide an overview of the PR for maintainers and reviewers. -->\r\n## Description\r\n\r\n`FormatUtils.formatDataRate()` contains the following code:\r\n\r\n```java\r\nlong rate = Math.round(dataSize.toBytes() / duration.getValue(SECONDS));\r\nif (Double.isNaN(rate) || Double.isInfinite(rate)) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nThe test can never evaluate as `true`, since both functions will return false for any `long`.\r\n\r\nThe correct test is:\r\n\r\n```java\r\nif (rate == Long.MAX_VALUE) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nIt's not necessary to test for `Long.MIN_VALUE`, since neither `dataSize` nor `duration` can be negative.\r\n\r\n<!-- Provide details that would help an engineer who is unfamiliar with this part of the code. -->\r\n## Unit Test\r\n\r\nI added a new class, `TestFormatUtils` to test both this fix and the rest of `FormatUtils`. The tests for this change are:\r\n\r\n```java\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), false), \"0B\");\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), true), \"0B/s\");\r\n```\r\n\r\n<!-- Mark the appropriate option with an (x). Propose a release note if you can. -->\r\n## Release notes\r\n\r\n(x) This is not user-visible or docs only and no release notes are required.\r\n( ) Release notes are required, please propose a release note for me.\r\n( ) Release notes are required, with the following suggested text:\r\n\r\n## Related Issue\r\n\r\nFixes #13093",
                "created_at": "2022-12-07T17:54:40Z",
                "updated_at": "2022-12-08T17:07:22Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": "04709a71679326dfa2fa43ab44d4da90024bf8c7",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [
                    {
                        "id": 1202580151,
                        "node_id": "MDU6TGFiZWwxMjAyNTgwMTUx",
                        "url": "https://api.github.com/repos/trinodb/trino/labels/cla-signed",
                        "name": "cla-signed",
                        "color": "ededed",
                        "default": false,
                        "description": null
                    }
                ],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/trinodb/trino/pulls/15337/commits",
                "review_comments_url": "https://api.github.com/repos/trinodb/trino/pulls/15337/comments",
                "review_comment_url": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/trinodb/trino/issues/15337/comments",
                "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/a3ff14606d70a46f592dbdd56eb32cb71a79ef91",
                "head": {
                    "label": "metadaddy:fix-formatdatarate-test",
                    "ref": "fix-formatdatarate-test",
                    "sha": "a3ff14606d70a46f592dbdd56eb32cb71a79ef91",
                    "user": {
                        "login": "metadaddy",
                        "id": 723517,
                        "node_id": "MDQ6VXNlcjcyMzUxNw==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/metadaddy",
                        "html_url": "https://github.com/metadaddy",
                        "followers_url": "https://api.github.com/users/metadaddy/followers",
                        "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                        "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                        "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                        "repos_url": "https://api.github.com/users/metadaddy/repos",
                        "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 509274784,
                        "node_id": "R_kgDOHlrqoA",
                        "name": "trino",
                        "full_name": "metadaddy/trino",
                        "private": false,
                        "owner": {
                            "login": "metadaddy",
                            "id": 723517,
                            "node_id": "MDQ6VXNlcjcyMzUxNw==",
                            "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/metadaddy",
                            "html_url": "https://github.com/metadaddy",
                            "followers_url": "https://api.github.com/users/metadaddy/followers",
                            "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                            "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                            "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                            "repos_url": "https://api.github.com/users/metadaddy/repos",
                            "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/metadaddy/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": true,
                        "url": "https://api.github.com/repos/metadaddy/trino",
                        "forks_url": "https://api.github.com/repos/metadaddy/trino/forks",
                        "keys_url": "https://api.github.com/repos/metadaddy/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/metadaddy/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/metadaddy/trino/teams",
                        "hooks_url": "https://api.github.com/repos/metadaddy/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/metadaddy/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/metadaddy/trino/events",
                        "assignees_url": "https://api.github.com/repos/metadaddy/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/metadaddy/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/metadaddy/trino/tags",
                        "blobs_url": "https://api.github.com/repos/metadaddy/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/metadaddy/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/metadaddy/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/metadaddy/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/metadaddy/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/metadaddy/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/metadaddy/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/metadaddy/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/metadaddy/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/metadaddy/trino/subscription",
                        "commits_url": "https://api.github.com/repos/metadaddy/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/metadaddy/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/metadaddy/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/metadaddy/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/metadaddy/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/metadaddy/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/metadaddy/trino/merges",
                        "archive_url": "https://api.github.com/repos/metadaddy/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/metadaddy/trino/downloads",
                        "issues_url": "https://api.github.com/repos/metadaddy/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/metadaddy/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/metadaddy/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/metadaddy/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/metadaddy/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/metadaddy/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/metadaddy/trino/deployments",
                        "created_at": "2022-07-01T00:43:32Z",
                        "updated_at": "2022-07-06T01:44:20Z",
                        "pushed_at": "2022-12-08T02:39:50Z",
                        "git_url": "git://github.com/metadaddy/trino.git",
                        "ssh_url": "git@github.com:metadaddy/trino.git",
                        "clone_url": "https://github.com/metadaddy/trino.git",
                        "svn_url": "https://github.com/metadaddy/trino",
                        "homepage": "https://trino.io",
                        "size": 197784,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": "Java",
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "master"
                    }
                },
                "base": {
                    "label": "trinodb:master",
                    "ref": "master",
                    "sha": "81d1525c7b0d24433712957632c0895847a6788b",
                    "user": {
                        "login": "trinodb",
                        "id": 34147222,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                        "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/trinodb",
                        "html_url": "https://github.com/trinodb",
                        "followers_url": "https://api.github.com/users/trinodb/followers",
                        "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                        "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                        "organizations_url": "https://api.github.com/users/trinodb/orgs",
                        "repos_url": "https://api.github.com/users/trinodb/repos",
                        "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/trinodb/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 166515022,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNjY1MTUwMjI=",
                        "name": "trino",
                        "full_name": "trinodb/trino",
                        "private": false,
                        "owner": {
                            "login": "trinodb",
                            "id": 34147222,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/trinodb",
                            "html_url": "https://github.com/trinodb",
                            "followers_url": "https://api.github.com/users/trinodb/followers",
                            "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                            "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                            "organizations_url": "https://api.github.com/users/trinodb/orgs",
                            "repos_url": "https://api.github.com/users/trinodb/repos",
                            "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/trinodb/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/trinodb/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": false,
                        "url": "https://api.github.com/repos/trinodb/trino",
                        "forks_url": "https://api.github.com/repos/trinodb/trino/forks",
                        "keys_url": "https://api.github.com/repos/trinodb/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/trinodb/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/trinodb/trino/teams",
                        "hooks_url": "https://api.github.com/repos/trinodb/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/trinodb/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/trinodb/trino/events",
                        "assignees_url": "https://api.github.com/repos/trinodb/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/trinodb/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/trinodb/trino/tags",
                        "blobs_url": "https://api.github.com/repos/trinodb/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/trinodb/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/trinodb/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/trinodb/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/trinodb/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/trinodb/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/trinodb/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/trinodb/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/trinodb/trino/subscription",
                        "commits_url": "https://api.github.com/repos/trinodb/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/trinodb/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/trinodb/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/trinodb/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/trinodb/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/trinodb/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/trinodb/trino/merges",
                        "archive_url": "https://api.github.com/repos/trinodb/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/trinodb/trino/downloads",
                        "issues_url": "https://api.github.com/repos/trinodb/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/trinodb/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/trinodb/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/trinodb/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/trinodb/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/trinodb/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/trinodb/trino/deployments",
                        "created_at": "2019-01-19T06:38:14Z",
                        "updated_at": "2022-12-08T14:45:56Z",
                        "pushed_at": "2022-12-08T16:49:16Z",
                        "git_url": "git://github.com/trinodb/trino.git",
                        "ssh_url": "git@github.com:trinodb/trino.git",
                        "clone_url": "https://github.com/trinodb/trino.git",
                        "svn_url": "https://github.com/trinodb/trino",
                        "homepage": "https://trino.io",
                        "size": 198725,
                        "stargazers_count": 6805,
                        "watchers_count": 6805,
                        "language": "Java",
                        "has_issues": true,
                        "has_projects": false,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": true,
                        "forks_count": 2085,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 2089,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "analytics",
                            "big-data",
                            "data-science",
                            "database",
                            "databases",
                            "datalake",
                            "distributed-database",
                            "distributed-databases",
                            "distributed-systems",
                            "hadoop",
                            "hive",
                            "java",
                            "jdbc",
                            "presto",
                            "prestodb",
                            "query-engine",
                            "sql",
                            "trino"
                        ],
                        "visibility": "public",
                        "forks": 2085,
                        "open_issues": 2089,
                        "watchers": 6805,
                        "default_branch": "master"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337"
                    },
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15337"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15337"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15337/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/trinodb/trino/statuses/a3ff14606d70a46f592dbdd56eb32cb71a79ef91"
                    }
                },
                "author_association": "MEMBER",
                "auto_merge": null,
                "active_lock_reason": null
            }
        },
        "public": true,
        "created_at": "2022-12-08T17:07:22Z",
        "org": {
            "id": 34147222,
            "login": "trinodb",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/trinodb",
            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?"
        }
    },
    {
        "id": "25756941304",
        "type": "PullRequestReviewEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 166515022,
            "name": "trinodb/trino",
            "url": "https://api.github.com/repos/trinodb/trino"
        },
        "payload": {
            "action": "created",
            "review": {
                "id": 1210444969,
                "node_id": "PRR_kwDOCezRTs5IJeyp",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": null,
                "commit_id": "a3ff14606d70a46f592dbdd56eb32cb71a79ef91",
                "submitted_at": "2022-12-08T17:07:22Z",
                "state": "commented",
                "html_url": "https://github.com/trinodb/trino/pull/15337#pullrequestreview-1210444969",
                "pull_request_url": "https://api.github.com/repos/trinodb/trino/pulls/15337",
                "author_association": "MEMBER",
                "_links": {
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15337#pullrequestreview-1210444969"
                    },
                    "pull_request": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337"
                    }
                }
            },
            "pull_request": {
                "url": "https://api.github.com/repos/trinodb/trino/pulls/15337",
                "id": 1152104129,
                "node_id": "PR_kwDOCezRTs5Eq7bB",
                "html_url": "https://github.com/trinodb/trino/pull/15337",
                "diff_url": "https://github.com/trinodb/trino/pull/15337.diff",
                "patch_url": "https://github.com/trinodb/trino/pull/15337.patch",
                "issue_url": "https://api.github.com/repos/trinodb/trino/issues/15337",
                "number": 15337,
                "state": "open",
                "locked": false,
                "title": "Fix test for invalid rate in FormatUtils.formatDataRate()",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "<!-- Thank you for submitting a pull request! Find more information in our development guide at https://github.com/trinodb/trino/blob/master/.github/DEVELOPMENT.md and contact us on #dev in Slack. -->\r\n<!-- Provide an overview of the PR for maintainers and reviewers. -->\r\n## Description\r\n\r\n`FormatUtils.formatDataRate()` contains the following code:\r\n\r\n```java\r\nlong rate = Math.round(dataSize.toBytes() / duration.getValue(SECONDS));\r\nif (Double.isNaN(rate) || Double.isInfinite(rate)) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nThe test can never evaluate as `true`, since both functions will return false for any `long`.\r\n\r\nThe correct test is:\r\n\r\n```java\r\nif (rate == Long.MAX_VALUE) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nIt's not necessary to test for `Long.MIN_VALUE`, since neither `dataSize` nor `duration` can be negative.\r\n\r\n<!-- Provide details that would help an engineer who is unfamiliar with this part of the code. -->\r\n## Unit Test\r\n\r\nI added a new class, `TestFormatUtils` to test both this fix and the rest of `FormatUtils`. The tests for this change are:\r\n\r\n```java\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), false), \"0B\");\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), true), \"0B/s\");\r\n```\r\n\r\n<!-- Mark the appropriate option with an (x). Propose a release note if you can. -->\r\n## Release notes\r\n\r\n(x) This is not user-visible or docs only and no release notes are required.\r\n( ) Release notes are required, please propose a release note for me.\r\n( ) Release notes are required, with the following suggested text:\r\n\r\n## Related Issue\r\n\r\nFixes #13093",
                "created_at": "2022-12-07T17:54:40Z",
                "updated_at": "2022-12-08T17:07:22Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": "04709a71679326dfa2fa43ab44d4da90024bf8c7",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [
                    {
                        "id": 1202580151,
                        "node_id": "MDU6TGFiZWwxMjAyNTgwMTUx",
                        "url": "https://api.github.com/repos/trinodb/trino/labels/cla-signed",
                        "name": "cla-signed",
                        "color": "ededed",
                        "default": false,
                        "description": null
                    }
                ],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/trinodb/trino/pulls/15337/commits",
                "review_comments_url": "https://api.github.com/repos/trinodb/trino/pulls/15337/comments",
                "review_comment_url": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/trinodb/trino/issues/15337/comments",
                "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/a3ff14606d70a46f592dbdd56eb32cb71a79ef91",
                "head": {
                    "label": "metadaddy:fix-formatdatarate-test",
                    "ref": "fix-formatdatarate-test",
                    "sha": "a3ff14606d70a46f592dbdd56eb32cb71a79ef91",
                    "user": {
                        "login": "metadaddy",
                        "id": 723517,
                        "node_id": "MDQ6VXNlcjcyMzUxNw==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/metadaddy",
                        "html_url": "https://github.com/metadaddy",
                        "followers_url": "https://api.github.com/users/metadaddy/followers",
                        "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                        "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                        "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                        "repos_url": "https://api.github.com/users/metadaddy/repos",
                        "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 509274784,
                        "node_id": "R_kgDOHlrqoA",
                        "name": "trino",
                        "full_name": "metadaddy/trino",
                        "private": false,
                        "owner": {
                            "login": "metadaddy",
                            "id": 723517,
                            "node_id": "MDQ6VXNlcjcyMzUxNw==",
                            "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/metadaddy",
                            "html_url": "https://github.com/metadaddy",
                            "followers_url": "https://api.github.com/users/metadaddy/followers",
                            "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                            "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                            "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                            "repos_url": "https://api.github.com/users/metadaddy/repos",
                            "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/metadaddy/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": true,
                        "url": "https://api.github.com/repos/metadaddy/trino",
                        "forks_url": "https://api.github.com/repos/metadaddy/trino/forks",
                        "keys_url": "https://api.github.com/repos/metadaddy/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/metadaddy/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/metadaddy/trino/teams",
                        "hooks_url": "https://api.github.com/repos/metadaddy/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/metadaddy/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/metadaddy/trino/events",
                        "assignees_url": "https://api.github.com/repos/metadaddy/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/metadaddy/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/metadaddy/trino/tags",
                        "blobs_url": "https://api.github.com/repos/metadaddy/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/metadaddy/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/metadaddy/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/metadaddy/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/metadaddy/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/metadaddy/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/metadaddy/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/metadaddy/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/metadaddy/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/metadaddy/trino/subscription",
                        "commits_url": "https://api.github.com/repos/metadaddy/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/metadaddy/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/metadaddy/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/metadaddy/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/metadaddy/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/metadaddy/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/metadaddy/trino/merges",
                        "archive_url": "https://api.github.com/repos/metadaddy/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/metadaddy/trino/downloads",
                        "issues_url": "https://api.github.com/repos/metadaddy/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/metadaddy/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/metadaddy/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/metadaddy/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/metadaddy/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/metadaddy/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/metadaddy/trino/deployments",
                        "created_at": "2022-07-01T00:43:32Z",
                        "updated_at": "2022-07-06T01:44:20Z",
                        "pushed_at": "2022-12-08T02:39:50Z",
                        "git_url": "git://github.com/metadaddy/trino.git",
                        "ssh_url": "git@github.com:metadaddy/trino.git",
                        "clone_url": "https://github.com/metadaddy/trino.git",
                        "svn_url": "https://github.com/metadaddy/trino",
                        "homepage": "https://trino.io",
                        "size": 197784,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": "Java",
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "master"
                    }
                },
                "base": {
                    "label": "trinodb:master",
                    "ref": "master",
                    "sha": "81d1525c7b0d24433712957632c0895847a6788b",
                    "user": {
                        "login": "trinodb",
                        "id": 34147222,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                        "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/trinodb",
                        "html_url": "https://github.com/trinodb",
                        "followers_url": "https://api.github.com/users/trinodb/followers",
                        "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                        "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                        "organizations_url": "https://api.github.com/users/trinodb/orgs",
                        "repos_url": "https://api.github.com/users/trinodb/repos",
                        "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/trinodb/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 166515022,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNjY1MTUwMjI=",
                        "name": "trino",
                        "full_name": "trinodb/trino",
                        "private": false,
                        "owner": {
                            "login": "trinodb",
                            "id": 34147222,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/trinodb",
                            "html_url": "https://github.com/trinodb",
                            "followers_url": "https://api.github.com/users/trinodb/followers",
                            "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                            "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                            "organizations_url": "https://api.github.com/users/trinodb/orgs",
                            "repos_url": "https://api.github.com/users/trinodb/repos",
                            "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/trinodb/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/trinodb/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": false,
                        "url": "https://api.github.com/repos/trinodb/trino",
                        "forks_url": "https://api.github.com/repos/trinodb/trino/forks",
                        "keys_url": "https://api.github.com/repos/trinodb/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/trinodb/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/trinodb/trino/teams",
                        "hooks_url": "https://api.github.com/repos/trinodb/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/trinodb/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/trinodb/trino/events",
                        "assignees_url": "https://api.github.com/repos/trinodb/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/trinodb/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/trinodb/trino/tags",
                        "blobs_url": "https://api.github.com/repos/trinodb/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/trinodb/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/trinodb/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/trinodb/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/trinodb/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/trinodb/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/trinodb/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/trinodb/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/trinodb/trino/subscription",
                        "commits_url": "https://api.github.com/repos/trinodb/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/trinodb/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/trinodb/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/trinodb/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/trinodb/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/trinodb/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/trinodb/trino/merges",
                        "archive_url": "https://api.github.com/repos/trinodb/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/trinodb/trino/downloads",
                        "issues_url": "https://api.github.com/repos/trinodb/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/trinodb/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/trinodb/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/trinodb/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/trinodb/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/trinodb/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/trinodb/trino/deployments",
                        "created_at": "2019-01-19T06:38:14Z",
                        "updated_at": "2022-12-08T14:45:56Z",
                        "pushed_at": "2022-12-08T16:49:16Z",
                        "git_url": "git://github.com/trinodb/trino.git",
                        "ssh_url": "git@github.com:trinodb/trino.git",
                        "clone_url": "https://github.com/trinodb/trino.git",
                        "svn_url": "https://github.com/trinodb/trino",
                        "homepage": "https://trino.io",
                        "size": 198725,
                        "stargazers_count": 6805,
                        "watchers_count": 6805,
                        "language": "Java",
                        "has_issues": true,
                        "has_projects": false,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": true,
                        "forks_count": 2085,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 2089,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "analytics",
                            "big-data",
                            "data-science",
                            "database",
                            "databases",
                            "datalake",
                            "distributed-database",
                            "distributed-databases",
                            "distributed-systems",
                            "hadoop",
                            "hive",
                            "java",
                            "jdbc",
                            "presto",
                            "prestodb",
                            "query-engine",
                            "sql",
                            "trino"
                        ],
                        "visibility": "public",
                        "forks": 2085,
                        "open_issues": 2089,
                        "watchers": 6805,
                        "default_branch": "master"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337"
                    },
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15337"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15337"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15337/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/trinodb/trino/statuses/a3ff14606d70a46f592dbdd56eb32cb71a79ef91"
                    }
                },
                "author_association": "MEMBER",
                "auto_merge": null,
                "active_lock_reason": null
            }
        },
        "public": true,
        "created_at": "2022-12-08T17:07:23Z",
        "org": {
            "id": 34147222,
            "login": "trinodb",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/trinodb",
            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?"
        }
    },
    {
        "id": "25737801575",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 166515022,
            "name": "trinodb/trino",
            "url": "https://api.github.com/repos/trinodb/trino"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/trinodb/trino/issues/15337",
                "repository_url": "https://api.github.com/repos/trinodb/trino",
                "labels_url": "https://api.github.com/repos/trinodb/trino/issues/15337/labels{/name}",
                "comments_url": "https://api.github.com/repos/trinodb/trino/issues/15337/comments",
                "events_url": "https://api.github.com/repos/trinodb/trino/issues/15337/events",
                "html_url": "https://github.com/trinodb/trino/pull/15337",
                "id": 1482501542,
                "node_id": "PR_kwDOCezRTs5Eq7bB",
                "number": 15337,
                "title": "Fix test for invalid rate in FormatUtils.formatDataRate()",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 1202580151,
                        "node_id": "MDU6TGFiZWwxMjAyNTgwMTUx",
                        "url": "https://api.github.com/repos/trinodb/trino/labels/cla-signed",
                        "name": "cla-signed",
                        "color": "ededed",
                        "default": false,
                        "description": null
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 2,
                "created_at": "2022-12-07T17:54:40Z",
                "updated_at": "2022-12-08T02:41:07Z",
                "closed_at": null,
                "author_association": "MEMBER",
                "active_lock_reason": null,
                "draft": false,
                "pull_request": {
                    "url": "https://api.github.com/repos/trinodb/trino/pulls/15337",
                    "html_url": "https://github.com/trinodb/trino/pull/15337",
                    "diff_url": "https://github.com/trinodb/trino/pull/15337.diff",
                    "patch_url": "https://github.com/trinodb/trino/pull/15337.patch",
                    "merged_at": null
                },
                "body": "<!-- Thank you for submitting a pull request! Find more information in our development guide at https://github.com/trinodb/trino/blob/master/.github/DEVELOPMENT.md and contact us on #dev in Slack. -->\r\n<!-- Provide an overview of the PR for maintainers and reviewers. -->\r\n## Description\r\n\r\n`FormatUtils.formatDataRate()` contains the following code:\r\n\r\n```java\r\nlong rate = Math.round(dataSize.toBytes() / duration.getValue(SECONDS));\r\nif (Double.isNaN(rate) || Double.isInfinite(rate)) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nThe test can never evaluate as `true`, since both functions will return false for any `long`.\r\n\r\nThe correct test is:\r\n\r\n```java\r\nif (rate == Long.MAX_VALUE) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nIt's not necessary to test for `Long.MIN_VALUE`, since neither `dataSize` nor `duration` can be negative.\r\n\r\n<!-- Provide details that would help an engineer who is unfamiliar with this part of the code. -->\r\n## Unit Test\r\n\r\nI added a new class, `TestFormatUtils` to test both this fix and the rest of `FormatUtils`. The tests for this change are:\r\n\r\n```java\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), false), \"0B\");\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), true), \"0B/s\");\r\n```\r\n\r\n<!-- Mark the appropriate option with an (x). Propose a release note if you can. -->\r\n## Release notes\r\n\r\n(x) This is not user-visible or docs only and no release notes are required.\r\n( ) Release notes are required, please propose a release note for me.\r\n( ) Release notes are required, with the following suggested text:\r\n\r\n## Related Issue\r\n\r\nFixes #13093",
                "reactions": {
                    "url": "https://api.github.com/repos/trinodb/trino/issues/15337/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/trinodb/trino/issues/15337/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/trinodb/trino/issues/comments/1341901362",
                "html_url": "https://github.com/trinodb/trino/pull/15337#issuecomment-1341901362",
                "issue_url": "https://api.github.com/repos/trinodb/trino/issues/15337",
                "id": 1341901362,
                "node_id": "IC_kwDOCezRTs5P-8oy",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2022-12-08T02:41:07Z",
                "updated_at": "2022-12-08T02:41:07Z",
                "author_association": "MEMBER",
                "body": "@findepi I refactored to two commits and force-pushed them. Let me know if you need two PRs.",
                "reactions": {
                    "url": "https://api.github.com/repos/trinodb/trino/issues/comments/1341901362/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2022-12-08T02:41:07Z",
        "org": {
            "id": 34147222,
            "login": "trinodb",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/trinodb",
            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?"
        }
    },
    {
        "id": "25737784762",
        "type": "PushEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 509274784,
            "name": "metadaddy/trino",
            "url": "https://api.github.com/repos/metadaddy/trino"
        },
        "payload": {
            "push_id": 11922596404,
            "size": 2,
            "distinct_size": 2,
            "ref": "refs/heads/fix-formatdatarate-test",
            "head": "a3ff14606d70a46f592dbdd56eb32cb71a79ef91",
            "before": "5253041f76469008e04dae2c0ad6a7d441d6c172",
            "commits": [
                {
                    "sha": "6d2d433c8702a2a03ae56140ccdc0bcc5cc5ba2a",
                    "author": {
                        "email": "pat@backblaze.com",
                        "name": "Pat Patterson"
                    },
                    "message": "Add TestFormatUtils to test FormatUtils methods",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/6d2d433c8702a2a03ae56140ccdc0bcc5cc5ba2a"
                },
                {
                    "sha": "a3ff14606d70a46f592dbdd56eb32cb71a79ef91",
                    "author": {
                        "email": "pat@backblaze.com",
                        "name": "Pat Patterson"
                    },
                    "message": "Fix check for invalid rate in FormatUtils.formatDataRate()",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/a3ff14606d70a46f592dbdd56eb32cb71a79ef91"
                }
            ]
        },
        "public": true,
        "created_at": "2022-12-08T02:39:51Z"
    },
    {
        "id": "25737456005",
        "type": "PushEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 509274784,
            "name": "metadaddy/trino",
            "url": "https://api.github.com/repos/metadaddy/trino"
        },
        "payload": {
            "push_id": 11922434692,
            "size": 97,
            "distinct_size": 1,
            "ref": "refs/heads/fix-formatdatarate-test",
            "head": "5253041f76469008e04dae2c0ad6a7d441d6c172",
            "before": "f88ba0cee83615211a54a7351df5656d7688ae1c",
            "commits": [
                {
                    "sha": "712ce5c988497dfbad25c9c031f9ce4159b2d68a",
                    "author": {
                        "email": "andriyrosa@gmail.com",
                        "name": "Andrii Rosa"
                    },
                    "message": "Remove preserve-input-partitions-in-write-stage config\n\nPartition should never be merged for the write stage given a risk of\nrunning into the maximum number of partitions limit enforced by writers",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/712ce5c988497dfbad25c9c031f9ce4159b2d68a"
                },
                {
                    "sha": "d47e28fd7c5831b822de11530f7e4f7448941b05",
                    "author": {
                        "email": "andriyrosa@gmail.com",
                        "name": "Andrii Rosa"
                    },
                    "message": "Allow optimize in Hive to be run with FTE",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/d47e28fd7c5831b822de11530f7e4f7448941b05"
                },
                {
                    "sha": "e292e1122bd056a0de592f0ffe7e9a0068341265",
                    "author": {
                        "email": "andriyrosa@gmail.com",
                        "name": "Andrii Rosa"
                    },
                    "message": "Provide partitioning layout for execute in Hive",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/e292e1122bd056a0de592f0ffe7e9a0068341265"
                },
                {
                    "sha": "993352b89be36393a1e0cd34d0c7067ac4f150c7",
                    "author": {
                        "email": "andriyrosa@gmail.com",
                        "name": "Andrii Rosa"
                    },
                    "message": "Refactor TestHashDistributionSplitAssigner\n\nExtract helper classes to avoid methods with too many arguments",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/993352b89be36393a1e0cd34d0c7067ac4f150c7"
                },
                {
                    "sha": "1ccb40a4989f8d4bccea4b6019af4f6e9792d290",
                    "author": {
                        "email": "andriyrosa@gmail.com",
                        "name": "Andrii Rosa"
                    },
                    "message": "Ensure partition id can't get re-assigned",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/1ccb40a4989f8d4bccea4b6019af4f6e9792d290"
                },
                {
                    "sha": "9982da3837fcfa8a831c3b9f0872713dc915b4a3",
                    "author": {
                        "email": "andriyrosa@gmail.com",
                        "name": "Andrii Rosa"
                    },
                    "message": "Enable preferred write partitioning for FTE by default\n\nImplement skew mitigation to avoid running into low write concurrency\nwhen the number of output partitions is small",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/9982da3837fcfa8a831c3b9f0872713dc915b4a3"
                },
                {
                    "sha": "3cf8e92363b9a54866cf8427bfd00f92e011631d",
                    "author": {
                        "email": "ebyhry@gmail.com",
                        "name": "Yuya Ebihara"
                    },
                    "message": "Rename TestMongoConnectorTest temporarily\n\nThis is a preparatory commit for the next commit.",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/3cf8e92363b9a54866cf8427bfd00f92e011631d"
                },
                {
                    "sha": "6f49c4d343988347286c42a80d27199eef156b5c",
                    "author": {
                        "email": "ebyhry@gmail.com",
                        "name": "Yuya Ebihara"
                    },
                    "message": "Remove redundant BaseMongoConnectorTest",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/6f49c4d343988347286c42a80d27199eef156b5c"
                },
                {
                    "sha": "1e3e7c730bd78f2ed0ab88b7c479a5a671280757",
                    "author": {
                        "email": "ebyhry@gmail.com",
                        "name": "Yuya Ebihara"
                    },
                    "message": "Improve error message when partitioning by nested fields in Iceberg",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/1e3e7c730bd78f2ed0ab88b7c479a5a671280757"
                },
                {
                    "sha": "ea24f811cc872987a4610d780d85d7def87eff07",
                    "author": {
                        "email": "napewnotrafi@gmail.com",
                        "name": "Karol Sobczak"
                    },
                    "message": "Embed Trino version in QueryInfo\n\nThis will help to diagnose issues quicker.",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/ea24f811cc872987a4610d780d85d7def87eff07"
                },
                {
                    "sha": "78abe76db0d34e69c490ffc93d8a26547b371b14",
                    "author": {
                        "email": "ebyhry@gmail.com",
                        "name": "Yuya Ebihara"
                    },
                    "message": "Don't start MongoDB server in TestMongoPlugin\n\nThere's no need to run MongoDB server in this test class.",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/78abe76db0d34e69c490ffc93d8a26547b371b14"
                },
                {
                    "sha": "77e7e2ba95ae354675eac2f99cb9e8b0687f31b6",
                    "author": {
                        "email": "ebyhry@gmail.com",
                        "name": "Yuya Ebihara"
                    },
                    "message": "Rename TLS configuration flag in MongoDB",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/77e7e2ba95ae354675eac2f99cb9e8b0687f31b6"
                },
                {
                    "sha": "bf0b6ee2d143318dc20ae8baac84d7aaac662e96",
                    "author": {
                        "email": "ebyhry@gmail.com",
                        "name": "Yuya Ebihara"
                    },
                    "message": "Add support for setting TLS context in MongoDB",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/bf0b6ee2d143318dc20ae8baac84d7aaac662e96"
                },
                {
                    "sha": "5f7ae2815c34fc2cc23a4dd58598b156cfc47a8f",
                    "author": {
                        "email": "neville.lyh@gmail.com",
                        "name": "Neville Li"
                    },
                    "message": "Add query.max-run-time.hard-limit\n\nCo-authored-by: Ashhar Hasan <hashhar_dev@outlook.com>",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/5f7ae2815c34fc2cc23a4dd58598b156cfc47a8f"
                },
                {
                    "sha": "9050471d7a7be673adbc850e2c43b11e69fd6fad",
                    "author": {
                        "email": "piotr.findeisen@gmail.com",
                        "name": "Piotr Findeisen"
                    },
                    "message": "Remove duplication in TestPostgreSqlTypeMapping\n\nReuse information provided for by `setUp()`.",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/9050471d7a7be673adbc850e2c43b11e69fd6fad"
                },
                {
                    "sha": "aff36e5aba0bff091aa030e775292bff35c25e6c",
                    "author": {
                        "email": "piotr.findeisen@gmail.com",
                        "name": "Piotr Findeisen"
                    },
                    "message": "Remove redundant test case from `testArrayEmptyOrNulls`\n\nCovered by first test case in `testArray`",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/aff36e5aba0bff091aa030e775292bff35c25e6c"
                },
                {
                    "sha": "9e31f4aea17f0476df47923d38e1ea62f0657ddd",
                    "author": {
                        "email": "piotr.findeisen@gmail.com",
                        "name": "Piotr Findeisen"
                    },
                    "message": "Comment on jdbc.columns values\n\nMake it easier to map values to columns.",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/9e31f4aea17f0476df47923d38e1ea62f0657ddd"
                },
                {
                    "sha": "a5d64cc59e03776e3e9635e23e8467348cbd8d70",
                    "author": {
                        "email": "piotr.findeisen@gmail.com",
                        "name": "Piotr Findeisen"
                    },
                    "message": "Fix DatabaseMetaData.getColumns nullability inconsistency\n\n`DatabaseMetaData.getColumns` reports nullability in two result columns\n\n- NULLABLE, a number (0, 1, 2)\n- IS_NULLABLE, a varchar column (\"YES\", \"NO\", \"\")\n\nThis fixes the `TrinoDatabaseMetaData` so that information returned in\nthose two ways is consistent.",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/a5d64cc59e03776e3e9635e23e8467348cbd8d70"
                },
                {
                    "sha": "79d19de926220563f890fca462bdf2cbaaadfc45",
                    "author": {
                        "email": "napewnotrafi@gmail.com",
                        "name": "Karol Sobczak"
                    },
                    "message": "Print Trino version to EXPLAIN ANALYZE VERBOSE\n\nOutput of EXPLAIN ANALYZE VERBOSE is often\nshared for troubleshooting therefore it's\nuseful to print Trino version there.\n\n-----------------------------------------------------------\n Trino version: dev\n Fragment 1 [SINGLE]\n     Output layout: [orderkey, custkey, count, sum_4, avg]\n     Output partitioning: SINGLE []",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/79d19de926220563f890fca462bdf2cbaaadfc45"
                },
                {
                    "sha": "c0febf4bf6b03abd1289febe08a56e40518a9cbb",
                    "author": {
                        "email": "napewnotrafi@gmail.com",
                        "name": "Karol Sobczak"
                    },
                    "message": "Increase Parquet page max positions",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/c0febf4bf6b03abd1289febe08a56e40518a9cbb"
                }
            ]
        },
        "public": true,
        "created_at": "2022-12-08T02:17:12Z"
    },
    {
        "id": "25737426813",
        "type": "PushEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 509274784,
            "name": "metadaddy/trino",
            "url": "https://api.github.com/repos/metadaddy/trino"
        },
        "payload": {
            "push_id": 11922420838,
            "size": 96,
            "distinct_size": 96,
            "ref": "refs/heads/master",
            "head": "81d1525c7b0d24433712957632c0895847a6788b",
            "before": "861d51c8b8047d43f017e887231edf01d1561c65",
            "commits": [
                {
                    "sha": "712ce5c988497dfbad25c9c031f9ce4159b2d68a",
                    "author": {
                        "email": "andriyrosa@gmail.com",
                        "name": "Andrii Rosa"
                    },
                    "message": "Remove preserve-input-partitions-in-write-stage config\n\nPartition should never be merged for the write stage given a risk of\nrunning into the maximum number of partitions limit enforced by writers",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/712ce5c988497dfbad25c9c031f9ce4159b2d68a"
                },
                {
                    "sha": "d47e28fd7c5831b822de11530f7e4f7448941b05",
                    "author": {
                        "email": "andriyrosa@gmail.com",
                        "name": "Andrii Rosa"
                    },
                    "message": "Allow optimize in Hive to be run with FTE",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/d47e28fd7c5831b822de11530f7e4f7448941b05"
                },
                {
                    "sha": "e292e1122bd056a0de592f0ffe7e9a0068341265",
                    "author": {
                        "email": "andriyrosa@gmail.com",
                        "name": "Andrii Rosa"
                    },
                    "message": "Provide partitioning layout for execute in Hive",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/e292e1122bd056a0de592f0ffe7e9a0068341265"
                },
                {
                    "sha": "993352b89be36393a1e0cd34d0c7067ac4f150c7",
                    "author": {
                        "email": "andriyrosa@gmail.com",
                        "name": "Andrii Rosa"
                    },
                    "message": "Refactor TestHashDistributionSplitAssigner\n\nExtract helper classes to avoid methods with too many arguments",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/993352b89be36393a1e0cd34d0c7067ac4f150c7"
                },
                {
                    "sha": "1ccb40a4989f8d4bccea4b6019af4f6e9792d290",
                    "author": {
                        "email": "andriyrosa@gmail.com",
                        "name": "Andrii Rosa"
                    },
                    "message": "Ensure partition id can't get re-assigned",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/1ccb40a4989f8d4bccea4b6019af4f6e9792d290"
                },
                {
                    "sha": "9982da3837fcfa8a831c3b9f0872713dc915b4a3",
                    "author": {
                        "email": "andriyrosa@gmail.com",
                        "name": "Andrii Rosa"
                    },
                    "message": "Enable preferred write partitioning for FTE by default\n\nImplement skew mitigation to avoid running into low write concurrency\nwhen the number of output partitions is small",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/9982da3837fcfa8a831c3b9f0872713dc915b4a3"
                },
                {
                    "sha": "3cf8e92363b9a54866cf8427bfd00f92e011631d",
                    "author": {
                        "email": "ebyhry@gmail.com",
                        "name": "Yuya Ebihara"
                    },
                    "message": "Rename TestMongoConnectorTest temporarily\n\nThis is a preparatory commit for the next commit.",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/3cf8e92363b9a54866cf8427bfd00f92e011631d"
                },
                {
                    "sha": "6f49c4d343988347286c42a80d27199eef156b5c",
                    "author": {
                        "email": "ebyhry@gmail.com",
                        "name": "Yuya Ebihara"
                    },
                    "message": "Remove redundant BaseMongoConnectorTest",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/6f49c4d343988347286c42a80d27199eef156b5c"
                },
                {
                    "sha": "1e3e7c730bd78f2ed0ab88b7c479a5a671280757",
                    "author": {
                        "email": "ebyhry@gmail.com",
                        "name": "Yuya Ebihara"
                    },
                    "message": "Improve error message when partitioning by nested fields in Iceberg",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/1e3e7c730bd78f2ed0ab88b7c479a5a671280757"
                },
                {
                    "sha": "ea24f811cc872987a4610d780d85d7def87eff07",
                    "author": {
                        "email": "napewnotrafi@gmail.com",
                        "name": "Karol Sobczak"
                    },
                    "message": "Embed Trino version in QueryInfo\n\nThis will help to diagnose issues quicker.",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/ea24f811cc872987a4610d780d85d7def87eff07"
                },
                {
                    "sha": "78abe76db0d34e69c490ffc93d8a26547b371b14",
                    "author": {
                        "email": "ebyhry@gmail.com",
                        "name": "Yuya Ebihara"
                    },
                    "message": "Don't start MongoDB server in TestMongoPlugin\n\nThere's no need to run MongoDB server in this test class.",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/78abe76db0d34e69c490ffc93d8a26547b371b14"
                },
                {
                    "sha": "77e7e2ba95ae354675eac2f99cb9e8b0687f31b6",
                    "author": {
                        "email": "ebyhry@gmail.com",
                        "name": "Yuya Ebihara"
                    },
                    "message": "Rename TLS configuration flag in MongoDB",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/77e7e2ba95ae354675eac2f99cb9e8b0687f31b6"
                },
                {
                    "sha": "bf0b6ee2d143318dc20ae8baac84d7aaac662e96",
                    "author": {
                        "email": "ebyhry@gmail.com",
                        "name": "Yuya Ebihara"
                    },
                    "message": "Add support for setting TLS context in MongoDB",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/bf0b6ee2d143318dc20ae8baac84d7aaac662e96"
                },
                {
                    "sha": "5f7ae2815c34fc2cc23a4dd58598b156cfc47a8f",
                    "author": {
                        "email": "neville.lyh@gmail.com",
                        "name": "Neville Li"
                    },
                    "message": "Add query.max-run-time.hard-limit\n\nCo-authored-by: Ashhar Hasan <hashhar_dev@outlook.com>",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/5f7ae2815c34fc2cc23a4dd58598b156cfc47a8f"
                },
                {
                    "sha": "9050471d7a7be673adbc850e2c43b11e69fd6fad",
                    "author": {
                        "email": "piotr.findeisen@gmail.com",
                        "name": "Piotr Findeisen"
                    },
                    "message": "Remove duplication in TestPostgreSqlTypeMapping\n\nReuse information provided for by `setUp()`.",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/9050471d7a7be673adbc850e2c43b11e69fd6fad"
                },
                {
                    "sha": "aff36e5aba0bff091aa030e775292bff35c25e6c",
                    "author": {
                        "email": "piotr.findeisen@gmail.com",
                        "name": "Piotr Findeisen"
                    },
                    "message": "Remove redundant test case from `testArrayEmptyOrNulls`\n\nCovered by first test case in `testArray`",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/aff36e5aba0bff091aa030e775292bff35c25e6c"
                },
                {
                    "sha": "9e31f4aea17f0476df47923d38e1ea62f0657ddd",
                    "author": {
                        "email": "piotr.findeisen@gmail.com",
                        "name": "Piotr Findeisen"
                    },
                    "message": "Comment on jdbc.columns values\n\nMake it easier to map values to columns.",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/9e31f4aea17f0476df47923d38e1ea62f0657ddd"
                },
                {
                    "sha": "a5d64cc59e03776e3e9635e23e8467348cbd8d70",
                    "author": {
                        "email": "piotr.findeisen@gmail.com",
                        "name": "Piotr Findeisen"
                    },
                    "message": "Fix DatabaseMetaData.getColumns nullability inconsistency\n\n`DatabaseMetaData.getColumns` reports nullability in two result columns\n\n- NULLABLE, a number (0, 1, 2)\n- IS_NULLABLE, a varchar column (\"YES\", \"NO\", \"\")\n\nThis fixes the `TrinoDatabaseMetaData` so that information returned in\nthose two ways is consistent.",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/a5d64cc59e03776e3e9635e23e8467348cbd8d70"
                },
                {
                    "sha": "79d19de926220563f890fca462bdf2cbaaadfc45",
                    "author": {
                        "email": "napewnotrafi@gmail.com",
                        "name": "Karol Sobczak"
                    },
                    "message": "Print Trino version to EXPLAIN ANALYZE VERBOSE\n\nOutput of EXPLAIN ANALYZE VERBOSE is often\nshared for troubleshooting therefore it's\nuseful to print Trino version there.\n\n-----------------------------------------------------------\n Trino version: dev\n Fragment 1 [SINGLE]\n     Output layout: [orderkey, custkey, count, sum_4, avg]\n     Output partitioning: SINGLE []",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/79d19de926220563f890fca462bdf2cbaaadfc45"
                },
                {
                    "sha": "c0febf4bf6b03abd1289febe08a56e40518a9cbb",
                    "author": {
                        "email": "napewnotrafi@gmail.com",
                        "name": "Karol Sobczak"
                    },
                    "message": "Increase Parquet page max positions",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/c0febf4bf6b03abd1289febe08a56e40518a9cbb"
                }
            ]
        },
        "public": true,
        "created_at": "2022-12-08T02:15:29Z"
    },
    {
        "id": "25737194487",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 166515022,
            "name": "trinodb/trino",
            "url": "https://api.github.com/repos/trinodb/trino"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/trinodb/trino/issues/15337",
                "repository_url": "https://api.github.com/repos/trinodb/trino",
                "labels_url": "https://api.github.com/repos/trinodb/trino/issues/15337/labels{/name}",
                "comments_url": "https://api.github.com/repos/trinodb/trino/issues/15337/comments",
                "events_url": "https://api.github.com/repos/trinodb/trino/issues/15337/events",
                "html_url": "https://github.com/trinodb/trino/pull/15337",
                "id": 1482501542,
                "node_id": "PR_kwDOCezRTs5Eq7bB",
                "number": 15337,
                "title": "Fix test for invalid rate in FormatUtils.formatDataRate()",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 1202580151,
                        "node_id": "MDU6TGFiZWwxMjAyNTgwMTUx",
                        "url": "https://api.github.com/repos/trinodb/trino/labels/cla-signed",
                        "name": "cla-signed",
                        "color": "ededed",
                        "default": false,
                        "description": null
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 1,
                "created_at": "2022-12-07T17:54:40Z",
                "updated_at": "2022-12-08T02:01:53Z",
                "closed_at": null,
                "author_association": "MEMBER",
                "active_lock_reason": null,
                "draft": false,
                "pull_request": {
                    "url": "https://api.github.com/repos/trinodb/trino/pulls/15337",
                    "html_url": "https://github.com/trinodb/trino/pull/15337",
                    "diff_url": "https://github.com/trinodb/trino/pull/15337.diff",
                    "patch_url": "https://github.com/trinodb/trino/pull/15337.patch",
                    "merged_at": null
                },
                "body": "<!-- Thank you for submitting a pull request! Find more information in our development guide at https://github.com/trinodb/trino/blob/master/.github/DEVELOPMENT.md and contact us on #dev in Slack. -->\r\n<!-- Provide an overview of the PR for maintainers and reviewers. -->\r\n## Description\r\n\r\n`FormatUtils.formatDataRate()` contains the following code:\r\n\r\n```java\r\nlong rate = Math.round(dataSize.toBytes() / duration.getValue(SECONDS));\r\nif (Double.isNaN(rate) || Double.isInfinite(rate)) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nThe test can never evaluate as `true`, since both functions will return false for any `long`.\r\n\r\nThe correct test is:\r\n\r\n```java\r\nif (rate == Long.MAX_VALUE) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nIt's not necessary to test for `Long.MIN_VALUE`, since neither `dataSize` nor `duration` can be negative.\r\n\r\n<!-- Provide details that would help an engineer who is unfamiliar with this part of the code. -->\r\n## Unit Test\r\n\r\nI added a new class, `TestFormatUtils` to test both this fix and the rest of `FormatUtils`. The tests for this change are:\r\n\r\n```java\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), false), \"0B\");\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), true), \"0B/s\");\r\n```\r\n\r\n<!-- Mark the appropriate option with an (x). Propose a release note if you can. -->\r\n## Release notes\r\n\r\n(x) This is not user-visible or docs only and no release notes are required.\r\n( ) Release notes are required, please propose a release note for me.\r\n( ) Release notes are required, with the following suggested text:\r\n\r\n## Related Issue\r\n\r\nFixes #13093",
                "reactions": {
                    "url": "https://api.github.com/repos/trinodb/trino/issues/15337/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/trinodb/trino/issues/15337/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/trinodb/trino/issues/comments/1341868451",
                "html_url": "https://github.com/trinodb/trino/pull/15337#issuecomment-1341868451",
                "issue_url": "https://api.github.com/repos/trinodb/trino/issues/15337",
                "id": 1341868451,
                "node_id": "IC_kwDOCezRTs5P-0mj",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2022-12-08T02:01:53Z",
                "updated_at": "2022-12-08T02:01:53Z",
                "author_association": "MEMBER",
                "body": "Thanks for the reviews! I've made the suggested changes; @findepi - just let me know whether you're looking for two PRs, or one PR with two commits and I'll do another push.",
                "reactions": {
                    "url": "https://api.github.com/repos/trinodb/trino/issues/comments/1341868451/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2022-12-08T02:01:54Z",
        "org": {
            "id": 34147222,
            "login": "trinodb",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/trinodb",
            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?"
        }
    },
    {
        "id": "25737166211",
        "type": "PullRequestReviewCommentEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 166515022,
            "name": "trinodb/trino",
            "url": "https://api.github.com/repos/trinodb/trino"
        },
        "payload": {
            "action": "created",
            "comment": {
                "url": "https://api.github.com/repos/trinodb/trino/pulls/comments/1042849726",
                "pull_request_review_id": 1209353709,
                "id": 1042849726,
                "node_id": "PRRC_kwDOCezRTs4-KJ--",
                "diff_hunk": "@@ -0,0 +1,353 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.trino.cli;\n+\n+import io.airlift.units.DataSize;\n+import io.airlift.units.Duration;\n+import org.testng.annotations.Test;\n+\n+import static org.testng.Assert.assertEquals;\n+\n+public class TestFormatUtils\n+{\n+    @Test\n+    public void testFormatCount()\n+    {\n+        assertEquals(FormatUtils.formatCount(1L), \"1\");",
                "path": "client/trino-cli/src/test/java/io/trino/cli/TestFormatUtils.java",
                "position": 27,
                "original_position": 27,
                "commit_id": "f88ba0cee83615211a54a7351df5656d7688ae1c",
                "original_commit_id": "f88ba0cee83615211a54a7351df5656d7688ae1c",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "done",
                "created_at": "2022-12-08T02:00:18Z",
                "updated_at": "2022-12-08T02:00:18Z",
                "html_url": "https://github.com/trinodb/trino/pull/15337#discussion_r1042849726",
                "pull_request_url": "https://api.github.com/repos/trinodb/trino/pulls/15337",
                "author_association": "MEMBER",
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/comments/1042849726"
                    },
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15337#discussion_r1042849726"
                    },
                    "pull_request": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337"
                    }
                },
                "reactions": {
                    "url": "https://api.github.com/repos/trinodb/trino/pulls/comments/1042849726/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "start_line": null,
                "original_start_line": null,
                "start_side": null,
                "line": 27,
                "original_line": 27,
                "side": "RIGHT",
                "in_reply_to_id": 1042708426
            },
            "pull_request": {
                "url": "https://api.github.com/repos/trinodb/trino/pulls/15337",
                "id": 1152104129,
                "node_id": "PR_kwDOCezRTs5Eq7bB",
                "html_url": "https://github.com/trinodb/trino/pull/15337",
                "diff_url": "https://github.com/trinodb/trino/pull/15337.diff",
                "patch_url": "https://github.com/trinodb/trino/pull/15337.patch",
                "issue_url": "https://api.github.com/repos/trinodb/trino/issues/15337",
                "number": 15337,
                "state": "open",
                "locked": false,
                "title": "Fix test for invalid rate in FormatUtils.formatDataRate()",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "<!-- Thank you for submitting a pull request! Find more information in our development guide at https://github.com/trinodb/trino/blob/master/.github/DEVELOPMENT.md and contact us on #dev in Slack. -->\r\n<!-- Provide an overview of the PR for maintainers and reviewers. -->\r\n## Description\r\n\r\n`FormatUtils.formatDataRate()` contains the following code:\r\n\r\n```java\r\nlong rate = Math.round(dataSize.toBytes() / duration.getValue(SECONDS));\r\nif (Double.isNaN(rate) || Double.isInfinite(rate)) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nThe test can never evaluate as `true`, since both functions will return false for any `long`.\r\n\r\nThe correct test is:\r\n\r\n```java\r\nif (rate == Long.MAX_VALUE) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nIt's not necessary to test for `Long.MIN_VALUE`, since neither `dataSize` nor `duration` can be negative.\r\n\r\n<!-- Provide details that would help an engineer who is unfamiliar with this part of the code. -->\r\n## Unit Test\r\n\r\nI added a new class, `TestFormatUtils` to test both this fix and the rest of `FormatUtils`. The tests for this change are:\r\n\r\n```java\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), false), \"0B\");\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), true), \"0B/s\");\r\n```\r\n\r\n<!-- Mark the appropriate option with an (x). Propose a release note if you can. -->\r\n## Release notes\r\n\r\n(x) This is not user-visible or docs only and no release notes are required.\r\n( ) Release notes are required, please propose a release note for me.\r\n( ) Release notes are required, with the following suggested text:\r\n\r\n## Related Issue\r\n\r\nFixes #13093",
                "created_at": "2022-12-07T17:54:40Z",
                "updated_at": "2022-12-08T02:00:18Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": "dd4eb7e24625655b4a60619dabe31785fb81f5ab",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [
                    {
                        "id": 1202580151,
                        "node_id": "MDU6TGFiZWwxMjAyNTgwMTUx",
                        "url": "https://api.github.com/repos/trinodb/trino/labels/cla-signed",
                        "name": "cla-signed",
                        "color": "ededed",
                        "default": false,
                        "description": null
                    }
                ],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/trinodb/trino/pulls/15337/commits",
                "review_comments_url": "https://api.github.com/repos/trinodb/trino/pulls/15337/comments",
                "review_comment_url": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/trinodb/trino/issues/15337/comments",
                "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/f88ba0cee83615211a54a7351df5656d7688ae1c",
                "head": {
                    "label": "metadaddy:fix-formatdatarate-test",
                    "ref": "fix-formatdatarate-test",
                    "sha": "f88ba0cee83615211a54a7351df5656d7688ae1c",
                    "user": {
                        "login": "metadaddy",
                        "id": 723517,
                        "node_id": "MDQ6VXNlcjcyMzUxNw==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/metadaddy",
                        "html_url": "https://github.com/metadaddy",
                        "followers_url": "https://api.github.com/users/metadaddy/followers",
                        "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                        "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                        "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                        "repos_url": "https://api.github.com/users/metadaddy/repos",
                        "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 509274784,
                        "node_id": "R_kgDOHlrqoA",
                        "name": "trino",
                        "full_name": "metadaddy/trino",
                        "private": false,
                        "owner": {
                            "login": "metadaddy",
                            "id": 723517,
                            "node_id": "MDQ6VXNlcjcyMzUxNw==",
                            "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/metadaddy",
                            "html_url": "https://github.com/metadaddy",
                            "followers_url": "https://api.github.com/users/metadaddy/followers",
                            "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                            "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                            "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                            "repos_url": "https://api.github.com/users/metadaddy/repos",
                            "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/metadaddy/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": true,
                        "url": "https://api.github.com/repos/metadaddy/trino",
                        "forks_url": "https://api.github.com/repos/metadaddy/trino/forks",
                        "keys_url": "https://api.github.com/repos/metadaddy/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/metadaddy/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/metadaddy/trino/teams",
                        "hooks_url": "https://api.github.com/repos/metadaddy/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/metadaddy/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/metadaddy/trino/events",
                        "assignees_url": "https://api.github.com/repos/metadaddy/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/metadaddy/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/metadaddy/trino/tags",
                        "blobs_url": "https://api.github.com/repos/metadaddy/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/metadaddy/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/metadaddy/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/metadaddy/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/metadaddy/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/metadaddy/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/metadaddy/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/metadaddy/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/metadaddy/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/metadaddy/trino/subscription",
                        "commits_url": "https://api.github.com/repos/metadaddy/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/metadaddy/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/metadaddy/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/metadaddy/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/metadaddy/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/metadaddy/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/metadaddy/trino/merges",
                        "archive_url": "https://api.github.com/repos/metadaddy/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/metadaddy/trino/downloads",
                        "issues_url": "https://api.github.com/repos/metadaddy/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/metadaddy/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/metadaddy/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/metadaddy/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/metadaddy/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/metadaddy/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/metadaddy/trino/deployments",
                        "created_at": "2022-07-01T00:43:32Z",
                        "updated_at": "2022-07-06T01:44:20Z",
                        "pushed_at": "2022-12-07T17:50:11Z",
                        "git_url": "git://github.com/metadaddy/trino.git",
                        "ssh_url": "git@github.com:metadaddy/trino.git",
                        "clone_url": "https://github.com/metadaddy/trino.git",
                        "svn_url": "https://github.com/metadaddy/trino",
                        "homepage": "https://trino.io",
                        "size": 192363,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": "Java",
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "master"
                    }
                },
                "base": {
                    "label": "trinodb:master",
                    "ref": "master",
                    "sha": "4b266700437a87236ad0e0e5cd1db866f4f76dcb",
                    "user": {
                        "login": "trinodb",
                        "id": 34147222,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                        "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/trinodb",
                        "html_url": "https://github.com/trinodb",
                        "followers_url": "https://api.github.com/users/trinodb/followers",
                        "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                        "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                        "organizations_url": "https://api.github.com/users/trinodb/orgs",
                        "repos_url": "https://api.github.com/users/trinodb/repos",
                        "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/trinodb/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 166515022,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNjY1MTUwMjI=",
                        "name": "trino",
                        "full_name": "trinodb/trino",
                        "private": false,
                        "owner": {
                            "login": "trinodb",
                            "id": 34147222,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/trinodb",
                            "html_url": "https://github.com/trinodb",
                            "followers_url": "https://api.github.com/users/trinodb/followers",
                            "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                            "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                            "organizations_url": "https://api.github.com/users/trinodb/orgs",
                            "repos_url": "https://api.github.com/users/trinodb/repos",
                            "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/trinodb/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/trinodb/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": false,
                        "url": "https://api.github.com/repos/trinodb/trino",
                        "forks_url": "https://api.github.com/repos/trinodb/trino/forks",
                        "keys_url": "https://api.github.com/repos/trinodb/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/trinodb/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/trinodb/trino/teams",
                        "hooks_url": "https://api.github.com/repos/trinodb/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/trinodb/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/trinodb/trino/events",
                        "assignees_url": "https://api.github.com/repos/trinodb/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/trinodb/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/trinodb/trino/tags",
                        "blobs_url": "https://api.github.com/repos/trinodb/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/trinodb/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/trinodb/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/trinodb/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/trinodb/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/trinodb/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/trinodb/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/trinodb/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/trinodb/trino/subscription",
                        "commits_url": "https://api.github.com/repos/trinodb/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/trinodb/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/trinodb/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/trinodb/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/trinodb/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/trinodb/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/trinodb/trino/merges",
                        "archive_url": "https://api.github.com/repos/trinodb/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/trinodb/trino/downloads",
                        "issues_url": "https://api.github.com/repos/trinodb/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/trinodb/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/trinodb/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/trinodb/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/trinodb/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/trinodb/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/trinodb/trino/deployments",
                        "created_at": "2019-01-19T06:38:14Z",
                        "updated_at": "2022-12-07T23:23:39Z",
                        "pushed_at": "2022-12-08T01:09:12Z",
                        "git_url": "git://github.com/trinodb/trino.git",
                        "ssh_url": "git@github.com:trinodb/trino.git",
                        "clone_url": "https://github.com/trinodb/trino.git",
                        "svn_url": "https://github.com/trinodb/trino",
                        "homepage": "https://trino.io",
                        "size": 197719,
                        "stargazers_count": 6794,
                        "watchers_count": 6794,
                        "language": "Java",
                        "has_issues": true,
                        "has_projects": false,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": true,
                        "forks_count": 2084,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 2093,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "analytics",
                            "big-data",
                            "data-science",
                            "database",
                            "databases",
                            "datalake",
                            "distributed-database",
                            "distributed-databases",
                            "distributed-systems",
                            "hadoop",
                            "hive",
                            "java",
                            "jdbc",
                            "presto",
                            "prestodb",
                            "query-engine",
                            "sql",
                            "trino"
                        ],
                        "visibility": "public",
                        "forks": 2084,
                        "open_issues": 2093,
                        "watchers": 6794,
                        "default_branch": "master"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337"
                    },
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15337"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15337"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15337/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/trinodb/trino/statuses/f88ba0cee83615211a54a7351df5656d7688ae1c"
                    }
                },
                "author_association": "MEMBER",
                "auto_merge": null,
                "active_lock_reason": null
            }
        },
        "public": true,
        "created_at": "2022-12-08T02:00:18Z",
        "org": {
            "id": 34147222,
            "login": "trinodb",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/trinodb",
            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?"
        }
    },
    {
        "id": "25737166156",
        "type": "PullRequestReviewEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 166515022,
            "name": "trinodb/trino",
            "url": "https://api.github.com/repos/trinodb/trino"
        },
        "payload": {
            "action": "created",
            "review": {
                "id": 1209353709,
                "node_id": "PRR_kwDOCezRTs5IFUXt",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": null,
                "commit_id": "f88ba0cee83615211a54a7351df5656d7688ae1c",
                "submitted_at": "2022-12-08T02:00:18Z",
                "state": "commented",
                "html_url": "https://github.com/trinodb/trino/pull/15337#pullrequestreview-1209353709",
                "pull_request_url": "https://api.github.com/repos/trinodb/trino/pulls/15337",
                "author_association": "MEMBER",
                "_links": {
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15337#pullrequestreview-1209353709"
                    },
                    "pull_request": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337"
                    }
                }
            },
            "pull_request": {
                "url": "https://api.github.com/repos/trinodb/trino/pulls/15337",
                "id": 1152104129,
                "node_id": "PR_kwDOCezRTs5Eq7bB",
                "html_url": "https://github.com/trinodb/trino/pull/15337",
                "diff_url": "https://github.com/trinodb/trino/pull/15337.diff",
                "patch_url": "https://github.com/trinodb/trino/pull/15337.patch",
                "issue_url": "https://api.github.com/repos/trinodb/trino/issues/15337",
                "number": 15337,
                "state": "open",
                "locked": false,
                "title": "Fix test for invalid rate in FormatUtils.formatDataRate()",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "<!-- Thank you for submitting a pull request! Find more information in our development guide at https://github.com/trinodb/trino/blob/master/.github/DEVELOPMENT.md and contact us on #dev in Slack. -->\r\n<!-- Provide an overview of the PR for maintainers and reviewers. -->\r\n## Description\r\n\r\n`FormatUtils.formatDataRate()` contains the following code:\r\n\r\n```java\r\nlong rate = Math.round(dataSize.toBytes() / duration.getValue(SECONDS));\r\nif (Double.isNaN(rate) || Double.isInfinite(rate)) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nThe test can never evaluate as `true`, since both functions will return false for any `long`.\r\n\r\nThe correct test is:\r\n\r\n```java\r\nif (rate == Long.MAX_VALUE) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nIt's not necessary to test for `Long.MIN_VALUE`, since neither `dataSize` nor `duration` can be negative.\r\n\r\n<!-- Provide details that would help an engineer who is unfamiliar with this part of the code. -->\r\n## Unit Test\r\n\r\nI added a new class, `TestFormatUtils` to test both this fix and the rest of `FormatUtils`. The tests for this change are:\r\n\r\n```java\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), false), \"0B\");\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), true), \"0B/s\");\r\n```\r\n\r\n<!-- Mark the appropriate option with an (x). Propose a release note if you can. -->\r\n## Release notes\r\n\r\n(x) This is not user-visible or docs only and no release notes are required.\r\n( ) Release notes are required, please propose a release note for me.\r\n( ) Release notes are required, with the following suggested text:\r\n\r\n## Related Issue\r\n\r\nFixes #13093",
                "created_at": "2022-12-07T17:54:40Z",
                "updated_at": "2022-12-08T02:00:18Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": "dd4eb7e24625655b4a60619dabe31785fb81f5ab",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [
                    {
                        "id": 1202580151,
                        "node_id": "MDU6TGFiZWwxMjAyNTgwMTUx",
                        "url": "https://api.github.com/repos/trinodb/trino/labels/cla-signed",
                        "name": "cla-signed",
                        "color": "ededed",
                        "default": false,
                        "description": null
                    }
                ],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/trinodb/trino/pulls/15337/commits",
                "review_comments_url": "https://api.github.com/repos/trinodb/trino/pulls/15337/comments",
                "review_comment_url": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/trinodb/trino/issues/15337/comments",
                "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/f88ba0cee83615211a54a7351df5656d7688ae1c",
                "head": {
                    "label": "metadaddy:fix-formatdatarate-test",
                    "ref": "fix-formatdatarate-test",
                    "sha": "f88ba0cee83615211a54a7351df5656d7688ae1c",
                    "user": {
                        "login": "metadaddy",
                        "id": 723517,
                        "node_id": "MDQ6VXNlcjcyMzUxNw==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/metadaddy",
                        "html_url": "https://github.com/metadaddy",
                        "followers_url": "https://api.github.com/users/metadaddy/followers",
                        "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                        "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                        "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                        "repos_url": "https://api.github.com/users/metadaddy/repos",
                        "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 509274784,
                        "node_id": "R_kgDOHlrqoA",
                        "name": "trino",
                        "full_name": "metadaddy/trino",
                        "private": false,
                        "owner": {
                            "login": "metadaddy",
                            "id": 723517,
                            "node_id": "MDQ6VXNlcjcyMzUxNw==",
                            "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/metadaddy",
                            "html_url": "https://github.com/metadaddy",
                            "followers_url": "https://api.github.com/users/metadaddy/followers",
                            "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                            "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                            "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                            "repos_url": "https://api.github.com/users/metadaddy/repos",
                            "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/metadaddy/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": true,
                        "url": "https://api.github.com/repos/metadaddy/trino",
                        "forks_url": "https://api.github.com/repos/metadaddy/trino/forks",
                        "keys_url": "https://api.github.com/repos/metadaddy/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/metadaddy/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/metadaddy/trino/teams",
                        "hooks_url": "https://api.github.com/repos/metadaddy/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/metadaddy/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/metadaddy/trino/events",
                        "assignees_url": "https://api.github.com/repos/metadaddy/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/metadaddy/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/metadaddy/trino/tags",
                        "blobs_url": "https://api.github.com/repos/metadaddy/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/metadaddy/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/metadaddy/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/metadaddy/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/metadaddy/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/metadaddy/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/metadaddy/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/metadaddy/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/metadaddy/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/metadaddy/trino/subscription",
                        "commits_url": "https://api.github.com/repos/metadaddy/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/metadaddy/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/metadaddy/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/metadaddy/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/metadaddy/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/metadaddy/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/metadaddy/trino/merges",
                        "archive_url": "https://api.github.com/repos/metadaddy/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/metadaddy/trino/downloads",
                        "issues_url": "https://api.github.com/repos/metadaddy/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/metadaddy/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/metadaddy/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/metadaddy/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/metadaddy/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/metadaddy/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/metadaddy/trino/deployments",
                        "created_at": "2022-07-01T00:43:32Z",
                        "updated_at": "2022-07-06T01:44:20Z",
                        "pushed_at": "2022-12-07T17:50:11Z",
                        "git_url": "git://github.com/metadaddy/trino.git",
                        "ssh_url": "git@github.com:metadaddy/trino.git",
                        "clone_url": "https://github.com/metadaddy/trino.git",
                        "svn_url": "https://github.com/metadaddy/trino",
                        "homepage": "https://trino.io",
                        "size": 192363,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": "Java",
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "master"
                    }
                },
                "base": {
                    "label": "trinodb:master",
                    "ref": "master",
                    "sha": "4b266700437a87236ad0e0e5cd1db866f4f76dcb",
                    "user": {
                        "login": "trinodb",
                        "id": 34147222,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                        "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/trinodb",
                        "html_url": "https://github.com/trinodb",
                        "followers_url": "https://api.github.com/users/trinodb/followers",
                        "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                        "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                        "organizations_url": "https://api.github.com/users/trinodb/orgs",
                        "repos_url": "https://api.github.com/users/trinodb/repos",
                        "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/trinodb/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 166515022,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNjY1MTUwMjI=",
                        "name": "trino",
                        "full_name": "trinodb/trino",
                        "private": false,
                        "owner": {
                            "login": "trinodb",
                            "id": 34147222,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/trinodb",
                            "html_url": "https://github.com/trinodb",
                            "followers_url": "https://api.github.com/users/trinodb/followers",
                            "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                            "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                            "organizations_url": "https://api.github.com/users/trinodb/orgs",
                            "repos_url": "https://api.github.com/users/trinodb/repos",
                            "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/trinodb/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/trinodb/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": false,
                        "url": "https://api.github.com/repos/trinodb/trino",
                        "forks_url": "https://api.github.com/repos/trinodb/trino/forks",
                        "keys_url": "https://api.github.com/repos/trinodb/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/trinodb/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/trinodb/trino/teams",
                        "hooks_url": "https://api.github.com/repos/trinodb/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/trinodb/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/trinodb/trino/events",
                        "assignees_url": "https://api.github.com/repos/trinodb/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/trinodb/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/trinodb/trino/tags",
                        "blobs_url": "https://api.github.com/repos/trinodb/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/trinodb/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/trinodb/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/trinodb/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/trinodb/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/trinodb/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/trinodb/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/trinodb/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/trinodb/trino/subscription",
                        "commits_url": "https://api.github.com/repos/trinodb/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/trinodb/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/trinodb/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/trinodb/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/trinodb/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/trinodb/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/trinodb/trino/merges",
                        "archive_url": "https://api.github.com/repos/trinodb/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/trinodb/trino/downloads",
                        "issues_url": "https://api.github.com/repos/trinodb/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/trinodb/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/trinodb/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/trinodb/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/trinodb/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/trinodb/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/trinodb/trino/deployments",
                        "created_at": "2019-01-19T06:38:14Z",
                        "updated_at": "2022-12-07T23:23:39Z",
                        "pushed_at": "2022-12-08T01:09:12Z",
                        "git_url": "git://github.com/trinodb/trino.git",
                        "ssh_url": "git@github.com:trinodb/trino.git",
                        "clone_url": "https://github.com/trinodb/trino.git",
                        "svn_url": "https://github.com/trinodb/trino",
                        "homepage": "https://trino.io",
                        "size": 197719,
                        "stargazers_count": 6794,
                        "watchers_count": 6794,
                        "language": "Java",
                        "has_issues": true,
                        "has_projects": false,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": true,
                        "forks_count": 2084,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 2093,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "analytics",
                            "big-data",
                            "data-science",
                            "database",
                            "databases",
                            "datalake",
                            "distributed-database",
                            "distributed-databases",
                            "distributed-systems",
                            "hadoop",
                            "hive",
                            "java",
                            "jdbc",
                            "presto",
                            "prestodb",
                            "query-engine",
                            "sql",
                            "trino"
                        ],
                        "visibility": "public",
                        "forks": 2084,
                        "open_issues": 2093,
                        "watchers": 6794,
                        "default_branch": "master"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337"
                    },
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15337"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15337"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15337/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/trinodb/trino/statuses/f88ba0cee83615211a54a7351df5656d7688ae1c"
                    }
                },
                "author_association": "MEMBER",
                "auto_merge": null,
                "active_lock_reason": null
            }
        },
        "public": true,
        "created_at": "2022-12-08T02:00:19Z",
        "org": {
            "id": 34147222,
            "login": "trinodb",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/trinodb",
            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?"
        }
    },
    {
        "id": "25737163407",
        "type": "PullRequestReviewCommentEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 166515022,
            "name": "trinodb/trino",
            "url": "https://api.github.com/repos/trinodb/trino"
        },
        "payload": {
            "action": "created",
            "comment": {
                "url": "https://api.github.com/repos/trinodb/trino/pulls/comments/1042849643",
                "pull_request_review_id": 1209353593,
                "id": 1042849643,
                "node_id": "PRRC_kwDOCezRTs4-KJ9r",
                "diff_hunk": "@@ -0,0 +1,353 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.trino.cli;\n+\n+import io.airlift.units.DataSize;\n+import io.airlift.units.Duration;\n+import org.testng.annotations.Test;\n+\n+import static org.testng.Assert.assertEquals;\n+\n+public class TestFormatUtils\n+{\n+    @Test\n+    public void testFormatCount()\n+    {\n+        assertEquals(FormatUtils.formatCount(1L), \"1\");\n+        assertEquals(FormatUtils.formatCount(12L), \"12\");\n+        assertEquals(FormatUtils.formatCount(123L), \"123\");\n+        assertEquals(FormatUtils.formatCount(1234L), \"1.23K\");\n+        assertEquals(FormatUtils.formatCount(12345L), \"12.3K\");\n+        assertEquals(FormatUtils.formatCount(123456L), \"123K\");\n+        assertEquals(FormatUtils.formatCount(1234567L), \"1.23M\");\n+        assertEquals(FormatUtils.formatCount(12345678L), \"12.3M\");\n+        assertEquals(FormatUtils.formatCount(123456789L), \"123M\");\n+        assertEquals(FormatUtils.formatCount(1234567890L), \"1.23B\");\n+        assertEquals(FormatUtils.formatCount(12345678901L), \"12.3B\");\n+        assertEquals(FormatUtils.formatCount(123456789012L), \"123B\");\n+        assertEquals(FormatUtils.formatCount(1234567890123L), \"1.23T\");\n+        assertEquals(FormatUtils.formatCount(12345678901234L), \"12.3T\");\n+        assertEquals(FormatUtils.formatCount(123456789012345L), \"123T\");\n+        assertEquals(FormatUtils.formatCount(1234567890123456L), \"1.23Q\");\n+        assertEquals(FormatUtils.formatCount(12345678901234567L), \"12.3Q\");\n+        assertEquals(FormatUtils.formatCount(123456789012345678L), \"123Q\");\n+        assertEquals(FormatUtils.formatCount(1234567890123456789L), \"1235Q\");\n+    }\n+\n+    @Test\n+    public void formatCountRate()\n+    {\n+        assertEquals(FormatUtils.formatCountRate(0.0000000001D, Duration.valueOf(\"1ns\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(0.0000000001D, Duration.valueOf(\"1ns\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(0.000000001D, Duration.valueOf(\"1ns\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(0.000000001D, Duration.valueOf(\"1ns\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(0.0000000015D, Duration.valueOf(\"1ns\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(0.0000000015D, Duration.valueOf(\"1ns\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(1D, Duration.valueOf(\"1ns\"), false), \"1000M\");\n+        assertEquals(FormatUtils.formatCountRate(1D, Duration.valueOf(\"1ns\"), true), \"1000M/s\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"1ns\"), false), \"10B\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"1ns\"), true), \"10B/s\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"10ns\"), false), \"1000M\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"10ns\"), true), \"1000M/s\");\n+\n+        assertEquals(FormatUtils.formatCountRate(0.0000001D, Duration.valueOf(\"1us\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(0.0000001D, Duration.valueOf(\"1us\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(0.000001D, Duration.valueOf(\"1us\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(0.000001D, Duration.valueOf(\"1us\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(0.0000015D, Duration.valueOf(\"1us\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(0.0000015D, Duration.valueOf(\"1us\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(1D, Duration.valueOf(\"1us\"), false), \"1000K\");\n+        assertEquals(FormatUtils.formatCountRate(1D, Duration.valueOf(\"1us\"), true), \"1000K/s\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"1us\"), false), \"10M\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"1us\"), true), \"10M/s\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"10us\"), false), \"1000K\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"10us\"), true), \"1000K/s\");\n+\n+        assertEquals(FormatUtils.formatCountRate(0.0001D, Duration.valueOf(\"1ms\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(0.0001D, Duration.valueOf(\"1ms\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(0.001D, Duration.valueOf(\"1ms\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(0.001D, Duration.valueOf(\"1ms\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(0.0015D, Duration.valueOf(\"1ms\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(0.0015D, Duration.valueOf(\"1ms\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(1D, Duration.valueOf(\"1ms\"), false), \"1000\");\n+        assertEquals(FormatUtils.formatCountRate(1D, Duration.valueOf(\"1ms\"), true), \"1000/s\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"1ms\"), false), \"10K\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"1ms\"), true), \"10K/s\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"10ms\"), false), \"1000\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"10ms\"), true), \"1000/s\");\n+\n+        assertEquals(FormatUtils.formatCountRate(0.1D, Duration.valueOf(\"1s\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(0.1D, Duration.valueOf(\"1s\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"1s\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"1s\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"10s\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"10s\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(1.5D, Duration.valueOf(\"1s\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(1.5D, Duration.valueOf(\"1s\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"1s\"), false), \"10\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"1s\"), true), \"10/s\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"10s\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"10s\"), true), \"1/s\");\n+\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"1m\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"1m\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(60.0D, Duration.valueOf(\"1m\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(60.0D, Duration.valueOf(\"1m\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(600.0D, Duration.valueOf(\"1m\"), false), \"10\");\n+        assertEquals(FormatUtils.formatCountRate(600.0D, Duration.valueOf(\"1m\"), true), \"10/s\");\n+        assertEquals(FormatUtils.formatCountRate(100.0D, Duration.valueOf(\"10m\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(100.0D, Duration.valueOf(\"10m\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(600.0D, Duration.valueOf(\"10m\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(600.0D, Duration.valueOf(\"10m\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(6000.0D, Duration.valueOf(\"10m\"), false), \"10\");\n+        assertEquals(FormatUtils.formatCountRate(6000.0D, Duration.valueOf(\"10m\"), true), \"10/s\");\n+\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"1h\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"1h\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(3600.0D, Duration.valueOf(\"1h\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(3600.0D, Duration.valueOf(\"1h\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(36000.0D, Duration.valueOf(\"1h\"), false), \"10\");\n+        assertEquals(FormatUtils.formatCountRate(36000.0D, Duration.valueOf(\"1h\"), true), \"10/s\");\n+        assertEquals(FormatUtils.formatCountRate(100.0D, Duration.valueOf(\"10h\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(100.0D, Duration.valueOf(\"10h\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(36000.0D, Duration.valueOf(\"10h\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(36000.0D, Duration.valueOf(\"10h\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(360000.0D, Duration.valueOf(\"10h\"), false), \"10\");\n+        assertEquals(FormatUtils.formatCountRate(360000.0D, Duration.valueOf(\"10h\"), true), \"10/s\");\n+\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"1d\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"1d\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(86400.0D, Duration.valueOf(\"1d\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(86400.0D, Duration.valueOf(\"1d\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(864000.0D, Duration.valueOf(\"1d\"), false), \"10\");\n+        assertEquals(FormatUtils.formatCountRate(864000.0D, Duration.valueOf(\"1d\"), true), \"10/s\");\n+        assertEquals(FormatUtils.formatCountRate(86400.0D, Duration.valueOf(\"10d\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(86400.0D, Duration.valueOf(\"10d\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(864000.0D, Duration.valueOf(\"10d\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(864000.0D, Duration.valueOf(\"10d\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(8640000.0D, Duration.valueOf(\"10d\"), false), \"10\");\n+        assertEquals(FormatUtils.formatCountRate(8640000.0D, Duration.valueOf(\"10d\"), true), \"10/s\");\n+\n+        assertEquals(FormatUtils.formatCountRate(Double.NaN, Duration.valueOf(\"1s\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(Double.NaN, Duration.valueOf(\"1s\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(Double.POSITIVE_INFINITY, Duration.valueOf(\"1s\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(Double.POSITIVE_INFINITY, Duration.valueOf(\"1s\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(Double.NEGATIVE_INFINITY, Duration.valueOf(\"1s\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(Double.NEGATIVE_INFINITY, Duration.valueOf(\"1s\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"0s\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"0s\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(-1.0D, Duration.valueOf(\"0s\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(-1.0D, Duration.valueOf(\"0s\"), true), \"0/s\");\n+    }\n+\n+    @Test\n+    public void testFormatDataSize()\n+    {\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1L), false), \"1B\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1L), true), \"1B\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12L), false), \"12B\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12L), true), \"12B\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123L), false), \"123B\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123L), true), \"123B\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234L), false), \"1.21K\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234L), true), \"1.21KB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12345L), false), \"12.1K\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12345L), true), \"12.1KB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123456L), false), \"121K\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123456L), true), \"121KB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234567L), false), \"1.18M\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234567L), true), \"1.18MB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12345678L), false), \"11.8M\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12345678L), true), \"11.8MB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123456789L), false), \"118M\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123456789L), true), \"118MB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234567890L), false), \"1.15G\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234567890L), true), \"1.15GB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12345678901L), false), \"11.5G\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12345678901L), true), \"11.5GB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123456789012L), false), \"115G\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123456789012L), true), \"115GB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234567890123L), false), \"1.12T\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234567890123L), true), \"1.12TB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12345678901234L), false), \"11.2T\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12345678901234L), true), \"11.2TB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123456789012345L), false), \"112T\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123456789012345L), true), \"112TB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234567890123456L), false), \"1.1P\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234567890123456L), true), \"1.1PB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12345678901234567L), false), \"11P\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12345678901234567L), true), \"11PB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123456789012345678L), false), \"110P\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123456789012345678L), true), \"110PB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234567890123456789L), false), \"1097P\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234567890123456789L), true), \"1097PB\");\n+    }\n+\n+    @Test\n+    public void testFormatDataRate()\n+    {\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(0), Duration.valueOf(\"1ns\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(0), Duration.valueOf(\"1ns\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1ns\"), false), \"954M\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1ns\"), true), \"954MB/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"1ns\"), false), \"9.31G\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"1ns\"), true), \"9.31GB/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"10ns\"), false), \"954M\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"10ns\"), true), \"954MB/s\");\n+\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(0), Duration.valueOf(\"1us\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(0), Duration.valueOf(\"1us\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1us\"), false), \"977K\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1us\"), true), \"977KB/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"1us\"), false), \"9.54M\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"1us\"), true), \"9.54MB/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"10us\"), false), \"977K\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"10us\"), true), \"977KB/s\");\n+\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(0), Duration.valueOf(\"1ms\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(0), Duration.valueOf(\"1ms\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1ms\"), false), \"1000B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1ms\"), true), \"1000B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"1ms\"), false), \"9.77K\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"1ms\"), true), \"9.77KB/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"10ms\"), false), \"1000B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"10ms\"), true), \"1000B/s\");\n+\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(0), Duration.valueOf(\"1s\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(0), Duration.valueOf(\"1s\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1s\"), false), \"1B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1s\"), true), \"1B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"10s\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"10s\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"1s\"), false), \"10B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"1s\"), true), \"10B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"10s\"), false), \"1B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"10s\"), true), \"1B/s\");\n+\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1m\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1m\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(60), Duration.valueOf(\"1m\"), false), \"1B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(60), Duration.valueOf(\"1m\"), true), \"1B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(600), Duration.valueOf(\"1m\"), false), \"10B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(600), Duration.valueOf(\"1m\"), true), \"10B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(100), Duration.valueOf(\"10m\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(100), Duration.valueOf(\"10m\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(600), Duration.valueOf(\"10m\"), false), \"1B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(600), Duration.valueOf(\"10m\"), true), \"1B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(6000), Duration.valueOf(\"10m\"), false), \"10B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(6000), Duration.valueOf(\"10m\"), true), \"10B/s\");\n+\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1h\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1h\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(3600), Duration.valueOf(\"1h\"), false), \"1B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(3600), Duration.valueOf(\"1h\"), true), \"1B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(36000), Duration.valueOf(\"1h\"), false), \"10B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(36000), Duration.valueOf(\"1h\"), true), \"10B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(100), Duration.valueOf(\"10h\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(100), Duration.valueOf(\"10h\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(36000), Duration.valueOf(\"10h\"), false), \"1B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(36000), Duration.valueOf(\"10h\"), true), \"1B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(360000), Duration.valueOf(\"10h\"), false), \"10B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(360000), Duration.valueOf(\"10h\"), true), \"10B/s\");\n+\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1d\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1d\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(86400), Duration.valueOf(\"1d\"), false), \"1B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(86400), Duration.valueOf(\"1d\"), true), \"1B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(864000), Duration.valueOf(\"1d\"), false), \"10B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(864000), Duration.valueOf(\"1d\"), true), \"10B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(86400), Duration.valueOf(\"10d\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(86400), Duration.valueOf(\"10d\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(864000), Duration.valueOf(\"10d\"), false), \"1B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(864000), Duration.valueOf(\"10d\"), true), \"1B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(8640000), Duration.valueOf(\"10d\"), false), \"10B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(8640000), Duration.valueOf(\"10d\"), true), \"10B/s\");\n+\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), true), \"0B/s\");\n+    }\n+\n+    @Test\n+    public void testPluralize()\n+    {\n+        assertEquals(FormatUtils.pluralize(\"foo\", 0), \"foos\");\n+        assertEquals(FormatUtils.pluralize(\"foo\", 1), \"foo\");\n+        assertEquals(FormatUtils.pluralize(\"foo\", 2), \"foos\");\n+    }\n+\n+    @Test\n+    public void testFormatFinalTime()\n+    {\n+        assertEquals(FormatUtils.formatFinalTime(Duration.valueOf(\"0us\")), \"0.00\");\n+        assertEquals(FormatUtils.formatFinalTime(Duration.valueOf(\"0ns\")), \"0.00\");\n+        assertEquals(FormatUtils.formatFinalTime(Duration.valueOf(\"0ms\")), \"0.00\");\n+        assertEquals(FormatUtils.formatFinalTime(Duration.valueOf(\"0s\")), \"0.00\");\n+        assertEquals(FormatUtils.formatFinalTime(Duration.valueOf(\"0m\")), \"0.00\");\n+        assertEquals(FormatUtils.formatFinalTime(Duration.valueOf(\"0h\")), \"0.00\");\n+        assertEquals(FormatUtils.formatFinalTime(Duration.valueOf(\"0d\")), \"0.00\");\n+        assertEquals(FormatUtils.formatFinalTime(Duration.valueOf(\"1us\")), \"0.00\");\n+        assertEquals(FormatUtils.formatFinalTime(Duration.valueOf(\"1ns\")), \"0.00\");\n+        assertEquals(FormatUtils.formatFinalTime(Duration.valueOf(\"1ms\")), \"0.00\");\n+        assertEquals(FormatUtils.formatFinalTime(Duration.valueOf(\"10ms\")), \"0.01\");\n+        assertEquals(FormatUtils.formatFinalTime(Duration.valueOf(\"100ms\")), \"0.10\");\n+        assertEquals(FormatUtils.formatFinalTime(Duration.valueOf(\"1s\")), \"1.00\");\n+        assertEquals(FormatUtils.formatFinalTime(Duration.valueOf(\"10s\")), \"10.00\");\n+        assertEquals(FormatUtils.formatFinalTime(Duration.valueOf(\"1m\")), \"1:00\");\n+        assertEquals(FormatUtils.formatFinalTime(Duration.valueOf(\"61s\")), \"1:01\");\n+        assertEquals(FormatUtils.formatFinalTime(Duration.valueOf(\"1h\")), \"60:00\");\n+        assertEquals(FormatUtils.formatFinalTime(Duration.valueOf(\"61m\")), \"61:00\");\n+        assertEquals(FormatUtils.formatFinalTime(Duration.valueOf(\"1d\")), \"1440:00\");\n+        assertEquals(FormatUtils.formatFinalTime(Duration.valueOf(\"25h\")), \"1500:00\");\n+    }\n+\n+    @Test\n+    public void testFormatIndeterminateProgressBar()\n+    {\n+        assertEquals(FormatUtils.formatProgressBar(10, 0), \"<=>       \");\n+        assertEquals(FormatUtils.formatProgressBar(10, 1), \" <=>      \");\n+        assertEquals(FormatUtils.formatProgressBar(10, 7), \"       <=>\");\n+        assertEquals(FormatUtils.formatProgressBar(10, 8), \"      <=> \");\n+        assertEquals(FormatUtils.formatProgressBar(10, 13), \" <=>      \");\n+        assertEquals(FormatUtils.formatProgressBar(10, 14), \"<=>       \");\n+    }\n+\n+    @Test(expectedExceptions = IllegalArgumentException.class, expectedExceptionsMessageRegExp = \"invalid count: -1\")\n+    public void testInvalidIndeterminateProgressBar()\n+    {\n+        assertEquals(FormatUtils.formatProgressBar(10, -1), \"<=>       \");",
                "path": "client/trino-cli/src/test/java/io/trino/cli/TestFormatUtils.java",
                "position": 328,
                "original_position": 328,
                "commit_id": "f88ba0cee83615211a54a7351df5656d7688ae1c",
                "original_commit_id": "f88ba0cee83615211a54a7351df5656d7688ae1c",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "correct",
                "created_at": "2022-12-08T02:00:07Z",
                "updated_at": "2022-12-08T02:00:07Z",
                "html_url": "https://github.com/trinodb/trino/pull/15337#discussion_r1042849643",
                "pull_request_url": "https://api.github.com/repos/trinodb/trino/pulls/15337",
                "author_association": "MEMBER",
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/comments/1042849643"
                    },
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15337#discussion_r1042849643"
                    },
                    "pull_request": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337"
                    }
                },
                "reactions": {
                    "url": "https://api.github.com/repos/trinodb/trino/pulls/comments/1042849643/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "start_line": null,
                "original_start_line": null,
                "start_side": null,
                "line": 328,
                "original_line": 328,
                "side": "RIGHT",
                "in_reply_to_id": 1042707788
            },
            "pull_request": {
                "url": "https://api.github.com/repos/trinodb/trino/pulls/15337",
                "id": 1152104129,
                "node_id": "PR_kwDOCezRTs5Eq7bB",
                "html_url": "https://github.com/trinodb/trino/pull/15337",
                "diff_url": "https://github.com/trinodb/trino/pull/15337.diff",
                "patch_url": "https://github.com/trinodb/trino/pull/15337.patch",
                "issue_url": "https://api.github.com/repos/trinodb/trino/issues/15337",
                "number": 15337,
                "state": "open",
                "locked": false,
                "title": "Fix test for invalid rate in FormatUtils.formatDataRate()",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "<!-- Thank you for submitting a pull request! Find more information in our development guide at https://github.com/trinodb/trino/blob/master/.github/DEVELOPMENT.md and contact us on #dev in Slack. -->\r\n<!-- Provide an overview of the PR for maintainers and reviewers. -->\r\n## Description\r\n\r\n`FormatUtils.formatDataRate()` contains the following code:\r\n\r\n```java\r\nlong rate = Math.round(dataSize.toBytes() / duration.getValue(SECONDS));\r\nif (Double.isNaN(rate) || Double.isInfinite(rate)) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nThe test can never evaluate as `true`, since both functions will return false for any `long`.\r\n\r\nThe correct test is:\r\n\r\n```java\r\nif (rate == Long.MAX_VALUE) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nIt's not necessary to test for `Long.MIN_VALUE`, since neither `dataSize` nor `duration` can be negative.\r\n\r\n<!-- Provide details that would help an engineer who is unfamiliar with this part of the code. -->\r\n## Unit Test\r\n\r\nI added a new class, `TestFormatUtils` to test both this fix and the rest of `FormatUtils`. The tests for this change are:\r\n\r\n```java\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), false), \"0B\");\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), true), \"0B/s\");\r\n```\r\n\r\n<!-- Mark the appropriate option with an (x). Propose a release note if you can. -->\r\n## Release notes\r\n\r\n(x) This is not user-visible or docs only and no release notes are required.\r\n( ) Release notes are required, please propose a release note for me.\r\n( ) Release notes are required, with the following suggested text:\r\n\r\n## Related Issue\r\n\r\nFixes #13093",
                "created_at": "2022-12-07T17:54:40Z",
                "updated_at": "2022-12-08T02:00:07Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": "dd4eb7e24625655b4a60619dabe31785fb81f5ab",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [
                    {
                        "id": 1202580151,
                        "node_id": "MDU6TGFiZWwxMjAyNTgwMTUx",
                        "url": "https://api.github.com/repos/trinodb/trino/labels/cla-signed",
                        "name": "cla-signed",
                        "color": "ededed",
                        "default": false,
                        "description": null
                    }
                ],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/trinodb/trino/pulls/15337/commits",
                "review_comments_url": "https://api.github.com/repos/trinodb/trino/pulls/15337/comments",
                "review_comment_url": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/trinodb/trino/issues/15337/comments",
                "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/f88ba0cee83615211a54a7351df5656d7688ae1c",
                "head": {
                    "label": "metadaddy:fix-formatdatarate-test",
                    "ref": "fix-formatdatarate-test",
                    "sha": "f88ba0cee83615211a54a7351df5656d7688ae1c",
                    "user": {
                        "login": "metadaddy",
                        "id": 723517,
                        "node_id": "MDQ6VXNlcjcyMzUxNw==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/metadaddy",
                        "html_url": "https://github.com/metadaddy",
                        "followers_url": "https://api.github.com/users/metadaddy/followers",
                        "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                        "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                        "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                        "repos_url": "https://api.github.com/users/metadaddy/repos",
                        "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 509274784,
                        "node_id": "R_kgDOHlrqoA",
                        "name": "trino",
                        "full_name": "metadaddy/trino",
                        "private": false,
                        "owner": {
                            "login": "metadaddy",
                            "id": 723517,
                            "node_id": "MDQ6VXNlcjcyMzUxNw==",
                            "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/metadaddy",
                            "html_url": "https://github.com/metadaddy",
                            "followers_url": "https://api.github.com/users/metadaddy/followers",
                            "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                            "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                            "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                            "repos_url": "https://api.github.com/users/metadaddy/repos",
                            "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/metadaddy/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": true,
                        "url": "https://api.github.com/repos/metadaddy/trino",
                        "forks_url": "https://api.github.com/repos/metadaddy/trino/forks",
                        "keys_url": "https://api.github.com/repos/metadaddy/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/metadaddy/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/metadaddy/trino/teams",
                        "hooks_url": "https://api.github.com/repos/metadaddy/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/metadaddy/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/metadaddy/trino/events",
                        "assignees_url": "https://api.github.com/repos/metadaddy/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/metadaddy/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/metadaddy/trino/tags",
                        "blobs_url": "https://api.github.com/repos/metadaddy/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/metadaddy/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/metadaddy/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/metadaddy/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/metadaddy/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/metadaddy/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/metadaddy/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/metadaddy/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/metadaddy/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/metadaddy/trino/subscription",
                        "commits_url": "https://api.github.com/repos/metadaddy/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/metadaddy/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/metadaddy/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/metadaddy/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/metadaddy/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/metadaddy/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/metadaddy/trino/merges",
                        "archive_url": "https://api.github.com/repos/metadaddy/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/metadaddy/trino/downloads",
                        "issues_url": "https://api.github.com/repos/metadaddy/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/metadaddy/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/metadaddy/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/metadaddy/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/metadaddy/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/metadaddy/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/metadaddy/trino/deployments",
                        "created_at": "2022-07-01T00:43:32Z",
                        "updated_at": "2022-07-06T01:44:20Z",
                        "pushed_at": "2022-12-07T17:50:11Z",
                        "git_url": "git://github.com/metadaddy/trino.git",
                        "ssh_url": "git@github.com:metadaddy/trino.git",
                        "clone_url": "https://github.com/metadaddy/trino.git",
                        "svn_url": "https://github.com/metadaddy/trino",
                        "homepage": "https://trino.io",
                        "size": 192363,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": "Java",
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "master"
                    }
                },
                "base": {
                    "label": "trinodb:master",
                    "ref": "master",
                    "sha": "4b266700437a87236ad0e0e5cd1db866f4f76dcb",
                    "user": {
                        "login": "trinodb",
                        "id": 34147222,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                        "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/trinodb",
                        "html_url": "https://github.com/trinodb",
                        "followers_url": "https://api.github.com/users/trinodb/followers",
                        "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                        "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                        "organizations_url": "https://api.github.com/users/trinodb/orgs",
                        "repos_url": "https://api.github.com/users/trinodb/repos",
                        "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/trinodb/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 166515022,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNjY1MTUwMjI=",
                        "name": "trino",
                        "full_name": "trinodb/trino",
                        "private": false,
                        "owner": {
                            "login": "trinodb",
                            "id": 34147222,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/trinodb",
                            "html_url": "https://github.com/trinodb",
                            "followers_url": "https://api.github.com/users/trinodb/followers",
                            "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                            "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                            "organizations_url": "https://api.github.com/users/trinodb/orgs",
                            "repos_url": "https://api.github.com/users/trinodb/repos",
                            "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/trinodb/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/trinodb/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": false,
                        "url": "https://api.github.com/repos/trinodb/trino",
                        "forks_url": "https://api.github.com/repos/trinodb/trino/forks",
                        "keys_url": "https://api.github.com/repos/trinodb/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/trinodb/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/trinodb/trino/teams",
                        "hooks_url": "https://api.github.com/repos/trinodb/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/trinodb/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/trinodb/trino/events",
                        "assignees_url": "https://api.github.com/repos/trinodb/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/trinodb/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/trinodb/trino/tags",
                        "blobs_url": "https://api.github.com/repos/trinodb/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/trinodb/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/trinodb/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/trinodb/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/trinodb/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/trinodb/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/trinodb/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/trinodb/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/trinodb/trino/subscription",
                        "commits_url": "https://api.github.com/repos/trinodb/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/trinodb/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/trinodb/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/trinodb/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/trinodb/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/trinodb/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/trinodb/trino/merges",
                        "archive_url": "https://api.github.com/repos/trinodb/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/trinodb/trino/downloads",
                        "issues_url": "https://api.github.com/repos/trinodb/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/trinodb/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/trinodb/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/trinodb/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/trinodb/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/trinodb/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/trinodb/trino/deployments",
                        "created_at": "2019-01-19T06:38:14Z",
                        "updated_at": "2022-12-07T23:23:39Z",
                        "pushed_at": "2022-12-08T01:09:12Z",
                        "git_url": "git://github.com/trinodb/trino.git",
                        "ssh_url": "git@github.com:trinodb/trino.git",
                        "clone_url": "https://github.com/trinodb/trino.git",
                        "svn_url": "https://github.com/trinodb/trino",
                        "homepage": "https://trino.io",
                        "size": 197719,
                        "stargazers_count": 6794,
                        "watchers_count": 6794,
                        "language": "Java",
                        "has_issues": true,
                        "has_projects": false,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": true,
                        "forks_count": 2084,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 2093,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "analytics",
                            "big-data",
                            "data-science",
                            "database",
                            "databases",
                            "datalake",
                            "distributed-database",
                            "distributed-databases",
                            "distributed-systems",
                            "hadoop",
                            "hive",
                            "java",
                            "jdbc",
                            "presto",
                            "prestodb",
                            "query-engine",
                            "sql",
                            "trino"
                        ],
                        "visibility": "public",
                        "forks": 2084,
                        "open_issues": 2093,
                        "watchers": 6794,
                        "default_branch": "master"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337"
                    },
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15337"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15337"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15337/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/trinodb/trino/statuses/f88ba0cee83615211a54a7351df5656d7688ae1c"
                    }
                },
                "author_association": "MEMBER",
                "auto_merge": null,
                "active_lock_reason": null
            }
        },
        "public": true,
        "created_at": "2022-12-08T02:00:07Z",
        "org": {
            "id": 34147222,
            "login": "trinodb",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/trinodb",
            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?"
        }
    },
    {
        "id": "25737163310",
        "type": "PullRequestReviewEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 166515022,
            "name": "trinodb/trino",
            "url": "https://api.github.com/repos/trinodb/trino"
        },
        "payload": {
            "action": "created",
            "review": {
                "id": 1209353593,
                "node_id": "PRR_kwDOCezRTs5IFUV5",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": null,
                "commit_id": "f88ba0cee83615211a54a7351df5656d7688ae1c",
                "submitted_at": "2022-12-08T02:00:07Z",
                "state": "commented",
                "html_url": "https://github.com/trinodb/trino/pull/15337#pullrequestreview-1209353593",
                "pull_request_url": "https://api.github.com/repos/trinodb/trino/pulls/15337",
                "author_association": "MEMBER",
                "_links": {
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15337#pullrequestreview-1209353593"
                    },
                    "pull_request": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337"
                    }
                }
            },
            "pull_request": {
                "url": "https://api.github.com/repos/trinodb/trino/pulls/15337",
                "id": 1152104129,
                "node_id": "PR_kwDOCezRTs5Eq7bB",
                "html_url": "https://github.com/trinodb/trino/pull/15337",
                "diff_url": "https://github.com/trinodb/trino/pull/15337.diff",
                "patch_url": "https://github.com/trinodb/trino/pull/15337.patch",
                "issue_url": "https://api.github.com/repos/trinodb/trino/issues/15337",
                "number": 15337,
                "state": "open",
                "locked": false,
                "title": "Fix test for invalid rate in FormatUtils.formatDataRate()",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "<!-- Thank you for submitting a pull request! Find more information in our development guide at https://github.com/trinodb/trino/blob/master/.github/DEVELOPMENT.md and contact us on #dev in Slack. -->\r\n<!-- Provide an overview of the PR for maintainers and reviewers. -->\r\n## Description\r\n\r\n`FormatUtils.formatDataRate()` contains the following code:\r\n\r\n```java\r\nlong rate = Math.round(dataSize.toBytes() / duration.getValue(SECONDS));\r\nif (Double.isNaN(rate) || Double.isInfinite(rate)) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nThe test can never evaluate as `true`, since both functions will return false for any `long`.\r\n\r\nThe correct test is:\r\n\r\n```java\r\nif (rate == Long.MAX_VALUE) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nIt's not necessary to test for `Long.MIN_VALUE`, since neither `dataSize` nor `duration` can be negative.\r\n\r\n<!-- Provide details that would help an engineer who is unfamiliar with this part of the code. -->\r\n## Unit Test\r\n\r\nI added a new class, `TestFormatUtils` to test both this fix and the rest of `FormatUtils`. The tests for this change are:\r\n\r\n```java\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), false), \"0B\");\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), true), \"0B/s\");\r\n```\r\n\r\n<!-- Mark the appropriate option with an (x). Propose a release note if you can. -->\r\n## Release notes\r\n\r\n(x) This is not user-visible or docs only and no release notes are required.\r\n( ) Release notes are required, please propose a release note for me.\r\n( ) Release notes are required, with the following suggested text:\r\n\r\n## Related Issue\r\n\r\nFixes #13093",
                "created_at": "2022-12-07T17:54:40Z",
                "updated_at": "2022-12-08T02:00:07Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": "dd4eb7e24625655b4a60619dabe31785fb81f5ab",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [
                    {
                        "id": 1202580151,
                        "node_id": "MDU6TGFiZWwxMjAyNTgwMTUx",
                        "url": "https://api.github.com/repos/trinodb/trino/labels/cla-signed",
                        "name": "cla-signed",
                        "color": "ededed",
                        "default": false,
                        "description": null
                    }
                ],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/trinodb/trino/pulls/15337/commits",
                "review_comments_url": "https://api.github.com/repos/trinodb/trino/pulls/15337/comments",
                "review_comment_url": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/trinodb/trino/issues/15337/comments",
                "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/f88ba0cee83615211a54a7351df5656d7688ae1c",
                "head": {
                    "label": "metadaddy:fix-formatdatarate-test",
                    "ref": "fix-formatdatarate-test",
                    "sha": "f88ba0cee83615211a54a7351df5656d7688ae1c",
                    "user": {
                        "login": "metadaddy",
                        "id": 723517,
                        "node_id": "MDQ6VXNlcjcyMzUxNw==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/metadaddy",
                        "html_url": "https://github.com/metadaddy",
                        "followers_url": "https://api.github.com/users/metadaddy/followers",
                        "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                        "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                        "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                        "repos_url": "https://api.github.com/users/metadaddy/repos",
                        "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 509274784,
                        "node_id": "R_kgDOHlrqoA",
                        "name": "trino",
                        "full_name": "metadaddy/trino",
                        "private": false,
                        "owner": {
                            "login": "metadaddy",
                            "id": 723517,
                            "node_id": "MDQ6VXNlcjcyMzUxNw==",
                            "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/metadaddy",
                            "html_url": "https://github.com/metadaddy",
                            "followers_url": "https://api.github.com/users/metadaddy/followers",
                            "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                            "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                            "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                            "repos_url": "https://api.github.com/users/metadaddy/repos",
                            "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/metadaddy/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": true,
                        "url": "https://api.github.com/repos/metadaddy/trino",
                        "forks_url": "https://api.github.com/repos/metadaddy/trino/forks",
                        "keys_url": "https://api.github.com/repos/metadaddy/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/metadaddy/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/metadaddy/trino/teams",
                        "hooks_url": "https://api.github.com/repos/metadaddy/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/metadaddy/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/metadaddy/trino/events",
                        "assignees_url": "https://api.github.com/repos/metadaddy/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/metadaddy/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/metadaddy/trino/tags",
                        "blobs_url": "https://api.github.com/repos/metadaddy/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/metadaddy/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/metadaddy/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/metadaddy/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/metadaddy/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/metadaddy/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/metadaddy/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/metadaddy/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/metadaddy/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/metadaddy/trino/subscription",
                        "commits_url": "https://api.github.com/repos/metadaddy/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/metadaddy/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/metadaddy/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/metadaddy/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/metadaddy/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/metadaddy/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/metadaddy/trino/merges",
                        "archive_url": "https://api.github.com/repos/metadaddy/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/metadaddy/trino/downloads",
                        "issues_url": "https://api.github.com/repos/metadaddy/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/metadaddy/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/metadaddy/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/metadaddy/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/metadaddy/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/metadaddy/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/metadaddy/trino/deployments",
                        "created_at": "2022-07-01T00:43:32Z",
                        "updated_at": "2022-07-06T01:44:20Z",
                        "pushed_at": "2022-12-07T17:50:11Z",
                        "git_url": "git://github.com/metadaddy/trino.git",
                        "ssh_url": "git@github.com:metadaddy/trino.git",
                        "clone_url": "https://github.com/metadaddy/trino.git",
                        "svn_url": "https://github.com/metadaddy/trino",
                        "homepage": "https://trino.io",
                        "size": 192363,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": "Java",
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "master"
                    }
                },
                "base": {
                    "label": "trinodb:master",
                    "ref": "master",
                    "sha": "4b266700437a87236ad0e0e5cd1db866f4f76dcb",
                    "user": {
                        "login": "trinodb",
                        "id": 34147222,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                        "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/trinodb",
                        "html_url": "https://github.com/trinodb",
                        "followers_url": "https://api.github.com/users/trinodb/followers",
                        "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                        "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                        "organizations_url": "https://api.github.com/users/trinodb/orgs",
                        "repos_url": "https://api.github.com/users/trinodb/repos",
                        "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/trinodb/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 166515022,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNjY1MTUwMjI=",
                        "name": "trino",
                        "full_name": "trinodb/trino",
                        "private": false,
                        "owner": {
                            "login": "trinodb",
                            "id": 34147222,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/trinodb",
                            "html_url": "https://github.com/trinodb",
                            "followers_url": "https://api.github.com/users/trinodb/followers",
                            "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                            "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                            "organizations_url": "https://api.github.com/users/trinodb/orgs",
                            "repos_url": "https://api.github.com/users/trinodb/repos",
                            "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/trinodb/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/trinodb/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": false,
                        "url": "https://api.github.com/repos/trinodb/trino",
                        "forks_url": "https://api.github.com/repos/trinodb/trino/forks",
                        "keys_url": "https://api.github.com/repos/trinodb/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/trinodb/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/trinodb/trino/teams",
                        "hooks_url": "https://api.github.com/repos/trinodb/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/trinodb/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/trinodb/trino/events",
                        "assignees_url": "https://api.github.com/repos/trinodb/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/trinodb/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/trinodb/trino/tags",
                        "blobs_url": "https://api.github.com/repos/trinodb/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/trinodb/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/trinodb/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/trinodb/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/trinodb/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/trinodb/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/trinodb/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/trinodb/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/trinodb/trino/subscription",
                        "commits_url": "https://api.github.com/repos/trinodb/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/trinodb/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/trinodb/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/trinodb/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/trinodb/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/trinodb/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/trinodb/trino/merges",
                        "archive_url": "https://api.github.com/repos/trinodb/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/trinodb/trino/downloads",
                        "issues_url": "https://api.github.com/repos/trinodb/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/trinodb/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/trinodb/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/trinodb/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/trinodb/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/trinodb/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/trinodb/trino/deployments",
                        "created_at": "2019-01-19T06:38:14Z",
                        "updated_at": "2022-12-07T23:23:39Z",
                        "pushed_at": "2022-12-08T01:09:12Z",
                        "git_url": "git://github.com/trinodb/trino.git",
                        "ssh_url": "git@github.com:trinodb/trino.git",
                        "clone_url": "https://github.com/trinodb/trino.git",
                        "svn_url": "https://github.com/trinodb/trino",
                        "homepage": "https://trino.io",
                        "size": 197719,
                        "stargazers_count": 6794,
                        "watchers_count": 6794,
                        "language": "Java",
                        "has_issues": true,
                        "has_projects": false,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": true,
                        "forks_count": 2084,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 2093,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "analytics",
                            "big-data",
                            "data-science",
                            "database",
                            "databases",
                            "datalake",
                            "distributed-database",
                            "distributed-databases",
                            "distributed-systems",
                            "hadoop",
                            "hive",
                            "java",
                            "jdbc",
                            "presto",
                            "prestodb",
                            "query-engine",
                            "sql",
                            "trino"
                        ],
                        "visibility": "public",
                        "forks": 2084,
                        "open_issues": 2093,
                        "watchers": 6794,
                        "default_branch": "master"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337"
                    },
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15337"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15337"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15337/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/trinodb/trino/statuses/f88ba0cee83615211a54a7351df5656d7688ae1c"
                    }
                },
                "author_association": "MEMBER",
                "auto_merge": null,
                "active_lock_reason": null
            }
        },
        "public": true,
        "created_at": "2022-12-08T02:00:10Z",
        "org": {
            "id": 34147222,
            "login": "trinodb",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/trinodb",
            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?"
        }
    },
    {
        "id": "25737159492",
        "type": "PullRequestReviewCommentEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 166515022,
            "name": "trinodb/trino",
            "url": "https://api.github.com/repos/trinodb/trino"
        },
        "payload": {
            "action": "created",
            "comment": {
                "url": "https://api.github.com/repos/trinodb/trino/pulls/comments/1042849580",
                "pull_request_review_id": 1209353494,
                "id": 1042849580,
                "node_id": "PRRC_kwDOCezRTs4-KJ8s",
                "diff_hunk": "@@ -0,0 +1,353 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.trino.cli;\n+\n+import io.airlift.units.DataSize;\n+import io.airlift.units.Duration;\n+import org.testng.annotations.Test;\n+\n+import static org.testng.Assert.assertEquals;\n+\n+public class TestFormatUtils\n+{\n+    @Test\n+    public void testFormatCount()\n+    {\n+        assertEquals(FormatUtils.formatCount(1L), \"1\");\n+        assertEquals(FormatUtils.formatCount(12L), \"12\");\n+        assertEquals(FormatUtils.formatCount(123L), \"123\");\n+        assertEquals(FormatUtils.formatCount(1234L), \"1.23K\");\n+        assertEquals(FormatUtils.formatCount(12345L), \"12.3K\");\n+        assertEquals(FormatUtils.formatCount(123456L), \"123K\");\n+        assertEquals(FormatUtils.formatCount(1234567L), \"1.23M\");\n+        assertEquals(FormatUtils.formatCount(12345678L), \"12.3M\");\n+        assertEquals(FormatUtils.formatCount(123456789L), \"123M\");\n+        assertEquals(FormatUtils.formatCount(1234567890L), \"1.23B\");\n+        assertEquals(FormatUtils.formatCount(12345678901L), \"12.3B\");\n+        assertEquals(FormatUtils.formatCount(123456789012L), \"123B\");\n+        assertEquals(FormatUtils.formatCount(1234567890123L), \"1.23T\");\n+        assertEquals(FormatUtils.formatCount(12345678901234L), \"12.3T\");\n+        assertEquals(FormatUtils.formatCount(123456789012345L), \"123T\");\n+        assertEquals(FormatUtils.formatCount(1234567890123456L), \"1.23Q\");\n+        assertEquals(FormatUtils.formatCount(12345678901234567L), \"12.3Q\");\n+        assertEquals(FormatUtils.formatCount(123456789012345678L), \"123Q\");\n+        assertEquals(FormatUtils.formatCount(1234567890123456789L), \"1235Q\");\n+    }\n+\n+    @Test\n+    public void formatCountRate()\n+    {\n+        assertEquals(FormatUtils.formatCountRate(0.0000000001D, Duration.valueOf(\"1ns\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(0.0000000001D, Duration.valueOf(\"1ns\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(0.000000001D, Duration.valueOf(\"1ns\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(0.000000001D, Duration.valueOf(\"1ns\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(0.0000000015D, Duration.valueOf(\"1ns\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(0.0000000015D, Duration.valueOf(\"1ns\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(1D, Duration.valueOf(\"1ns\"), false), \"1000M\");\n+        assertEquals(FormatUtils.formatCountRate(1D, Duration.valueOf(\"1ns\"), true), \"1000M/s\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"1ns\"), false), \"10B\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"1ns\"), true), \"10B/s\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"10ns\"), false), \"1000M\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"10ns\"), true), \"1000M/s\");\n+\n+        assertEquals(FormatUtils.formatCountRate(0.0000001D, Duration.valueOf(\"1us\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(0.0000001D, Duration.valueOf(\"1us\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(0.000001D, Duration.valueOf(\"1us\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(0.000001D, Duration.valueOf(\"1us\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(0.0000015D, Duration.valueOf(\"1us\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(0.0000015D, Duration.valueOf(\"1us\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(1D, Duration.valueOf(\"1us\"), false), \"1000K\");\n+        assertEquals(FormatUtils.formatCountRate(1D, Duration.valueOf(\"1us\"), true), \"1000K/s\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"1us\"), false), \"10M\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"1us\"), true), \"10M/s\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"10us\"), false), \"1000K\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"10us\"), true), \"1000K/s\");\n+\n+        assertEquals(FormatUtils.formatCountRate(0.0001D, Duration.valueOf(\"1ms\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(0.0001D, Duration.valueOf(\"1ms\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(0.001D, Duration.valueOf(\"1ms\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(0.001D, Duration.valueOf(\"1ms\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(0.0015D, Duration.valueOf(\"1ms\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(0.0015D, Duration.valueOf(\"1ms\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(1D, Duration.valueOf(\"1ms\"), false), \"1000\");\n+        assertEquals(FormatUtils.formatCountRate(1D, Duration.valueOf(\"1ms\"), true), \"1000/s\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"1ms\"), false), \"10K\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"1ms\"), true), \"10K/s\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"10ms\"), false), \"1000\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"10ms\"), true), \"1000/s\");\n+\n+        assertEquals(FormatUtils.formatCountRate(0.1D, Duration.valueOf(\"1s\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(0.1D, Duration.valueOf(\"1s\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"1s\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"1s\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"10s\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"10s\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(1.5D, Duration.valueOf(\"1s\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(1.5D, Duration.valueOf(\"1s\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"1s\"), false), \"10\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"1s\"), true), \"10/s\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"10s\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"10s\"), true), \"1/s\");\n+\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"1m\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"1m\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(60.0D, Duration.valueOf(\"1m\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(60.0D, Duration.valueOf(\"1m\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(600.0D, Duration.valueOf(\"1m\"), false), \"10\");\n+        assertEquals(FormatUtils.formatCountRate(600.0D, Duration.valueOf(\"1m\"), true), \"10/s\");\n+        assertEquals(FormatUtils.formatCountRate(100.0D, Duration.valueOf(\"10m\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(100.0D, Duration.valueOf(\"10m\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(600.0D, Duration.valueOf(\"10m\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(600.0D, Duration.valueOf(\"10m\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(6000.0D, Duration.valueOf(\"10m\"), false), \"10\");\n+        assertEquals(FormatUtils.formatCountRate(6000.0D, Duration.valueOf(\"10m\"), true), \"10/s\");\n+\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"1h\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"1h\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(3600.0D, Duration.valueOf(\"1h\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(3600.0D, Duration.valueOf(\"1h\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(36000.0D, Duration.valueOf(\"1h\"), false), \"10\");\n+        assertEquals(FormatUtils.formatCountRate(36000.0D, Duration.valueOf(\"1h\"), true), \"10/s\");\n+        assertEquals(FormatUtils.formatCountRate(100.0D, Duration.valueOf(\"10h\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(100.0D, Duration.valueOf(\"10h\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(36000.0D, Duration.valueOf(\"10h\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(36000.0D, Duration.valueOf(\"10h\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(360000.0D, Duration.valueOf(\"10h\"), false), \"10\");\n+        assertEquals(FormatUtils.formatCountRate(360000.0D, Duration.valueOf(\"10h\"), true), \"10/s\");\n+\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"1d\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"1d\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(86400.0D, Duration.valueOf(\"1d\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(86400.0D, Duration.valueOf(\"1d\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(864000.0D, Duration.valueOf(\"1d\"), false), \"10\");\n+        assertEquals(FormatUtils.formatCountRate(864000.0D, Duration.valueOf(\"1d\"), true), \"10/s\");\n+        assertEquals(FormatUtils.formatCountRate(86400.0D, Duration.valueOf(\"10d\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(86400.0D, Duration.valueOf(\"10d\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(864000.0D, Duration.valueOf(\"10d\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(864000.0D, Duration.valueOf(\"10d\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(8640000.0D, Duration.valueOf(\"10d\"), false), \"10\");\n+        assertEquals(FormatUtils.formatCountRate(8640000.0D, Duration.valueOf(\"10d\"), true), \"10/s\");\n+\n+        assertEquals(FormatUtils.formatCountRate(Double.NaN, Duration.valueOf(\"1s\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(Double.NaN, Duration.valueOf(\"1s\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(Double.POSITIVE_INFINITY, Duration.valueOf(\"1s\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(Double.POSITIVE_INFINITY, Duration.valueOf(\"1s\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(Double.NEGATIVE_INFINITY, Duration.valueOf(\"1s\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(Double.NEGATIVE_INFINITY, Duration.valueOf(\"1s\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"0s\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"0s\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(-1.0D, Duration.valueOf(\"0s\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(-1.0D, Duration.valueOf(\"0s\"), true), \"0/s\");\n+    }\n+\n+    @Test\n+    public void testFormatDataSize()\n+    {\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1L), false), \"1B\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1L), true), \"1B\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12L), false), \"12B\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12L), true), \"12B\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123L), false), \"123B\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123L), true), \"123B\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234L), false), \"1.21K\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234L), true), \"1.21KB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12345L), false), \"12.1K\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12345L), true), \"12.1KB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123456L), false), \"121K\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123456L), true), \"121KB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234567L), false), \"1.18M\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234567L), true), \"1.18MB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12345678L), false), \"11.8M\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12345678L), true), \"11.8MB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123456789L), false), \"118M\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123456789L), true), \"118MB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234567890L), false), \"1.15G\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234567890L), true), \"1.15GB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12345678901L), false), \"11.5G\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12345678901L), true), \"11.5GB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123456789012L), false), \"115G\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123456789012L), true), \"115GB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234567890123L), false), \"1.12T\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234567890123L), true), \"1.12TB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12345678901234L), false), \"11.2T\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12345678901234L), true), \"11.2TB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123456789012345L), false), \"112T\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123456789012345L), true), \"112TB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234567890123456L), false), \"1.1P\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234567890123456L), true), \"1.1PB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12345678901234567L), false), \"11P\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12345678901234567L), true), \"11PB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123456789012345678L), false), \"110P\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123456789012345678L), true), \"110PB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234567890123456789L), false), \"1097P\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234567890123456789L), true), \"1097PB\");\n+    }\n+\n+    @Test\n+    public void testFormatDataRate()\n+    {\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(0), Duration.valueOf(\"1ns\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(0), Duration.valueOf(\"1ns\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1ns\"), false), \"954M\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1ns\"), true), \"954MB/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"1ns\"), false), \"9.31G\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"1ns\"), true), \"9.31GB/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"10ns\"), false), \"954M\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"10ns\"), true), \"954MB/s\");\n+\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(0), Duration.valueOf(\"1us\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(0), Duration.valueOf(\"1us\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1us\"), false), \"977K\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1us\"), true), \"977KB/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"1us\"), false), \"9.54M\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"1us\"), true), \"9.54MB/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"10us\"), false), \"977K\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"10us\"), true), \"977KB/s\");\n+\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(0), Duration.valueOf(\"1ms\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(0), Duration.valueOf(\"1ms\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1ms\"), false), \"1000B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1ms\"), true), \"1000B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"1ms\"), false), \"9.77K\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"1ms\"), true), \"9.77KB/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"10ms\"), false), \"1000B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"10ms\"), true), \"1000B/s\");\n+\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(0), Duration.valueOf(\"1s\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(0), Duration.valueOf(\"1s\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1s\"), false), \"1B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1s\"), true), \"1B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"10s\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"10s\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"1s\"), false), \"10B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"1s\"), true), \"10B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"10s\"), false), \"1B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"10s\"), true), \"1B/s\");\n+\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1m\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1m\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(60), Duration.valueOf(\"1m\"), false), \"1B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(60), Duration.valueOf(\"1m\"), true), \"1B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(600), Duration.valueOf(\"1m\"), false), \"10B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(600), Duration.valueOf(\"1m\"), true), \"10B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(100), Duration.valueOf(\"10m\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(100), Duration.valueOf(\"10m\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(600), Duration.valueOf(\"10m\"), false), \"1B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(600), Duration.valueOf(\"10m\"), true), \"1B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(6000), Duration.valueOf(\"10m\"), false), \"10B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(6000), Duration.valueOf(\"10m\"), true), \"10B/s\");\n+\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1h\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1h\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(3600), Duration.valueOf(\"1h\"), false), \"1B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(3600), Duration.valueOf(\"1h\"), true), \"1B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(36000), Duration.valueOf(\"1h\"), false), \"10B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(36000), Duration.valueOf(\"1h\"), true), \"10B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(100), Duration.valueOf(\"10h\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(100), Duration.valueOf(\"10h\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(36000), Duration.valueOf(\"10h\"), false), \"1B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(36000), Duration.valueOf(\"10h\"), true), \"1B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(360000), Duration.valueOf(\"10h\"), false), \"10B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(360000), Duration.valueOf(\"10h\"), true), \"10B/s\");\n+\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1d\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1d\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(86400), Duration.valueOf(\"1d\"), false), \"1B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(86400), Duration.valueOf(\"1d\"), true), \"1B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(864000), Duration.valueOf(\"1d\"), false), \"10B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(864000), Duration.valueOf(\"1d\"), true), \"10B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(86400), Duration.valueOf(\"10d\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(86400), Duration.valueOf(\"10d\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(864000), Duration.valueOf(\"10d\"), false), \"1B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(864000), Duration.valueOf(\"10d\"), true), \"1B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(8640000), Duration.valueOf(\"10d\"), false), \"10B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(8640000), Duration.valueOf(\"10d\"), true), \"10B/s\");\n+\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), true), \"0B/s\");\n+    }\n+\n+    @Test\n+    public void testPluralize()\n+    {\n+        assertEquals(FormatUtils.pluralize(\"foo\", 0), \"foos\");\n+        assertEquals(FormatUtils.pluralize(\"foo\", 1), \"foo\");\n+        assertEquals(FormatUtils.pluralize(\"foo\", 2), \"foos\");\n+    }\n+\n+    @Test\n+    public void testFormatFinalTime()\n+    {\n+        assertEquals(FormatUtils.formatFinalTime(Duration.valueOf(\"0us\")), \"0.00\");\n+        assertEquals(FormatUtils.formatFinalTime(Duration.valueOf(\"0ns\")), \"0.00\");\n+        assertEquals(FormatUtils.formatFinalTime(Duration.valueOf(\"0ms\")), \"0.00\");\n+        assertEquals(FormatUtils.formatFinalTime(Duration.valueOf(\"0s\")), \"0.00\");\n+        assertEquals(FormatUtils.formatFinalTime(Duration.valueOf(\"0m\")), \"0.00\");\n+        assertEquals(FormatUtils.formatFinalTime(Duration.valueOf(\"0h\")), \"0.00\");\n+        assertEquals(FormatUtils.formatFinalTime(Duration.valueOf(\"0d\")), \"0.00\");\n+        assertEquals(FormatUtils.formatFinalTime(Duration.valueOf(\"1us\")), \"0.00\");\n+        assertEquals(FormatUtils.formatFinalTime(Duration.valueOf(\"1ns\")), \"0.00\");\n+        assertEquals(FormatUtils.formatFinalTime(Duration.valueOf(\"1ms\")), \"0.00\");\n+        assertEquals(FormatUtils.formatFinalTime(Duration.valueOf(\"10ms\")), \"0.01\");\n+        assertEquals(FormatUtils.formatFinalTime(Duration.valueOf(\"100ms\")), \"0.10\");\n+        assertEquals(FormatUtils.formatFinalTime(Duration.valueOf(\"1s\")), \"1.00\");\n+        assertEquals(FormatUtils.formatFinalTime(Duration.valueOf(\"10s\")), \"10.00\");\n+        assertEquals(FormatUtils.formatFinalTime(Duration.valueOf(\"1m\")), \"1:00\");\n+        assertEquals(FormatUtils.formatFinalTime(Duration.valueOf(\"61s\")), \"1:01\");\n+        assertEquals(FormatUtils.formatFinalTime(Duration.valueOf(\"1h\")), \"60:00\");\n+        assertEquals(FormatUtils.formatFinalTime(Duration.valueOf(\"61m\")), \"61:00\");\n+        assertEquals(FormatUtils.formatFinalTime(Duration.valueOf(\"1d\")), \"1440:00\");\n+        assertEquals(FormatUtils.formatFinalTime(Duration.valueOf(\"25h\")), \"1500:00\");\n+    }\n+\n+    @Test\n+    public void testFormatIndeterminateProgressBar()\n+    {\n+        assertEquals(FormatUtils.formatProgressBar(10, 0), \"<=>       \");\n+        assertEquals(FormatUtils.formatProgressBar(10, 1), \" <=>      \");\n+        assertEquals(FormatUtils.formatProgressBar(10, 7), \"       <=>\");\n+        assertEquals(FormatUtils.formatProgressBar(10, 8), \"      <=> \");\n+        assertEquals(FormatUtils.formatProgressBar(10, 13), \" <=>      \");\n+        assertEquals(FormatUtils.formatProgressBar(10, 14), \"<=>       \");\n+    }\n+\n+    @Test(expectedExceptions = IllegalArgumentException.class, expectedExceptionsMessageRegExp = \"invalid count: -1\")",
                "path": "client/trino-cli/src/test/java/io/trino/cli/TestFormatUtils.java",
                "position": 325,
                "original_position": 325,
                "commit_id": "f88ba0cee83615211a54a7351df5656d7688ae1c",
                "original_commit_id": "f88ba0cee83615211a54a7351df5656d7688ae1c",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "Done:\r\n\r\n```java\r\n    @Test\r\n    public void testInvalidIndeterminateProgressBar()\r\n    {\r\n        assertThatThrownBy(() -> formatProgressBar(10, -1))\r\n                .isInstanceOf(IllegalArgumentException.class)\r\n                .hasMessageContaining(\"invalid count: -1\");\r\n    }\r\n```",
                "created_at": "2022-12-08T01:59:56Z",
                "updated_at": "2022-12-08T01:59:56Z",
                "html_url": "https://github.com/trinodb/trino/pull/15337#discussion_r1042849580",
                "pull_request_url": "https://api.github.com/repos/trinodb/trino/pulls/15337",
                "author_association": "MEMBER",
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/comments/1042849580"
                    },
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15337#discussion_r1042849580"
                    },
                    "pull_request": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337"
                    }
                },
                "reactions": {
                    "url": "https://api.github.com/repos/trinodb/trino/pulls/comments/1042849580/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "start_line": null,
                "original_start_line": null,
                "start_side": null,
                "line": 325,
                "original_line": 325,
                "side": "RIGHT",
                "in_reply_to_id": 1042707547
            },
            "pull_request": {
                "url": "https://api.github.com/repos/trinodb/trino/pulls/15337",
                "id": 1152104129,
                "node_id": "PR_kwDOCezRTs5Eq7bB",
                "html_url": "https://github.com/trinodb/trino/pull/15337",
                "diff_url": "https://github.com/trinodb/trino/pull/15337.diff",
                "patch_url": "https://github.com/trinodb/trino/pull/15337.patch",
                "issue_url": "https://api.github.com/repos/trinodb/trino/issues/15337",
                "number": 15337,
                "state": "open",
                "locked": false,
                "title": "Fix test for invalid rate in FormatUtils.formatDataRate()",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "<!-- Thank you for submitting a pull request! Find more information in our development guide at https://github.com/trinodb/trino/blob/master/.github/DEVELOPMENT.md and contact us on #dev in Slack. -->\r\n<!-- Provide an overview of the PR for maintainers and reviewers. -->\r\n## Description\r\n\r\n`FormatUtils.formatDataRate()` contains the following code:\r\n\r\n```java\r\nlong rate = Math.round(dataSize.toBytes() / duration.getValue(SECONDS));\r\nif (Double.isNaN(rate) || Double.isInfinite(rate)) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nThe test can never evaluate as `true`, since both functions will return false for any `long`.\r\n\r\nThe correct test is:\r\n\r\n```java\r\nif (rate == Long.MAX_VALUE) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nIt's not necessary to test for `Long.MIN_VALUE`, since neither `dataSize` nor `duration` can be negative.\r\n\r\n<!-- Provide details that would help an engineer who is unfamiliar with this part of the code. -->\r\n## Unit Test\r\n\r\nI added a new class, `TestFormatUtils` to test both this fix and the rest of `FormatUtils`. The tests for this change are:\r\n\r\n```java\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), false), \"0B\");\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), true), \"0B/s\");\r\n```\r\n\r\n<!-- Mark the appropriate option with an (x). Propose a release note if you can. -->\r\n## Release notes\r\n\r\n(x) This is not user-visible or docs only and no release notes are required.\r\n( ) Release notes are required, please propose a release note for me.\r\n( ) Release notes are required, with the following suggested text:\r\n\r\n## Related Issue\r\n\r\nFixes #13093",
                "created_at": "2022-12-07T17:54:40Z",
                "updated_at": "2022-12-08T01:59:56Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": "dd4eb7e24625655b4a60619dabe31785fb81f5ab",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [
                    {
                        "id": 1202580151,
                        "node_id": "MDU6TGFiZWwxMjAyNTgwMTUx",
                        "url": "https://api.github.com/repos/trinodb/trino/labels/cla-signed",
                        "name": "cla-signed",
                        "color": "ededed",
                        "default": false,
                        "description": null
                    }
                ],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/trinodb/trino/pulls/15337/commits",
                "review_comments_url": "https://api.github.com/repos/trinodb/trino/pulls/15337/comments",
                "review_comment_url": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/trinodb/trino/issues/15337/comments",
                "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/f88ba0cee83615211a54a7351df5656d7688ae1c",
                "head": {
                    "label": "metadaddy:fix-formatdatarate-test",
                    "ref": "fix-formatdatarate-test",
                    "sha": "f88ba0cee83615211a54a7351df5656d7688ae1c",
                    "user": {
                        "login": "metadaddy",
                        "id": 723517,
                        "node_id": "MDQ6VXNlcjcyMzUxNw==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/metadaddy",
                        "html_url": "https://github.com/metadaddy",
                        "followers_url": "https://api.github.com/users/metadaddy/followers",
                        "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                        "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                        "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                        "repos_url": "https://api.github.com/users/metadaddy/repos",
                        "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 509274784,
                        "node_id": "R_kgDOHlrqoA",
                        "name": "trino",
                        "full_name": "metadaddy/trino",
                        "private": false,
                        "owner": {
                            "login": "metadaddy",
                            "id": 723517,
                            "node_id": "MDQ6VXNlcjcyMzUxNw==",
                            "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/metadaddy",
                            "html_url": "https://github.com/metadaddy",
                            "followers_url": "https://api.github.com/users/metadaddy/followers",
                            "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                            "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                            "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                            "repos_url": "https://api.github.com/users/metadaddy/repos",
                            "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/metadaddy/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": true,
                        "url": "https://api.github.com/repos/metadaddy/trino",
                        "forks_url": "https://api.github.com/repos/metadaddy/trino/forks",
                        "keys_url": "https://api.github.com/repos/metadaddy/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/metadaddy/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/metadaddy/trino/teams",
                        "hooks_url": "https://api.github.com/repos/metadaddy/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/metadaddy/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/metadaddy/trino/events",
                        "assignees_url": "https://api.github.com/repos/metadaddy/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/metadaddy/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/metadaddy/trino/tags",
                        "blobs_url": "https://api.github.com/repos/metadaddy/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/metadaddy/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/metadaddy/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/metadaddy/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/metadaddy/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/metadaddy/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/metadaddy/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/metadaddy/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/metadaddy/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/metadaddy/trino/subscription",
                        "commits_url": "https://api.github.com/repos/metadaddy/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/metadaddy/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/metadaddy/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/metadaddy/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/metadaddy/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/metadaddy/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/metadaddy/trino/merges",
                        "archive_url": "https://api.github.com/repos/metadaddy/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/metadaddy/trino/downloads",
                        "issues_url": "https://api.github.com/repos/metadaddy/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/metadaddy/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/metadaddy/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/metadaddy/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/metadaddy/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/metadaddy/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/metadaddy/trino/deployments",
                        "created_at": "2022-07-01T00:43:32Z",
                        "updated_at": "2022-07-06T01:44:20Z",
                        "pushed_at": "2022-12-07T17:50:11Z",
                        "git_url": "git://github.com/metadaddy/trino.git",
                        "ssh_url": "git@github.com:metadaddy/trino.git",
                        "clone_url": "https://github.com/metadaddy/trino.git",
                        "svn_url": "https://github.com/metadaddy/trino",
                        "homepage": "https://trino.io",
                        "size": 192363,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": "Java",
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "master"
                    }
                },
                "base": {
                    "label": "trinodb:master",
                    "ref": "master",
                    "sha": "4b266700437a87236ad0e0e5cd1db866f4f76dcb",
                    "user": {
                        "login": "trinodb",
                        "id": 34147222,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                        "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/trinodb",
                        "html_url": "https://github.com/trinodb",
                        "followers_url": "https://api.github.com/users/trinodb/followers",
                        "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                        "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                        "organizations_url": "https://api.github.com/users/trinodb/orgs",
                        "repos_url": "https://api.github.com/users/trinodb/repos",
                        "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/trinodb/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 166515022,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNjY1MTUwMjI=",
                        "name": "trino",
                        "full_name": "trinodb/trino",
                        "private": false,
                        "owner": {
                            "login": "trinodb",
                            "id": 34147222,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/trinodb",
                            "html_url": "https://github.com/trinodb",
                            "followers_url": "https://api.github.com/users/trinodb/followers",
                            "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                            "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                            "organizations_url": "https://api.github.com/users/trinodb/orgs",
                            "repos_url": "https://api.github.com/users/trinodb/repos",
                            "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/trinodb/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/trinodb/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": false,
                        "url": "https://api.github.com/repos/trinodb/trino",
                        "forks_url": "https://api.github.com/repos/trinodb/trino/forks",
                        "keys_url": "https://api.github.com/repos/trinodb/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/trinodb/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/trinodb/trino/teams",
                        "hooks_url": "https://api.github.com/repos/trinodb/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/trinodb/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/trinodb/trino/events",
                        "assignees_url": "https://api.github.com/repos/trinodb/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/trinodb/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/trinodb/trino/tags",
                        "blobs_url": "https://api.github.com/repos/trinodb/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/trinodb/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/trinodb/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/trinodb/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/trinodb/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/trinodb/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/trinodb/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/trinodb/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/trinodb/trino/subscription",
                        "commits_url": "https://api.github.com/repos/trinodb/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/trinodb/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/trinodb/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/trinodb/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/trinodb/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/trinodb/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/trinodb/trino/merges",
                        "archive_url": "https://api.github.com/repos/trinodb/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/trinodb/trino/downloads",
                        "issues_url": "https://api.github.com/repos/trinodb/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/trinodb/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/trinodb/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/trinodb/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/trinodb/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/trinodb/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/trinodb/trino/deployments",
                        "created_at": "2019-01-19T06:38:14Z",
                        "updated_at": "2022-12-07T23:23:39Z",
                        "pushed_at": "2022-12-08T01:09:12Z",
                        "git_url": "git://github.com/trinodb/trino.git",
                        "ssh_url": "git@github.com:trinodb/trino.git",
                        "clone_url": "https://github.com/trinodb/trino.git",
                        "svn_url": "https://github.com/trinodb/trino",
                        "homepage": "https://trino.io",
                        "size": 197719,
                        "stargazers_count": 6794,
                        "watchers_count": 6794,
                        "language": "Java",
                        "has_issues": true,
                        "has_projects": false,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": true,
                        "forks_count": 2084,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 2093,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "analytics",
                            "big-data",
                            "data-science",
                            "database",
                            "databases",
                            "datalake",
                            "distributed-database",
                            "distributed-databases",
                            "distributed-systems",
                            "hadoop",
                            "hive",
                            "java",
                            "jdbc",
                            "presto",
                            "prestodb",
                            "query-engine",
                            "sql",
                            "trino"
                        ],
                        "visibility": "public",
                        "forks": 2084,
                        "open_issues": 2093,
                        "watchers": 6794,
                        "default_branch": "master"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337"
                    },
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15337"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15337"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15337/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/trinodb/trino/statuses/f88ba0cee83615211a54a7351df5656d7688ae1c"
                    }
                },
                "author_association": "MEMBER",
                "auto_merge": null,
                "active_lock_reason": null
            }
        },
        "public": true,
        "created_at": "2022-12-08T01:59:56Z",
        "org": {
            "id": 34147222,
            "login": "trinodb",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/trinodb",
            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?"
        }
    },
    {
        "id": "25737159462",
        "type": "PullRequestReviewEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 166515022,
            "name": "trinodb/trino",
            "url": "https://api.github.com/repos/trinodb/trino"
        },
        "payload": {
            "action": "created",
            "review": {
                "id": 1209353494,
                "node_id": "PRR_kwDOCezRTs5IFUUW",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": null,
                "commit_id": "f88ba0cee83615211a54a7351df5656d7688ae1c",
                "submitted_at": "2022-12-08T01:59:56Z",
                "state": "commented",
                "html_url": "https://github.com/trinodb/trino/pull/15337#pullrequestreview-1209353494",
                "pull_request_url": "https://api.github.com/repos/trinodb/trino/pulls/15337",
                "author_association": "MEMBER",
                "_links": {
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15337#pullrequestreview-1209353494"
                    },
                    "pull_request": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337"
                    }
                }
            },
            "pull_request": {
                "url": "https://api.github.com/repos/trinodb/trino/pulls/15337",
                "id": 1152104129,
                "node_id": "PR_kwDOCezRTs5Eq7bB",
                "html_url": "https://github.com/trinodb/trino/pull/15337",
                "diff_url": "https://github.com/trinodb/trino/pull/15337.diff",
                "patch_url": "https://github.com/trinodb/trino/pull/15337.patch",
                "issue_url": "https://api.github.com/repos/trinodb/trino/issues/15337",
                "number": 15337,
                "state": "open",
                "locked": false,
                "title": "Fix test for invalid rate in FormatUtils.formatDataRate()",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "<!-- Thank you for submitting a pull request! Find more information in our development guide at https://github.com/trinodb/trino/blob/master/.github/DEVELOPMENT.md and contact us on #dev in Slack. -->\r\n<!-- Provide an overview of the PR for maintainers and reviewers. -->\r\n## Description\r\n\r\n`FormatUtils.formatDataRate()` contains the following code:\r\n\r\n```java\r\nlong rate = Math.round(dataSize.toBytes() / duration.getValue(SECONDS));\r\nif (Double.isNaN(rate) || Double.isInfinite(rate)) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nThe test can never evaluate as `true`, since both functions will return false for any `long`.\r\n\r\nThe correct test is:\r\n\r\n```java\r\nif (rate == Long.MAX_VALUE) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nIt's not necessary to test for `Long.MIN_VALUE`, since neither `dataSize` nor `duration` can be negative.\r\n\r\n<!-- Provide details that would help an engineer who is unfamiliar with this part of the code. -->\r\n## Unit Test\r\n\r\nI added a new class, `TestFormatUtils` to test both this fix and the rest of `FormatUtils`. The tests for this change are:\r\n\r\n```java\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), false), \"0B\");\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), true), \"0B/s\");\r\n```\r\n\r\n<!-- Mark the appropriate option with an (x). Propose a release note if you can. -->\r\n## Release notes\r\n\r\n(x) This is not user-visible or docs only and no release notes are required.\r\n( ) Release notes are required, please propose a release note for me.\r\n( ) Release notes are required, with the following suggested text:\r\n\r\n## Related Issue\r\n\r\nFixes #13093",
                "created_at": "2022-12-07T17:54:40Z",
                "updated_at": "2022-12-08T01:59:56Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": "dd4eb7e24625655b4a60619dabe31785fb81f5ab",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [
                    {
                        "id": 1202580151,
                        "node_id": "MDU6TGFiZWwxMjAyNTgwMTUx",
                        "url": "https://api.github.com/repos/trinodb/trino/labels/cla-signed",
                        "name": "cla-signed",
                        "color": "ededed",
                        "default": false,
                        "description": null
                    }
                ],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/trinodb/trino/pulls/15337/commits",
                "review_comments_url": "https://api.github.com/repos/trinodb/trino/pulls/15337/comments",
                "review_comment_url": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/trinodb/trino/issues/15337/comments",
                "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/f88ba0cee83615211a54a7351df5656d7688ae1c",
                "head": {
                    "label": "metadaddy:fix-formatdatarate-test",
                    "ref": "fix-formatdatarate-test",
                    "sha": "f88ba0cee83615211a54a7351df5656d7688ae1c",
                    "user": {
                        "login": "metadaddy",
                        "id": 723517,
                        "node_id": "MDQ6VXNlcjcyMzUxNw==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/metadaddy",
                        "html_url": "https://github.com/metadaddy",
                        "followers_url": "https://api.github.com/users/metadaddy/followers",
                        "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                        "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                        "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                        "repos_url": "https://api.github.com/users/metadaddy/repos",
                        "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 509274784,
                        "node_id": "R_kgDOHlrqoA",
                        "name": "trino",
                        "full_name": "metadaddy/trino",
                        "private": false,
                        "owner": {
                            "login": "metadaddy",
                            "id": 723517,
                            "node_id": "MDQ6VXNlcjcyMzUxNw==",
                            "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/metadaddy",
                            "html_url": "https://github.com/metadaddy",
                            "followers_url": "https://api.github.com/users/metadaddy/followers",
                            "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                            "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                            "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                            "repos_url": "https://api.github.com/users/metadaddy/repos",
                            "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/metadaddy/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": true,
                        "url": "https://api.github.com/repos/metadaddy/trino",
                        "forks_url": "https://api.github.com/repos/metadaddy/trino/forks",
                        "keys_url": "https://api.github.com/repos/metadaddy/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/metadaddy/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/metadaddy/trino/teams",
                        "hooks_url": "https://api.github.com/repos/metadaddy/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/metadaddy/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/metadaddy/trino/events",
                        "assignees_url": "https://api.github.com/repos/metadaddy/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/metadaddy/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/metadaddy/trino/tags",
                        "blobs_url": "https://api.github.com/repos/metadaddy/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/metadaddy/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/metadaddy/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/metadaddy/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/metadaddy/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/metadaddy/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/metadaddy/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/metadaddy/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/metadaddy/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/metadaddy/trino/subscription",
                        "commits_url": "https://api.github.com/repos/metadaddy/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/metadaddy/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/metadaddy/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/metadaddy/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/metadaddy/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/metadaddy/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/metadaddy/trino/merges",
                        "archive_url": "https://api.github.com/repos/metadaddy/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/metadaddy/trino/downloads",
                        "issues_url": "https://api.github.com/repos/metadaddy/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/metadaddy/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/metadaddy/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/metadaddy/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/metadaddy/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/metadaddy/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/metadaddy/trino/deployments",
                        "created_at": "2022-07-01T00:43:32Z",
                        "updated_at": "2022-07-06T01:44:20Z",
                        "pushed_at": "2022-12-07T17:50:11Z",
                        "git_url": "git://github.com/metadaddy/trino.git",
                        "ssh_url": "git@github.com:metadaddy/trino.git",
                        "clone_url": "https://github.com/metadaddy/trino.git",
                        "svn_url": "https://github.com/metadaddy/trino",
                        "homepage": "https://trino.io",
                        "size": 192363,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": "Java",
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "master"
                    }
                },
                "base": {
                    "label": "trinodb:master",
                    "ref": "master",
                    "sha": "4b266700437a87236ad0e0e5cd1db866f4f76dcb",
                    "user": {
                        "login": "trinodb",
                        "id": 34147222,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                        "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/trinodb",
                        "html_url": "https://github.com/trinodb",
                        "followers_url": "https://api.github.com/users/trinodb/followers",
                        "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                        "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                        "organizations_url": "https://api.github.com/users/trinodb/orgs",
                        "repos_url": "https://api.github.com/users/trinodb/repos",
                        "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/trinodb/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 166515022,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNjY1MTUwMjI=",
                        "name": "trino",
                        "full_name": "trinodb/trino",
                        "private": false,
                        "owner": {
                            "login": "trinodb",
                            "id": 34147222,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/trinodb",
                            "html_url": "https://github.com/trinodb",
                            "followers_url": "https://api.github.com/users/trinodb/followers",
                            "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                            "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                            "organizations_url": "https://api.github.com/users/trinodb/orgs",
                            "repos_url": "https://api.github.com/users/trinodb/repos",
                            "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/trinodb/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/trinodb/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": false,
                        "url": "https://api.github.com/repos/trinodb/trino",
                        "forks_url": "https://api.github.com/repos/trinodb/trino/forks",
                        "keys_url": "https://api.github.com/repos/trinodb/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/trinodb/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/trinodb/trino/teams",
                        "hooks_url": "https://api.github.com/repos/trinodb/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/trinodb/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/trinodb/trino/events",
                        "assignees_url": "https://api.github.com/repos/trinodb/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/trinodb/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/trinodb/trino/tags",
                        "blobs_url": "https://api.github.com/repos/trinodb/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/trinodb/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/trinodb/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/trinodb/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/trinodb/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/trinodb/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/trinodb/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/trinodb/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/trinodb/trino/subscription",
                        "commits_url": "https://api.github.com/repos/trinodb/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/trinodb/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/trinodb/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/trinodb/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/trinodb/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/trinodb/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/trinodb/trino/merges",
                        "archive_url": "https://api.github.com/repos/trinodb/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/trinodb/trino/downloads",
                        "issues_url": "https://api.github.com/repos/trinodb/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/trinodb/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/trinodb/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/trinodb/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/trinodb/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/trinodb/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/trinodb/trino/deployments",
                        "created_at": "2019-01-19T06:38:14Z",
                        "updated_at": "2022-12-07T23:23:39Z",
                        "pushed_at": "2022-12-08T01:09:12Z",
                        "git_url": "git://github.com/trinodb/trino.git",
                        "ssh_url": "git@github.com:trinodb/trino.git",
                        "clone_url": "https://github.com/trinodb/trino.git",
                        "svn_url": "https://github.com/trinodb/trino",
                        "homepage": "https://trino.io",
                        "size": 197719,
                        "stargazers_count": 6794,
                        "watchers_count": 6794,
                        "language": "Java",
                        "has_issues": true,
                        "has_projects": false,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": true,
                        "forks_count": 2084,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 2093,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "analytics",
                            "big-data",
                            "data-science",
                            "database",
                            "databases",
                            "datalake",
                            "distributed-database",
                            "distributed-databases",
                            "distributed-systems",
                            "hadoop",
                            "hive",
                            "java",
                            "jdbc",
                            "presto",
                            "prestodb",
                            "query-engine",
                            "sql",
                            "trino"
                        ],
                        "visibility": "public",
                        "forks": 2084,
                        "open_issues": 2093,
                        "watchers": 6794,
                        "default_branch": "master"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337"
                    },
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15337"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15337"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15337/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/trinodb/trino/statuses/f88ba0cee83615211a54a7351df5656d7688ae1c"
                    }
                },
                "author_association": "MEMBER",
                "auto_merge": null,
                "active_lock_reason": null
            }
        },
        "public": true,
        "created_at": "2022-12-08T01:59:57Z",
        "org": {
            "id": 34147222,
            "login": "trinodb",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/trinodb",
            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?"
        }
    },
    {
        "id": "25737145244",
        "type": "PullRequestReviewCommentEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 166515022,
            "name": "trinodb/trino",
            "url": "https://api.github.com/repos/trinodb/trino"
        },
        "payload": {
            "action": "created",
            "comment": {
                "url": "https://api.github.com/repos/trinodb/trino/pulls/comments/1042849228",
                "pull_request_review_id": 1209352752,
                "id": 1042849228,
                "node_id": "PRRC_kwDOCezRTs4-KJ3M",
                "diff_hunk": "@@ -0,0 +1,353 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.trino.cli;\n+\n+import io.airlift.units.DataSize;\n+import io.airlift.units.Duration;\n+import org.testng.annotations.Test;\n+\n+import static org.testng.Assert.assertEquals;\n+\n+public class TestFormatUtils\n+{\n+    @Test\n+    public void testFormatCount()\n+    {\n+        assertEquals(FormatUtils.formatCount(1L), \"1\");\n+        assertEquals(FormatUtils.formatCount(12L), \"12\");\n+        assertEquals(FormatUtils.formatCount(123L), \"123\");\n+        assertEquals(FormatUtils.formatCount(1234L), \"1.23K\");\n+        assertEquals(FormatUtils.formatCount(12345L), \"12.3K\");\n+        assertEquals(FormatUtils.formatCount(123456L), \"123K\");\n+        assertEquals(FormatUtils.formatCount(1234567L), \"1.23M\");\n+        assertEquals(FormatUtils.formatCount(12345678L), \"12.3M\");\n+        assertEquals(FormatUtils.formatCount(123456789L), \"123M\");\n+        assertEquals(FormatUtils.formatCount(1234567890L), \"1.23B\");\n+        assertEquals(FormatUtils.formatCount(12345678901L), \"12.3B\");\n+        assertEquals(FormatUtils.formatCount(123456789012L), \"123B\");\n+        assertEquals(FormatUtils.formatCount(1234567890123L), \"1.23T\");\n+        assertEquals(FormatUtils.formatCount(12345678901234L), \"12.3T\");\n+        assertEquals(FormatUtils.formatCount(123456789012345L), \"123T\");\n+        assertEquals(FormatUtils.formatCount(1234567890123456L), \"1.23Q\");\n+        assertEquals(FormatUtils.formatCount(12345678901234567L), \"12.3Q\");\n+        assertEquals(FormatUtils.formatCount(123456789012345678L), \"123Q\");\n+        assertEquals(FormatUtils.formatCount(1234567890123456789L), \"1235Q\");\n+    }\n+\n+    @Test\n+    public void formatCountRate()\n+    {\n+        assertEquals(FormatUtils.formatCountRate(0.0000000001D, Duration.valueOf(\"1ns\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(0.0000000001D, Duration.valueOf(\"1ns\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(0.000000001D, Duration.valueOf(\"1ns\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(0.000000001D, Duration.valueOf(\"1ns\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(0.0000000015D, Duration.valueOf(\"1ns\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(0.0000000015D, Duration.valueOf(\"1ns\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(1D, Duration.valueOf(\"1ns\"), false), \"1000M\");\n+        assertEquals(FormatUtils.formatCountRate(1D, Duration.valueOf(\"1ns\"), true), \"1000M/s\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"1ns\"), false), \"10B\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"1ns\"), true), \"10B/s\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"10ns\"), false), \"1000M\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"10ns\"), true), \"1000M/s\");\n+\n+        assertEquals(FormatUtils.formatCountRate(0.0000001D, Duration.valueOf(\"1us\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(0.0000001D, Duration.valueOf(\"1us\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(0.000001D, Duration.valueOf(\"1us\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(0.000001D, Duration.valueOf(\"1us\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(0.0000015D, Duration.valueOf(\"1us\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(0.0000015D, Duration.valueOf(\"1us\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(1D, Duration.valueOf(\"1us\"), false), \"1000K\");\n+        assertEquals(FormatUtils.formatCountRate(1D, Duration.valueOf(\"1us\"), true), \"1000K/s\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"1us\"), false), \"10M\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"1us\"), true), \"10M/s\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"10us\"), false), \"1000K\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"10us\"), true), \"1000K/s\");\n+\n+        assertEquals(FormatUtils.formatCountRate(0.0001D, Duration.valueOf(\"1ms\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(0.0001D, Duration.valueOf(\"1ms\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(0.001D, Duration.valueOf(\"1ms\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(0.001D, Duration.valueOf(\"1ms\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(0.0015D, Duration.valueOf(\"1ms\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(0.0015D, Duration.valueOf(\"1ms\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(1D, Duration.valueOf(\"1ms\"), false), \"1000\");\n+        assertEquals(FormatUtils.formatCountRate(1D, Duration.valueOf(\"1ms\"), true), \"1000/s\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"1ms\"), false), \"10K\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"1ms\"), true), \"10K/s\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"10ms\"), false), \"1000\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"10ms\"), true), \"1000/s\");\n+\n+        assertEquals(FormatUtils.formatCountRate(0.1D, Duration.valueOf(\"1s\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(0.1D, Duration.valueOf(\"1s\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"1s\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"1s\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"10s\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"10s\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(1.5D, Duration.valueOf(\"1s\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(1.5D, Duration.valueOf(\"1s\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"1s\"), false), \"10\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"1s\"), true), \"10/s\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"10s\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(10.0D, Duration.valueOf(\"10s\"), true), \"1/s\");\n+\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"1m\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"1m\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(60.0D, Duration.valueOf(\"1m\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(60.0D, Duration.valueOf(\"1m\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(600.0D, Duration.valueOf(\"1m\"), false), \"10\");\n+        assertEquals(FormatUtils.formatCountRate(600.0D, Duration.valueOf(\"1m\"), true), \"10/s\");\n+        assertEquals(FormatUtils.formatCountRate(100.0D, Duration.valueOf(\"10m\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(100.0D, Duration.valueOf(\"10m\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(600.0D, Duration.valueOf(\"10m\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(600.0D, Duration.valueOf(\"10m\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(6000.0D, Duration.valueOf(\"10m\"), false), \"10\");\n+        assertEquals(FormatUtils.formatCountRate(6000.0D, Duration.valueOf(\"10m\"), true), \"10/s\");\n+\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"1h\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"1h\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(3600.0D, Duration.valueOf(\"1h\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(3600.0D, Duration.valueOf(\"1h\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(36000.0D, Duration.valueOf(\"1h\"), false), \"10\");\n+        assertEquals(FormatUtils.formatCountRate(36000.0D, Duration.valueOf(\"1h\"), true), \"10/s\");\n+        assertEquals(FormatUtils.formatCountRate(100.0D, Duration.valueOf(\"10h\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(100.0D, Duration.valueOf(\"10h\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(36000.0D, Duration.valueOf(\"10h\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(36000.0D, Duration.valueOf(\"10h\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(360000.0D, Duration.valueOf(\"10h\"), false), \"10\");\n+        assertEquals(FormatUtils.formatCountRate(360000.0D, Duration.valueOf(\"10h\"), true), \"10/s\");\n+\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"1d\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"1d\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(86400.0D, Duration.valueOf(\"1d\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(86400.0D, Duration.valueOf(\"1d\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(864000.0D, Duration.valueOf(\"1d\"), false), \"10\");\n+        assertEquals(FormatUtils.formatCountRate(864000.0D, Duration.valueOf(\"1d\"), true), \"10/s\");\n+        assertEquals(FormatUtils.formatCountRate(86400.0D, Duration.valueOf(\"10d\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(86400.0D, Duration.valueOf(\"10d\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(864000.0D, Duration.valueOf(\"10d\"), false), \"1\");\n+        assertEquals(FormatUtils.formatCountRate(864000.0D, Duration.valueOf(\"10d\"), true), \"1/s\");\n+        assertEquals(FormatUtils.formatCountRate(8640000.0D, Duration.valueOf(\"10d\"), false), \"10\");\n+        assertEquals(FormatUtils.formatCountRate(8640000.0D, Duration.valueOf(\"10d\"), true), \"10/s\");\n+\n+        assertEquals(FormatUtils.formatCountRate(Double.NaN, Duration.valueOf(\"1s\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(Double.NaN, Duration.valueOf(\"1s\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(Double.POSITIVE_INFINITY, Duration.valueOf(\"1s\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(Double.POSITIVE_INFINITY, Duration.valueOf(\"1s\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(Double.NEGATIVE_INFINITY, Duration.valueOf(\"1s\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(Double.NEGATIVE_INFINITY, Duration.valueOf(\"1s\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"0s\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(1.0D, Duration.valueOf(\"0s\"), true), \"0/s\");\n+        assertEquals(FormatUtils.formatCountRate(-1.0D, Duration.valueOf(\"0s\"), false), \"0\");\n+        assertEquals(FormatUtils.formatCountRate(-1.0D, Duration.valueOf(\"0s\"), true), \"0/s\");\n+    }\n+\n+    @Test\n+    public void testFormatDataSize()\n+    {\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1L), false), \"1B\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1L), true), \"1B\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12L), false), \"12B\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12L), true), \"12B\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123L), false), \"123B\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123L), true), \"123B\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234L), false), \"1.21K\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234L), true), \"1.21KB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12345L), false), \"12.1K\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12345L), true), \"12.1KB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123456L), false), \"121K\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123456L), true), \"121KB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234567L), false), \"1.18M\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234567L), true), \"1.18MB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12345678L), false), \"11.8M\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12345678L), true), \"11.8MB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123456789L), false), \"118M\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123456789L), true), \"118MB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234567890L), false), \"1.15G\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234567890L), true), \"1.15GB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12345678901L), false), \"11.5G\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12345678901L), true), \"11.5GB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123456789012L), false), \"115G\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123456789012L), true), \"115GB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234567890123L), false), \"1.12T\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234567890123L), true), \"1.12TB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12345678901234L), false), \"11.2T\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12345678901234L), true), \"11.2TB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123456789012345L), false), \"112T\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123456789012345L), true), \"112TB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234567890123456L), false), \"1.1P\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234567890123456L), true), \"1.1PB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12345678901234567L), false), \"11P\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(12345678901234567L), true), \"11PB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123456789012345678L), false), \"110P\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(123456789012345678L), true), \"110PB\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234567890123456789L), false), \"1097P\");\n+        assertEquals(FormatUtils.formatDataSize(DataSize.ofBytes(1234567890123456789L), true), \"1097PB\");\n+    }\n+\n+    @Test\n+    public void testFormatDataRate()\n+    {\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(0), Duration.valueOf(\"1ns\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(0), Duration.valueOf(\"1ns\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1ns\"), false), \"954M\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1ns\"), true), \"954MB/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"1ns\"), false), \"9.31G\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"1ns\"), true), \"9.31GB/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"10ns\"), false), \"954M\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"10ns\"), true), \"954MB/s\");\n+\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(0), Duration.valueOf(\"1us\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(0), Duration.valueOf(\"1us\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1us\"), false), \"977K\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1us\"), true), \"977KB/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"1us\"), false), \"9.54M\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"1us\"), true), \"9.54MB/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"10us\"), false), \"977K\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"10us\"), true), \"977KB/s\");\n+\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(0), Duration.valueOf(\"1ms\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(0), Duration.valueOf(\"1ms\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1ms\"), false), \"1000B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1ms\"), true), \"1000B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"1ms\"), false), \"9.77K\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"1ms\"), true), \"9.77KB/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"10ms\"), false), \"1000B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"10ms\"), true), \"1000B/s\");\n+\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(0), Duration.valueOf(\"1s\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(0), Duration.valueOf(\"1s\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1s\"), false), \"1B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1s\"), true), \"1B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"10s\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"10s\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"1s\"), false), \"10B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"1s\"), true), \"10B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"10s\"), false), \"1B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(10), Duration.valueOf(\"10s\"), true), \"1B/s\");\n+\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1m\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1m\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(60), Duration.valueOf(\"1m\"), false), \"1B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(60), Duration.valueOf(\"1m\"), true), \"1B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(600), Duration.valueOf(\"1m\"), false), \"10B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(600), Duration.valueOf(\"1m\"), true), \"10B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(100), Duration.valueOf(\"10m\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(100), Duration.valueOf(\"10m\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(600), Duration.valueOf(\"10m\"), false), \"1B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(600), Duration.valueOf(\"10m\"), true), \"1B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(6000), Duration.valueOf(\"10m\"), false), \"10B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(6000), Duration.valueOf(\"10m\"), true), \"10B/s\");\n+\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1h\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1h\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(3600), Duration.valueOf(\"1h\"), false), \"1B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(3600), Duration.valueOf(\"1h\"), true), \"1B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(36000), Duration.valueOf(\"1h\"), false), \"10B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(36000), Duration.valueOf(\"1h\"), true), \"10B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(100), Duration.valueOf(\"10h\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(100), Duration.valueOf(\"10h\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(36000), Duration.valueOf(\"10h\"), false), \"1B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(36000), Duration.valueOf(\"10h\"), true), \"1B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(360000), Duration.valueOf(\"10h\"), false), \"10B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(360000), Duration.valueOf(\"10h\"), true), \"10B/s\");\n+\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1d\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"1d\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(86400), Duration.valueOf(\"1d\"), false), \"1B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(86400), Duration.valueOf(\"1d\"), true), \"1B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(864000), Duration.valueOf(\"1d\"), false), \"10B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(864000), Duration.valueOf(\"1d\"), true), \"10B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(86400), Duration.valueOf(\"10d\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(86400), Duration.valueOf(\"10d\"), true), \"0B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(864000), Duration.valueOf(\"10d\"), false), \"1B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(864000), Duration.valueOf(\"10d\"), true), \"1B/s\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(8640000), Duration.valueOf(\"10d\"), false), \"10B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(8640000), Duration.valueOf(\"10d\"), true), \"10B/s\");\n+\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), false), \"0B\");\n+        assertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), true), \"0B/s\");\n+    }\n+\n+    @Test\n+    public void testPluralize()",
                "path": "client/trino-cli/src/test/java/io/trino/cli/TestFormatUtils.java",
                "position": 282,
                "original_position": 282,
                "commit_id": "f88ba0cee83615211a54a7351df5656d7688ae1c",
                "original_commit_id": "f88ba0cee83615211a54a7351df5656d7688ae1c",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "@findepi Two PRs, or one PR containing two commits?",
                "created_at": "2022-12-08T01:59:04Z",
                "updated_at": "2022-12-08T01:59:05Z",
                "html_url": "https://github.com/trinodb/trino/pull/15337#discussion_r1042849228",
                "pull_request_url": "https://api.github.com/repos/trinodb/trino/pulls/15337",
                "author_association": "MEMBER",
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/comments/1042849228"
                    },
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15337#discussion_r1042849228"
                    },
                    "pull_request": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337"
                    }
                },
                "reactions": {
                    "url": "https://api.github.com/repos/trinodb/trino/pulls/comments/1042849228/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "start_line": null,
                "original_start_line": null,
                "start_side": null,
                "line": 282,
                "original_line": 282,
                "side": "RIGHT",
                "in_reply_to_id": 1042707167
            },
            "pull_request": {
                "url": "https://api.github.com/repos/trinodb/trino/pulls/15337",
                "id": 1152104129,
                "node_id": "PR_kwDOCezRTs5Eq7bB",
                "html_url": "https://github.com/trinodb/trino/pull/15337",
                "diff_url": "https://github.com/trinodb/trino/pull/15337.diff",
                "patch_url": "https://github.com/trinodb/trino/pull/15337.patch",
                "issue_url": "https://api.github.com/repos/trinodb/trino/issues/15337",
                "number": 15337,
                "state": "open",
                "locked": false,
                "title": "Fix test for invalid rate in FormatUtils.formatDataRate()",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "<!-- Thank you for submitting a pull request! Find more information in our development guide at https://github.com/trinodb/trino/blob/master/.github/DEVELOPMENT.md and contact us on #dev in Slack. -->\r\n<!-- Provide an overview of the PR for maintainers and reviewers. -->\r\n## Description\r\n\r\n`FormatUtils.formatDataRate()` contains the following code:\r\n\r\n```java\r\nlong rate = Math.round(dataSize.toBytes() / duration.getValue(SECONDS));\r\nif (Double.isNaN(rate) || Double.isInfinite(rate)) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nThe test can never evaluate as `true`, since both functions will return false for any `long`.\r\n\r\nThe correct test is:\r\n\r\n```java\r\nif (rate == Long.MAX_VALUE) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nIt's not necessary to test for `Long.MIN_VALUE`, since neither `dataSize` nor `duration` can be negative.\r\n\r\n<!-- Provide details that would help an engineer who is unfamiliar with this part of the code. -->\r\n## Unit Test\r\n\r\nI added a new class, `TestFormatUtils` to test both this fix and the rest of `FormatUtils`. The tests for this change are:\r\n\r\n```java\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), false), \"0B\");\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), true), \"0B/s\");\r\n```\r\n\r\n<!-- Mark the appropriate option with an (x). Propose a release note if you can. -->\r\n## Release notes\r\n\r\n(x) This is not user-visible or docs only and no release notes are required.\r\n( ) Release notes are required, please propose a release note for me.\r\n( ) Release notes are required, with the following suggested text:\r\n\r\n## Related Issue\r\n\r\nFixes #13093",
                "created_at": "2022-12-07T17:54:40Z",
                "updated_at": "2022-12-08T01:59:05Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": "dd4eb7e24625655b4a60619dabe31785fb81f5ab",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [
                    {
                        "id": 1202580151,
                        "node_id": "MDU6TGFiZWwxMjAyNTgwMTUx",
                        "url": "https://api.github.com/repos/trinodb/trino/labels/cla-signed",
                        "name": "cla-signed",
                        "color": "ededed",
                        "default": false,
                        "description": null
                    }
                ],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/trinodb/trino/pulls/15337/commits",
                "review_comments_url": "https://api.github.com/repos/trinodb/trino/pulls/15337/comments",
                "review_comment_url": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/trinodb/trino/issues/15337/comments",
                "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/f88ba0cee83615211a54a7351df5656d7688ae1c",
                "head": {
                    "label": "metadaddy:fix-formatdatarate-test",
                    "ref": "fix-formatdatarate-test",
                    "sha": "f88ba0cee83615211a54a7351df5656d7688ae1c",
                    "user": {
                        "login": "metadaddy",
                        "id": 723517,
                        "node_id": "MDQ6VXNlcjcyMzUxNw==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/metadaddy",
                        "html_url": "https://github.com/metadaddy",
                        "followers_url": "https://api.github.com/users/metadaddy/followers",
                        "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                        "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                        "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                        "repos_url": "https://api.github.com/users/metadaddy/repos",
                        "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 509274784,
                        "node_id": "R_kgDOHlrqoA",
                        "name": "trino",
                        "full_name": "metadaddy/trino",
                        "private": false,
                        "owner": {
                            "login": "metadaddy",
                            "id": 723517,
                            "node_id": "MDQ6VXNlcjcyMzUxNw==",
                            "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/metadaddy",
                            "html_url": "https://github.com/metadaddy",
                            "followers_url": "https://api.github.com/users/metadaddy/followers",
                            "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                            "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                            "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                            "repos_url": "https://api.github.com/users/metadaddy/repos",
                            "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/metadaddy/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": true,
                        "url": "https://api.github.com/repos/metadaddy/trino",
                        "forks_url": "https://api.github.com/repos/metadaddy/trino/forks",
                        "keys_url": "https://api.github.com/repos/metadaddy/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/metadaddy/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/metadaddy/trino/teams",
                        "hooks_url": "https://api.github.com/repos/metadaddy/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/metadaddy/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/metadaddy/trino/events",
                        "assignees_url": "https://api.github.com/repos/metadaddy/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/metadaddy/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/metadaddy/trino/tags",
                        "blobs_url": "https://api.github.com/repos/metadaddy/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/metadaddy/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/metadaddy/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/metadaddy/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/metadaddy/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/metadaddy/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/metadaddy/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/metadaddy/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/metadaddy/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/metadaddy/trino/subscription",
                        "commits_url": "https://api.github.com/repos/metadaddy/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/metadaddy/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/metadaddy/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/metadaddy/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/metadaddy/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/metadaddy/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/metadaddy/trino/merges",
                        "archive_url": "https://api.github.com/repos/metadaddy/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/metadaddy/trino/downloads",
                        "issues_url": "https://api.github.com/repos/metadaddy/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/metadaddy/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/metadaddy/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/metadaddy/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/metadaddy/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/metadaddy/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/metadaddy/trino/deployments",
                        "created_at": "2022-07-01T00:43:32Z",
                        "updated_at": "2022-07-06T01:44:20Z",
                        "pushed_at": "2022-12-07T17:50:11Z",
                        "git_url": "git://github.com/metadaddy/trino.git",
                        "ssh_url": "git@github.com:metadaddy/trino.git",
                        "clone_url": "https://github.com/metadaddy/trino.git",
                        "svn_url": "https://github.com/metadaddy/trino",
                        "homepage": "https://trino.io",
                        "size": 192363,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": "Java",
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "master"
                    }
                },
                "base": {
                    "label": "trinodb:master",
                    "ref": "master",
                    "sha": "4b266700437a87236ad0e0e5cd1db866f4f76dcb",
                    "user": {
                        "login": "trinodb",
                        "id": 34147222,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                        "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/trinodb",
                        "html_url": "https://github.com/trinodb",
                        "followers_url": "https://api.github.com/users/trinodb/followers",
                        "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                        "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                        "organizations_url": "https://api.github.com/users/trinodb/orgs",
                        "repos_url": "https://api.github.com/users/trinodb/repos",
                        "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/trinodb/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 166515022,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNjY1MTUwMjI=",
                        "name": "trino",
                        "full_name": "trinodb/trino",
                        "private": false,
                        "owner": {
                            "login": "trinodb",
                            "id": 34147222,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/trinodb",
                            "html_url": "https://github.com/trinodb",
                            "followers_url": "https://api.github.com/users/trinodb/followers",
                            "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                            "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                            "organizations_url": "https://api.github.com/users/trinodb/orgs",
                            "repos_url": "https://api.github.com/users/trinodb/repos",
                            "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/trinodb/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/trinodb/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": false,
                        "url": "https://api.github.com/repos/trinodb/trino",
                        "forks_url": "https://api.github.com/repos/trinodb/trino/forks",
                        "keys_url": "https://api.github.com/repos/trinodb/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/trinodb/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/trinodb/trino/teams",
                        "hooks_url": "https://api.github.com/repos/trinodb/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/trinodb/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/trinodb/trino/events",
                        "assignees_url": "https://api.github.com/repos/trinodb/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/trinodb/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/trinodb/trino/tags",
                        "blobs_url": "https://api.github.com/repos/trinodb/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/trinodb/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/trinodb/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/trinodb/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/trinodb/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/trinodb/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/trinodb/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/trinodb/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/trinodb/trino/subscription",
                        "commits_url": "https://api.github.com/repos/trinodb/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/trinodb/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/trinodb/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/trinodb/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/trinodb/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/trinodb/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/trinodb/trino/merges",
                        "archive_url": "https://api.github.com/repos/trinodb/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/trinodb/trino/downloads",
                        "issues_url": "https://api.github.com/repos/trinodb/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/trinodb/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/trinodb/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/trinodb/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/trinodb/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/trinodb/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/trinodb/trino/deployments",
                        "created_at": "2019-01-19T06:38:14Z",
                        "updated_at": "2022-12-07T23:23:39Z",
                        "pushed_at": "2022-12-08T01:09:12Z",
                        "git_url": "git://github.com/trinodb/trino.git",
                        "ssh_url": "git@github.com:trinodb/trino.git",
                        "clone_url": "https://github.com/trinodb/trino.git",
                        "svn_url": "https://github.com/trinodb/trino",
                        "homepage": "https://trino.io",
                        "size": 197719,
                        "stargazers_count": 6794,
                        "watchers_count": 6794,
                        "language": "Java",
                        "has_issues": true,
                        "has_projects": false,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": true,
                        "forks_count": 2084,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 2093,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "analytics",
                            "big-data",
                            "data-science",
                            "database",
                            "databases",
                            "datalake",
                            "distributed-database",
                            "distributed-databases",
                            "distributed-systems",
                            "hadoop",
                            "hive",
                            "java",
                            "jdbc",
                            "presto",
                            "prestodb",
                            "query-engine",
                            "sql",
                            "trino"
                        ],
                        "visibility": "public",
                        "forks": 2084,
                        "open_issues": 2093,
                        "watchers": 6794,
                        "default_branch": "master"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337"
                    },
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15337"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15337"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15337/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/trinodb/trino/statuses/f88ba0cee83615211a54a7351df5656d7688ae1c"
                    }
                },
                "author_association": "MEMBER",
                "auto_merge": null,
                "active_lock_reason": null
            }
        },
        "public": true,
        "created_at": "2022-12-08T01:59:04Z",
        "org": {
            "id": 34147222,
            "login": "trinodb",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/trinodb",
            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?"
        }
    },
    {
        "id": "25737145179",
        "type": "PullRequestReviewEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 166515022,
            "name": "trinodb/trino",
            "url": "https://api.github.com/repos/trinodb/trino"
        },
        "payload": {
            "action": "created",
            "review": {
                "id": 1209352752,
                "node_id": "PRR_kwDOCezRTs5IFUIw",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": null,
                "commit_id": "f88ba0cee83615211a54a7351df5656d7688ae1c",
                "submitted_at": "2022-12-08T01:59:05Z",
                "state": "commented",
                "html_url": "https://github.com/trinodb/trino/pull/15337#pullrequestreview-1209352752",
                "pull_request_url": "https://api.github.com/repos/trinodb/trino/pulls/15337",
                "author_association": "MEMBER",
                "_links": {
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15337#pullrequestreview-1209352752"
                    },
                    "pull_request": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337"
                    }
                }
            },
            "pull_request": {
                "url": "https://api.github.com/repos/trinodb/trino/pulls/15337",
                "id": 1152104129,
                "node_id": "PR_kwDOCezRTs5Eq7bB",
                "html_url": "https://github.com/trinodb/trino/pull/15337",
                "diff_url": "https://github.com/trinodb/trino/pull/15337.diff",
                "patch_url": "https://github.com/trinodb/trino/pull/15337.patch",
                "issue_url": "https://api.github.com/repos/trinodb/trino/issues/15337",
                "number": 15337,
                "state": "open",
                "locked": false,
                "title": "Fix test for invalid rate in FormatUtils.formatDataRate()",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "<!-- Thank you for submitting a pull request! Find more information in our development guide at https://github.com/trinodb/trino/blob/master/.github/DEVELOPMENT.md and contact us on #dev in Slack. -->\r\n<!-- Provide an overview of the PR for maintainers and reviewers. -->\r\n## Description\r\n\r\n`FormatUtils.formatDataRate()` contains the following code:\r\n\r\n```java\r\nlong rate = Math.round(dataSize.toBytes() / duration.getValue(SECONDS));\r\nif (Double.isNaN(rate) || Double.isInfinite(rate)) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nThe test can never evaluate as `true`, since both functions will return false for any `long`.\r\n\r\nThe correct test is:\r\n\r\n```java\r\nif (rate == Long.MAX_VALUE) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nIt's not necessary to test for `Long.MIN_VALUE`, since neither `dataSize` nor `duration` can be negative.\r\n\r\n<!-- Provide details that would help an engineer who is unfamiliar with this part of the code. -->\r\n## Unit Test\r\n\r\nI added a new class, `TestFormatUtils` to test both this fix and the rest of `FormatUtils`. The tests for this change are:\r\n\r\n```java\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), false), \"0B\");\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), true), \"0B/s\");\r\n```\r\n\r\n<!-- Mark the appropriate option with an (x). Propose a release note if you can. -->\r\n## Release notes\r\n\r\n(x) This is not user-visible or docs only and no release notes are required.\r\n( ) Release notes are required, please propose a release note for me.\r\n( ) Release notes are required, with the following suggested text:\r\n\r\n## Related Issue\r\n\r\nFixes #13093",
                "created_at": "2022-12-07T17:54:40Z",
                "updated_at": "2022-12-08T01:59:05Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": "dd4eb7e24625655b4a60619dabe31785fb81f5ab",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [
                    {
                        "id": 1202580151,
                        "node_id": "MDU6TGFiZWwxMjAyNTgwMTUx",
                        "url": "https://api.github.com/repos/trinodb/trino/labels/cla-signed",
                        "name": "cla-signed",
                        "color": "ededed",
                        "default": false,
                        "description": null
                    }
                ],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/trinodb/trino/pulls/15337/commits",
                "review_comments_url": "https://api.github.com/repos/trinodb/trino/pulls/15337/comments",
                "review_comment_url": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/trinodb/trino/issues/15337/comments",
                "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/f88ba0cee83615211a54a7351df5656d7688ae1c",
                "head": {
                    "label": "metadaddy:fix-formatdatarate-test",
                    "ref": "fix-formatdatarate-test",
                    "sha": "f88ba0cee83615211a54a7351df5656d7688ae1c",
                    "user": {
                        "login": "metadaddy",
                        "id": 723517,
                        "node_id": "MDQ6VXNlcjcyMzUxNw==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/metadaddy",
                        "html_url": "https://github.com/metadaddy",
                        "followers_url": "https://api.github.com/users/metadaddy/followers",
                        "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                        "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                        "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                        "repos_url": "https://api.github.com/users/metadaddy/repos",
                        "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 509274784,
                        "node_id": "R_kgDOHlrqoA",
                        "name": "trino",
                        "full_name": "metadaddy/trino",
                        "private": false,
                        "owner": {
                            "login": "metadaddy",
                            "id": 723517,
                            "node_id": "MDQ6VXNlcjcyMzUxNw==",
                            "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/metadaddy",
                            "html_url": "https://github.com/metadaddy",
                            "followers_url": "https://api.github.com/users/metadaddy/followers",
                            "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                            "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                            "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                            "repos_url": "https://api.github.com/users/metadaddy/repos",
                            "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/metadaddy/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": true,
                        "url": "https://api.github.com/repos/metadaddy/trino",
                        "forks_url": "https://api.github.com/repos/metadaddy/trino/forks",
                        "keys_url": "https://api.github.com/repos/metadaddy/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/metadaddy/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/metadaddy/trino/teams",
                        "hooks_url": "https://api.github.com/repos/metadaddy/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/metadaddy/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/metadaddy/trino/events",
                        "assignees_url": "https://api.github.com/repos/metadaddy/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/metadaddy/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/metadaddy/trino/tags",
                        "blobs_url": "https://api.github.com/repos/metadaddy/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/metadaddy/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/metadaddy/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/metadaddy/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/metadaddy/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/metadaddy/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/metadaddy/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/metadaddy/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/metadaddy/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/metadaddy/trino/subscription",
                        "commits_url": "https://api.github.com/repos/metadaddy/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/metadaddy/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/metadaddy/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/metadaddy/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/metadaddy/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/metadaddy/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/metadaddy/trino/merges",
                        "archive_url": "https://api.github.com/repos/metadaddy/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/metadaddy/trino/downloads",
                        "issues_url": "https://api.github.com/repos/metadaddy/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/metadaddy/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/metadaddy/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/metadaddy/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/metadaddy/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/metadaddy/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/metadaddy/trino/deployments",
                        "created_at": "2022-07-01T00:43:32Z",
                        "updated_at": "2022-07-06T01:44:20Z",
                        "pushed_at": "2022-12-07T17:50:11Z",
                        "git_url": "git://github.com/metadaddy/trino.git",
                        "ssh_url": "git@github.com:metadaddy/trino.git",
                        "clone_url": "https://github.com/metadaddy/trino.git",
                        "svn_url": "https://github.com/metadaddy/trino",
                        "homepage": "https://trino.io",
                        "size": 192363,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": "Java",
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "master"
                    }
                },
                "base": {
                    "label": "trinodb:master",
                    "ref": "master",
                    "sha": "4b266700437a87236ad0e0e5cd1db866f4f76dcb",
                    "user": {
                        "login": "trinodb",
                        "id": 34147222,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                        "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/trinodb",
                        "html_url": "https://github.com/trinodb",
                        "followers_url": "https://api.github.com/users/trinodb/followers",
                        "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                        "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                        "organizations_url": "https://api.github.com/users/trinodb/orgs",
                        "repos_url": "https://api.github.com/users/trinodb/repos",
                        "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/trinodb/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 166515022,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNjY1MTUwMjI=",
                        "name": "trino",
                        "full_name": "trinodb/trino",
                        "private": false,
                        "owner": {
                            "login": "trinodb",
                            "id": 34147222,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/trinodb",
                            "html_url": "https://github.com/trinodb",
                            "followers_url": "https://api.github.com/users/trinodb/followers",
                            "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                            "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                            "organizations_url": "https://api.github.com/users/trinodb/orgs",
                            "repos_url": "https://api.github.com/users/trinodb/repos",
                            "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/trinodb/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/trinodb/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": false,
                        "url": "https://api.github.com/repos/trinodb/trino",
                        "forks_url": "https://api.github.com/repos/trinodb/trino/forks",
                        "keys_url": "https://api.github.com/repos/trinodb/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/trinodb/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/trinodb/trino/teams",
                        "hooks_url": "https://api.github.com/repos/trinodb/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/trinodb/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/trinodb/trino/events",
                        "assignees_url": "https://api.github.com/repos/trinodb/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/trinodb/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/trinodb/trino/tags",
                        "blobs_url": "https://api.github.com/repos/trinodb/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/trinodb/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/trinodb/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/trinodb/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/trinodb/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/trinodb/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/trinodb/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/trinodb/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/trinodb/trino/subscription",
                        "commits_url": "https://api.github.com/repos/trinodb/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/trinodb/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/trinodb/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/trinodb/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/trinodb/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/trinodb/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/trinodb/trino/merges",
                        "archive_url": "https://api.github.com/repos/trinodb/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/trinodb/trino/downloads",
                        "issues_url": "https://api.github.com/repos/trinodb/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/trinodb/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/trinodb/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/trinodb/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/trinodb/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/trinodb/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/trinodb/trino/deployments",
                        "created_at": "2019-01-19T06:38:14Z",
                        "updated_at": "2022-12-07T23:23:39Z",
                        "pushed_at": "2022-12-08T01:09:12Z",
                        "git_url": "git://github.com/trinodb/trino.git",
                        "ssh_url": "git@github.com:trinodb/trino.git",
                        "clone_url": "https://github.com/trinodb/trino.git",
                        "svn_url": "https://github.com/trinodb/trino",
                        "homepage": "https://trino.io",
                        "size": 197719,
                        "stargazers_count": 6794,
                        "watchers_count": 6794,
                        "language": "Java",
                        "has_issues": true,
                        "has_projects": false,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": true,
                        "forks_count": 2084,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 2093,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "analytics",
                            "big-data",
                            "data-science",
                            "database",
                            "databases",
                            "datalake",
                            "distributed-database",
                            "distributed-databases",
                            "distributed-systems",
                            "hadoop",
                            "hive",
                            "java",
                            "jdbc",
                            "presto",
                            "prestodb",
                            "query-engine",
                            "sql",
                            "trino"
                        ],
                        "visibility": "public",
                        "forks": 2084,
                        "open_issues": 2093,
                        "watchers": 6794,
                        "default_branch": "master"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337"
                    },
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15337"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15337"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15337/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/trinodb/trino/statuses/f88ba0cee83615211a54a7351df5656d7688ae1c"
                    }
                },
                "author_association": "MEMBER",
                "auto_merge": null,
                "active_lock_reason": null
            }
        },
        "public": true,
        "created_at": "2022-12-08T01:59:05Z",
        "org": {
            "id": 34147222,
            "login": "trinodb",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/trinodb",
            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?"
        }
    },
    {
        "id": "25737138380",
        "type": "PullRequestReviewEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 166515022,
            "name": "trinodb/trino",
            "url": "https://api.github.com/repos/trinodb/trino"
        },
        "payload": {
            "action": "created",
            "review": {
                "id": 1209352152,
                "node_id": "PRR_kwDOCezRTs5IFT_Y",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": null,
                "commit_id": "f88ba0cee83615211a54a7351df5656d7688ae1c",
                "submitted_at": "2022-12-08T01:58:34Z",
                "state": "commented",
                "html_url": "https://github.com/trinodb/trino/pull/15337#pullrequestreview-1209352152",
                "pull_request_url": "https://api.github.com/repos/trinodb/trino/pulls/15337",
                "author_association": "MEMBER",
                "_links": {
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15337#pullrequestreview-1209352152"
                    },
                    "pull_request": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337"
                    }
                }
            },
            "pull_request": {
                "url": "https://api.github.com/repos/trinodb/trino/pulls/15337",
                "id": 1152104129,
                "node_id": "PR_kwDOCezRTs5Eq7bB",
                "html_url": "https://github.com/trinodb/trino/pull/15337",
                "diff_url": "https://github.com/trinodb/trino/pull/15337.diff",
                "patch_url": "https://github.com/trinodb/trino/pull/15337.patch",
                "issue_url": "https://api.github.com/repos/trinodb/trino/issues/15337",
                "number": 15337,
                "state": "open",
                "locked": false,
                "title": "Fix test for invalid rate in FormatUtils.formatDataRate()",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "<!-- Thank you for submitting a pull request! Find more information in our development guide at https://github.com/trinodb/trino/blob/master/.github/DEVELOPMENT.md and contact us on #dev in Slack. -->\r\n<!-- Provide an overview of the PR for maintainers and reviewers. -->\r\n## Description\r\n\r\n`FormatUtils.formatDataRate()` contains the following code:\r\n\r\n```java\r\nlong rate = Math.round(dataSize.toBytes() / duration.getValue(SECONDS));\r\nif (Double.isNaN(rate) || Double.isInfinite(rate)) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nThe test can never evaluate as `true`, since both functions will return false for any `long`.\r\n\r\nThe correct test is:\r\n\r\n```java\r\nif (rate == Long.MAX_VALUE) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nIt's not necessary to test for `Long.MIN_VALUE`, since neither `dataSize` nor `duration` can be negative.\r\n\r\n<!-- Provide details that would help an engineer who is unfamiliar with this part of the code. -->\r\n## Unit Test\r\n\r\nI added a new class, `TestFormatUtils` to test both this fix and the rest of `FormatUtils`. The tests for this change are:\r\n\r\n```java\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), false), \"0B\");\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), true), \"0B/s\");\r\n```\r\n\r\n<!-- Mark the appropriate option with an (x). Propose a release note if you can. -->\r\n## Release notes\r\n\r\n(x) This is not user-visible or docs only and no release notes are required.\r\n( ) Release notes are required, please propose a release note for me.\r\n( ) Release notes are required, with the following suggested text:\r\n\r\n## Related Issue\r\n\r\nFixes #13093",
                "created_at": "2022-12-07T17:54:40Z",
                "updated_at": "2022-12-08T01:58:34Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": "dd4eb7e24625655b4a60619dabe31785fb81f5ab",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [
                    {
                        "id": 1202580151,
                        "node_id": "MDU6TGFiZWwxMjAyNTgwMTUx",
                        "url": "https://api.github.com/repos/trinodb/trino/labels/cla-signed",
                        "name": "cla-signed",
                        "color": "ededed",
                        "default": false,
                        "description": null
                    }
                ],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/trinodb/trino/pulls/15337/commits",
                "review_comments_url": "https://api.github.com/repos/trinodb/trino/pulls/15337/comments",
                "review_comment_url": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/trinodb/trino/issues/15337/comments",
                "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/f88ba0cee83615211a54a7351df5656d7688ae1c",
                "head": {
                    "label": "metadaddy:fix-formatdatarate-test",
                    "ref": "fix-formatdatarate-test",
                    "sha": "f88ba0cee83615211a54a7351df5656d7688ae1c",
                    "user": {
                        "login": "metadaddy",
                        "id": 723517,
                        "node_id": "MDQ6VXNlcjcyMzUxNw==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/metadaddy",
                        "html_url": "https://github.com/metadaddy",
                        "followers_url": "https://api.github.com/users/metadaddy/followers",
                        "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                        "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                        "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                        "repos_url": "https://api.github.com/users/metadaddy/repos",
                        "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 509274784,
                        "node_id": "R_kgDOHlrqoA",
                        "name": "trino",
                        "full_name": "metadaddy/trino",
                        "private": false,
                        "owner": {
                            "login": "metadaddy",
                            "id": 723517,
                            "node_id": "MDQ6VXNlcjcyMzUxNw==",
                            "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/metadaddy",
                            "html_url": "https://github.com/metadaddy",
                            "followers_url": "https://api.github.com/users/metadaddy/followers",
                            "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                            "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                            "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                            "repos_url": "https://api.github.com/users/metadaddy/repos",
                            "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/metadaddy/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": true,
                        "url": "https://api.github.com/repos/metadaddy/trino",
                        "forks_url": "https://api.github.com/repos/metadaddy/trino/forks",
                        "keys_url": "https://api.github.com/repos/metadaddy/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/metadaddy/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/metadaddy/trino/teams",
                        "hooks_url": "https://api.github.com/repos/metadaddy/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/metadaddy/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/metadaddy/trino/events",
                        "assignees_url": "https://api.github.com/repos/metadaddy/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/metadaddy/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/metadaddy/trino/tags",
                        "blobs_url": "https://api.github.com/repos/metadaddy/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/metadaddy/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/metadaddy/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/metadaddy/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/metadaddy/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/metadaddy/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/metadaddy/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/metadaddy/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/metadaddy/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/metadaddy/trino/subscription",
                        "commits_url": "https://api.github.com/repos/metadaddy/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/metadaddy/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/metadaddy/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/metadaddy/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/metadaddy/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/metadaddy/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/metadaddy/trino/merges",
                        "archive_url": "https://api.github.com/repos/metadaddy/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/metadaddy/trino/downloads",
                        "issues_url": "https://api.github.com/repos/metadaddy/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/metadaddy/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/metadaddy/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/metadaddy/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/metadaddy/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/metadaddy/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/metadaddy/trino/deployments",
                        "created_at": "2022-07-01T00:43:32Z",
                        "updated_at": "2022-07-06T01:44:20Z",
                        "pushed_at": "2022-12-07T17:50:11Z",
                        "git_url": "git://github.com/metadaddy/trino.git",
                        "ssh_url": "git@github.com:metadaddy/trino.git",
                        "clone_url": "https://github.com/metadaddy/trino.git",
                        "svn_url": "https://github.com/metadaddy/trino",
                        "homepage": "https://trino.io",
                        "size": 192363,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": "Java",
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "master"
                    }
                },
                "base": {
                    "label": "trinodb:master",
                    "ref": "master",
                    "sha": "4b266700437a87236ad0e0e5cd1db866f4f76dcb",
                    "user": {
                        "login": "trinodb",
                        "id": 34147222,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                        "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/trinodb",
                        "html_url": "https://github.com/trinodb",
                        "followers_url": "https://api.github.com/users/trinodb/followers",
                        "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                        "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                        "organizations_url": "https://api.github.com/users/trinodb/orgs",
                        "repos_url": "https://api.github.com/users/trinodb/repos",
                        "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/trinodb/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 166515022,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNjY1MTUwMjI=",
                        "name": "trino",
                        "full_name": "trinodb/trino",
                        "private": false,
                        "owner": {
                            "login": "trinodb",
                            "id": 34147222,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/trinodb",
                            "html_url": "https://github.com/trinodb",
                            "followers_url": "https://api.github.com/users/trinodb/followers",
                            "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                            "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                            "organizations_url": "https://api.github.com/users/trinodb/orgs",
                            "repos_url": "https://api.github.com/users/trinodb/repos",
                            "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/trinodb/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/trinodb/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": false,
                        "url": "https://api.github.com/repos/trinodb/trino",
                        "forks_url": "https://api.github.com/repos/trinodb/trino/forks",
                        "keys_url": "https://api.github.com/repos/trinodb/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/trinodb/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/trinodb/trino/teams",
                        "hooks_url": "https://api.github.com/repos/trinodb/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/trinodb/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/trinodb/trino/events",
                        "assignees_url": "https://api.github.com/repos/trinodb/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/trinodb/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/trinodb/trino/tags",
                        "blobs_url": "https://api.github.com/repos/trinodb/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/trinodb/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/trinodb/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/trinodb/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/trinodb/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/trinodb/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/trinodb/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/trinodb/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/trinodb/trino/subscription",
                        "commits_url": "https://api.github.com/repos/trinodb/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/trinodb/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/trinodb/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/trinodb/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/trinodb/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/trinodb/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/trinodb/trino/merges",
                        "archive_url": "https://api.github.com/repos/trinodb/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/trinodb/trino/downloads",
                        "issues_url": "https://api.github.com/repos/trinodb/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/trinodb/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/trinodb/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/trinodb/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/trinodb/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/trinodb/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/trinodb/trino/deployments",
                        "created_at": "2019-01-19T06:38:14Z",
                        "updated_at": "2022-12-07T23:23:39Z",
                        "pushed_at": "2022-12-08T01:09:12Z",
                        "git_url": "git://github.com/trinodb/trino.git",
                        "ssh_url": "git@github.com:trinodb/trino.git",
                        "clone_url": "https://github.com/trinodb/trino.git",
                        "svn_url": "https://github.com/trinodb/trino",
                        "homepage": "https://trino.io",
                        "size": 197719,
                        "stargazers_count": 6794,
                        "watchers_count": 6794,
                        "language": "Java",
                        "has_issues": true,
                        "has_projects": false,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": true,
                        "forks_count": 2084,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 2093,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "analytics",
                            "big-data",
                            "data-science",
                            "database",
                            "databases",
                            "datalake",
                            "distributed-database",
                            "distributed-databases",
                            "distributed-systems",
                            "hadoop",
                            "hive",
                            "java",
                            "jdbc",
                            "presto",
                            "prestodb",
                            "query-engine",
                            "sql",
                            "trino"
                        ],
                        "visibility": "public",
                        "forks": 2084,
                        "open_issues": 2093,
                        "watchers": 6794,
                        "default_branch": "master"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337"
                    },
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15337"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15337"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15337/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/trinodb/trino/statuses/f88ba0cee83615211a54a7351df5656d7688ae1c"
                    }
                },
                "author_association": "MEMBER",
                "auto_merge": null,
                "active_lock_reason": null
            }
        },
        "public": true,
        "created_at": "2022-12-08T01:58:35Z",
        "org": {
            "id": 34147222,
            "login": "trinodb",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/trinodb",
            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?"
        }
    },
    {
        "id": "25737138158",
        "type": "PullRequestReviewCommentEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 166515022,
            "name": "trinodb/trino",
            "url": "https://api.github.com/repos/trinodb/trino"
        },
        "payload": {
            "action": "created",
            "comment": {
                "url": "https://api.github.com/repos/trinodb/trino/pulls/comments/1042849016",
                "pull_request_review_id": 1209352152,
                "id": 1042849016,
                "node_id": "PRRC_kwDOCezRTs4-KJz4",
                "diff_hunk": "@@ -115,7 +115,7 @@ else if (longForm) {\n     public static String formatDataRate(DataSize dataSize, Duration duration, boolean longForm)\n     {\n         long rate = Math.round(dataSize.toBytes() / duration.getValue(SECONDS));\n-        if (Double.isNaN(rate) || Double.isInfinite(rate)) {\n+        if (rate == Long.MAX_VALUE) {",
                "path": "client/trino-cli/src/main/java/io/trino/cli/FormatUtils.java",
                "position": 5,
                "original_position": 5,
                "commit_id": "f88ba0cee83615211a54a7351df5656d7688ae1c",
                "original_commit_id": "f88ba0cee83615211a54a7351df5656d7688ae1c",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "The check against `Long.MAX_VALUE` preserves the intended semantics (and mirrors those of `formatCountRate()`) - if the rate calculation results in 'infinity', then set it to zero.",
                "created_at": "2022-12-08T01:58:33Z",
                "updated_at": "2022-12-08T01:58:34Z",
                "html_url": "https://github.com/trinodb/trino/pull/15337#discussion_r1042849016",
                "pull_request_url": "https://api.github.com/repos/trinodb/trino/pulls/15337",
                "author_association": "MEMBER",
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/comments/1042849016"
                    },
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15337#discussion_r1042849016"
                    },
                    "pull_request": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337"
                    }
                },
                "reactions": {
                    "url": "https://api.github.com/repos/trinodb/trino/pulls/comments/1042849016/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "start_line": null,
                "original_start_line": null,
                "start_side": null,
                "line": 118,
                "original_line": 118,
                "side": "RIGHT",
                "in_reply_to_id": 1042706109
            },
            "pull_request": {
                "url": "https://api.github.com/repos/trinodb/trino/pulls/15337",
                "id": 1152104129,
                "node_id": "PR_kwDOCezRTs5Eq7bB",
                "html_url": "https://github.com/trinodb/trino/pull/15337",
                "diff_url": "https://github.com/trinodb/trino/pull/15337.diff",
                "patch_url": "https://github.com/trinodb/trino/pull/15337.patch",
                "issue_url": "https://api.github.com/repos/trinodb/trino/issues/15337",
                "number": 15337,
                "state": "open",
                "locked": false,
                "title": "Fix test for invalid rate in FormatUtils.formatDataRate()",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "<!-- Thank you for submitting a pull request! Find more information in our development guide at https://github.com/trinodb/trino/blob/master/.github/DEVELOPMENT.md and contact us on #dev in Slack. -->\r\n<!-- Provide an overview of the PR for maintainers and reviewers. -->\r\n## Description\r\n\r\n`FormatUtils.formatDataRate()` contains the following code:\r\n\r\n```java\r\nlong rate = Math.round(dataSize.toBytes() / duration.getValue(SECONDS));\r\nif (Double.isNaN(rate) || Double.isInfinite(rate)) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nThe test can never evaluate as `true`, since both functions will return false for any `long`.\r\n\r\nThe correct test is:\r\n\r\n```java\r\nif (rate == Long.MAX_VALUE) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nIt's not necessary to test for `Long.MIN_VALUE`, since neither `dataSize` nor `duration` can be negative.\r\n\r\n<!-- Provide details that would help an engineer who is unfamiliar with this part of the code. -->\r\n## Unit Test\r\n\r\nI added a new class, `TestFormatUtils` to test both this fix and the rest of `FormatUtils`. The tests for this change are:\r\n\r\n```java\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), false), \"0B\");\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), true), \"0B/s\");\r\n```\r\n\r\n<!-- Mark the appropriate option with an (x). Propose a release note if you can. -->\r\n## Release notes\r\n\r\n(x) This is not user-visible or docs only and no release notes are required.\r\n( ) Release notes are required, please propose a release note for me.\r\n( ) Release notes are required, with the following suggested text:\r\n\r\n## Related Issue\r\n\r\nFixes #13093",
                "created_at": "2022-12-07T17:54:40Z",
                "updated_at": "2022-12-08T01:58:34Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": "dd4eb7e24625655b4a60619dabe31785fb81f5ab",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [
                    {
                        "id": 1202580151,
                        "node_id": "MDU6TGFiZWwxMjAyNTgwMTUx",
                        "url": "https://api.github.com/repos/trinodb/trino/labels/cla-signed",
                        "name": "cla-signed",
                        "color": "ededed",
                        "default": false,
                        "description": null
                    }
                ],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/trinodb/trino/pulls/15337/commits",
                "review_comments_url": "https://api.github.com/repos/trinodb/trino/pulls/15337/comments",
                "review_comment_url": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/trinodb/trino/issues/15337/comments",
                "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/f88ba0cee83615211a54a7351df5656d7688ae1c",
                "head": {
                    "label": "metadaddy:fix-formatdatarate-test",
                    "ref": "fix-formatdatarate-test",
                    "sha": "f88ba0cee83615211a54a7351df5656d7688ae1c",
                    "user": {
                        "login": "metadaddy",
                        "id": 723517,
                        "node_id": "MDQ6VXNlcjcyMzUxNw==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/metadaddy",
                        "html_url": "https://github.com/metadaddy",
                        "followers_url": "https://api.github.com/users/metadaddy/followers",
                        "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                        "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                        "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                        "repos_url": "https://api.github.com/users/metadaddy/repos",
                        "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 509274784,
                        "node_id": "R_kgDOHlrqoA",
                        "name": "trino",
                        "full_name": "metadaddy/trino",
                        "private": false,
                        "owner": {
                            "login": "metadaddy",
                            "id": 723517,
                            "node_id": "MDQ6VXNlcjcyMzUxNw==",
                            "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/metadaddy",
                            "html_url": "https://github.com/metadaddy",
                            "followers_url": "https://api.github.com/users/metadaddy/followers",
                            "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                            "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                            "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                            "repos_url": "https://api.github.com/users/metadaddy/repos",
                            "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/metadaddy/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": true,
                        "url": "https://api.github.com/repos/metadaddy/trino",
                        "forks_url": "https://api.github.com/repos/metadaddy/trino/forks",
                        "keys_url": "https://api.github.com/repos/metadaddy/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/metadaddy/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/metadaddy/trino/teams",
                        "hooks_url": "https://api.github.com/repos/metadaddy/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/metadaddy/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/metadaddy/trino/events",
                        "assignees_url": "https://api.github.com/repos/metadaddy/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/metadaddy/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/metadaddy/trino/tags",
                        "blobs_url": "https://api.github.com/repos/metadaddy/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/metadaddy/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/metadaddy/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/metadaddy/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/metadaddy/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/metadaddy/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/metadaddy/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/metadaddy/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/metadaddy/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/metadaddy/trino/subscription",
                        "commits_url": "https://api.github.com/repos/metadaddy/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/metadaddy/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/metadaddy/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/metadaddy/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/metadaddy/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/metadaddy/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/metadaddy/trino/merges",
                        "archive_url": "https://api.github.com/repos/metadaddy/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/metadaddy/trino/downloads",
                        "issues_url": "https://api.github.com/repos/metadaddy/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/metadaddy/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/metadaddy/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/metadaddy/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/metadaddy/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/metadaddy/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/metadaddy/trino/deployments",
                        "created_at": "2022-07-01T00:43:32Z",
                        "updated_at": "2022-07-06T01:44:20Z",
                        "pushed_at": "2022-12-07T17:50:11Z",
                        "git_url": "git://github.com/metadaddy/trino.git",
                        "ssh_url": "git@github.com:metadaddy/trino.git",
                        "clone_url": "https://github.com/metadaddy/trino.git",
                        "svn_url": "https://github.com/metadaddy/trino",
                        "homepage": "https://trino.io",
                        "size": 192363,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": "Java",
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "master"
                    }
                },
                "base": {
                    "label": "trinodb:master",
                    "ref": "master",
                    "sha": "4b266700437a87236ad0e0e5cd1db866f4f76dcb",
                    "user": {
                        "login": "trinodb",
                        "id": 34147222,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                        "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/trinodb",
                        "html_url": "https://github.com/trinodb",
                        "followers_url": "https://api.github.com/users/trinodb/followers",
                        "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                        "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                        "organizations_url": "https://api.github.com/users/trinodb/orgs",
                        "repos_url": "https://api.github.com/users/trinodb/repos",
                        "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/trinodb/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 166515022,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNjY1MTUwMjI=",
                        "name": "trino",
                        "full_name": "trinodb/trino",
                        "private": false,
                        "owner": {
                            "login": "trinodb",
                            "id": 34147222,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/trinodb",
                            "html_url": "https://github.com/trinodb",
                            "followers_url": "https://api.github.com/users/trinodb/followers",
                            "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                            "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                            "organizations_url": "https://api.github.com/users/trinodb/orgs",
                            "repos_url": "https://api.github.com/users/trinodb/repos",
                            "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/trinodb/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/trinodb/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": false,
                        "url": "https://api.github.com/repos/trinodb/trino",
                        "forks_url": "https://api.github.com/repos/trinodb/trino/forks",
                        "keys_url": "https://api.github.com/repos/trinodb/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/trinodb/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/trinodb/trino/teams",
                        "hooks_url": "https://api.github.com/repos/trinodb/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/trinodb/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/trinodb/trino/events",
                        "assignees_url": "https://api.github.com/repos/trinodb/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/trinodb/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/trinodb/trino/tags",
                        "blobs_url": "https://api.github.com/repos/trinodb/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/trinodb/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/trinodb/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/trinodb/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/trinodb/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/trinodb/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/trinodb/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/trinodb/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/trinodb/trino/subscription",
                        "commits_url": "https://api.github.com/repos/trinodb/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/trinodb/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/trinodb/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/trinodb/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/trinodb/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/trinodb/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/trinodb/trino/merges",
                        "archive_url": "https://api.github.com/repos/trinodb/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/trinodb/trino/downloads",
                        "issues_url": "https://api.github.com/repos/trinodb/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/trinodb/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/trinodb/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/trinodb/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/trinodb/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/trinodb/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/trinodb/trino/deployments",
                        "created_at": "2019-01-19T06:38:14Z",
                        "updated_at": "2022-12-07T23:23:39Z",
                        "pushed_at": "2022-12-08T01:09:12Z",
                        "git_url": "git://github.com/trinodb/trino.git",
                        "ssh_url": "git@github.com:trinodb/trino.git",
                        "clone_url": "https://github.com/trinodb/trino.git",
                        "svn_url": "https://github.com/trinodb/trino",
                        "homepage": "https://trino.io",
                        "size": 197719,
                        "stargazers_count": 6794,
                        "watchers_count": 6794,
                        "language": "Java",
                        "has_issues": true,
                        "has_projects": false,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": true,
                        "forks_count": 2084,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 2093,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "analytics",
                            "big-data",
                            "data-science",
                            "database",
                            "databases",
                            "datalake",
                            "distributed-database",
                            "distributed-databases",
                            "distributed-systems",
                            "hadoop",
                            "hive",
                            "java",
                            "jdbc",
                            "presto",
                            "prestodb",
                            "query-engine",
                            "sql",
                            "trino"
                        ],
                        "visibility": "public",
                        "forks": 2084,
                        "open_issues": 2093,
                        "watchers": 6794,
                        "default_branch": "master"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337"
                    },
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15337"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15337"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15337/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/trinodb/trino/statuses/f88ba0cee83615211a54a7351df5656d7688ae1c"
                    }
                },
                "author_association": "MEMBER",
                "auto_merge": null,
                "active_lock_reason": null
            }
        },
        "public": true,
        "created_at": "2022-12-08T01:58:33Z",
        "org": {
            "id": 34147222,
            "login": "trinodb",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/trinodb",
            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?"
        }
    },
    {
        "id": "25737015143",
        "type": "PullRequestReviewCommentEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 166515022,
            "name": "trinodb/trino",
            "url": "https://api.github.com/repos/trinodb/trino"
        },
        "payload": {
            "action": "created",
            "comment": {
                "url": "https://api.github.com/repos/trinodb/trino/pulls/comments/1042842469",
                "pull_request_review_id": 1209344719,
                "id": 1042842469,
                "node_id": "PRRC_kwDOCezRTs4-KINl",
                "diff_hunk": "@@ -115,7 +115,7 @@ else if (longForm) {\n     public static String formatDataRate(DataSize dataSize, Duration duration, boolean longForm)\n     {\n         long rate = Math.round(dataSize.toBytes() / duration.getValue(SECONDS));\n-        if (Double.isNaN(rate) || Double.isInfinite(rate)) {",
                "path": "client/trino-cli/src/main/java/io/trino/cli/FormatUtils.java",
                "position": 4,
                "original_position": 4,
                "commit_id": "f88ba0cee83615211a54a7351df5656d7688ae1c",
                "original_commit_id": "f88ba0cee83615211a54a7351df5656d7688ae1c",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "Nice!",
                "created_at": "2022-12-08T01:49:58Z",
                "updated_at": "2022-12-08T01:49:59Z",
                "html_url": "https://github.com/trinodb/trino/pull/15337#discussion_r1042842469",
                "pull_request_url": "https://api.github.com/repos/trinodb/trino/pulls/15337",
                "author_association": "MEMBER",
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/comments/1042842469"
                    },
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15337#discussion_r1042842469"
                    },
                    "pull_request": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337"
                    }
                },
                "reactions": {
                    "url": "https://api.github.com/repos/trinodb/trino/pulls/comments/1042842469/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "start_line": null,
                "original_start_line": null,
                "start_side": null,
                "line": 118,
                "original_line": 118,
                "side": "LEFT",
                "in_reply_to_id": 1042704594
            },
            "pull_request": {
                "url": "https://api.github.com/repos/trinodb/trino/pulls/15337",
                "id": 1152104129,
                "node_id": "PR_kwDOCezRTs5Eq7bB",
                "html_url": "https://github.com/trinodb/trino/pull/15337",
                "diff_url": "https://github.com/trinodb/trino/pull/15337.diff",
                "patch_url": "https://github.com/trinodb/trino/pull/15337.patch",
                "issue_url": "https://api.github.com/repos/trinodb/trino/issues/15337",
                "number": 15337,
                "state": "open",
                "locked": false,
                "title": "Fix test for invalid rate in FormatUtils.formatDataRate()",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "<!-- Thank you for submitting a pull request! Find more information in our development guide at https://github.com/trinodb/trino/blob/master/.github/DEVELOPMENT.md and contact us on #dev in Slack. -->\r\n<!-- Provide an overview of the PR for maintainers and reviewers. -->\r\n## Description\r\n\r\n`FormatUtils.formatDataRate()` contains the following code:\r\n\r\n```java\r\nlong rate = Math.round(dataSize.toBytes() / duration.getValue(SECONDS));\r\nif (Double.isNaN(rate) || Double.isInfinite(rate)) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nThe test can never evaluate as `true`, since both functions will return false for any `long`.\r\n\r\nThe correct test is:\r\n\r\n```java\r\nif (rate == Long.MAX_VALUE) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nIt's not necessary to test for `Long.MIN_VALUE`, since neither `dataSize` nor `duration` can be negative.\r\n\r\n<!-- Provide details that would help an engineer who is unfamiliar with this part of the code. -->\r\n## Unit Test\r\n\r\nI added a new class, `TestFormatUtils` to test both this fix and the rest of `FormatUtils`. The tests for this change are:\r\n\r\n```java\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), false), \"0B\");\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), true), \"0B/s\");\r\n```\r\n\r\n<!-- Mark the appropriate option with an (x). Propose a release note if you can. -->\r\n## Release notes\r\n\r\n(x) This is not user-visible or docs only and no release notes are required.\r\n( ) Release notes are required, please propose a release note for me.\r\n( ) Release notes are required, with the following suggested text:\r\n\r\n## Related Issue\r\n\r\nFixes #13093",
                "created_at": "2022-12-07T17:54:40Z",
                "updated_at": "2022-12-08T01:49:59Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": "dd4eb7e24625655b4a60619dabe31785fb81f5ab",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [
                    {
                        "id": 1202580151,
                        "node_id": "MDU6TGFiZWwxMjAyNTgwMTUx",
                        "url": "https://api.github.com/repos/trinodb/trino/labels/cla-signed",
                        "name": "cla-signed",
                        "color": "ededed",
                        "default": false,
                        "description": null
                    }
                ],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/trinodb/trino/pulls/15337/commits",
                "review_comments_url": "https://api.github.com/repos/trinodb/trino/pulls/15337/comments",
                "review_comment_url": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/trinodb/trino/issues/15337/comments",
                "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/f88ba0cee83615211a54a7351df5656d7688ae1c",
                "head": {
                    "label": "metadaddy:fix-formatdatarate-test",
                    "ref": "fix-formatdatarate-test",
                    "sha": "f88ba0cee83615211a54a7351df5656d7688ae1c",
                    "user": {
                        "login": "metadaddy",
                        "id": 723517,
                        "node_id": "MDQ6VXNlcjcyMzUxNw==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/metadaddy",
                        "html_url": "https://github.com/metadaddy",
                        "followers_url": "https://api.github.com/users/metadaddy/followers",
                        "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                        "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                        "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                        "repos_url": "https://api.github.com/users/metadaddy/repos",
                        "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 509274784,
                        "node_id": "R_kgDOHlrqoA",
                        "name": "trino",
                        "full_name": "metadaddy/trino",
                        "private": false,
                        "owner": {
                            "login": "metadaddy",
                            "id": 723517,
                            "node_id": "MDQ6VXNlcjcyMzUxNw==",
                            "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/metadaddy",
                            "html_url": "https://github.com/metadaddy",
                            "followers_url": "https://api.github.com/users/metadaddy/followers",
                            "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                            "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                            "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                            "repos_url": "https://api.github.com/users/metadaddy/repos",
                            "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/metadaddy/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": true,
                        "url": "https://api.github.com/repos/metadaddy/trino",
                        "forks_url": "https://api.github.com/repos/metadaddy/trino/forks",
                        "keys_url": "https://api.github.com/repos/metadaddy/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/metadaddy/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/metadaddy/trino/teams",
                        "hooks_url": "https://api.github.com/repos/metadaddy/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/metadaddy/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/metadaddy/trino/events",
                        "assignees_url": "https://api.github.com/repos/metadaddy/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/metadaddy/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/metadaddy/trino/tags",
                        "blobs_url": "https://api.github.com/repos/metadaddy/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/metadaddy/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/metadaddy/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/metadaddy/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/metadaddy/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/metadaddy/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/metadaddy/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/metadaddy/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/metadaddy/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/metadaddy/trino/subscription",
                        "commits_url": "https://api.github.com/repos/metadaddy/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/metadaddy/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/metadaddy/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/metadaddy/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/metadaddy/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/metadaddy/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/metadaddy/trino/merges",
                        "archive_url": "https://api.github.com/repos/metadaddy/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/metadaddy/trino/downloads",
                        "issues_url": "https://api.github.com/repos/metadaddy/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/metadaddy/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/metadaddy/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/metadaddy/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/metadaddy/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/metadaddy/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/metadaddy/trino/deployments",
                        "created_at": "2022-07-01T00:43:32Z",
                        "updated_at": "2022-07-06T01:44:20Z",
                        "pushed_at": "2022-12-07T17:50:11Z",
                        "git_url": "git://github.com/metadaddy/trino.git",
                        "ssh_url": "git@github.com:metadaddy/trino.git",
                        "clone_url": "https://github.com/metadaddy/trino.git",
                        "svn_url": "https://github.com/metadaddy/trino",
                        "homepage": "https://trino.io",
                        "size": 192363,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": "Java",
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "master"
                    }
                },
                "base": {
                    "label": "trinodb:master",
                    "ref": "master",
                    "sha": "4b266700437a87236ad0e0e5cd1db866f4f76dcb",
                    "user": {
                        "login": "trinodb",
                        "id": 34147222,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                        "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/trinodb",
                        "html_url": "https://github.com/trinodb",
                        "followers_url": "https://api.github.com/users/trinodb/followers",
                        "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                        "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                        "organizations_url": "https://api.github.com/users/trinodb/orgs",
                        "repos_url": "https://api.github.com/users/trinodb/repos",
                        "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/trinodb/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 166515022,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNjY1MTUwMjI=",
                        "name": "trino",
                        "full_name": "trinodb/trino",
                        "private": false,
                        "owner": {
                            "login": "trinodb",
                            "id": 34147222,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/trinodb",
                            "html_url": "https://github.com/trinodb",
                            "followers_url": "https://api.github.com/users/trinodb/followers",
                            "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                            "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                            "organizations_url": "https://api.github.com/users/trinodb/orgs",
                            "repos_url": "https://api.github.com/users/trinodb/repos",
                            "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/trinodb/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/trinodb/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": false,
                        "url": "https://api.github.com/repos/trinodb/trino",
                        "forks_url": "https://api.github.com/repos/trinodb/trino/forks",
                        "keys_url": "https://api.github.com/repos/trinodb/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/trinodb/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/trinodb/trino/teams",
                        "hooks_url": "https://api.github.com/repos/trinodb/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/trinodb/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/trinodb/trino/events",
                        "assignees_url": "https://api.github.com/repos/trinodb/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/trinodb/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/trinodb/trino/tags",
                        "blobs_url": "https://api.github.com/repos/trinodb/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/trinodb/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/trinodb/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/trinodb/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/trinodb/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/trinodb/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/trinodb/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/trinodb/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/trinodb/trino/subscription",
                        "commits_url": "https://api.github.com/repos/trinodb/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/trinodb/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/trinodb/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/trinodb/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/trinodb/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/trinodb/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/trinodb/trino/merges",
                        "archive_url": "https://api.github.com/repos/trinodb/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/trinodb/trino/downloads",
                        "issues_url": "https://api.github.com/repos/trinodb/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/trinodb/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/trinodb/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/trinodb/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/trinodb/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/trinodb/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/trinodb/trino/deployments",
                        "created_at": "2019-01-19T06:38:14Z",
                        "updated_at": "2022-12-07T23:23:39Z",
                        "pushed_at": "2022-12-08T01:09:12Z",
                        "git_url": "git://github.com/trinodb/trino.git",
                        "ssh_url": "git@github.com:trinodb/trino.git",
                        "clone_url": "https://github.com/trinodb/trino.git",
                        "svn_url": "https://github.com/trinodb/trino",
                        "homepage": "https://trino.io",
                        "size": 197719,
                        "stargazers_count": 6794,
                        "watchers_count": 6794,
                        "language": "Java",
                        "has_issues": true,
                        "has_projects": false,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": true,
                        "forks_count": 2084,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 2093,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "analytics",
                            "big-data",
                            "data-science",
                            "database",
                            "databases",
                            "datalake",
                            "distributed-database",
                            "distributed-databases",
                            "distributed-systems",
                            "hadoop",
                            "hive",
                            "java",
                            "jdbc",
                            "presto",
                            "prestodb",
                            "query-engine",
                            "sql",
                            "trino"
                        ],
                        "visibility": "public",
                        "forks": 2084,
                        "open_issues": 2093,
                        "watchers": 6794,
                        "default_branch": "master"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337"
                    },
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15337"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15337"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15337/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/trinodb/trino/statuses/f88ba0cee83615211a54a7351df5656d7688ae1c"
                    }
                },
                "author_association": "MEMBER",
                "auto_merge": null,
                "active_lock_reason": null
            }
        },
        "public": true,
        "created_at": "2022-12-08T01:49:58Z",
        "org": {
            "id": 34147222,
            "login": "trinodb",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/trinodb",
            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?"
        }
    },
    {
        "id": "25737015084",
        "type": "PullRequestReviewEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 166515022,
            "name": "trinodb/trino",
            "url": "https://api.github.com/repos/trinodb/trino"
        },
        "payload": {
            "action": "created",
            "review": {
                "id": 1209344719,
                "node_id": "PRR_kwDOCezRTs5IFSLP",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": null,
                "commit_id": "f88ba0cee83615211a54a7351df5656d7688ae1c",
                "submitted_at": "2022-12-08T01:49:58Z",
                "state": "commented",
                "html_url": "https://github.com/trinodb/trino/pull/15337#pullrequestreview-1209344719",
                "pull_request_url": "https://api.github.com/repos/trinodb/trino/pulls/15337",
                "author_association": "MEMBER",
                "_links": {
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15337#pullrequestreview-1209344719"
                    },
                    "pull_request": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337"
                    }
                }
            },
            "pull_request": {
                "url": "https://api.github.com/repos/trinodb/trino/pulls/15337",
                "id": 1152104129,
                "node_id": "PR_kwDOCezRTs5Eq7bB",
                "html_url": "https://github.com/trinodb/trino/pull/15337",
                "diff_url": "https://github.com/trinodb/trino/pull/15337.diff",
                "patch_url": "https://github.com/trinodb/trino/pull/15337.patch",
                "issue_url": "https://api.github.com/repos/trinodb/trino/issues/15337",
                "number": 15337,
                "state": "open",
                "locked": false,
                "title": "Fix test for invalid rate in FormatUtils.formatDataRate()",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "<!-- Thank you for submitting a pull request! Find more information in our development guide at https://github.com/trinodb/trino/blob/master/.github/DEVELOPMENT.md and contact us on #dev in Slack. -->\r\n<!-- Provide an overview of the PR for maintainers and reviewers. -->\r\n## Description\r\n\r\n`FormatUtils.formatDataRate()` contains the following code:\r\n\r\n```java\r\nlong rate = Math.round(dataSize.toBytes() / duration.getValue(SECONDS));\r\nif (Double.isNaN(rate) || Double.isInfinite(rate)) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nThe test can never evaluate as `true`, since both functions will return false for any `long`.\r\n\r\nThe correct test is:\r\n\r\n```java\r\nif (rate == Long.MAX_VALUE) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nIt's not necessary to test for `Long.MIN_VALUE`, since neither `dataSize` nor `duration` can be negative.\r\n\r\n<!-- Provide details that would help an engineer who is unfamiliar with this part of the code. -->\r\n## Unit Test\r\n\r\nI added a new class, `TestFormatUtils` to test both this fix and the rest of `FormatUtils`. The tests for this change are:\r\n\r\n```java\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), false), \"0B\");\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), true), \"0B/s\");\r\n```\r\n\r\n<!-- Mark the appropriate option with an (x). Propose a release note if you can. -->\r\n## Release notes\r\n\r\n(x) This is not user-visible or docs only and no release notes are required.\r\n( ) Release notes are required, please propose a release note for me.\r\n( ) Release notes are required, with the following suggested text:\r\n\r\n## Related Issue\r\n\r\nFixes #13093",
                "created_at": "2022-12-07T17:54:40Z",
                "updated_at": "2022-12-08T01:49:59Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": "dd4eb7e24625655b4a60619dabe31785fb81f5ab",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [
                    {
                        "id": 1202580151,
                        "node_id": "MDU6TGFiZWwxMjAyNTgwMTUx",
                        "url": "https://api.github.com/repos/trinodb/trino/labels/cla-signed",
                        "name": "cla-signed",
                        "color": "ededed",
                        "default": false,
                        "description": null
                    }
                ],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/trinodb/trino/pulls/15337/commits",
                "review_comments_url": "https://api.github.com/repos/trinodb/trino/pulls/15337/comments",
                "review_comment_url": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/trinodb/trino/issues/15337/comments",
                "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/f88ba0cee83615211a54a7351df5656d7688ae1c",
                "head": {
                    "label": "metadaddy:fix-formatdatarate-test",
                    "ref": "fix-formatdatarate-test",
                    "sha": "f88ba0cee83615211a54a7351df5656d7688ae1c",
                    "user": {
                        "login": "metadaddy",
                        "id": 723517,
                        "node_id": "MDQ6VXNlcjcyMzUxNw==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/metadaddy",
                        "html_url": "https://github.com/metadaddy",
                        "followers_url": "https://api.github.com/users/metadaddy/followers",
                        "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                        "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                        "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                        "repos_url": "https://api.github.com/users/metadaddy/repos",
                        "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 509274784,
                        "node_id": "R_kgDOHlrqoA",
                        "name": "trino",
                        "full_name": "metadaddy/trino",
                        "private": false,
                        "owner": {
                            "login": "metadaddy",
                            "id": 723517,
                            "node_id": "MDQ6VXNlcjcyMzUxNw==",
                            "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/metadaddy",
                            "html_url": "https://github.com/metadaddy",
                            "followers_url": "https://api.github.com/users/metadaddy/followers",
                            "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                            "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                            "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                            "repos_url": "https://api.github.com/users/metadaddy/repos",
                            "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/metadaddy/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": true,
                        "url": "https://api.github.com/repos/metadaddy/trino",
                        "forks_url": "https://api.github.com/repos/metadaddy/trino/forks",
                        "keys_url": "https://api.github.com/repos/metadaddy/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/metadaddy/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/metadaddy/trino/teams",
                        "hooks_url": "https://api.github.com/repos/metadaddy/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/metadaddy/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/metadaddy/trino/events",
                        "assignees_url": "https://api.github.com/repos/metadaddy/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/metadaddy/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/metadaddy/trino/tags",
                        "blobs_url": "https://api.github.com/repos/metadaddy/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/metadaddy/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/metadaddy/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/metadaddy/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/metadaddy/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/metadaddy/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/metadaddy/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/metadaddy/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/metadaddy/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/metadaddy/trino/subscription",
                        "commits_url": "https://api.github.com/repos/metadaddy/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/metadaddy/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/metadaddy/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/metadaddy/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/metadaddy/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/metadaddy/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/metadaddy/trino/merges",
                        "archive_url": "https://api.github.com/repos/metadaddy/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/metadaddy/trino/downloads",
                        "issues_url": "https://api.github.com/repos/metadaddy/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/metadaddy/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/metadaddy/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/metadaddy/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/metadaddy/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/metadaddy/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/metadaddy/trino/deployments",
                        "created_at": "2022-07-01T00:43:32Z",
                        "updated_at": "2022-07-06T01:44:20Z",
                        "pushed_at": "2022-12-07T17:50:11Z",
                        "git_url": "git://github.com/metadaddy/trino.git",
                        "ssh_url": "git@github.com:metadaddy/trino.git",
                        "clone_url": "https://github.com/metadaddy/trino.git",
                        "svn_url": "https://github.com/metadaddy/trino",
                        "homepage": "https://trino.io",
                        "size": 192363,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": "Java",
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "master"
                    }
                },
                "base": {
                    "label": "trinodb:master",
                    "ref": "master",
                    "sha": "4b266700437a87236ad0e0e5cd1db866f4f76dcb",
                    "user": {
                        "login": "trinodb",
                        "id": 34147222,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                        "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/trinodb",
                        "html_url": "https://github.com/trinodb",
                        "followers_url": "https://api.github.com/users/trinodb/followers",
                        "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                        "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                        "organizations_url": "https://api.github.com/users/trinodb/orgs",
                        "repos_url": "https://api.github.com/users/trinodb/repos",
                        "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/trinodb/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 166515022,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNjY1MTUwMjI=",
                        "name": "trino",
                        "full_name": "trinodb/trino",
                        "private": false,
                        "owner": {
                            "login": "trinodb",
                            "id": 34147222,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/trinodb",
                            "html_url": "https://github.com/trinodb",
                            "followers_url": "https://api.github.com/users/trinodb/followers",
                            "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                            "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                            "organizations_url": "https://api.github.com/users/trinodb/orgs",
                            "repos_url": "https://api.github.com/users/trinodb/repos",
                            "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/trinodb/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/trinodb/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": false,
                        "url": "https://api.github.com/repos/trinodb/trino",
                        "forks_url": "https://api.github.com/repos/trinodb/trino/forks",
                        "keys_url": "https://api.github.com/repos/trinodb/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/trinodb/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/trinodb/trino/teams",
                        "hooks_url": "https://api.github.com/repos/trinodb/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/trinodb/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/trinodb/trino/events",
                        "assignees_url": "https://api.github.com/repos/trinodb/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/trinodb/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/trinodb/trino/tags",
                        "blobs_url": "https://api.github.com/repos/trinodb/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/trinodb/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/trinodb/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/trinodb/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/trinodb/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/trinodb/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/trinodb/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/trinodb/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/trinodb/trino/subscription",
                        "commits_url": "https://api.github.com/repos/trinodb/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/trinodb/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/trinodb/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/trinodb/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/trinodb/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/trinodb/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/trinodb/trino/merges",
                        "archive_url": "https://api.github.com/repos/trinodb/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/trinodb/trino/downloads",
                        "issues_url": "https://api.github.com/repos/trinodb/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/trinodb/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/trinodb/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/trinodb/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/trinodb/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/trinodb/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/trinodb/trino/deployments",
                        "created_at": "2019-01-19T06:38:14Z",
                        "updated_at": "2022-12-07T23:23:39Z",
                        "pushed_at": "2022-12-08T01:09:12Z",
                        "git_url": "git://github.com/trinodb/trino.git",
                        "ssh_url": "git@github.com:trinodb/trino.git",
                        "clone_url": "https://github.com/trinodb/trino.git",
                        "svn_url": "https://github.com/trinodb/trino",
                        "homepage": "https://trino.io",
                        "size": 197719,
                        "stargazers_count": 6794,
                        "watchers_count": 6794,
                        "language": "Java",
                        "has_issues": true,
                        "has_projects": false,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": true,
                        "forks_count": 2084,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 2093,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "analytics",
                            "big-data",
                            "data-science",
                            "database",
                            "databases",
                            "datalake",
                            "distributed-database",
                            "distributed-databases",
                            "distributed-systems",
                            "hadoop",
                            "hive",
                            "java",
                            "jdbc",
                            "presto",
                            "prestodb",
                            "query-engine",
                            "sql",
                            "trino"
                        ],
                        "visibility": "public",
                        "forks": 2084,
                        "open_issues": 2093,
                        "watchers": 6794,
                        "default_branch": "master"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337"
                    },
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15337"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15337"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15337/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/trinodb/trino/statuses/f88ba0cee83615211a54a7351df5656d7688ae1c"
                    }
                },
                "author_association": "MEMBER",
                "auto_merge": null,
                "active_lock_reason": null
            }
        },
        "public": true,
        "created_at": "2022-12-08T01:49:59Z",
        "org": {
            "id": 34147222,
            "login": "trinodb",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/trinodb",
            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?"
        }
    },
    {
        "id": "25727868247",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 166515022,
            "name": "trinodb/trino",
            "url": "https://api.github.com/repos/trinodb/trino"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/trinodb/trino/issues/13093",
                "repository_url": "https://api.github.com/repos/trinodb/trino",
                "labels_url": "https://api.github.com/repos/trinodb/trino/issues/13093/labels{/name}",
                "comments_url": "https://api.github.com/repos/trinodb/trino/issues/13093/comments",
                "events_url": "https://api.github.com/repos/trinodb/trino/issues/13093/events",
                "html_url": "https://github.com/trinodb/trino/issues/13093",
                "id": 1294946685,
                "node_id": "I_kwDOCezRTs5NL1F9",
                "number": 13093,
                "title": "io.trino.cli.FormatUtils.formatDataRate incorrectly tests long rate with Double functions",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 2,
                "created_at": "2022-07-06T00:50:24Z",
                "updated_at": "2022-12-07T17:55:24Z",
                "closed_at": null,
                "author_association": "MEMBER",
                "active_lock_reason": null,
                "body": "Test code:\r\n\r\n```java\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), false), \"0B\");\r\n```\r\n\r\nAssertion fails:\r\n\r\n```\r\nTestFormatUtils.formatDataRate:287 expected [0B] but found [9223P]\r\n```\r\n\r\nThe issue is that `formatDataRate` calculates its `rate` local variable as a `long`:\r\n\r\n```java\r\nlong rate = Math.round(dataSize.toBytes() / duration.getValue(SECONDS));\r\n```\r\n\r\nbut then this test can never succeed, since both functions will return false for any `long`\r\n\r\n```java\r\n        if (Double.isNaN(rate) || Double.isInfinite(rate)) {\r\n            rate = 0;\r\n        }\r\n```\r\n\r\nThe test should instead be:\r\n\r\n```java\r\n        if (rate == Long.MAX_VALUE) {\r\n            rate = 0;\r\n        }\r\n```",
                "reactions": {
                    "url": "https://api.github.com/repos/trinodb/trino/issues/13093/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/trinodb/trino/issues/13093/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/trinodb/trino/issues/comments/1341350968",
                "html_url": "https://github.com/trinodb/trino/issues/13093#issuecomment-1341350968",
                "issue_url": "https://api.github.com/repos/trinodb/trino/issues/13093",
                "id": 1341350968,
                "node_id": "IC_kwDOCezRTs5P82Q4",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2022-12-07T17:55:24Z",
                "updated_at": "2022-12-07T17:55:24Z",
                "author_association": "MEMBER",
                "body": "@findepi I finally got round to this one: https://github.com/trinodb/trino/pull/15337",
                "reactions": {
                    "url": "https://api.github.com/repos/trinodb/trino/issues/comments/1341350968/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2022-12-07T17:55:24Z",
        "org": {
            "id": 34147222,
            "login": "trinodb",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/trinodb",
            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?"
        }
    },
    {
        "id": "25727850495",
        "type": "PullRequestEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 166515022,
            "name": "trinodb/trino",
            "url": "https://api.github.com/repos/trinodb/trino"
        },
        "payload": {
            "action": "opened",
            "number": 15337,
            "pull_request": {
                "url": "https://api.github.com/repos/trinodb/trino/pulls/15337",
                "id": 1152104129,
                "node_id": "PR_kwDOCezRTs5Eq7bB",
                "html_url": "https://github.com/trinodb/trino/pull/15337",
                "diff_url": "https://github.com/trinodb/trino/pull/15337.diff",
                "patch_url": "https://github.com/trinodb/trino/pull/15337.patch",
                "issue_url": "https://api.github.com/repos/trinodb/trino/issues/15337",
                "number": 15337,
                "state": "open",
                "locked": false,
                "title": "Fix test for invalid rate in FormatUtils.formatDataRate()",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "<!-- Thank you for submitting a pull request! Find more information in our development guide at https://github.com/trinodb/trino/blob/master/.github/DEVELOPMENT.md and contact us on #dev in Slack. -->\r\n<!-- Provide an overview of the PR for maintainers and reviewers. -->\r\n## Description\r\n\r\n`FormatUtils.formatDataRate()` contains the following code:\r\n\r\n```java\r\nlong rate = Math.round(dataSize.toBytes() / duration.getValue(SECONDS));\r\nif (Double.isNaN(rate) || Double.isInfinite(rate)) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nThe test can never evaluate as `true`, since both functions will return false for any `long`.\r\n\r\nThe correct test is:\r\n\r\n```java\r\nif (rate == Long.MAX_VALUE) {\r\n    rate = 0;\r\n}\r\n```\r\n\r\nIt's not necessary to test for `Long.MIN_VALUE`, since neither `dataSize` nor `duration` can be negative.\r\n\r\n<!-- Provide details that would help an engineer who is unfamiliar with this part of the code. -->\r\n## Unit Test\r\n\r\nI added a new class, `TestFormatUtils` to test both this fix and the rest of `FormatUtils`. The tests for this change are:\r\n\r\n```java\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), false), \"0B\");\r\nassertEquals(FormatUtils.formatDataRate(DataSize.ofBytes(1), Duration.valueOf(\"0s\"), true), \"0B/s\");\r\n```\r\n\r\n<!-- Mark the appropriate option with an (x). Propose a release note if you can. -->\r\n## Release notes\r\n\r\n(x) This is not user-visible or docs only and no release notes are required.\r\n( ) Release notes are required, please propose a release note for me.\r\n( ) Release notes are required, with the following suggested text:\r\n\r\n## Related Issue\r\n\r\nFixes #13093",
                "created_at": "2022-12-07T17:54:40Z",
                "updated_at": "2022-12-07T17:54:40Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": null,
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/trinodb/trino/pulls/15337/commits",
                "review_comments_url": "https://api.github.com/repos/trinodb/trino/pulls/15337/comments",
                "review_comment_url": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/trinodb/trino/issues/15337/comments",
                "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/f88ba0cee83615211a54a7351df5656d7688ae1c",
                "head": {
                    "label": "metadaddy:fix-formatdatarate-test",
                    "ref": "fix-formatdatarate-test",
                    "sha": "f88ba0cee83615211a54a7351df5656d7688ae1c",
                    "user": {
                        "login": "metadaddy",
                        "id": 723517,
                        "node_id": "MDQ6VXNlcjcyMzUxNw==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/metadaddy",
                        "html_url": "https://github.com/metadaddy",
                        "followers_url": "https://api.github.com/users/metadaddy/followers",
                        "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                        "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                        "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                        "repos_url": "https://api.github.com/users/metadaddy/repos",
                        "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 509274784,
                        "node_id": "R_kgDOHlrqoA",
                        "name": "trino",
                        "full_name": "metadaddy/trino",
                        "private": false,
                        "owner": {
                            "login": "metadaddy",
                            "id": 723517,
                            "node_id": "MDQ6VXNlcjcyMzUxNw==",
                            "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/metadaddy",
                            "html_url": "https://github.com/metadaddy",
                            "followers_url": "https://api.github.com/users/metadaddy/followers",
                            "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                            "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                            "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                            "repos_url": "https://api.github.com/users/metadaddy/repos",
                            "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/metadaddy/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": true,
                        "url": "https://api.github.com/repos/metadaddy/trino",
                        "forks_url": "https://api.github.com/repos/metadaddy/trino/forks",
                        "keys_url": "https://api.github.com/repos/metadaddy/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/metadaddy/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/metadaddy/trino/teams",
                        "hooks_url": "https://api.github.com/repos/metadaddy/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/metadaddy/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/metadaddy/trino/events",
                        "assignees_url": "https://api.github.com/repos/metadaddy/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/metadaddy/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/metadaddy/trino/tags",
                        "blobs_url": "https://api.github.com/repos/metadaddy/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/metadaddy/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/metadaddy/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/metadaddy/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/metadaddy/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/metadaddy/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/metadaddy/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/metadaddy/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/metadaddy/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/metadaddy/trino/subscription",
                        "commits_url": "https://api.github.com/repos/metadaddy/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/metadaddy/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/metadaddy/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/metadaddy/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/metadaddy/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/metadaddy/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/metadaddy/trino/merges",
                        "archive_url": "https://api.github.com/repos/metadaddy/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/metadaddy/trino/downloads",
                        "issues_url": "https://api.github.com/repos/metadaddy/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/metadaddy/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/metadaddy/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/metadaddy/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/metadaddy/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/metadaddy/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/metadaddy/trino/deployments",
                        "created_at": "2022-07-01T00:43:32Z",
                        "updated_at": "2022-07-06T01:44:20Z",
                        "pushed_at": "2022-12-07T17:50:11Z",
                        "git_url": "git://github.com/metadaddy/trino.git",
                        "ssh_url": "git@github.com:metadaddy/trino.git",
                        "clone_url": "https://github.com/metadaddy/trino.git",
                        "svn_url": "https://github.com/metadaddy/trino",
                        "homepage": "https://trino.io",
                        "size": 192368,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": "Java",
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "master"
                    }
                },
                "base": {
                    "label": "trinodb:master",
                    "ref": "master",
                    "sha": "4b266700437a87236ad0e0e5cd1db866f4f76dcb",
                    "user": {
                        "login": "trinodb",
                        "id": 34147222,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                        "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/trinodb",
                        "html_url": "https://github.com/trinodb",
                        "followers_url": "https://api.github.com/users/trinodb/followers",
                        "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                        "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                        "organizations_url": "https://api.github.com/users/trinodb/orgs",
                        "repos_url": "https://api.github.com/users/trinodb/repos",
                        "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/trinodb/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 166515022,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNjY1MTUwMjI=",
                        "name": "trino",
                        "full_name": "trinodb/trino",
                        "private": false,
                        "owner": {
                            "login": "trinodb",
                            "id": 34147222,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/trinodb",
                            "html_url": "https://github.com/trinodb",
                            "followers_url": "https://api.github.com/users/trinodb/followers",
                            "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                            "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                            "organizations_url": "https://api.github.com/users/trinodb/orgs",
                            "repos_url": "https://api.github.com/users/trinodb/repos",
                            "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/trinodb/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/trinodb/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": false,
                        "url": "https://api.github.com/repos/trinodb/trino",
                        "forks_url": "https://api.github.com/repos/trinodb/trino/forks",
                        "keys_url": "https://api.github.com/repos/trinodb/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/trinodb/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/trinodb/trino/teams",
                        "hooks_url": "https://api.github.com/repos/trinodb/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/trinodb/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/trinodb/trino/events",
                        "assignees_url": "https://api.github.com/repos/trinodb/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/trinodb/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/trinodb/trino/tags",
                        "blobs_url": "https://api.github.com/repos/trinodb/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/trinodb/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/trinodb/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/trinodb/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/trinodb/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/trinodb/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/trinodb/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/trinodb/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/trinodb/trino/subscription",
                        "commits_url": "https://api.github.com/repos/trinodb/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/trinodb/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/trinodb/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/trinodb/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/trinodb/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/trinodb/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/trinodb/trino/merges",
                        "archive_url": "https://api.github.com/repos/trinodb/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/trinodb/trino/downloads",
                        "issues_url": "https://api.github.com/repos/trinodb/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/trinodb/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/trinodb/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/trinodb/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/trinodb/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/trinodb/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/trinodb/trino/deployments",
                        "created_at": "2019-01-19T06:38:14Z",
                        "updated_at": "2022-12-07T15:05:28Z",
                        "pushed_at": "2022-12-07T17:54:40Z",
                        "git_url": "git://github.com/trinodb/trino.git",
                        "ssh_url": "git@github.com:trinodb/trino.git",
                        "clone_url": "https://github.com/trinodb/trino.git",
                        "svn_url": "https://github.com/trinodb/trino",
                        "homepage": "https://trino.io",
                        "size": 197717,
                        "stargazers_count": 6791,
                        "watchers_count": 6791,
                        "language": "Java",
                        "has_issues": true,
                        "has_projects": false,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": true,
                        "forks_count": 2083,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 2092,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "analytics",
                            "big-data",
                            "data-science",
                            "database",
                            "databases",
                            "datalake",
                            "distributed-database",
                            "distributed-databases",
                            "distributed-systems",
                            "hadoop",
                            "hive",
                            "java",
                            "jdbc",
                            "presto",
                            "prestodb",
                            "query-engine",
                            "sql",
                            "trino"
                        ],
                        "visibility": "public",
                        "forks": 2083,
                        "open_issues": 2092,
                        "watchers": 6791,
                        "default_branch": "master"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337"
                    },
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15337"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15337"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15337/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15337/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/trinodb/trino/statuses/f88ba0cee83615211a54a7351df5656d7688ae1c"
                    }
                },
                "author_association": "MEMBER",
                "auto_merge": null,
                "active_lock_reason": null,
                "merged": false,
                "mergeable": null,
                "rebaseable": null,
                "mergeable_state": "unknown",
                "merged_by": null,
                "comments": 0,
                "review_comments": 0,
                "maintainer_can_modify": true,
                "commits": 1,
                "additions": 354,
                "deletions": 1,
                "changed_files": 2
            }
        },
        "public": true,
        "created_at": "2022-12-07T17:54:41Z",
        "org": {
            "id": 34147222,
            "login": "trinodb",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/trinodb",
            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?"
        }
    },
    {
        "id": "25727745214",
        "type": "PushEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 509274784,
            "name": "metadaddy/trino",
            "url": "https://api.github.com/repos/metadaddy/trino"
        },
        "payload": {
            "push_id": 11917788963,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/fix-formatdatarate-test",
            "head": "f88ba0cee83615211a54a7351df5656d7688ae1c",
            "before": "a8ca5fe5f1f6a4ed9b00988d1f9db1d06a9d3bf0",
            "commits": [
                {
                    "sha": "f88ba0cee83615211a54a7351df5656d7688ae1c",
                    "author": {
                        "email": "pat@backblaze.com",
                        "name": "Pat Patterson"
                    },
                    "message": "Fix test for invalid rate in FormatUtils.formatDataRate()",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/f88ba0cee83615211a54a7351df5656d7688ae1c"
                }
            ]
        },
        "public": true,
        "created_at": "2022-12-07T17:50:12Z"
    },
    {
        "id": "25727428214",
        "type": "PushEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 509274784,
            "name": "metadaddy/trino",
            "url": "https://api.github.com/repos/metadaddy/trino"
        },
        "payload": {
            "push_id": 11917639194,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/fix-formatdatarate-test",
            "head": "a8ca5fe5f1f6a4ed9b00988d1f9db1d06a9d3bf0",
            "before": "3fa5fb40530b65f9c54c1e5bfd7778be41de9a90",
            "commits": [
                {
                    "sha": "a8ca5fe5f1f6a4ed9b00988d1f9db1d06a9d3bf0",
                    "author": {
                        "email": "pat@backblaze.com",
                        "name": "Pat Patterson"
                    },
                    "message": "Fix test for invalid rate in FormatUtils.formatDataRate()",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/a8ca5fe5f1f6a4ed9b00988d1f9db1d06a9d3bf0"
                }
            ]
        },
        "public": true,
        "created_at": "2022-12-07T17:37:02Z"
    },
    {
        "id": "25727169150",
        "type": "CreateEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 509274784,
            "name": "metadaddy/trino",
            "url": "https://api.github.com/repos/metadaddy/trino"
        },
        "payload": {
            "ref": "fix-formatdatarate-test",
            "ref_type": "branch",
            "master_branch": "master",
            "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
            "pusher_type": "user"
        },
        "public": true,
        "created_at": "2022-12-07T17:26:34Z"
    },
    {
        "id": "25604456116",
        "type": "PullRequestEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 294804856,
            "name": "appwrite/demos-for-react",
            "url": "https://api.github.com/repos/appwrite/demos-for-react"
        },
        "payload": {
            "action": "opened",
            "number": 23,
            "pull_request": {
                "url": "https://api.github.com/repos/appwrite/demos-for-react/pulls/23",
                "id": 1142564849,
                "node_id": "PR_kwDOEZJdeM5EGifx",
                "html_url": "https://github.com/appwrite/demos-for-react/pull/23",
                "diff_url": "https://github.com/appwrite/demos-for-react/pull/23.diff",
                "patch_url": "https://github.com/appwrite/demos-for-react/pull/23.patch",
                "issue_url": "https://api.github.com/repos/appwrite/demos-for-react/issues/23",
                "number": 23,
                "state": "open",
                "locked": false,
                "title": "Add Images with React sample",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "<!--\r\nThank you for sending the PR! We appreciate you spending the time to work on these changes.\r\n\r\nHelp us understand your motivation by explaining why you decided to make this change.\r\n\r\nYou can learn more about contributing to appwrite here: https://github.com/appwrite/appwrite/blob/master/CONTRIBUTING.md\r\n\r\nHappy contributing!\r\n\r\n-->\r\n\r\n## What does this PR do?\r\n\r\nThis PR adds a new sample React app and tutorial showing how to use Appwrite Storage.\r\n\r\n## Test Plan\r\n\r\nAt present, in common with the [Todo with React](https://github.com/appwrite/demo-todo-with-react) sample that this app is based on, there is no test code.\r\n\r\n### Have you read the [Contributing Guidelines on issues](https://github.com/appwrite/appwrite/blob/master/CONTRIBUTING.md)?\r\n\r\nYes!",
                "created_at": "2022-12-01T23:44:44Z",
                "updated_at": "2022-12-01T23:44:44Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": null,
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/appwrite/demos-for-react/pulls/23/commits",
                "review_comments_url": "https://api.github.com/repos/appwrite/demos-for-react/pulls/23/comments",
                "review_comment_url": "https://api.github.com/repos/appwrite/demos-for-react/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/appwrite/demos-for-react/issues/23/comments",
                "statuses_url": "https://api.github.com/repos/appwrite/demos-for-react/statuses/4a226a8bc97d8e739b1915f9199477433ff36d3b",
                "head": {
                    "label": "metadaddy:master",
                    "ref": "master",
                    "sha": "4a226a8bc97d8e739b1915f9199477433ff36d3b",
                    "user": {
                        "login": "metadaddy",
                        "id": 723517,
                        "node_id": "MDQ6VXNlcjcyMzUxNw==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/metadaddy",
                        "html_url": "https://github.com/metadaddy",
                        "followers_url": "https://api.github.com/users/metadaddy/followers",
                        "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                        "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                        "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                        "repos_url": "https://api.github.com/users/metadaddy/repos",
                        "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 573059111,
                        "node_id": "R_kgDOIigwJw",
                        "name": "demos-for-react",
                        "full_name": "metadaddy/demos-for-react",
                        "private": false,
                        "owner": {
                            "login": "metadaddy",
                            "id": 723517,
                            "node_id": "MDQ6VXNlcjcyMzUxNw==",
                            "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/metadaddy",
                            "html_url": "https://github.com/metadaddy",
                            "followers_url": "https://api.github.com/users/metadaddy/followers",
                            "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                            "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                            "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                            "repos_url": "https://api.github.com/users/metadaddy/repos",
                            "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/metadaddy/demos-for-react",
                        "description": "Demos and tutorials for getting started with Appwrite + React JS",
                        "fork": true,
                        "url": "https://api.github.com/repos/metadaddy/demos-for-react",
                        "forks_url": "https://api.github.com/repos/metadaddy/demos-for-react/forks",
                        "keys_url": "https://api.github.com/repos/metadaddy/demos-for-react/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/metadaddy/demos-for-react/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/metadaddy/demos-for-react/teams",
                        "hooks_url": "https://api.github.com/repos/metadaddy/demos-for-react/hooks",
                        "issue_events_url": "https://api.github.com/repos/metadaddy/demos-for-react/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/metadaddy/demos-for-react/events",
                        "assignees_url": "https://api.github.com/repos/metadaddy/demos-for-react/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/metadaddy/demos-for-react/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/metadaddy/demos-for-react/tags",
                        "blobs_url": "https://api.github.com/repos/metadaddy/demos-for-react/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/metadaddy/demos-for-react/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/metadaddy/demos-for-react/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/metadaddy/demos-for-react/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/metadaddy/demos-for-react/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/metadaddy/demos-for-react/languages",
                        "stargazers_url": "https://api.github.com/repos/metadaddy/demos-for-react/stargazers",
                        "contributors_url": "https://api.github.com/repos/metadaddy/demos-for-react/contributors",
                        "subscribers_url": "https://api.github.com/repos/metadaddy/demos-for-react/subscribers",
                        "subscription_url": "https://api.github.com/repos/metadaddy/demos-for-react/subscription",
                        "commits_url": "https://api.github.com/repos/metadaddy/demos-for-react/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/metadaddy/demos-for-react/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/metadaddy/demos-for-react/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/metadaddy/demos-for-react/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/metadaddy/demos-for-react/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/metadaddy/demos-for-react/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/metadaddy/demos-for-react/merges",
                        "archive_url": "https://api.github.com/repos/metadaddy/demos-for-react/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/metadaddy/demos-for-react/downloads",
                        "issues_url": "https://api.github.com/repos/metadaddy/demos-for-react/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/metadaddy/demos-for-react/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/metadaddy/demos-for-react/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/metadaddy/demos-for-react/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/metadaddy/demos-for-react/labels{/name}",
                        "releases_url": "https://api.github.com/repos/metadaddy/demos-for-react/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/metadaddy/demos-for-react/deployments",
                        "created_at": "2022-12-01T15:58:10Z",
                        "updated_at": "2022-12-01T23:29:50Z",
                        "pushed_at": "2022-12-01T23:37:47Z",
                        "git_url": "git://github.com/metadaddy/demos-for-react.git",
                        "ssh_url": "git@github.com:metadaddy/demos-for-react.git",
                        "clone_url": "https://github.com/metadaddy/demos-for-react.git",
                        "svn_url": "https://github.com/metadaddy/demos-for-react",
                        "homepage": "https://appwrite.io",
                        "size": 15299,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": "JavaScript",
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "mit",
                            "name": "MIT License",
                            "spdx_id": "MIT",
                            "url": "https://api.github.com/licenses/mit",
                            "node_id": "MDc6TGljZW5zZTEz"
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "master"
                    }
                },
                "base": {
                    "label": "appwrite:master",
                    "ref": "master",
                    "sha": "24405590c3f7d460b69b2df9c3c80c77d8a05674",
                    "user": {
                        "login": "appwrite",
                        "id": 25003669,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjI1MDAzNjY5",
                        "avatar_url": "https://avatars.githubusercontent.com/u/25003669?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/appwrite",
                        "html_url": "https://github.com/appwrite",
                        "followers_url": "https://api.github.com/users/appwrite/followers",
                        "following_url": "https://api.github.com/users/appwrite/following{/other_user}",
                        "gists_url": "https://api.github.com/users/appwrite/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/appwrite/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/appwrite/subscriptions",
                        "organizations_url": "https://api.github.com/users/appwrite/orgs",
                        "repos_url": "https://api.github.com/users/appwrite/repos",
                        "events_url": "https://api.github.com/users/appwrite/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/appwrite/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 294804856,
                        "node_id": "MDEwOlJlcG9zaXRvcnkyOTQ4MDQ4NTY=",
                        "name": "demos-for-react",
                        "full_name": "appwrite/demos-for-react",
                        "private": false,
                        "owner": {
                            "login": "appwrite",
                            "id": 25003669,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjI1MDAzNjY5",
                            "avatar_url": "https://avatars.githubusercontent.com/u/25003669?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/appwrite",
                            "html_url": "https://github.com/appwrite",
                            "followers_url": "https://api.github.com/users/appwrite/followers",
                            "following_url": "https://api.github.com/users/appwrite/following{/other_user}",
                            "gists_url": "https://api.github.com/users/appwrite/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/appwrite/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/appwrite/subscriptions",
                            "organizations_url": "https://api.github.com/users/appwrite/orgs",
                            "repos_url": "https://api.github.com/users/appwrite/repos",
                            "events_url": "https://api.github.com/users/appwrite/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/appwrite/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/appwrite/demos-for-react",
                        "description": "Demos and tutorials for getting started with Appwrite + React JS",
                        "fork": false,
                        "url": "https://api.github.com/repos/appwrite/demos-for-react",
                        "forks_url": "https://api.github.com/repos/appwrite/demos-for-react/forks",
                        "keys_url": "https://api.github.com/repos/appwrite/demos-for-react/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/appwrite/demos-for-react/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/appwrite/demos-for-react/teams",
                        "hooks_url": "https://api.github.com/repos/appwrite/demos-for-react/hooks",
                        "issue_events_url": "https://api.github.com/repos/appwrite/demos-for-react/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/appwrite/demos-for-react/events",
                        "assignees_url": "https://api.github.com/repos/appwrite/demos-for-react/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/appwrite/demos-for-react/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/appwrite/demos-for-react/tags",
                        "blobs_url": "https://api.github.com/repos/appwrite/demos-for-react/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/appwrite/demos-for-react/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/appwrite/demos-for-react/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/appwrite/demos-for-react/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/appwrite/demos-for-react/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/appwrite/demos-for-react/languages",
                        "stargazers_url": "https://api.github.com/repos/appwrite/demos-for-react/stargazers",
                        "contributors_url": "https://api.github.com/repos/appwrite/demos-for-react/contributors",
                        "subscribers_url": "https://api.github.com/repos/appwrite/demos-for-react/subscribers",
                        "subscription_url": "https://api.github.com/repos/appwrite/demos-for-react/subscription",
                        "commits_url": "https://api.github.com/repos/appwrite/demos-for-react/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/appwrite/demos-for-react/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/appwrite/demos-for-react/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/appwrite/demos-for-react/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/appwrite/demos-for-react/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/appwrite/demos-for-react/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/appwrite/demos-for-react/merges",
                        "archive_url": "https://api.github.com/repos/appwrite/demos-for-react/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/appwrite/demos-for-react/downloads",
                        "issues_url": "https://api.github.com/repos/appwrite/demos-for-react/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/appwrite/demos-for-react/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/appwrite/demos-for-react/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/appwrite/demos-for-react/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/appwrite/demos-for-react/labels{/name}",
                        "releases_url": "https://api.github.com/repos/appwrite/demos-for-react/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/appwrite/demos-for-react/deployments",
                        "created_at": "2020-09-11T20:21:55Z",
                        "updated_at": "2022-11-22T14:03:03Z",
                        "pushed_at": "2022-12-01T23:44:45Z",
                        "git_url": "git://github.com/appwrite/demos-for-react.git",
                        "ssh_url": "git@github.com:appwrite/demos-for-react.git",
                        "clone_url": "https://github.com/appwrite/demos-for-react.git",
                        "svn_url": "https://github.com/appwrite/demos-for-react",
                        "homepage": "https://appwrite.io",
                        "size": 15299,
                        "stargazers_count": 46,
                        "watchers_count": 46,
                        "language": "JavaScript",
                        "has_issues": true,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 26,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 6,
                        "license": {
                            "key": "mit",
                            "name": "MIT License",
                            "spdx_id": "MIT",
                            "url": "https://api.github.com/licenses/mit",
                            "node_id": "MDc6TGljZW5zZTEz"
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "appwrite",
                            "hacktoberfest",
                            "react",
                            "reactjs"
                        ],
                        "visibility": "public",
                        "forks": 26,
                        "open_issues": 6,
                        "watchers": 46,
                        "default_branch": "master"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/appwrite/demos-for-react/pulls/23"
                    },
                    "html": {
                        "href": "https://github.com/appwrite/demos-for-react/pull/23"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/appwrite/demos-for-react/issues/23"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/appwrite/demos-for-react/issues/23/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/appwrite/demos-for-react/pulls/23/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/appwrite/demos-for-react/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/appwrite/demos-for-react/pulls/23/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/appwrite/demos-for-react/statuses/4a226a8bc97d8e739b1915f9199477433ff36d3b"
                    }
                },
                "author_association": "NONE",
                "auto_merge": null,
                "active_lock_reason": null,
                "merged": false,
                "mergeable": null,
                "rebaseable": null,
                "mergeable_state": "unknown",
                "merged_by": null,
                "comments": 0,
                "review_comments": 0,
                "maintainer_can_modify": true,
                "commits": 1,
                "additions": 41352,
                "deletions": 2,
                "changed_files": 37
            }
        },
        "public": true,
        "created_at": "2022-12-01T23:44:45Z",
        "org": {
            "id": 25003669,
            "login": "appwrite",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/appwrite",
            "avatar_url": "https://avatars.githubusercontent.com/u/25003669?"
        }
    },
    {
        "id": "25604373520",
        "type": "PushEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 573059111,
            "name": "metadaddy/demos-for-react",
            "url": "https://api.github.com/repos/metadaddy/demos-for-react"
        },
        "payload": {
            "push_id": 11854639616,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/master",
            "head": "4a226a8bc97d8e739b1915f9199477433ff36d3b",
            "before": "0162e33140f1342dbfb9b8cb3a700b7e9bc50536",
            "commits": [
                {
                    "sha": "4a226a8bc97d8e739b1915f9199477433ff36d3b",
                    "author": {
                        "email": "pat@backblaze.com",
                        "name": "Pat Patterson"
                    },
                    "message": "Add Images with React sample",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/demos-for-react/commits/4a226a8bc97d8e739b1915f9199477433ff36d3b"
                }
            ]
        },
        "public": true,
        "created_at": "2022-12-01T23:37:47Z"
    },
    {
        "id": "25604361672",
        "type": "PushEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 573059111,
            "name": "metadaddy/demos-for-react",
            "url": "https://api.github.com/repos/metadaddy/demos-for-react"
        },
        "payload": {
            "push_id": 11854633166,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/master",
            "head": "0162e33140f1342dbfb9b8cb3a700b7e9bc50536",
            "before": "4461553bf33da9b01dd0cd3507b87c87b1e15c3e",
            "commits": [
                {
                    "sha": "0162e33140f1342dbfb9b8cb3a700b7e9bc50536",
                    "author": {
                        "email": "pat@backblaze.com",
                        "name": "Pat Patterson"
                    },
                    "message": "Add Images with React sample",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/demos-for-react/commits/0162e33140f1342dbfb9b8cb3a700b7e9bc50536"
                }
            ]
        },
        "public": true,
        "created_at": "2022-12-01T23:36:47Z"
    },
    {
        "id": "25604294607",
        "type": "PushEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 573059111,
            "name": "metadaddy/demos-for-react",
            "url": "https://api.github.com/repos/metadaddy/demos-for-react"
        },
        "payload": {
            "push_id": 11854596843,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/master",
            "head": "4461553bf33da9b01dd0cd3507b87c87b1e15c3e",
            "before": "7f467b41101e883ff580d8adb5775d6f1e9e7860",
            "commits": [
                {
                    "sha": "4461553bf33da9b01dd0cd3507b87c87b1e15c3e",
                    "author": {
                        "email": "pat@backblaze.com",
                        "name": "Pat Patterson"
                    },
                    "message": "Add Images with React sample",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/demos-for-react/commits/4461553bf33da9b01dd0cd3507b87c87b1e15c3e"
                }
            ]
        },
        "public": true,
        "created_at": "2022-12-01T23:31:12Z"
    },
    {
        "id": "25604277199",
        "type": "PushEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 573059111,
            "name": "metadaddy/demos-for-react",
            "url": "https://api.github.com/repos/metadaddy/demos-for-react"
        },
        "payload": {
            "push_id": 11854587308,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/master",
            "head": "7f467b41101e883ff580d8adb5775d6f1e9e7860",
            "before": "24405590c3f7d460b69b2df9c3c80c77d8a05674",
            "commits": [
                {
                    "sha": "7f467b41101e883ff580d8adb5775d6f1e9e7860",
                    "author": {
                        "email": "pat@backblaze.com",
                        "name": "Pat Patterson"
                    },
                    "message": "Add Images with React sample",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/demos-for-react/commits/7f467b41101e883ff580d8adb5775d6f1e9e7860"
                }
            ]
        },
        "public": true,
        "created_at": "2022-12-01T23:29:47Z"
    },
    {
        "id": "25595578683",
        "type": "ForkEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 294804856,
            "name": "appwrite/demos-for-react",
            "url": "https://api.github.com/repos/appwrite/demos-for-react"
        },
        "payload": {
            "forkee": {
                "id": 573059111,
                "node_id": "R_kgDOIigwJw",
                "name": "demos-for-react",
                "full_name": "metadaddy/demos-for-react",
                "private": false,
                "owner": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "html_url": "https://github.com/metadaddy/demos-for-react",
                "description": "Demos and tutorials for getting started with Appwrite + React JS",
                "fork": true,
                "url": "https://api.github.com/repos/metadaddy/demos-for-react",
                "forks_url": "https://api.github.com/repos/metadaddy/demos-for-react/forks",
                "keys_url": "https://api.github.com/repos/metadaddy/demos-for-react/keys{/key_id}",
                "collaborators_url": "https://api.github.com/repos/metadaddy/demos-for-react/collaborators{/collaborator}",
                "teams_url": "https://api.github.com/repos/metadaddy/demos-for-react/teams",
                "hooks_url": "https://api.github.com/repos/metadaddy/demos-for-react/hooks",
                "issue_events_url": "https://api.github.com/repos/metadaddy/demos-for-react/issues/events{/number}",
                "events_url": "https://api.github.com/repos/metadaddy/demos-for-react/events",
                "assignees_url": "https://api.github.com/repos/metadaddy/demos-for-react/assignees{/user}",
                "branches_url": "https://api.github.com/repos/metadaddy/demos-for-react/branches{/branch}",
                "tags_url": "https://api.github.com/repos/metadaddy/demos-for-react/tags",
                "blobs_url": "https://api.github.com/repos/metadaddy/demos-for-react/git/blobs{/sha}",
                "git_tags_url": "https://api.github.com/repos/metadaddy/demos-for-react/git/tags{/sha}",
                "git_refs_url": "https://api.github.com/repos/metadaddy/demos-for-react/git/refs{/sha}",
                "trees_url": "https://api.github.com/repos/metadaddy/demos-for-react/git/trees{/sha}",
                "statuses_url": "https://api.github.com/repos/metadaddy/demos-for-react/statuses/{sha}",
                "languages_url": "https://api.github.com/repos/metadaddy/demos-for-react/languages",
                "stargazers_url": "https://api.github.com/repos/metadaddy/demos-for-react/stargazers",
                "contributors_url": "https://api.github.com/repos/metadaddy/demos-for-react/contributors",
                "subscribers_url": "https://api.github.com/repos/metadaddy/demos-for-react/subscribers",
                "subscription_url": "https://api.github.com/repos/metadaddy/demos-for-react/subscription",
                "commits_url": "https://api.github.com/repos/metadaddy/demos-for-react/commits{/sha}",
                "git_commits_url": "https://api.github.com/repos/metadaddy/demos-for-react/git/commits{/sha}",
                "comments_url": "https://api.github.com/repos/metadaddy/demos-for-react/comments{/number}",
                "issue_comment_url": "https://api.github.com/repos/metadaddy/demos-for-react/issues/comments{/number}",
                "contents_url": "https://api.github.com/repos/metadaddy/demos-for-react/contents/{+path}",
                "compare_url": "https://api.github.com/repos/metadaddy/demos-for-react/compare/{base}...{head}",
                "merges_url": "https://api.github.com/repos/metadaddy/demos-for-react/merges",
                "archive_url": "https://api.github.com/repos/metadaddy/demos-for-react/{archive_format}{/ref}",
                "downloads_url": "https://api.github.com/repos/metadaddy/demos-for-react/downloads",
                "issues_url": "https://api.github.com/repos/metadaddy/demos-for-react/issues{/number}",
                "pulls_url": "https://api.github.com/repos/metadaddy/demos-for-react/pulls{/number}",
                "milestones_url": "https://api.github.com/repos/metadaddy/demos-for-react/milestones{/number}",
                "notifications_url": "https://api.github.com/repos/metadaddy/demos-for-react/notifications{?since,all,participating}",
                "labels_url": "https://api.github.com/repos/metadaddy/demos-for-react/labels{/name}",
                "releases_url": "https://api.github.com/repos/metadaddy/demos-for-react/releases{/id}",
                "deployments_url": "https://api.github.com/repos/metadaddy/demos-for-react/deployments",
                "created_at": "2022-12-01T15:58:10Z",
                "updated_at": "2022-11-22T14:03:03Z",
                "pushed_at": "2022-11-18T01:07:58Z",
                "git_url": "git://github.com/metadaddy/demos-for-react.git",
                "ssh_url": "git@github.com:metadaddy/demos-for-react.git",
                "clone_url": "https://github.com/metadaddy/demos-for-react.git",
                "svn_url": "https://github.com/metadaddy/demos-for-react",
                "homepage": "https://appwrite.io",
                "size": 15299,
                "stargazers_count": 0,
                "watchers_count": 0,
                "language": null,
                "has_issues": false,
                "has_projects": true,
                "has_downloads": true,
                "has_wiki": true,
                "has_pages": false,
                "has_discussions": false,
                "forks_count": 0,
                "mirror_url": null,
                "archived": false,
                "disabled": false,
                "open_issues_count": 0,
                "license": {
                    "key": "mit",
                    "name": "MIT License",
                    "spdx_id": "MIT",
                    "url": "https://api.github.com/licenses/mit",
                    "node_id": "MDc6TGljZW5zZTEz"
                },
                "allow_forking": true,
                "is_template": false,
                "web_commit_signoff_required": false,
                "topics": [],
                "visibility": "public",
                "forks": 0,
                "open_issues": 0,
                "watchers": 0,
                "default_branch": "master",
                "public": true
            }
        },
        "public": true,
        "created_at": "2022-12-01T15:58:11Z",
        "org": {
            "id": 25003669,
            "login": "appwrite",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/appwrite",
            "avatar_url": "https://avatars.githubusercontent.com/u/25003669?"
        }
    },
    {
        "id": "25577124268",
        "type": "PushEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 567902821,
            "name": "backblaze-b2-samples/cloudflare-b2",
            "url": "https://api.github.com/repos/backblaze-b2-samples/cloudflare-b2"
        },
        "payload": {
            "push_id": 11841034209,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/main",
            "head": "289e15eac44d52ba1592fbeca3a69cd472142aa2",
            "before": "ff556be29f8e8295fb9672a4aa4b0db4ba962444",
            "commits": [
                {
                    "sha": "289e15eac44d52ba1592fbeca3a69cd472142aa2",
                    "author": {
                        "email": "pat@backblaze.com",
                        "name": "Pat Patterson"
                    },
                    "message": "Add ALLOW_LIST_BUCKET",
                    "distinct": true,
                    "url": "https://api.github.com/repos/backblaze-b2-samples/cloudflare-b2/commits/289e15eac44d52ba1592fbeca3a69cd472142aa2"
                }
            ]
        },
        "public": true,
        "created_at": "2022-11-30T23:24:21Z",
        "org": {
            "id": 17604039,
            "login": "backblaze-b2-samples",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/backblaze-b2-samples",
            "avatar_url": "https://avatars.githubusercontent.com/u/17604039?"
        }
    },
    {
        "id": "25573284296",
        "type": "IssuesEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 166515022,
            "name": "trinodb/trino",
            "url": "https://api.github.com/repos/trinodb/trino"
        },
        "payload": {
            "action": "opened",
            "issue": {
                "url": "https://api.github.com/repos/trinodb/trino/issues/15259",
                "repository_url": "https://api.github.com/repos/trinodb/trino",
                "labels_url": "https://api.github.com/repos/trinodb/trino/issues/15259/labels{/name}",
                "comments_url": "https://api.github.com/repos/trinodb/trino/issues/15259/comments",
                "events_url": "https://api.github.com/repos/trinodb/trino/issues/15259/events",
                "html_url": "https://github.com/trinodb/trino/issues/15259",
                "id": 1470129150,
                "node_id": "I_kwDOCezRTs5XoGP-",
                "number": 15259,
                "title": "Document how the Hive connector can anonymously access a public S3 bucket",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 0,
                "created_at": "2022-11-30T19:37:12Z",
                "updated_at": "2022-11-30T19:37:12Z",
                "closed_at": null,
                "author_association": "MEMBER",
                "active_lock_reason": null,
                "body": "Issue #6127 requested a mechanism to allow the Hive connector to anonymously access a public S3 bucket. It turns out that it is possible to achieve this via configuration:\r\n\r\nIn the catalog properties, specify the `NoOpSigner` for anonymous S3 requests from the connector:\r\n\r\n```\r\nhive.s3.signer-class=com.amazonaws.auth.NoOpSigner\r\n```\r\n\r\nAnd, in `conf/metastore-site.xml`, specify the `AnonymousAWSCredentialsProvider`, either globally or on a per-bucket basis:\r\n\r\n```xml\r\n<!-- Global configuration -->\r\n<property>\r\n    <name>fs.s3a.aws.credentials.provider</name>\r\n    <value>org.apache.hadoop.fs.s3a.AnonymousAWSCredentialsProvider</value>\r\n</property>\r\n```\r\n\r\nor\r\n\r\n```xml\r\n<!-- Per-bucket configuration -->\r\n<property>\r\n    <name>fs.s3a.bucket.BUCKETNAME.aws.credentials.provider</name>\r\n    <value>org.apache.hadoop.fs.s3a.AnonymousAWSCredentialsProvider</value>\r\n</property>\r\n```",
                "reactions": {
                    "url": "https://api.github.com/repos/trinodb/trino/issues/15259/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/trinodb/trino/issues/15259/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            }
        },
        "public": true,
        "created_at": "2022-11-30T19:37:12Z",
        "org": {
            "id": 34147222,
            "login": "trinodb",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/trinodb",
            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?"
        }
    },
    {
        "id": "25572758687",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 166515022,
            "name": "trinodb/trino",
            "url": "https://api.github.com/repos/trinodb/trino"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/trinodb/trino/issues/6127",
                "repository_url": "https://api.github.com/repos/trinodb/trino",
                "labels_url": "https://api.github.com/repos/trinodb/trino/issues/6127/labels{/name}",
                "comments_url": "https://api.github.com/repos/trinodb/trino/issues/6127/comments",
                "events_url": "https://api.github.com/repos/trinodb/trino/issues/6127/events",
                "html_url": "https://github.com/trinodb/trino/issues/6127",
                "id": 752511898,
                "node_id": "MDU6SXNzdWU3NTI1MTE4OTg=",
                "number": 6127,
                "title": "Support public S3 bucket access (unsigned requests/anonymousCredentials)",
                "user": {
                    "login": "tooptoop4",
                    "id": 33283496,
                    "node_id": "MDQ6VXNlcjMzMjgzNDk2",
                    "avatar_url": "https://avatars.githubusercontent.com/u/33283496?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/tooptoop4",
                    "html_url": "https://github.com/tooptoop4",
                    "followers_url": "https://api.github.com/users/tooptoop4/followers",
                    "following_url": "https://api.github.com/users/tooptoop4/following{/other_user}",
                    "gists_url": "https://api.github.com/users/tooptoop4/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/tooptoop4/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/tooptoop4/subscriptions",
                    "organizations_url": "https://api.github.com/users/tooptoop4/orgs",
                    "repos_url": "https://api.github.com/users/tooptoop4/repos",
                    "events_url": "https://api.github.com/users/tooptoop4/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/tooptoop4/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 1,
                "created_at": "2020-11-28T00:14:35Z",
                "updated_at": "2022-11-30T19:08:26Z",
                "closed_at": null,
                "author_association": "CONTRIBUTOR",
                "active_lock_reason": null,
                "body": "1. - https://github.com/prestosql/presto/pull/6131  for below:\r\n\r\nhow to make presto read data from a public s3 bucket? ie the details on https://registry.opendata.aws/deutsche-boerse-pds/.  when I try to create external table it complains that s3 access key/secret key must be provided. But AWS CLI commands work\r\n\r\n\"We would need equivalent of --no-sign-request probably\"\r\n\r\nSome research:\r\nhttps://issues.apache.org/jira/browse/HADOOP-13237\r\nhttps://github.com/aws/aws-sdk-java/issues/1122\r\n\r\nMy guess would be https://github.com/prestosql/presto/blob/347/presto-hive/src/main/java/io/prestosql/plugin/hive/s3/PrestoS3FileSystem.java#L891 adding a check if certain config set then use AnonymousAWSCredentialsProvider\r\n\r\n2. hive.s3.endpoint=https://s3.amazonaws.com or not setting hive.s3.endpoint solves below:\r\n\r\nDifferent public datasets are in different regions. ie https://registry.opendata.aws/rapid7-fdns-any/ and https://registry.opendata.aws/fsf-flood-risk/\r\na) creating a separate presto catalog per s3 region does not feel right. It can lead to a clutter of catalogs being setup (with less than 5 tables each catalog), need to bounce presto server and users will need to lookup system.jdbc.tables to know which public dataset belongs to each catalog, whereas if CREATE TABLE syntax accepted s3 region argument then there could be single presto catalog for all s3 datasets. Or 2nd-best would be one presto catalog for company's private s3 (let's assume its single region) and a different catalog for public s3 (can be across many regions, ie us-west-2, us-east-1, eu-central-1..etc)\r\nb) perhaps defining region can be completely optional? ie aws s3 ls s3://deutsche-boerse-eurex-pds/ --no-sign-request works without specifying any region\r\n\r\n3. - https://github.com/prestosql/presto/pull/6182 for below:\r\n\r\nthis particular dataset does not follow hive style partitioning ie it uses s3://deutsche-boerse-eurex-pds/2020-11-26/ instead of s3://deutsche-boerse-eurex-pds/mystringcolumnname=2020-11-26/\r\ncan presto still interpret all these partitions positionally ie if it is one folder deep and my table DDL has partitioned_by = ARRAY['mystringcolumnname']? using single command to sync all partitions, else I can fallback to manual ADD PARTITION for each one with full path\r\n\r\n\r\nAPPENDIX for point 1\r\n1. trying to create table in hiveserver2\r\nError: org.apache.hive.service.cli.HiveSQLException: Error while processing statement: FAILED: Execution Error, return code 1 from org.apache.hadoop.hive.ql.exec.DDLTask. MetaException(message:com.amazonaws.AmazonClientException: Unable to load AWS credentials from any provider in the chain)\r\n\tat org.apache.hive.service.cli.operation.Operation.toSQLException(Operation.java:380)\r\n\tat org.apache.hive.service.cli.operation.SQLOperation.runQuery(SQLOperation.java:257)\r\n\tat org.apache.hive.service.cli.operation.SQLOperation.access$800(SQLOperation.java:91)\r\n\tat org.apache.hive.service.cli.operation.SQLOperation$BackgroundWork$1.run(SQLOperation.java:348)\r\n\tat java.security.AccessController.doPrivileged(Native Method)\r\n\tat javax.security.auth.Subject.doAs(Subject.java:422)\r\n\tat org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1657)\r\n\tat org.apache.hive.service.cli.operation.SQLOperation$BackgroundWork.run(SQLOperation.java:362)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.hadoop.hive.ql.metadata.HiveException: MetaException(message:com.amazonaws.AmazonClientException: Unable to load AWS credentials from any provider in the chain)\r\n\tat org.apache.hadoop.hive.ql.metadata.Hive.createTable(Hive.java:862)\r\n\tat org.apache.hadoop.hive.ql.metadata.Hive.createTable(Hive.java:867)\r\n\tat org.apache.hadoop.hive.ql.exec.DDLTask.createTable(DDLTask.java:4356)\r\n\tat org.apache.hadoop.hive.ql.exec.DDLTask.execute(DDLTask.java:354)\r\n\tat org.apache.hadoop.hive.ql.exec.Task.executeTask(Task.java:199)\r\n\tat org.apache.hadoop.hive.ql.exec.TaskRunner.runSequential(TaskRunner.java:100)\r\n\tat org.apache.hadoop.hive.ql.Driver.launchTask(Driver.java:2183)\r\n\tat org.apache.hadoop.hive.ql.Driver.execute(Driver.java:1839)\r\n\tat org.apache.hadoop.hive.ql.Driver.runInternal(Driver.java:1526)\r\n\tat org.apache.hadoop.hive.ql.Driver.run(Driver.java:1237)\r\n\tat org.apache.hadoop.hive.ql.Driver.run(Driver.java:1232)\r\n\tat org.apache.hive.service.cli.operation.SQLOperation.runQuery(SQLOperation.java:255)\r\n\t... 11 more\r\nCaused by: MetaException(message:com.amazonaws.AmazonClientException: Unable to load AWS credentials from any provider in the chain)\r\n\tat org.apache.hadoop.hive.metastore.api.ThriftHiveMetastore$create_table_with_environment_context_result$create_table_with_environment_context_resultStandardScheme.read(ThriftHiveMetastore.java:42070)\r\n\tat org.apache.hadoop.hive.metastore.api.ThriftHiveMetastore$create_table_with_environment_context_result$create_table_with_environment_context_resultStandardScheme.read(ThriftHiveMetastore.java:42038)\r\n\tat org.apache.hadoop.hive.metastore.api.ThriftHiveMetastore$create_table_with_environment_context_result.read(ThriftHiveMetastore.java:41964)\r\n\tat org.apache.thrift.TServiceClient.receiveBase(TServiceClient.java:86)\r\n\tat org.apache.hadoop.hive.metastore.api.ThriftHiveMetastore$Client.recv_create_table_with_environment_context(ThriftHiveMetastore.java:1199)\r\n\tat org.apache.hadoop.hive.metastore.api.ThriftHiveMetastore$Client.create_table_with_environment_context(ThriftHiveMetastore.java:1185)\r\n\tat org.apache.hadoop.hive.metastore.HiveMetaStoreClient.create_table_with_environment_context(HiveMetaStoreClient.java:2399)\r\n\tat org.apache.hadoop.hive.ql.metadata.SessionHiveMetaStoreClient.create_table_with_environment_context(SessionHiveMetaStoreClient.java:93)\r\n\tat org.apache.hadoop.hive.metastore.HiveMetaStoreClient.createTable(HiveMetaStoreClient.java:752)\r\n\tat org.apache.hadoop.hive.metastore.HiveMetaStoreClient.createTable(HiveMetaStoreClient.java:740)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.apache.hadoop.hive.metastore.RetryingMetaStoreClient.invoke(RetryingMetaStoreClient.java:173)\r\n\tat com.sun.proxy.$Proxy27.createTable(Unknown Source)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.apache.hadoop.hive.metastore.HiveMetaStoreClient$SynchronizedHandler.invoke(HiveMetaStoreClient.java:2330)\r\n\tat com.sun.proxy.$Proxy27.createTable(Unknown Source)\r\n\tat org.apache.hadoop.hive.ql.metadata.Hive.createTable(Hive.java:852)\r\n\t... 22 more (state=08S01,code=1)\r\n2. add <property>\r\n        <name>fs.s3a.aws.credentials.provider</name>\r\n        <value>org.apache.hadoop.fs.s3a.AnonymousAWSCredentialsProvider</value>\r\n      </property> to hive-site.xml\r\n3. create table in hiveserver2 and select from table in hiveserver2 works\r\n4. select from table in presto gives this error:\r\nio.prestosql.spi.PrestoException: Unable to load AWS credentials from any provider in the chain: [EnvironmentVariableCredentialsProvider: Unable to load AWS credentials from environment variables (AWS_ACCESS_KEY_ID (or AWS_ACCESS_KEY) and AWS_SECRET_KEY (or AWS_SECRET_ACCESS_KEY)), SystemPropertiesCredentialsProvider: Unable to load AWS credentials from Java system properties (aws.accessKeyId and aws.secretKey), com.amazonaws.auth.profile.ProfileCredentialsProvider@1037c40f: profile file cannot be null, com.amazonaws.auth.EC2ContainerCredentialsProviderWrapper@28877425: Unable to load credentials from service endpoint]\r\n        \tat io.prestosql.plugin.hive.BackgroundHiveSplitLoader$HiveSplitLoaderTask.process(BackgroundHiveSplitLoader.java:207)\r\n        \tat io.prestosql.plugin.hive.util.ResumableTasks.safeProcessTask(ResumableTasks.java:47)\r\n        \tat io.prestosql.plugin.hive.util.ResumableTasks.access$000(ResumableTasks.java:20)\r\n        \tat io.prestosql.plugin.hive.util.ResumableTasks$1.run(ResumableTasks.java:35)\r\n        \tat io.prestosql.$gen.Presto_318____20201128_084331_1.run(Unknown Source)\r\n        \tat io.airlift.concurrent.BoundedExecutor.drainQueue(BoundedExecutor.java:78)\r\n        \tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n        \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n        \tat java.lang.Thread.run(Thread.java:748)\r\n        Caused by: com.amazonaws.SdkClientException: Unable to load AWS credentials from any provider in the chain: [EnvironmentVariableCredentialsProvider: Unable to load AWS credentials from environment variables (AWS_ACCESS_KEY_ID (or AWS_ACCESS_KEY) and AWS_SECRET_KEY (or AWS_SECRET_ACCESS_KEY)), SystemPropertiesCredentialsProvider: Unable to load AWS credentials from Java system properties (aws.accessKeyId and aws.secretKey), com.amazonaws.auth.profile.ProfileCredentialsProvider@1037c40f: profile file cannot be null, com.amazonaws.auth.EC2ContainerCredentialsProviderWrapper@28877425: Unable to load credentials from service endpoint]\r\n        \tat com.amazonaws.auth.AWSCredentialsProviderChain.getCredentials(AWSCredentialsProviderChain.java:136)\r\n        \tat com.amazonaws.http.AmazonHttpClient$RequestExecutor.getCredentialsFromContext(AmazonHttpClient.java:1225)\r\n        \tat com.amazonaws.http.AmazonHttpClient$RequestExecutor.runBeforeRequestHandlers(AmazonHttpClient.java:801)\r\n        \tat com.amazonaws.http.AmazonHttpClient$RequestExecutor.doExecute(AmazonHttpClient.java:751)\r\n        \tat com.amazonaws.http.AmazonHttpClient$RequestExecutor.executeWithTimer(AmazonHttpClient.java:744)\r\n        \tat com.amazonaws.http.AmazonHttpClient$RequestExecutor.execute(AmazonHttpClient.java:726)\r\n        \tat com.amazonaws.http.AmazonHttpClient$RequestExecutor.access$500(AmazonHttpClient.java:686)\r\n        \tat com.amazonaws.http.AmazonHttpClient$RequestExecutionBuilderImpl.execute(AmazonHttpClient.java:668)\r\n        \tat com.amazonaws.http.AmazonHttpClient.execute(AmazonHttpClient.java:532)\r\n        \tat com.amazonaws.http.AmazonHttpClient.execute(AmazonHttpClient.java:512)\r\n        \tat com.amazonaws.services.s3.AmazonS3Client.invoke(AmazonS3Client.java:4921)\r\n        \tat com.amazonaws.services.s3.AmazonS3Client.invoke(AmazonS3Client.java:4867)\r\n        \tat com.amazonaws.services.s3.AmazonS3Client.invoke(AmazonS3Client.java:4861)\r\n        \tat com.amazonaws.services.s3.AmazonS3Client.listObjects(AmazonS3Client.java:880)\r\n        \tat io.prestosql.plugin.hive.s3.PrestoS3FileSystem.listPrefix(PrestoS3FileSystem.java:524)\r\n        \tat io.prestosql.plugin.hive.s3.PrestoS3FileSystem.access$000(PrestoS3FileSystem.java:132)\r\n        \tat io.prestosql.plugin.hive.s3.PrestoS3FileSystem$1.<init>(PrestoS3FileSystem.java:304)\r\n        \tat io.prestosql.plugin.hive.s3.PrestoS3FileSystem.listLocatedStatus(PrestoS3FileSystem.java:302)\r\n        \tat org.apache.hadoop.fs.FilterFileSystem.listLocatedStatus(FilterFileSystem.java:283)\r\n        \tat io.prestosql.plugin.hive.CachingDirectoryLister.list(CachingDirectoryLister.java:81)\r\n        \tat io.prestosql.plugin.hive.util.HiveFileIterator$FileStatusIterator.<init>(HiveFileIterator.java:134)\r\n        \tat io.prestosql.plugin.hive.util.HiveFileIterator$FileStatusIterator.<init>(HiveFileIterator.java:122)\r\n        \tat io.prestosql.plugin.hive.util.HiveFileIterator.getLocatedFileStatusRemoteIterator(HiveFileIterator.java:111)\r\n        \tat io.prestosql.plugin.hive.util.HiveFileIterator.computeNext(HiveFileIterator.java:104)\r\n        \tat io.prestosql.plugin.hive.util.HiveFileIterator.computeNext(HiveFileIterator.java:38)\r\n        \tat com.google.common.collect.AbstractIterator.tryToComputeNext(AbstractIterator.java:141)\r\n        \tat com.google.common.collect.AbstractIterator.hasNext(AbstractIterator.java:136)\r\n        \tat java.util.Spliterators$IteratorSpliterator.tryAdvance(Spliterators.java:1811)\r\n        \tat java.util.stream.StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0(StreamSpliterators.java:295)\r\n        \tat java.util.stream.StreamSpliterators$AbstractWrappingSpliterator.fillBuffer(StreamSpliterators.java:207)\r\n        \tat java.util.stream.StreamSpliterators$AbstractWrappingSpliterator.doAdvance(StreamSpliterators.java:162)\r\n        \tat java.util.stream.StreamSpliterators$WrappingSpliterator.tryAdvance(StreamSpliterators.java:301)\r\n        \tat java.util.Spliterators$1Adapter.hasNext(Spliterators.java:681)\r\n        \tat io.prestosql.plugin.hive.BackgroundHiveSplitLoader.loadSplits(BackgroundHiveSplitLoader.java:274)\r\n        \tat io.prestosql.plugin.hive.BackgroundHiveSplitLoader.access$300(BackgroundHiveSplitLoader.java:100)\r\n        \tat io.prestosql.plugin.hive.BackgroundHiveSplitLoader$HiveSplitLoaderTask.process(BackgroundHiveSplitLoader.java:200)\r\n        \t... 8 more\r\n5. try create within presto gives:\r\n      io.prestosql.spi.PrestoException: java.lang.IllegalArgumentException: AWS Access Key ID and Secret Access Key must be specified by setting the fs.s3.awsAccessKeyId and fs.s3.awsSecretAccessKey properties (respectively).\r\n\tat io.prestosql.plugin.hive.metastore.thrift.ThriftHiveMetastore.createTable(ThriftHiveMetastore.java:862)\r\n\tat io.prestosql.plugin.hive.metastore.thrift.BridgingHiveMetastore.createTable(BridgingHiveMetastore.java:164)\r\n\tat io.prestosql.plugin.hive.metastore.cache.CachingHiveMetastore.createTable(CachingHiveMetastore.java:431)\r\n\tat io.prestosql.plugin.hive.metastore.cache.CachingHiveMetastore.createTable(CachingHiveMetastore.java:431)\r\n\tat io.prestosql.plugin.hive.metastore.SemiTransactionalHiveMetastore$CreateTableOperation.run(SemiTransactionalHiveMetastore.java:2404)\r\n\tat io.prestosql.plugin.hive.metastore.SemiTransactionalHiveMetastore$Committer.executeAddTableOperations(SemiTransactionalHiveMetastore.java:1424)\r\n\tat io.prestosql.plugin.hive.metastore.SemiTransactionalHiveMetastore$Committer.access$1000(SemiTransactionalHiveMetastore.java:1043)\r\n\tat io.prestosql.plugin.hive.metastore.SemiTransactionalHiveMetastore.commitShared(SemiTransactionalHiveMetastore.java:986)\r\n\tat io.prestosql.plugin.hive.metastore.SemiTransactionalHiveMetastore.commit(SemiTransactionalHiveMetastore.java:891)\r\n\tat io.prestosql.plugin.hive.HiveMetadata.commit(HiveMetadata.java:2212)\r\n\tat io.prestosql.plugin.hive.HiveConnector.commit(HiveConnector.java:198)\r\n\tat io.prestosql.transaction.InMemoryTransactionManager$TransactionMetadata$ConnectorTransactionMetadata.commit(InMemoryTransactionManager.java:595)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat com.google.common.util.concurrent.TrustedListenableFutureTask$TrustedFutureInterruptibleTask.runInterruptibly(TrustedListenableFutureTask.java:125)\r\n\tat com.google.common.util.concurrent.InterruptibleTask.run(InterruptibleTask.java:57)\r\n\tat com.google.common.util.concurrent.TrustedListenableFutureTask.run(TrustedListenableFutureTask.java:78)\r\n\tat io.airlift.concurrent.BoundedExecutor.drainQueue(BoundedExecutor.java:78)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.hadoop.hive.metastore.api.MetaException: java.lang.IllegalArgumentException: AWS Access Key ID and Secret Access Key must be specified by setting the fs.s3.awsAccessKeyId and fs.s3.awsSecretAccessKey properties (respectively).\r\n\tat org.apache.hadoop.hive.metastore.api.ThriftHiveMetastore$create_table_result$create_table_resultStandardScheme.read(ThriftHiveMetastore.java:52658)\r\n\tat org.apache.hadoop.hive.metastore.api.ThriftHiveMetastore$create_table_result$create_table_resultStandardScheme.read(ThriftHiveMetastore.java:52626)\r\n\tat org.apache.hadoop.hive.metastore.api.ThriftHiveMetastore$create_table_result.read(ThriftHiveMetastore.java:52552)\r\n\tat org.apache.thrift.TServiceClient.receiveBase(TServiceClient.java:86)\r\n\tat org.apache.hadoop.hive.metastore.api.ThriftHiveMetastore$Client.recv_create_table(ThriftHiveMetastore.java:1490)\r\n\tat org.apache.hadoop.hive.metastore.api.ThriftHiveMetastore$Client.create_table(ThriftHiveMetastore.java:1477)\r\n\tat io.prestosql.plugin.hive.metastore.thrift.ThriftHiveMetastoreClient.createTable(ThriftHiveMetastoreClient.java:135)\r\n\tat io.prestosql.plugin.hive.metastore.thrift.ThriftHiveMetastore.lambda$createTable$36(ThriftHiveMetastore.java:850)\r\n\tat io.prestosql.plugin.hive.metastore.thrift.ThriftMetastoreApiStats.lambda$wrap$0(ThriftMetastoreApiStats.java:42)\r\n\tat io.prestosql.plugin.hive.util.RetryDriver.run(RetryDriver.java:130)\r\n\tat io.prestosql.plugin.hive.metastore.thrift.ThriftHiveMetastore.createTable(ThriftHiveMetastore.java:848)\r\n\t... 19 more\r\n\r\nhttps://github.com/verdict-project/docker-presto-with-hadoop used for the experiments since Hadoop 2.8 minimum required",
                "reactions": {
                    "url": "https://api.github.com/repos/trinodb/trino/issues/6127/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/trinodb/trino/issues/6127/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/trinodb/trino/issues/comments/1332611575",
                "html_url": "https://github.com/trinodb/trino/issues/6127#issuecomment-1332611575",
                "issue_url": "https://api.github.com/repos/trinodb/trino/issues/6127",
                "id": 1332611575,
                "node_id": "IC_kwDOCezRTs5Pbgn3",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2022-11-30T19:08:26Z",
                "updated_at": "2022-11-30T19:08:26Z",
                "author_association": "MEMBER",
                "body": "@tooptoop4 I discovered a configuration that allows anonymous access to public S3 buckets, no code changes required:\r\n\r\nhttps://github.com/trinodb/trino/pull/15246#issuecomment-1332607435\r\n\r\nIf this works for you, I think we can close this issue. I'll open an issue and create a PR at https://github.com/trinodb/docs.trino.io",
                "reactions": {
                    "url": "https://api.github.com/repos/trinodb/trino/issues/comments/1332611575/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2022-11-30T19:08:26Z",
        "org": {
            "id": 34147222,
            "login": "trinodb",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/trinodb",
            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?"
        }
    },
    {
        "id": "25572683237",
        "type": "PullRequestEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 166515022,
            "name": "trinodb/trino",
            "url": "https://api.github.com/repos/trinodb/trino"
        },
        "payload": {
            "action": "closed",
            "number": 15246,
            "pull_request": {
                "url": "https://api.github.com/repos/trinodb/trino/pulls/15246",
                "id": 1139513259,
                "node_id": "PR_kwDOCezRTs5D65er",
                "html_url": "https://github.com/trinodb/trino/pull/15246",
                "diff_url": "https://github.com/trinodb/trino/pull/15246.diff",
                "patch_url": "https://github.com/trinodb/trino/pull/15246.patch",
                "issue_url": "https://api.github.com/repos/trinodb/trino/issues/15246",
                "number": 15246,
                "state": "closed",
                "locked": false,
                "title": "Allow Hive connector to read files from public S3 buckets",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "## Description\r\n\r\nAllow Hive connector to read files from public S3 buckets. Fixes #6127\r\n\r\nAdds boolean connector property `hive.s3.anonymous-requests.enabled` to access a public bucket (no AWS access key or secret key is required).\r\n\r\n<!-- Provide details that would help an engineer who is unfamiliar with this part of the code. -->\r\n## Additional context\r\n\r\nBefore this change, attempts to access a public S3 bucket fail with `AccessDeniedException`. Now, when `hive.s3.anonymous-requests.enabled` is set to `true`, `TrinoS3FileSystem` creates the appropriate `AWSCredentialsProvider` to access the public bucket anonymously.\r\n\r\n<!-- Mark the appropriate option with an (x). Propose a release note if you can. -->\r\n## Release notes\r\n\r\n( ) This is not user-visible or docs only and no release notes are required.\r\n( ) Release notes are required, please propose a release note for me.\r\n(x) Release notes are required, with the following suggested text:\r\n\r\nAllow Hive connector to read data from public S3 buckets via a new `hive.s3.anonymous-requests.enabled` connector property. (#6127)\r\n\r\n## Acknowledgements\r\n\r\nMany thanks to @tooptoop4 for the bulk of the work. I just rebased their changes and added tests and docs.",
                "created_at": "2022-11-29T20:44:22Z",
                "updated_at": "2022-11-30T19:04:30Z",
                "closed_at": "2022-11-30T19:04:29Z",
                "merged_at": null,
                "merge_commit_sha": "caf079a4861801dd77ff5b5f8b5447bb8313b365",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [
                    {
                        "login": "electrum",
                        "id": 9230,
                        "node_id": "MDQ6VXNlcjkyMzA=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/9230?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/electrum",
                        "html_url": "https://github.com/electrum",
                        "followers_url": "https://api.github.com/users/electrum/followers",
                        "following_url": "https://api.github.com/users/electrum/following{/other_user}",
                        "gists_url": "https://api.github.com/users/electrum/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/electrum/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/electrum/subscriptions",
                        "organizations_url": "https://api.github.com/users/electrum/orgs",
                        "repos_url": "https://api.github.com/users/electrum/repos",
                        "events_url": "https://api.github.com/users/electrum/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/electrum/received_events",
                        "type": "User",
                        "site_admin": false
                    }
                ],
                "requested_teams": [],
                "labels": [
                    {
                        "id": 1202580151,
                        "node_id": "MDU6TGFiZWwxMjAyNTgwMTUx",
                        "url": "https://api.github.com/repos/trinodb/trino/labels/cla-signed",
                        "name": "cla-signed",
                        "color": "ededed",
                        "default": false,
                        "description": null
                    },
                    {
                        "id": 1754928339,
                        "node_id": "MDU6TGFiZWwxNzU0OTI4MzM5",
                        "url": "https://api.github.com/repos/trinodb/trino/labels/docs",
                        "name": "docs",
                        "color": "ebf49a",
                        "default": false,
                        "description": ""
                    },
                    {
                        "id": 2848487174,
                        "node_id": "MDU6TGFiZWwyODQ4NDg3MTc0",
                        "url": "https://api.github.com/repos/trinodb/trino/labels/tests:hive",
                        "name": "tests:hive",
                        "color": "FBCA04",
                        "default": false,
                        "description": "Run Hive tests on all tested Hive distributions"
                    }
                ],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/trinodb/trino/pulls/15246/commits",
                "review_comments_url": "https://api.github.com/repos/trinodb/trino/pulls/15246/comments",
                "review_comment_url": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/trinodb/trino/issues/15246/comments",
                "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/a88eab9b966d9482404eca0938b37ee82d6e582e",
                "head": {
                    "label": "metadaddy:support-public-bucket",
                    "ref": "support-public-bucket",
                    "sha": "a88eab9b966d9482404eca0938b37ee82d6e582e",
                    "user": {
                        "login": "metadaddy",
                        "id": 723517,
                        "node_id": "MDQ6VXNlcjcyMzUxNw==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/metadaddy",
                        "html_url": "https://github.com/metadaddy",
                        "followers_url": "https://api.github.com/users/metadaddy/followers",
                        "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                        "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                        "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                        "repos_url": "https://api.github.com/users/metadaddy/repos",
                        "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 509274784,
                        "node_id": "R_kgDOHlrqoA",
                        "name": "trino",
                        "full_name": "metadaddy/trino",
                        "private": false,
                        "owner": {
                            "login": "metadaddy",
                            "id": 723517,
                            "node_id": "MDQ6VXNlcjcyMzUxNw==",
                            "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/metadaddy",
                            "html_url": "https://github.com/metadaddy",
                            "followers_url": "https://api.github.com/users/metadaddy/followers",
                            "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                            "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                            "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                            "repos_url": "https://api.github.com/users/metadaddy/repos",
                            "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/metadaddy/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": true,
                        "url": "https://api.github.com/repos/metadaddy/trino",
                        "forks_url": "https://api.github.com/repos/metadaddy/trino/forks",
                        "keys_url": "https://api.github.com/repos/metadaddy/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/metadaddy/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/metadaddy/trino/teams",
                        "hooks_url": "https://api.github.com/repos/metadaddy/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/metadaddy/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/metadaddy/trino/events",
                        "assignees_url": "https://api.github.com/repos/metadaddy/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/metadaddy/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/metadaddy/trino/tags",
                        "blobs_url": "https://api.github.com/repos/metadaddy/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/metadaddy/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/metadaddy/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/metadaddy/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/metadaddy/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/metadaddy/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/metadaddy/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/metadaddy/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/metadaddy/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/metadaddy/trino/subscription",
                        "commits_url": "https://api.github.com/repos/metadaddy/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/metadaddy/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/metadaddy/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/metadaddy/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/metadaddy/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/metadaddy/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/metadaddy/trino/merges",
                        "archive_url": "https://api.github.com/repos/metadaddy/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/metadaddy/trino/downloads",
                        "issues_url": "https://api.github.com/repos/metadaddy/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/metadaddy/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/metadaddy/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/metadaddy/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/metadaddy/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/metadaddy/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/metadaddy/trino/deployments",
                        "created_at": "2022-07-01T00:43:32Z",
                        "updated_at": "2022-07-06T01:44:20Z",
                        "pushed_at": "2022-11-29T23:15:19Z",
                        "git_url": "git://github.com/metadaddy/trino.git",
                        "ssh_url": "git@github.com:metadaddy/trino.git",
                        "clone_url": "https://github.com/metadaddy/trino.git",
                        "svn_url": "https://github.com/metadaddy/trino",
                        "homepage": "https://trino.io",
                        "size": 192368,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": "Java",
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "master"
                    }
                },
                "base": {
                    "label": "trinodb:master",
                    "ref": "master",
                    "sha": "861d51c8b8047d43f017e887231edf01d1561c65",
                    "user": {
                        "login": "trinodb",
                        "id": 34147222,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                        "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/trinodb",
                        "html_url": "https://github.com/trinodb",
                        "followers_url": "https://api.github.com/users/trinodb/followers",
                        "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                        "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                        "organizations_url": "https://api.github.com/users/trinodb/orgs",
                        "repos_url": "https://api.github.com/users/trinodb/repos",
                        "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/trinodb/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 166515022,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNjY1MTUwMjI=",
                        "name": "trino",
                        "full_name": "trinodb/trino",
                        "private": false,
                        "owner": {
                            "login": "trinodb",
                            "id": 34147222,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/trinodb",
                            "html_url": "https://github.com/trinodb",
                            "followers_url": "https://api.github.com/users/trinodb/followers",
                            "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                            "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                            "organizations_url": "https://api.github.com/users/trinodb/orgs",
                            "repos_url": "https://api.github.com/users/trinodb/repos",
                            "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/trinodb/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/trinodb/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": false,
                        "url": "https://api.github.com/repos/trinodb/trino",
                        "forks_url": "https://api.github.com/repos/trinodb/trino/forks",
                        "keys_url": "https://api.github.com/repos/trinodb/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/trinodb/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/trinodb/trino/teams",
                        "hooks_url": "https://api.github.com/repos/trinodb/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/trinodb/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/trinodb/trino/events",
                        "assignees_url": "https://api.github.com/repos/trinodb/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/trinodb/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/trinodb/trino/tags",
                        "blobs_url": "https://api.github.com/repos/trinodb/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/trinodb/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/trinodb/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/trinodb/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/trinodb/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/trinodb/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/trinodb/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/trinodb/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/trinodb/trino/subscription",
                        "commits_url": "https://api.github.com/repos/trinodb/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/trinodb/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/trinodb/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/trinodb/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/trinodb/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/trinodb/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/trinodb/trino/merges",
                        "archive_url": "https://api.github.com/repos/trinodb/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/trinodb/trino/downloads",
                        "issues_url": "https://api.github.com/repos/trinodb/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/trinodb/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/trinodb/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/trinodb/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/trinodb/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/trinodb/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/trinodb/trino/deployments",
                        "created_at": "2019-01-19T06:38:14Z",
                        "updated_at": "2022-11-30T15:00:26Z",
                        "pushed_at": "2022-11-30T18:44:47Z",
                        "git_url": "git://github.com/trinodb/trino.git",
                        "ssh_url": "git@github.com:trinodb/trino.git",
                        "clone_url": "https://github.com/trinodb/trino.git",
                        "svn_url": "https://github.com/trinodb/trino",
                        "homepage": "https://trino.io",
                        "size": 192628,
                        "stargazers_count": 6740,
                        "watchers_count": 6740,
                        "language": "Java",
                        "has_issues": true,
                        "has_projects": false,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": true,
                        "forks_count": 2080,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 2130,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "analytics",
                            "big-data",
                            "data-science",
                            "database",
                            "databases",
                            "datalake",
                            "distributed-database",
                            "distributed-databases",
                            "distributed-systems",
                            "hadoop",
                            "hive",
                            "java",
                            "jdbc",
                            "presto",
                            "prestodb",
                            "query-engine",
                            "sql",
                            "trino"
                        ],
                        "visibility": "public",
                        "forks": 2080,
                        "open_issues": 2130,
                        "watchers": 6740,
                        "default_branch": "master"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15246"
                    },
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15246"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15246"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15246/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15246/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15246/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/trinodb/trino/statuses/a88eab9b966d9482404eca0938b37ee82d6e582e"
                    }
                },
                "author_association": "MEMBER",
                "auto_merge": null,
                "active_lock_reason": null,
                "merged": false,
                "mergeable": true,
                "rebaseable": false,
                "mergeable_state": "clean",
                "merged_by": null,
                "comments": 1,
                "review_comments": 5,
                "maintainer_can_modify": false,
                "commits": 2,
                "additions": 84,
                "deletions": 2,
                "changed_files": 6
            }
        },
        "public": true,
        "created_at": "2022-11-30T19:04:30Z",
        "org": {
            "id": 34147222,
            "login": "trinodb",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/trinodb",
            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?"
        }
    },
    {
        "id": "25572683062",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 166515022,
            "name": "trinodb/trino",
            "url": "https://api.github.com/repos/trinodb/trino"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/trinodb/trino/issues/15246",
                "repository_url": "https://api.github.com/repos/trinodb/trino",
                "labels_url": "https://api.github.com/repos/trinodb/trino/issues/15246/labels{/name}",
                "comments_url": "https://api.github.com/repos/trinodb/trino/issues/15246/comments",
                "events_url": "https://api.github.com/repos/trinodb/trino/issues/15246/events",
                "html_url": "https://github.com/trinodb/trino/pull/15246",
                "id": 1468674025,
                "node_id": "PR_kwDOCezRTs5D65er",
                "number": 15246,
                "title": "Allow Hive connector to read files from public S3 buckets",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 1202580151,
                        "node_id": "MDU6TGFiZWwxMjAyNTgwMTUx",
                        "url": "https://api.github.com/repos/trinodb/trino/labels/cla-signed",
                        "name": "cla-signed",
                        "color": "ededed",
                        "default": false,
                        "description": null
                    },
                    {
                        "id": 1754928339,
                        "node_id": "MDU6TGFiZWwxNzU0OTI4MzM5",
                        "url": "https://api.github.com/repos/trinodb/trino/labels/docs",
                        "name": "docs",
                        "color": "ebf49a",
                        "default": false,
                        "description": ""
                    },
                    {
                        "id": 2848487174,
                        "node_id": "MDU6TGFiZWwyODQ4NDg3MTc0",
                        "url": "https://api.github.com/repos/trinodb/trino/labels/tests:hive",
                        "name": "tests:hive",
                        "color": "FBCA04",
                        "default": false,
                        "description": "Run Hive tests on all tested Hive distributions"
                    }
                ],
                "state": "closed",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 1,
                "created_at": "2022-11-29T20:44:22Z",
                "updated_at": "2022-11-30T19:04:30Z",
                "closed_at": "2022-11-30T19:04:29Z",
                "author_association": "MEMBER",
                "active_lock_reason": null,
                "draft": false,
                "pull_request": {
                    "url": "https://api.github.com/repos/trinodb/trino/pulls/15246",
                    "html_url": "https://github.com/trinodb/trino/pull/15246",
                    "diff_url": "https://github.com/trinodb/trino/pull/15246.diff",
                    "patch_url": "https://github.com/trinodb/trino/pull/15246.patch",
                    "merged_at": null
                },
                "body": "## Description\r\n\r\nAllow Hive connector to read files from public S3 buckets. Fixes #6127\r\n\r\nAdds boolean connector property `hive.s3.anonymous-requests.enabled` to access a public bucket (no AWS access key or secret key is required).\r\n\r\n<!-- Provide details that would help an engineer who is unfamiliar with this part of the code. -->\r\n## Additional context\r\n\r\nBefore this change, attempts to access a public S3 bucket fail with `AccessDeniedException`. Now, when `hive.s3.anonymous-requests.enabled` is set to `true`, `TrinoS3FileSystem` creates the appropriate `AWSCredentialsProvider` to access the public bucket anonymously.\r\n\r\n<!-- Mark the appropriate option with an (x). Propose a release note if you can. -->\r\n## Release notes\r\n\r\n( ) This is not user-visible or docs only and no release notes are required.\r\n( ) Release notes are required, please propose a release note for me.\r\n(x) Release notes are required, with the following suggested text:\r\n\r\nAllow Hive connector to read data from public S3 buckets via a new `hive.s3.anonymous-requests.enabled` connector property. (#6127)\r\n\r\n## Acknowledgements\r\n\r\nMany thanks to @tooptoop4 for the bulk of the work. I just rebased their changes and added tests and docs.",
                "reactions": {
                    "url": "https://api.github.com/repos/trinodb/trino/issues/15246/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/trinodb/trino/issues/15246/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/trinodb/trino/issues/comments/1332607435",
                "html_url": "https://github.com/trinodb/trino/pull/15246#issuecomment-1332607435",
                "issue_url": "https://api.github.com/repos/trinodb/trino/issues/15246",
                "id": 1332607435,
                "node_id": "IC_kwDOCezRTs5PbfnL",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2022-11-30T19:04:29Z",
                "updated_at": "2022-11-30T19:04:29Z",
                "author_association": "MEMBER",
                "body": "Closing this PR, since it is possible for the Hive connector to anonymously access public S3 buckets with the following catalog configuration:\r\n\r\n```\r\nhive.s3.signer-class=com.amazonaws.auth.NoOpSigner\r\n```\r\n\r\nAnd, in `conf/metastore-site.xml`:\r\n\r\n```xml\r\n<!-- Global configuration -->\r\n<property>\r\n    <name>fs.s3a.aws.credentials.provider</name>\r\n    <value>org.apache.hadoop.fs.s3a.AnonymousAWSCredentialsProvider</value>\r\n</property>\r\n```\r\n\r\nor\r\n\r\n```xml\r\n<!-- Per-bucket configuration -->\r\n<property>\r\n    <name>fs.s3a.bucket.BUCKETNAME.aws.credentials.provider</name>\r\n    <value>org.apache.hadoop.fs.s3a.AnonymousAWSCredentialsProvider</value>\r\n</property>\r\n```",
                "reactions": {
                    "url": "https://api.github.com/repos/trinodb/trino/issues/comments/1332607435/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2022-11-30T19:04:30Z",
        "org": {
            "id": 34147222,
            "login": "trinodb",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/trinodb",
            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?"
        }
    },
    {
        "id": "25572560662",
        "type": "PullRequestReviewCommentEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 166515022,
            "name": "trinodb/trino",
            "url": "https://api.github.com/repos/trinodb/trino"
        },
        "payload": {
            "action": "created",
            "comment": {
                "url": "https://api.github.com/repos/trinodb/trino/pulls/comments/1036340715",
                "pull_request_review_id": 1199865851,
                "id": 1036340715,
                "node_id": "PRRC_kwDOCezRTs49xU3r",
                "diff_hunk": "@@ -1016,6 +1020,10 @@ private static Optional<EncryptionMaterialsProvider> createEncryptionMaterialsPr\n \n     private AWSCredentialsProvider createAwsCredentialsProvider(URI uri, Configuration conf)\n     {\n+        if (anonymousRequestsEnabled) {",
                "path": "plugin/trino-hive/src/main/java/io/trino/plugin/hive/s3/TrinoS3FileSystem.java",
                "position": 36,
                "original_position": 36,
                "commit_id": "a88eab9b966d9482404eca0938b37ee82d6e582e",
                "original_commit_id": "a88eab9b966d9482404eca0938b37ee82d6e582e",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "@ebyhr `org.apache.hadoop.fs.s3a.AnonymousAWSCredentialsProvider` wouldn't work, since the class specified by `trino.s3.credentials-provider` needs to:\r\n\r\n> provide a two-argument constructor that takes a `java.net.URI` and a Hadoop `org.apache.hadoop.conf.Configuration` as arguments\r\n\r\n(from the [Trino Hive/S3 docs](https://trino.io/docs/current/connector/hive-s3.html#custom-s3-credentials-provider)).\r\n\r\nHowever, I just discovered a configuration change that _does_ work, with no code change required:\r\n\r\n```\r\nhive.s3.signer-class=com.amazonaws.auth.NoOpSigner\r\n```\r\n\r\nThis simply replaces the default S3 signer with one that does nothing - exactly what we need for anonymous access to public buckets!\r\n\r\nNote that you also need the following in `conf/metastore-site.xml`:\r\n\r\n```xml\r\n<property>\r\n    <name>fs.s3a.aws.credentials.provider</name>\r\n    <value>org.apache.hadoop.fs.s3a.AnonymousAWSCredentialsProvider</value>\r\n</property>\r\n```\r\n\r\nI'll open a ticket and file a PR over at https://github.com/trinodb/docs.trino.io\r\n\r\n@hashhar The problem is, `TrinoS3FileSystem` doesn't know if the configured credentials will work until it later tries to use them. The way the connector is currently written, all buckets accessed by the connector have to be accessible with the same set of credentials.",
                "created_at": "2022-11-30T18:58:16Z",
                "updated_at": "2022-11-30T18:58:17Z",
                "html_url": "https://github.com/trinodb/trino/pull/15246#discussion_r1036340715",
                "pull_request_url": "https://api.github.com/repos/trinodb/trino/pulls/15246",
                "author_association": "MEMBER",
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/comments/1036340715"
                    },
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15246#discussion_r1036340715"
                    },
                    "pull_request": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15246"
                    }
                },
                "reactions": {
                    "url": "https://api.github.com/repos/trinodb/trino/pulls/comments/1036340715/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "start_line": null,
                "original_start_line": null,
                "start_side": null,
                "line": 1023,
                "original_line": 1023,
                "side": "RIGHT",
                "in_reply_to_id": 1035439256
            },
            "pull_request": {
                "url": "https://api.github.com/repos/trinodb/trino/pulls/15246",
                "id": 1139513259,
                "node_id": "PR_kwDOCezRTs5D65er",
                "html_url": "https://github.com/trinodb/trino/pull/15246",
                "diff_url": "https://github.com/trinodb/trino/pull/15246.diff",
                "patch_url": "https://github.com/trinodb/trino/pull/15246.patch",
                "issue_url": "https://api.github.com/repos/trinodb/trino/issues/15246",
                "number": 15246,
                "state": "open",
                "locked": false,
                "title": "Allow Hive connector to read files from public S3 buckets",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "## Description\r\n\r\nAllow Hive connector to read files from public S3 buckets. Fixes #6127\r\n\r\nAdds boolean connector property `hive.s3.anonymous-requests.enabled` to access a public bucket (no AWS access key or secret key is required).\r\n\r\n<!-- Provide details that would help an engineer who is unfamiliar with this part of the code. -->\r\n## Additional context\r\n\r\nBefore this change, attempts to access a public S3 bucket fail with `AccessDeniedException`. Now, when `hive.s3.anonymous-requests.enabled` is set to `true`, `TrinoS3FileSystem` creates the appropriate `AWSCredentialsProvider` to access the public bucket anonymously.\r\n\r\n<!-- Mark the appropriate option with an (x). Propose a release note if you can. -->\r\n## Release notes\r\n\r\n( ) This is not user-visible or docs only and no release notes are required.\r\n( ) Release notes are required, please propose a release note for me.\r\n(x) Release notes are required, with the following suggested text:\r\n\r\nAllow Hive connector to read data from public S3 buckets via a new `hive.s3.anonymous-requests.enabled` connector property. (#6127)\r\n\r\n## Acknowledgements\r\n\r\nMany thanks to @tooptoop4 for the bulk of the work. I just rebased their changes and added tests and docs.",
                "created_at": "2022-11-29T20:44:22Z",
                "updated_at": "2022-11-30T18:58:17Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": "caf079a4861801dd77ff5b5f8b5447bb8313b365",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [
                    {
                        "login": "electrum",
                        "id": 9230,
                        "node_id": "MDQ6VXNlcjkyMzA=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/9230?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/electrum",
                        "html_url": "https://github.com/electrum",
                        "followers_url": "https://api.github.com/users/electrum/followers",
                        "following_url": "https://api.github.com/users/electrum/following{/other_user}",
                        "gists_url": "https://api.github.com/users/electrum/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/electrum/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/electrum/subscriptions",
                        "organizations_url": "https://api.github.com/users/electrum/orgs",
                        "repos_url": "https://api.github.com/users/electrum/repos",
                        "events_url": "https://api.github.com/users/electrum/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/electrum/received_events",
                        "type": "User",
                        "site_admin": false
                    }
                ],
                "requested_teams": [],
                "labels": [
                    {
                        "id": 1202580151,
                        "node_id": "MDU6TGFiZWwxMjAyNTgwMTUx",
                        "url": "https://api.github.com/repos/trinodb/trino/labels/cla-signed",
                        "name": "cla-signed",
                        "color": "ededed",
                        "default": false,
                        "description": null
                    },
                    {
                        "id": 1754928339,
                        "node_id": "MDU6TGFiZWwxNzU0OTI4MzM5",
                        "url": "https://api.github.com/repos/trinodb/trino/labels/docs",
                        "name": "docs",
                        "color": "ebf49a",
                        "default": false,
                        "description": ""
                    },
                    {
                        "id": 2848487174,
                        "node_id": "MDU6TGFiZWwyODQ4NDg3MTc0",
                        "url": "https://api.github.com/repos/trinodb/trino/labels/tests:hive",
                        "name": "tests:hive",
                        "color": "FBCA04",
                        "default": false,
                        "description": "Run Hive tests on all tested Hive distributions"
                    }
                ],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/trinodb/trino/pulls/15246/commits",
                "review_comments_url": "https://api.github.com/repos/trinodb/trino/pulls/15246/comments",
                "review_comment_url": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/trinodb/trino/issues/15246/comments",
                "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/a88eab9b966d9482404eca0938b37ee82d6e582e",
                "head": {
                    "label": "metadaddy:support-public-bucket",
                    "ref": "support-public-bucket",
                    "sha": "a88eab9b966d9482404eca0938b37ee82d6e582e",
                    "user": {
                        "login": "metadaddy",
                        "id": 723517,
                        "node_id": "MDQ6VXNlcjcyMzUxNw==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/metadaddy",
                        "html_url": "https://github.com/metadaddy",
                        "followers_url": "https://api.github.com/users/metadaddy/followers",
                        "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                        "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                        "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                        "repos_url": "https://api.github.com/users/metadaddy/repos",
                        "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 509274784,
                        "node_id": "R_kgDOHlrqoA",
                        "name": "trino",
                        "full_name": "metadaddy/trino",
                        "private": false,
                        "owner": {
                            "login": "metadaddy",
                            "id": 723517,
                            "node_id": "MDQ6VXNlcjcyMzUxNw==",
                            "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/metadaddy",
                            "html_url": "https://github.com/metadaddy",
                            "followers_url": "https://api.github.com/users/metadaddy/followers",
                            "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                            "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                            "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                            "repos_url": "https://api.github.com/users/metadaddy/repos",
                            "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/metadaddy/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": true,
                        "url": "https://api.github.com/repos/metadaddy/trino",
                        "forks_url": "https://api.github.com/repos/metadaddy/trino/forks",
                        "keys_url": "https://api.github.com/repos/metadaddy/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/metadaddy/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/metadaddy/trino/teams",
                        "hooks_url": "https://api.github.com/repos/metadaddy/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/metadaddy/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/metadaddy/trino/events",
                        "assignees_url": "https://api.github.com/repos/metadaddy/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/metadaddy/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/metadaddy/trino/tags",
                        "blobs_url": "https://api.github.com/repos/metadaddy/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/metadaddy/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/metadaddy/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/metadaddy/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/metadaddy/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/metadaddy/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/metadaddy/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/metadaddy/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/metadaddy/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/metadaddy/trino/subscription",
                        "commits_url": "https://api.github.com/repos/metadaddy/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/metadaddy/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/metadaddy/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/metadaddy/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/metadaddy/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/metadaddy/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/metadaddy/trino/merges",
                        "archive_url": "https://api.github.com/repos/metadaddy/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/metadaddy/trino/downloads",
                        "issues_url": "https://api.github.com/repos/metadaddy/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/metadaddy/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/metadaddy/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/metadaddy/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/metadaddy/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/metadaddy/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/metadaddy/trino/deployments",
                        "created_at": "2022-07-01T00:43:32Z",
                        "updated_at": "2022-07-06T01:44:20Z",
                        "pushed_at": "2022-11-29T23:15:19Z",
                        "git_url": "git://github.com/metadaddy/trino.git",
                        "ssh_url": "git@github.com:metadaddy/trino.git",
                        "clone_url": "https://github.com/metadaddy/trino.git",
                        "svn_url": "https://github.com/metadaddy/trino",
                        "homepage": "https://trino.io",
                        "size": 192368,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": "Java",
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "master"
                    }
                },
                "base": {
                    "label": "trinodb:master",
                    "ref": "master",
                    "sha": "861d51c8b8047d43f017e887231edf01d1561c65",
                    "user": {
                        "login": "trinodb",
                        "id": 34147222,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                        "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/trinodb",
                        "html_url": "https://github.com/trinodb",
                        "followers_url": "https://api.github.com/users/trinodb/followers",
                        "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                        "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                        "organizations_url": "https://api.github.com/users/trinodb/orgs",
                        "repos_url": "https://api.github.com/users/trinodb/repos",
                        "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/trinodb/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 166515022,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNjY1MTUwMjI=",
                        "name": "trino",
                        "full_name": "trinodb/trino",
                        "private": false,
                        "owner": {
                            "login": "trinodb",
                            "id": 34147222,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/trinodb",
                            "html_url": "https://github.com/trinodb",
                            "followers_url": "https://api.github.com/users/trinodb/followers",
                            "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                            "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                            "organizations_url": "https://api.github.com/users/trinodb/orgs",
                            "repos_url": "https://api.github.com/users/trinodb/repos",
                            "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/trinodb/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/trinodb/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": false,
                        "url": "https://api.github.com/repos/trinodb/trino",
                        "forks_url": "https://api.github.com/repos/trinodb/trino/forks",
                        "keys_url": "https://api.github.com/repos/trinodb/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/trinodb/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/trinodb/trino/teams",
                        "hooks_url": "https://api.github.com/repos/trinodb/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/trinodb/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/trinodb/trino/events",
                        "assignees_url": "https://api.github.com/repos/trinodb/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/trinodb/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/trinodb/trino/tags",
                        "blobs_url": "https://api.github.com/repos/trinodb/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/trinodb/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/trinodb/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/trinodb/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/trinodb/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/trinodb/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/trinodb/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/trinodb/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/trinodb/trino/subscription",
                        "commits_url": "https://api.github.com/repos/trinodb/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/trinodb/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/trinodb/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/trinodb/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/trinodb/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/trinodb/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/trinodb/trino/merges",
                        "archive_url": "https://api.github.com/repos/trinodb/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/trinodb/trino/downloads",
                        "issues_url": "https://api.github.com/repos/trinodb/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/trinodb/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/trinodb/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/trinodb/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/trinodb/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/trinodb/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/trinodb/trino/deployments",
                        "created_at": "2019-01-19T06:38:14Z",
                        "updated_at": "2022-11-30T15:00:26Z",
                        "pushed_at": "2022-11-30T18:44:47Z",
                        "git_url": "git://github.com/trinodb/trino.git",
                        "ssh_url": "git@github.com:trinodb/trino.git",
                        "clone_url": "https://github.com/trinodb/trino.git",
                        "svn_url": "https://github.com/trinodb/trino",
                        "homepage": "https://trino.io",
                        "size": 192628,
                        "stargazers_count": 6740,
                        "watchers_count": 6740,
                        "language": "Java",
                        "has_issues": true,
                        "has_projects": false,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": true,
                        "forks_count": 2080,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 2131,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "analytics",
                            "big-data",
                            "data-science",
                            "database",
                            "databases",
                            "datalake",
                            "distributed-database",
                            "distributed-databases",
                            "distributed-systems",
                            "hadoop",
                            "hive",
                            "java",
                            "jdbc",
                            "presto",
                            "prestodb",
                            "query-engine",
                            "sql",
                            "trino"
                        ],
                        "visibility": "public",
                        "forks": 2080,
                        "open_issues": 2131,
                        "watchers": 6740,
                        "default_branch": "master"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15246"
                    },
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15246"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15246"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15246/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15246/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15246/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/trinodb/trino/statuses/a88eab9b966d9482404eca0938b37ee82d6e582e"
                    }
                },
                "author_association": "MEMBER",
                "auto_merge": null,
                "active_lock_reason": null
            }
        },
        "public": true,
        "created_at": "2022-11-30T18:58:16Z",
        "org": {
            "id": 34147222,
            "login": "trinodb",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/trinodb",
            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?"
        }
    },
    {
        "id": "25572560605",
        "type": "PullRequestReviewEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 166515022,
            "name": "trinodb/trino",
            "url": "https://api.github.com/repos/trinodb/trino"
        },
        "payload": {
            "action": "created",
            "review": {
                "id": 1199865851,
                "node_id": "PRR_kwDOCezRTs5HhH_7",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": null,
                "commit_id": "a88eab9b966d9482404eca0938b37ee82d6e582e",
                "submitted_at": "2022-11-30T18:58:17Z",
                "state": "commented",
                "html_url": "https://github.com/trinodb/trino/pull/15246#pullrequestreview-1199865851",
                "pull_request_url": "https://api.github.com/repos/trinodb/trino/pulls/15246",
                "author_association": "MEMBER",
                "_links": {
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15246#pullrequestreview-1199865851"
                    },
                    "pull_request": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15246"
                    }
                }
            },
            "pull_request": {
                "url": "https://api.github.com/repos/trinodb/trino/pulls/15246",
                "id": 1139513259,
                "node_id": "PR_kwDOCezRTs5D65er",
                "html_url": "https://github.com/trinodb/trino/pull/15246",
                "diff_url": "https://github.com/trinodb/trino/pull/15246.diff",
                "patch_url": "https://github.com/trinodb/trino/pull/15246.patch",
                "issue_url": "https://api.github.com/repos/trinodb/trino/issues/15246",
                "number": 15246,
                "state": "open",
                "locked": false,
                "title": "Allow Hive connector to read files from public S3 buckets",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "## Description\r\n\r\nAllow Hive connector to read files from public S3 buckets. Fixes #6127\r\n\r\nAdds boolean connector property `hive.s3.anonymous-requests.enabled` to access a public bucket (no AWS access key or secret key is required).\r\n\r\n<!-- Provide details that would help an engineer who is unfamiliar with this part of the code. -->\r\n## Additional context\r\n\r\nBefore this change, attempts to access a public S3 bucket fail with `AccessDeniedException`. Now, when `hive.s3.anonymous-requests.enabled` is set to `true`, `TrinoS3FileSystem` creates the appropriate `AWSCredentialsProvider` to access the public bucket anonymously.\r\n\r\n<!-- Mark the appropriate option with an (x). Propose a release note if you can. -->\r\n## Release notes\r\n\r\n( ) This is not user-visible or docs only and no release notes are required.\r\n( ) Release notes are required, please propose a release note for me.\r\n(x) Release notes are required, with the following suggested text:\r\n\r\nAllow Hive connector to read data from public S3 buckets via a new `hive.s3.anonymous-requests.enabled` connector property. (#6127)\r\n\r\n## Acknowledgements\r\n\r\nMany thanks to @tooptoop4 for the bulk of the work. I just rebased their changes and added tests and docs.",
                "created_at": "2022-11-29T20:44:22Z",
                "updated_at": "2022-11-30T18:58:17Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": "caf079a4861801dd77ff5b5f8b5447bb8313b365",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [
                    {
                        "login": "electrum",
                        "id": 9230,
                        "node_id": "MDQ6VXNlcjkyMzA=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/9230?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/electrum",
                        "html_url": "https://github.com/electrum",
                        "followers_url": "https://api.github.com/users/electrum/followers",
                        "following_url": "https://api.github.com/users/electrum/following{/other_user}",
                        "gists_url": "https://api.github.com/users/electrum/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/electrum/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/electrum/subscriptions",
                        "organizations_url": "https://api.github.com/users/electrum/orgs",
                        "repos_url": "https://api.github.com/users/electrum/repos",
                        "events_url": "https://api.github.com/users/electrum/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/electrum/received_events",
                        "type": "User",
                        "site_admin": false
                    }
                ],
                "requested_teams": [],
                "labels": [
                    {
                        "id": 1202580151,
                        "node_id": "MDU6TGFiZWwxMjAyNTgwMTUx",
                        "url": "https://api.github.com/repos/trinodb/trino/labels/cla-signed",
                        "name": "cla-signed",
                        "color": "ededed",
                        "default": false,
                        "description": null
                    },
                    {
                        "id": 1754928339,
                        "node_id": "MDU6TGFiZWwxNzU0OTI4MzM5",
                        "url": "https://api.github.com/repos/trinodb/trino/labels/docs",
                        "name": "docs",
                        "color": "ebf49a",
                        "default": false,
                        "description": ""
                    },
                    {
                        "id": 2848487174,
                        "node_id": "MDU6TGFiZWwyODQ4NDg3MTc0",
                        "url": "https://api.github.com/repos/trinodb/trino/labels/tests:hive",
                        "name": "tests:hive",
                        "color": "FBCA04",
                        "default": false,
                        "description": "Run Hive tests on all tested Hive distributions"
                    }
                ],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/trinodb/trino/pulls/15246/commits",
                "review_comments_url": "https://api.github.com/repos/trinodb/trino/pulls/15246/comments",
                "review_comment_url": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/trinodb/trino/issues/15246/comments",
                "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/a88eab9b966d9482404eca0938b37ee82d6e582e",
                "head": {
                    "label": "metadaddy:support-public-bucket",
                    "ref": "support-public-bucket",
                    "sha": "a88eab9b966d9482404eca0938b37ee82d6e582e",
                    "user": {
                        "login": "metadaddy",
                        "id": 723517,
                        "node_id": "MDQ6VXNlcjcyMzUxNw==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/metadaddy",
                        "html_url": "https://github.com/metadaddy",
                        "followers_url": "https://api.github.com/users/metadaddy/followers",
                        "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                        "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                        "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                        "repos_url": "https://api.github.com/users/metadaddy/repos",
                        "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 509274784,
                        "node_id": "R_kgDOHlrqoA",
                        "name": "trino",
                        "full_name": "metadaddy/trino",
                        "private": false,
                        "owner": {
                            "login": "metadaddy",
                            "id": 723517,
                            "node_id": "MDQ6VXNlcjcyMzUxNw==",
                            "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/metadaddy",
                            "html_url": "https://github.com/metadaddy",
                            "followers_url": "https://api.github.com/users/metadaddy/followers",
                            "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                            "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                            "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                            "repos_url": "https://api.github.com/users/metadaddy/repos",
                            "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/metadaddy/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": true,
                        "url": "https://api.github.com/repos/metadaddy/trino",
                        "forks_url": "https://api.github.com/repos/metadaddy/trino/forks",
                        "keys_url": "https://api.github.com/repos/metadaddy/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/metadaddy/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/metadaddy/trino/teams",
                        "hooks_url": "https://api.github.com/repos/metadaddy/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/metadaddy/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/metadaddy/trino/events",
                        "assignees_url": "https://api.github.com/repos/metadaddy/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/metadaddy/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/metadaddy/trino/tags",
                        "blobs_url": "https://api.github.com/repos/metadaddy/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/metadaddy/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/metadaddy/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/metadaddy/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/metadaddy/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/metadaddy/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/metadaddy/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/metadaddy/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/metadaddy/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/metadaddy/trino/subscription",
                        "commits_url": "https://api.github.com/repos/metadaddy/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/metadaddy/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/metadaddy/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/metadaddy/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/metadaddy/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/metadaddy/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/metadaddy/trino/merges",
                        "archive_url": "https://api.github.com/repos/metadaddy/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/metadaddy/trino/downloads",
                        "issues_url": "https://api.github.com/repos/metadaddy/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/metadaddy/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/metadaddy/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/metadaddy/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/metadaddy/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/metadaddy/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/metadaddy/trino/deployments",
                        "created_at": "2022-07-01T00:43:32Z",
                        "updated_at": "2022-07-06T01:44:20Z",
                        "pushed_at": "2022-11-29T23:15:19Z",
                        "git_url": "git://github.com/metadaddy/trino.git",
                        "ssh_url": "git@github.com:metadaddy/trino.git",
                        "clone_url": "https://github.com/metadaddy/trino.git",
                        "svn_url": "https://github.com/metadaddy/trino",
                        "homepage": "https://trino.io",
                        "size": 192368,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": "Java",
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "master"
                    }
                },
                "base": {
                    "label": "trinodb:master",
                    "ref": "master",
                    "sha": "861d51c8b8047d43f017e887231edf01d1561c65",
                    "user": {
                        "login": "trinodb",
                        "id": 34147222,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                        "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/trinodb",
                        "html_url": "https://github.com/trinodb",
                        "followers_url": "https://api.github.com/users/trinodb/followers",
                        "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                        "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                        "organizations_url": "https://api.github.com/users/trinodb/orgs",
                        "repos_url": "https://api.github.com/users/trinodb/repos",
                        "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/trinodb/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 166515022,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNjY1MTUwMjI=",
                        "name": "trino",
                        "full_name": "trinodb/trino",
                        "private": false,
                        "owner": {
                            "login": "trinodb",
                            "id": 34147222,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/trinodb",
                            "html_url": "https://github.com/trinodb",
                            "followers_url": "https://api.github.com/users/trinodb/followers",
                            "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                            "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                            "organizations_url": "https://api.github.com/users/trinodb/orgs",
                            "repos_url": "https://api.github.com/users/trinodb/repos",
                            "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/trinodb/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/trinodb/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": false,
                        "url": "https://api.github.com/repos/trinodb/trino",
                        "forks_url": "https://api.github.com/repos/trinodb/trino/forks",
                        "keys_url": "https://api.github.com/repos/trinodb/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/trinodb/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/trinodb/trino/teams",
                        "hooks_url": "https://api.github.com/repos/trinodb/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/trinodb/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/trinodb/trino/events",
                        "assignees_url": "https://api.github.com/repos/trinodb/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/trinodb/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/trinodb/trino/tags",
                        "blobs_url": "https://api.github.com/repos/trinodb/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/trinodb/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/trinodb/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/trinodb/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/trinodb/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/trinodb/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/trinodb/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/trinodb/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/trinodb/trino/subscription",
                        "commits_url": "https://api.github.com/repos/trinodb/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/trinodb/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/trinodb/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/trinodb/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/trinodb/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/trinodb/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/trinodb/trino/merges",
                        "archive_url": "https://api.github.com/repos/trinodb/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/trinodb/trino/downloads",
                        "issues_url": "https://api.github.com/repos/trinodb/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/trinodb/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/trinodb/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/trinodb/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/trinodb/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/trinodb/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/trinodb/trino/deployments",
                        "created_at": "2019-01-19T06:38:14Z",
                        "updated_at": "2022-11-30T15:00:26Z",
                        "pushed_at": "2022-11-30T18:44:47Z",
                        "git_url": "git://github.com/trinodb/trino.git",
                        "ssh_url": "git@github.com:trinodb/trino.git",
                        "clone_url": "https://github.com/trinodb/trino.git",
                        "svn_url": "https://github.com/trinodb/trino",
                        "homepage": "https://trino.io",
                        "size": 192628,
                        "stargazers_count": 6740,
                        "watchers_count": 6740,
                        "language": "Java",
                        "has_issues": true,
                        "has_projects": false,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": true,
                        "forks_count": 2080,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 2131,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "analytics",
                            "big-data",
                            "data-science",
                            "database",
                            "databases",
                            "datalake",
                            "distributed-database",
                            "distributed-databases",
                            "distributed-systems",
                            "hadoop",
                            "hive",
                            "java",
                            "jdbc",
                            "presto",
                            "prestodb",
                            "query-engine",
                            "sql",
                            "trino"
                        ],
                        "visibility": "public",
                        "forks": 2080,
                        "open_issues": 2131,
                        "watchers": 6740,
                        "default_branch": "master"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15246"
                    },
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15246"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15246"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15246/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15246/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15246/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/trinodb/trino/statuses/a88eab9b966d9482404eca0938b37ee82d6e582e"
                    }
                },
                "author_association": "MEMBER",
                "auto_merge": null,
                "active_lock_reason": null
            }
        },
        "public": true,
        "created_at": "2022-11-30T18:58:17Z",
        "org": {
            "id": 34147222,
            "login": "trinodb",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/trinodb",
            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?"
        }
    },
    {
        "id": "25551642090",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 166515022,
            "name": "trinodb/trino",
            "url": "https://api.github.com/repos/trinodb/trino"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/trinodb/trino/issues/14859",
                "repository_url": "https://api.github.com/repos/trinodb/trino",
                "labels_url": "https://api.github.com/repos/trinodb/trino/issues/14859/labels{/name}",
                "comments_url": "https://api.github.com/repos/trinodb/trino/issues/14859/comments",
                "events_url": "https://api.github.com/repos/trinodb/trino/issues/14859/events",
                "html_url": "https://github.com/trinodb/trino/pull/14859",
                "id": 1431822188,
                "node_id": "PR_kwDOCezRTs5B_M_I",
                "number": 14859,
                "title": "Use correct abbreviations for data quantities. Fixes #13054",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 1202580151,
                        "node_id": "MDU6TGFiZWwxMjAyNTgwMTUx",
                        "url": "https://api.github.com/repos/trinodb/trino/labels/cla-signed",
                        "name": "cla-signed",
                        "color": "ededed",
                        "default": false,
                        "description": null
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 2,
                "created_at": "2022-11-01T17:41:35Z",
                "updated_at": "2022-11-30T00:35:32Z",
                "closed_at": null,
                "author_association": "MEMBER",
                "active_lock_reason": null,
                "draft": false,
                "pull_request": {
                    "url": "https://api.github.com/repos/trinodb/trino/pulls/14859",
                    "html_url": "https://github.com/trinodb/trino/pull/14859",
                    "diff_url": "https://github.com/trinodb/trino/pull/14859.diff",
                    "patch_url": "https://github.com/trinodb/trino/pull/14859.patch",
                    "merged_at": null
                },
                "body": "<!-- Thank you for submitting a pull request! Find more information in our development guide at https://github.com/trinodb/trino/blob/master/.github/DEVELOPMENT.md and contact us on #dev in Slack. -->\r\n<!-- Provide an overview of the PR for maintainers and reviewers. -->\r\n## Description\r\n\r\nThe Trino CLI currently reports data size incorrectly, using the legacy, 1,024-based, values for K, M, G etc rather than the modern 1,000-based values.\r\n\r\n> Is this change a fix, improvement, new feature, refactoring, or other?\r\n\r\nFix\r\n\r\n> Is this a change to the core query engine, a connector, client library, or the SPI interfaces? (be specific)\r\n\r\nCLI\r\n\r\n<!-- Provide a user-friendly explanation, keep it brief if it isn't user-visible. -->\r\n## Non-technical explanation\r\n\r\nThis change corrects the display of data sizes in the CLI to use KiB, MiB for 1,024-based values and adds a command option, `--decimal-data-size` to display data sizes in 1,000-based units.\r\n\r\n<!-- Mark the appropriate option with an (x). Propose a release note if you can. -->\r\n## Release notes\r\n\r\n( ) This is not user-visible or docs only and no release notes are required.\r\n( ) Release notes are required, please propose a release note for me.\r\n(x) Release notes are required, with the following suggested text:\r\n\r\nThe CLI now shows data sizes and rates with binary (1024-based) abbreviations: KiB, MiB, etc. A new command option, `--decimal-data-size`, shows decimal (1000-based) values and abbreviations: KB, MB, etc. (#13054)\r\n\r\n## Related issues, pull requests, and links\r\n\r\n* Fixes #13054\r\n* Replaces #13095 ",
                "reactions": {
                    "url": "https://api.github.com/repos/trinodb/trino/issues/14859/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/trinodb/trino/issues/14859/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/trinodb/trino/issues/comments/1331496588",
                "html_url": "https://github.com/trinodb/trino/pull/14859#issuecomment-1331496588",
                "issue_url": "https://api.github.com/repos/trinodb/trino/issues/14859",
                "id": 1331496588,
                "node_id": "IC_kwDOCezRTs5PXQaM",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2022-11-30T00:35:32Z",
                "updated_at": "2022-11-30T00:35:32Z",
                "author_association": "MEMBER",
                "body": "The impact on the formatting of the CLI is minimal:\r\n\r\n```\r\ntrino:ds> select count(*) from drivestats;\r\n   _col0   \r\n-----------\r\n 346006813 \r\n(1 row)\r\n\r\nQuery 20221129_225226_00008_9q4rt, FINISHED, 1 node\r\nSplits: 420 total, 420 done (100.00%)\r\n12.27 [346M rows, 4.66MiB] [28.2M rows/s, 389KiB/s]\r\n```\r\n\r\nSame query with `--decimal-data-size `:\r\n\r\n```\r\ntrino:ds> select count(*) from drivestats;\r\n   _col0   \r\n-----------\r\n 346006813 \r\n(1 row)\r\n\r\nQuery 20221129_225715_00012_9q4rt, FINISHED, 1 node\r\nSplits: 421 total, 421 done (100.00%)\r\n11.02 [346M rows, 4.89MB] [31.4M rows/s, 443KB/s]\r\n```",
                "reactions": {
                    "url": "https://api.github.com/repos/trinodb/trino/issues/comments/1331496588/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2022-11-30T00:35:32Z",
        "org": {
            "id": 34147222,
            "login": "trinodb",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/trinodb",
            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?"
        }
    },
    {
        "id": "25551317564",
        "type": "PushEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 572285370,
            "name": "metadaddy/blazer",
            "url": "https://api.github.com/repos/metadaddy/blazer"
        },
        "payload": {
            "push_id": 11828041512,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/master",
            "head": "b7a0f71d776b6d011833f7a8f2991ec87c44c76c",
            "before": "33365de0f2390cd5c67560303706a9d7e39043a2",
            "commits": [
                {
                    "sha": "b7a0f71d776b6d011833f7a8f2991ec87c44c76c",
                    "author": {
                        "email": "pat@backblaze.com",
                        "name": "Pat Patterson"
                    },
                    "message": "Remove Travic build status",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/blazer/commits/b7a0f71d776b6d011833f7a8f2991ec87c44c76c"
                }
            ]
        },
        "public": true,
        "created_at": "2022-11-30T00:09:12Z"
    },
    {
        "id": "25551286746",
        "type": "PullRequestEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 572276134,
            "name": "Backblaze/blazer",
            "url": "https://api.github.com/repos/Backblaze/blazer"
        },
        "payload": {
            "action": "opened",
            "number": 1,
            "pull_request": {
                "url": "https://api.github.com/repos/Backblaze/blazer/pulls/1",
                "id": 1139682845,
                "node_id": "PR_kwDOIhw9ps5D7i4d",
                "html_url": "https://github.com/Backblaze/blazer/pull/1",
                "diff_url": "https://github.com/Backblaze/blazer/pull/1.diff",
                "patch_url": "https://github.com/Backblaze/blazer/pull/1.patch",
                "issue_url": "https://api.github.com/repos/Backblaze/blazer/issues/1",
                "number": 1,
                "state": "open",
                "locked": false,
                "title": "Update README",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "Updated README:\r\n* Credit @kurin as the original creator\r\n* Remove Travis CI build status\r\n* Change the example from using account id/master key to application key id/application key",
                "created_at": "2022-11-30T00:06:44Z",
                "updated_at": "2022-11-30T00:06:44Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": null,
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/Backblaze/blazer/pulls/1/commits",
                "review_comments_url": "https://api.github.com/repos/Backblaze/blazer/pulls/1/comments",
                "review_comment_url": "https://api.github.com/repos/Backblaze/blazer/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/Backblaze/blazer/issues/1/comments",
                "statuses_url": "https://api.github.com/repos/Backblaze/blazer/statuses/33365de0f2390cd5c67560303706a9d7e39043a2",
                "head": {
                    "label": "metadaddy:master",
                    "ref": "master",
                    "sha": "33365de0f2390cd5c67560303706a9d7e39043a2",
                    "user": {
                        "login": "metadaddy",
                        "id": 723517,
                        "node_id": "MDQ6VXNlcjcyMzUxNw==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/metadaddy",
                        "html_url": "https://github.com/metadaddy",
                        "followers_url": "https://api.github.com/users/metadaddy/followers",
                        "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                        "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                        "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                        "repos_url": "https://api.github.com/users/metadaddy/repos",
                        "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 572285370,
                        "node_id": "R_kgDOIhxhug",
                        "name": "blazer",
                        "full_name": "metadaddy/blazer",
                        "private": false,
                        "owner": {
                            "login": "metadaddy",
                            "id": 723517,
                            "node_id": "MDQ6VXNlcjcyMzUxNw==",
                            "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/metadaddy",
                            "html_url": "https://github.com/metadaddy",
                            "followers_url": "https://api.github.com/users/metadaddy/followers",
                            "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                            "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                            "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                            "repos_url": "https://api.github.com/users/metadaddy/repos",
                            "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/metadaddy/blazer",
                        "description": "A Go library for Backblaze's B2.",
                        "fork": true,
                        "url": "https://api.github.com/repos/metadaddy/blazer",
                        "forks_url": "https://api.github.com/repos/metadaddy/blazer/forks",
                        "keys_url": "https://api.github.com/repos/metadaddy/blazer/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/metadaddy/blazer/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/metadaddy/blazer/teams",
                        "hooks_url": "https://api.github.com/repos/metadaddy/blazer/hooks",
                        "issue_events_url": "https://api.github.com/repos/metadaddy/blazer/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/metadaddy/blazer/events",
                        "assignees_url": "https://api.github.com/repos/metadaddy/blazer/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/metadaddy/blazer/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/metadaddy/blazer/tags",
                        "blobs_url": "https://api.github.com/repos/metadaddy/blazer/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/metadaddy/blazer/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/metadaddy/blazer/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/metadaddy/blazer/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/metadaddy/blazer/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/metadaddy/blazer/languages",
                        "stargazers_url": "https://api.github.com/repos/metadaddy/blazer/stargazers",
                        "contributors_url": "https://api.github.com/repos/metadaddy/blazer/contributors",
                        "subscribers_url": "https://api.github.com/repos/metadaddy/blazer/subscribers",
                        "subscription_url": "https://api.github.com/repos/metadaddy/blazer/subscription",
                        "commits_url": "https://api.github.com/repos/metadaddy/blazer/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/metadaddy/blazer/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/metadaddy/blazer/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/metadaddy/blazer/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/metadaddy/blazer/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/metadaddy/blazer/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/metadaddy/blazer/merges",
                        "archive_url": "https://api.github.com/repos/metadaddy/blazer/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/metadaddy/blazer/downloads",
                        "issues_url": "https://api.github.com/repos/metadaddy/blazer/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/metadaddy/blazer/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/metadaddy/blazer/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/metadaddy/blazer/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/metadaddy/blazer/labels{/name}",
                        "releases_url": "https://api.github.com/repos/metadaddy/blazer/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/metadaddy/blazer/deployments",
                        "created_at": "2022-11-30T00:02:22Z",
                        "updated_at": "2022-11-30T00:03:02Z",
                        "pushed_at": "2022-11-30T00:02:57Z",
                        "git_url": "git://github.com/metadaddy/blazer.git",
                        "ssh_url": "git@github.com:metadaddy/blazer.git",
                        "clone_url": "https://github.com/metadaddy/blazer.git",
                        "svn_url": "https://github.com/metadaddy/blazer",
                        "homepage": "",
                        "size": 615,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": "Go",
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "other",
                            "name": "Other",
                            "spdx_id": "NOASSERTION",
                            "url": null,
                            "node_id": "MDc6TGljZW5zZTA="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "master"
                    }
                },
                "base": {
                    "label": "Backblaze:master",
                    "ref": "master",
                    "sha": "ba894c124ac6006bd739246ed772ba2fe5d68620",
                    "user": {
                        "login": "Backblaze",
                        "id": 10283486,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjEwMjgzNDg2",
                        "avatar_url": "https://avatars.githubusercontent.com/u/10283486?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/Backblaze",
                        "html_url": "https://github.com/Backblaze",
                        "followers_url": "https://api.github.com/users/Backblaze/followers",
                        "following_url": "https://api.github.com/users/Backblaze/following{/other_user}",
                        "gists_url": "https://api.github.com/users/Backblaze/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/Backblaze/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/Backblaze/subscriptions",
                        "organizations_url": "https://api.github.com/users/Backblaze/orgs",
                        "repos_url": "https://api.github.com/users/Backblaze/repos",
                        "events_url": "https://api.github.com/users/Backblaze/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/Backblaze/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 572276134,
                        "node_id": "R_kgDOIhw9pg",
                        "name": "blazer",
                        "full_name": "Backblaze/blazer",
                        "private": false,
                        "owner": {
                            "login": "Backblaze",
                            "id": 10283486,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjEwMjgzNDg2",
                            "avatar_url": "https://avatars.githubusercontent.com/u/10283486?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/Backblaze",
                            "html_url": "https://github.com/Backblaze",
                            "followers_url": "https://api.github.com/users/Backblaze/followers",
                            "following_url": "https://api.github.com/users/Backblaze/following{/other_user}",
                            "gists_url": "https://api.github.com/users/Backblaze/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/Backblaze/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/Backblaze/subscriptions",
                            "organizations_url": "https://api.github.com/users/Backblaze/orgs",
                            "repos_url": "https://api.github.com/users/Backblaze/repos",
                            "events_url": "https://api.github.com/users/Backblaze/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/Backblaze/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/Backblaze/blazer",
                        "description": "A Go library for Backblaze's B2.",
                        "fork": true,
                        "url": "https://api.github.com/repos/Backblaze/blazer",
                        "forks_url": "https://api.github.com/repos/Backblaze/blazer/forks",
                        "keys_url": "https://api.github.com/repos/Backblaze/blazer/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/Backblaze/blazer/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/Backblaze/blazer/teams",
                        "hooks_url": "https://api.github.com/repos/Backblaze/blazer/hooks",
                        "issue_events_url": "https://api.github.com/repos/Backblaze/blazer/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/Backblaze/blazer/events",
                        "assignees_url": "https://api.github.com/repos/Backblaze/blazer/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/Backblaze/blazer/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/Backblaze/blazer/tags",
                        "blobs_url": "https://api.github.com/repos/Backblaze/blazer/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/Backblaze/blazer/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/Backblaze/blazer/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/Backblaze/blazer/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/Backblaze/blazer/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/Backblaze/blazer/languages",
                        "stargazers_url": "https://api.github.com/repos/Backblaze/blazer/stargazers",
                        "contributors_url": "https://api.github.com/repos/Backblaze/blazer/contributors",
                        "subscribers_url": "https://api.github.com/repos/Backblaze/blazer/subscribers",
                        "subscription_url": "https://api.github.com/repos/Backblaze/blazer/subscription",
                        "commits_url": "https://api.github.com/repos/Backblaze/blazer/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/Backblaze/blazer/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/Backblaze/blazer/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/Backblaze/blazer/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/Backblaze/blazer/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/Backblaze/blazer/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/Backblaze/blazer/merges",
                        "archive_url": "https://api.github.com/repos/Backblaze/blazer/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/Backblaze/blazer/downloads",
                        "issues_url": "https://api.github.com/repos/Backblaze/blazer/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/Backblaze/blazer/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/Backblaze/blazer/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/Backblaze/blazer/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/Backblaze/blazer/labels{/name}",
                        "releases_url": "https://api.github.com/repos/Backblaze/blazer/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/Backblaze/blazer/deployments",
                        "created_at": "2022-11-29T23:22:18Z",
                        "updated_at": "2022-09-15T03:28:49Z",
                        "pushed_at": "2022-05-11T18:58:16Z",
                        "git_url": "git://github.com/Backblaze/blazer.git",
                        "ssh_url": "git@github.com:Backblaze/blazer.git",
                        "clone_url": "https://github.com/Backblaze/blazer.git",
                        "svn_url": "https://github.com/Backblaze/blazer",
                        "homepage": "",
                        "size": 615,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": null,
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 1,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 1,
                        "license": {
                            "key": "other",
                            "name": "Other",
                            "spdx_id": "NOASSERTION",
                            "url": null,
                            "node_id": "MDc6TGljZW5zZTA="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 1,
                        "open_issues": 1,
                        "watchers": 0,
                        "default_branch": "master"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/Backblaze/blazer/pulls/1"
                    },
                    "html": {
                        "href": "https://github.com/Backblaze/blazer/pull/1"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/Backblaze/blazer/issues/1"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/Backblaze/blazer/issues/1/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/Backblaze/blazer/pulls/1/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/Backblaze/blazer/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/Backblaze/blazer/pulls/1/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/Backblaze/blazer/statuses/33365de0f2390cd5c67560303706a9d7e39043a2"
                    }
                },
                "author_association": "MEMBER",
                "auto_merge": null,
                "active_lock_reason": null,
                "merged": false,
                "mergeable": null,
                "rebaseable": null,
                "mergeable_state": "unknown",
                "merged_by": null,
                "comments": 0,
                "review_comments": 0,
                "maintainer_can_modify": true,
                "commits": 1,
                "additions": 11,
                "deletions": 16,
                "changed_files": 1
            }
        },
        "public": true,
        "created_at": "2022-11-30T00:06:44Z",
        "org": {
            "id": 10283486,
            "login": "Backblaze",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/Backblaze",
            "avatar_url": "https://avatars.githubusercontent.com/u/10283486?"
        }
    },
    {
        "id": "25551238562",
        "type": "PushEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 572285370,
            "name": "metadaddy/blazer",
            "url": "https://api.github.com/repos/metadaddy/blazer"
        },
        "payload": {
            "push_id": 11827999289,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/master",
            "head": "33365de0f2390cd5c67560303706a9d7e39043a2",
            "before": "ba894c124ac6006bd739246ed772ba2fe5d68620",
            "commits": [
                {
                    "sha": "33365de0f2390cd5c67560303706a9d7e39043a2",
                    "author": {
                        "email": "pat@backblaze.com",
                        "name": "Pat Patterson"
                    },
                    "message": "Update README",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/blazer/commits/33365de0f2390cd5c67560303706a9d7e39043a2"
                }
            ]
        },
        "public": true,
        "created_at": "2022-11-30T00:02:57Z"
    },
    {
        "id": "25551231420",
        "type": "ForkEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 572276134,
            "name": "Backblaze/blazer",
            "url": "https://api.github.com/repos/Backblaze/blazer"
        },
        "payload": {
            "forkee": {
                "id": 572285370,
                "node_id": "R_kgDOIhxhug",
                "name": "blazer",
                "full_name": "metadaddy/blazer",
                "private": false,
                "owner": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "html_url": "https://github.com/metadaddy/blazer",
                "description": "A Go library for Backblaze's B2.",
                "fork": true,
                "url": "https://api.github.com/repos/metadaddy/blazer",
                "forks_url": "https://api.github.com/repos/metadaddy/blazer/forks",
                "keys_url": "https://api.github.com/repos/metadaddy/blazer/keys{/key_id}",
                "collaborators_url": "https://api.github.com/repos/metadaddy/blazer/collaborators{/collaborator}",
                "teams_url": "https://api.github.com/repos/metadaddy/blazer/teams",
                "hooks_url": "https://api.github.com/repos/metadaddy/blazer/hooks",
                "issue_events_url": "https://api.github.com/repos/metadaddy/blazer/issues/events{/number}",
                "events_url": "https://api.github.com/repos/metadaddy/blazer/events",
                "assignees_url": "https://api.github.com/repos/metadaddy/blazer/assignees{/user}",
                "branches_url": "https://api.github.com/repos/metadaddy/blazer/branches{/branch}",
                "tags_url": "https://api.github.com/repos/metadaddy/blazer/tags",
                "blobs_url": "https://api.github.com/repos/metadaddy/blazer/git/blobs{/sha}",
                "git_tags_url": "https://api.github.com/repos/metadaddy/blazer/git/tags{/sha}",
                "git_refs_url": "https://api.github.com/repos/metadaddy/blazer/git/refs{/sha}",
                "trees_url": "https://api.github.com/repos/metadaddy/blazer/git/trees{/sha}",
                "statuses_url": "https://api.github.com/repos/metadaddy/blazer/statuses/{sha}",
                "languages_url": "https://api.github.com/repos/metadaddy/blazer/languages",
                "stargazers_url": "https://api.github.com/repos/metadaddy/blazer/stargazers",
                "contributors_url": "https://api.github.com/repos/metadaddy/blazer/contributors",
                "subscribers_url": "https://api.github.com/repos/metadaddy/blazer/subscribers",
                "subscription_url": "https://api.github.com/repos/metadaddy/blazer/subscription",
                "commits_url": "https://api.github.com/repos/metadaddy/blazer/commits{/sha}",
                "git_commits_url": "https://api.github.com/repos/metadaddy/blazer/git/commits{/sha}",
                "comments_url": "https://api.github.com/repos/metadaddy/blazer/comments{/number}",
                "issue_comment_url": "https://api.github.com/repos/metadaddy/blazer/issues/comments{/number}",
                "contents_url": "https://api.github.com/repos/metadaddy/blazer/contents/{+path}",
                "compare_url": "https://api.github.com/repos/metadaddy/blazer/compare/{base}...{head}",
                "merges_url": "https://api.github.com/repos/metadaddy/blazer/merges",
                "archive_url": "https://api.github.com/repos/metadaddy/blazer/{archive_format}{/ref}",
                "downloads_url": "https://api.github.com/repos/metadaddy/blazer/downloads",
                "issues_url": "https://api.github.com/repos/metadaddy/blazer/issues{/number}",
                "pulls_url": "https://api.github.com/repos/metadaddy/blazer/pulls{/number}",
                "milestones_url": "https://api.github.com/repos/metadaddy/blazer/milestones{/number}",
                "notifications_url": "https://api.github.com/repos/metadaddy/blazer/notifications{?since,all,participating}",
                "labels_url": "https://api.github.com/repos/metadaddy/blazer/labels{/name}",
                "releases_url": "https://api.github.com/repos/metadaddy/blazer/releases{/id}",
                "deployments_url": "https://api.github.com/repos/metadaddy/blazer/deployments",
                "created_at": "2022-11-30T00:02:22Z",
                "updated_at": "2022-09-15T03:28:49Z",
                "pushed_at": "2022-05-11T18:58:16Z",
                "git_url": "git://github.com/metadaddy/blazer.git",
                "ssh_url": "git@github.com:metadaddy/blazer.git",
                "clone_url": "https://github.com/metadaddy/blazer.git",
                "svn_url": "https://github.com/metadaddy/blazer",
                "homepage": "",
                "size": 615,
                "stargazers_count": 0,
                "watchers_count": 0,
                "language": null,
                "has_issues": false,
                "has_projects": true,
                "has_downloads": true,
                "has_wiki": true,
                "has_pages": false,
                "has_discussions": false,
                "forks_count": 0,
                "mirror_url": null,
                "archived": false,
                "disabled": false,
                "open_issues_count": 0,
                "license": {
                    "key": "other",
                    "name": "Other",
                    "spdx_id": "NOASSERTION",
                    "url": null,
                    "node_id": "MDc6TGljZW5zZTA="
                },
                "allow_forking": true,
                "is_template": false,
                "web_commit_signoff_required": false,
                "topics": [],
                "visibility": "public",
                "forks": 0,
                "open_issues": 0,
                "watchers": 0,
                "default_branch": "master",
                "public": true
            }
        },
        "public": true,
        "created_at": "2022-11-30T00:02:24Z",
        "org": {
            "id": 10283486,
            "login": "Backblaze",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/Backblaze",
            "avatar_url": "https://avatars.githubusercontent.com/u/10283486?"
        }
    },
    {
        "id": "25550618758",
        "type": "PushEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 509274784,
            "name": "metadaddy/trino",
            "url": "https://api.github.com/repos/metadaddy/trino"
        },
        "payload": {
            "push_id": 11827673037,
            "size": 400,
            "distinct_size": 2,
            "ref": "refs/heads/cli-wrong-units",
            "head": "affc258106e74e4ec67b39a29fd78174b3f75e70",
            "before": "9a8ab094ee16249b0c601aedb0c364b300c19c55",
            "commits": [
                {
                    "sha": "f78923b19e63788afb6005e99a5094c5376712ed",
                    "author": {
                        "email": "ashhar.hasan@starburstdata.com",
                        "name": "Ashhar Hasan"
                    },
                    "message": "Update Druid JDBC driver version",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/f78923b19e63788afb6005e99a5094c5376712ed"
                },
                {
                    "sha": "c8f2949d6233c2df1023248c85ba38e61417159c",
                    "author": {
                        "email": "ashhar.hasan@starburstdata.com",
                        "name": "Ashhar Hasan"
                    },
                    "message": "Update protobuf-java version in Pinot connector",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/c8f2949d6233c2df1023248c85ba38e61417159c"
                },
                {
                    "sha": "89ee3a3b5461d2695b3b6a79aae7850195f44be2",
                    "author": {
                        "email": "ashhar.hasan@starburstdata.com",
                        "name": "Ashhar Hasan"
                    },
                    "message": "Update Redshift JDBC driver\n\nThe newer driver fixes some issues with metadata queries where incorrect\ndata type or precision/decimal digits can be returned",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/89ee3a3b5461d2695b3b6a79aae7850195f44be2"
                },
                {
                    "sha": "e98e17ad9199ae85862d95731dbb7d8288fb4ef5",
                    "author": {
                        "email": "ashhar.hasan@starburstdata.com",
                        "name": "Ashhar Hasan"
                    },
                    "message": "Update AWS Java SDK to address CVE-2022-31159\n\nNote that Trino doesn't use TransferManager and is not actually affected.",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/e98e17ad9199ae85862d95731dbb7d8288fb4ef5"
                },
                {
                    "sha": "f9e51977aad684e16a715dcd5e5f25354f7f185b",
                    "author": {
                        "email": "surpass.simple@gmail.com",
                        "name": "tangjiangling"
                    },
                    "message": "Use arrays to initialize the member variables of MultilevelSplitQueue\n\nPreviously in `MultilevelSplitQueue`, `levelScheduledTime` and\n`levelMinPriority` were initialized using arrays, while\n`levelWaitingSplits` and `selectedLevelCounters` were initialized using\n`List`, this commit unifies the style by making all these variables\ninitialized using array style.",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/f9e51977aad684e16a715dcd5e5f25354f7f185b"
                },
                {
                    "sha": "4f5bc7c236f786a6890a10e504ef21f68ca78388",
                    "author": {
                        "email": "surpass.simple@gmail.com",
                        "name": "tangjiangling"
                    },
                    "message": "Rename variables for readability\n\nThe indexes of these arrays are all \"level\" related, so we can rename\nthem.",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/4f5bc7c236f786a6890a10e504ef21f68ca78388"
                },
                {
                    "sha": "c3ebf6e4c94a622878bf80b38629ab565776c715",
                    "author": {
                        "email": "surpass.simple@gmail.com",
                        "name": "tangjiangling"
                    },
                    "message": "Replace `Stream#toArray` with `toArray`",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/c3ebf6e4c94a622878bf80b38629ab565776c715"
                },
                {
                    "sha": "40711d82f43a3b43a4217683843f893cfa470573",
                    "author": {
                        "email": "surpass.simple@gmail.com",
                        "name": "tangjiangling"
                    },
                    "message": "Replace lambda with method reference",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/40711d82f43a3b43a4217683843f893cfa470573"
                },
                {
                    "sha": "b52e31860893f67f9626d7ab38abd4fe1f2b957c",
                    "author": {
                        "email": "surpass.simple@gmail.com",
                        "name": "tangjiangling"
                    },
                    "message": "Simplify with functional style expression",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/b52e31860893f67f9626d7ab38abd4fe1f2b957c"
                },
                {
                    "sha": "b012d610796a6a434f9b1b772cc317ee02e5d96e",
                    "author": {
                        "email": "surpass.simple@gmail.com",
                        "name": "tangjiangling"
                    },
                    "message": "Fix typos",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/b012d610796a6a434f9b1b772cc317ee02e5d96e"
                },
                {
                    "sha": "a1e87ba3de9e55cc2aec9590836142e0cac932bd",
                    "author": {
                        "email": "surpass.simple@gmail.com",
                        "name": "tangjiangling"
                    },
                    "message": "Remove unnecessary boxing",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/a1e87ba3de9e55cc2aec9590836142e0cac932bd"
                },
                {
                    "sha": "3f4771cee916ca244b049eeeb505a541015cb176",
                    "author": {
                        "email": "jacob.baskin@gmail.com",
                        "name": "Jacob Baskin"
                    },
                    "message": "Ensure concurrency/write parallelism for product tests",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/3f4771cee916ca244b049eeeb505a541015cb176"
                },
                {
                    "sha": "0ae69d20d2b9e9ca3e4acd9dadab6a2ae6d69f1c",
                    "author": {
                        "email": "mtraverso@gmail.com",
                        "name": "Martin Traverso"
                    },
                    "message": "Migrate TestRowOperators to new assertions",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/0ae69d20d2b9e9ca3e4acd9dadab6a2ae6d69f1c"
                },
                {
                    "sha": "993b0f18f506d28721c5e98932608740167e7e80",
                    "author": {
                        "email": "mtraverso@gmail.com",
                        "name": "Martin Traverso"
                    },
                    "message": "Migrate TestDateTimeFunctions to new assertions",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/993b0f18f506d28721c5e98932608740167e7e80"
                },
                {
                    "sha": "fdec4b93bde0103588659eafa585a95ede135518",
                    "author": {
                        "email": "mtraverso@gmail.com",
                        "name": "Martin Traverso"
                    },
                    "message": "Use switch expression",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/fdec4b93bde0103588659eafa585a95ede135518"
                },
                {
                    "sha": "49aa6f04ddd57907d89e5017643fdf4ab19ed527",
                    "author": {
                        "email": "mtraverso@gmail.com",
                        "name": "Martin Traverso"
                    },
                    "message": "Migrate TestExpressionCompiler to new assertions",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/49aa6f04ddd57907d89e5017643fdf4ab19ed527"
                },
                {
                    "sha": "fda40d421c0669e055d8cb172296f6820804081a",
                    "author": {
                        "email": "mtraverso@gmail.com",
                        "name": "Martin Traverso"
                    },
                    "message": "Remove support for parallel execution in TestExpressioCompiler\n\nIt's already disabled, it doesn't actually work (tests fail if enabled),\nand the whole suite takes under two minutes to run, so it seems unnecessary.",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/fda40d421c0669e055d8cb172296f6820804081a"
                },
                {
                    "sha": "bd143ce94700dce802289a65a5cc1ef48bcfd6b4",
                    "author": {
                        "email": "mtraverso@gmail.com",
                        "name": "Martin Traverso"
                    },
                    "message": "Migrate test to JUnit 5",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/bd143ce94700dce802289a65a5cc1ef48bcfd6b4"
                },
                {
                    "sha": "ac8f435bc9065d9ab5bc9e8a15dd19014519daed",
                    "author": {
                        "email": "mtraverso@gmail.com",
                        "name": "Martin Traverso"
                    },
                    "message": "Rename methods",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/ac8f435bc9065d9ab5bc9e8a15dd19014519daed"
                },
                {
                    "sha": "29f1c9258d9a7bff185b6516c26da72bd14bb2cb",
                    "author": {
                        "email": "mtraverso@gmail.com",
                        "name": "Martin Traverso"
                    },
                    "message": "Remove unused methods",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/29f1c9258d9a7bff185b6516c26da72bd14bb2cb"
                }
            ]
        },
        "public": true,
        "created_at": "2022-11-29T23:15:20Z"
    },
    {
        "id": "25550505281",
        "type": "PushEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 509274784,
            "name": "metadaddy/trino",
            "url": "https://api.github.com/repos/metadaddy/trino"
        },
        "payload": {
            "push_id": 11827616407,
            "size": 399,
            "distinct_size": 399,
            "ref": "refs/heads/cli-wrong-units",
            "head": "9a8ab094ee16249b0c601aedb0c364b300c19c55",
            "before": "3f602f00ac8f1e2dc2f365791b58e5b9db6f6693",
            "commits": [
                {
                    "sha": "f5d2a223f9ba4bd1498dfd2bdc36c6c9a13e2d7e",
                    "author": {
                        "email": "ashhar.hasan@starburstdata.com",
                        "name": "Ashhar Hasan"
                    },
                    "message": "Update Druid JDBC driver version",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/f5d2a223f9ba4bd1498dfd2bdc36c6c9a13e2d7e"
                },
                {
                    "sha": "c6f707f6e4fed5bd7d5b97e493768af551e57f84",
                    "author": {
                        "email": "ashhar.hasan@starburstdata.com",
                        "name": "Ashhar Hasan"
                    },
                    "message": "Update protobuf-java version in Pinot connector",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/c6f707f6e4fed5bd7d5b97e493768af551e57f84"
                },
                {
                    "sha": "5008a5fe136bb90232cdf0ee8306fe1d3192ff24",
                    "author": {
                        "email": "ashhar.hasan@starburstdata.com",
                        "name": "Ashhar Hasan"
                    },
                    "message": "Update Redshift JDBC driver\n\nThe newer driver fixes some issues with metadata queries where incorrect\ndata type or precision/decimal digits can be returned",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/5008a5fe136bb90232cdf0ee8306fe1d3192ff24"
                },
                {
                    "sha": "a97e00590c978bab03db04a68bdce4fa5acbfe65",
                    "author": {
                        "email": "ashhar.hasan@starburstdata.com",
                        "name": "Ashhar Hasan"
                    },
                    "message": "Update AWS Java SDK to address CVE-2022-31159\n\nNote that Trino doesn't use TransferManager and is not actually affected.",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/a97e00590c978bab03db04a68bdce4fa5acbfe65"
                },
                {
                    "sha": "50bae1409e13447fd70440ecff9323d58d7e8e20",
                    "author": {
                        "email": "surpass.simple@gmail.com",
                        "name": "tangjiangling"
                    },
                    "message": "Use arrays to initialize the member variables of MultilevelSplitQueue\n\nPreviously in `MultilevelSplitQueue`, `levelScheduledTime` and\n`levelMinPriority` were initialized using arrays, while\n`levelWaitingSplits` and `selectedLevelCounters` were initialized using\n`List`, this commit unifies the style by making all these variables\ninitialized using array style.",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/50bae1409e13447fd70440ecff9323d58d7e8e20"
                },
                {
                    "sha": "4d5f4e8d820807baba61582534dbbf574fe5156d",
                    "author": {
                        "email": "surpass.simple@gmail.com",
                        "name": "tangjiangling"
                    },
                    "message": "Rename variables for readability\n\nThe indexes of these arrays are all \"level\" related, so we can rename\nthem.",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/4d5f4e8d820807baba61582534dbbf574fe5156d"
                },
                {
                    "sha": "fd835de13fbafaff34b249a692214ace48ecbbbe",
                    "author": {
                        "email": "surpass.simple@gmail.com",
                        "name": "tangjiangling"
                    },
                    "message": "Replace `Stream#toArray` with `toArray`",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/fd835de13fbafaff34b249a692214ace48ecbbbe"
                },
                {
                    "sha": "e4493906ff6d694a0e5d3bd77c15e5ccc70cc5f5",
                    "author": {
                        "email": "surpass.simple@gmail.com",
                        "name": "tangjiangling"
                    },
                    "message": "Replace lambda with method reference",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/e4493906ff6d694a0e5d3bd77c15e5ccc70cc5f5"
                },
                {
                    "sha": "5eeef2a7feb6ff4a7bcd785e2472f408572032db",
                    "author": {
                        "email": "surpass.simple@gmail.com",
                        "name": "tangjiangling"
                    },
                    "message": "Simplify with functional style expression",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/5eeef2a7feb6ff4a7bcd785e2472f408572032db"
                },
                {
                    "sha": "7bb006265b5ce7351a82fa6003b5945696da7608",
                    "author": {
                        "email": "surpass.simple@gmail.com",
                        "name": "tangjiangling"
                    },
                    "message": "Fix typos",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/7bb006265b5ce7351a82fa6003b5945696da7608"
                },
                {
                    "sha": "36de654dd86df8bc87a88329793d144649b94be0",
                    "author": {
                        "email": "surpass.simple@gmail.com",
                        "name": "tangjiangling"
                    },
                    "message": "Remove unnecessary boxing",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/36de654dd86df8bc87a88329793d144649b94be0"
                },
                {
                    "sha": "bef4b9b1272a2be017ed254186d4686df2421b15",
                    "author": {
                        "email": "jacob.baskin@gmail.com",
                        "name": "Jacob Baskin"
                    },
                    "message": "Ensure concurrency/write parallelism for product tests",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/bef4b9b1272a2be017ed254186d4686df2421b15"
                },
                {
                    "sha": "fd440d593728599c8baa1c967c9b727098fe28ac",
                    "author": {
                        "email": "mtraverso@gmail.com",
                        "name": "Martin Traverso"
                    },
                    "message": "Migrate TestRowOperators to new assertions",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/fd440d593728599c8baa1c967c9b727098fe28ac"
                },
                {
                    "sha": "683a5e12bed678624f319c46b19c6413606ba0d5",
                    "author": {
                        "email": "mtraverso@gmail.com",
                        "name": "Martin Traverso"
                    },
                    "message": "Migrate TestDateTimeFunctions to new assertions",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/683a5e12bed678624f319c46b19c6413606ba0d5"
                },
                {
                    "sha": "26174812c71c85c1461946f2e23f57c14fe1f36a",
                    "author": {
                        "email": "mtraverso@gmail.com",
                        "name": "Martin Traverso"
                    },
                    "message": "Use switch expression",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/26174812c71c85c1461946f2e23f57c14fe1f36a"
                },
                {
                    "sha": "46409d52483ca204fd95e540b4d28df83b957e11",
                    "author": {
                        "email": "mtraverso@gmail.com",
                        "name": "Martin Traverso"
                    },
                    "message": "Migrate TestExpressionCompiler to new assertions",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/46409d52483ca204fd95e540b4d28df83b957e11"
                },
                {
                    "sha": "c4e8860750075f07f362cac41fe0d3319a855a7a",
                    "author": {
                        "email": "mtraverso@gmail.com",
                        "name": "Martin Traverso"
                    },
                    "message": "Remove support for parallel execution in TestExpressioCompiler\n\nIt's already disabled, it doesn't actually work (tests fail if enabled),\nand the whole suite takes under two minutes to run, so it seems unnecessary.",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/c4e8860750075f07f362cac41fe0d3319a855a7a"
                },
                {
                    "sha": "7d770b22c47437eba0a288e95b910e32ae099153",
                    "author": {
                        "email": "mtraverso@gmail.com",
                        "name": "Martin Traverso"
                    },
                    "message": "Migrate test to JUnit 5",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/7d770b22c47437eba0a288e95b910e32ae099153"
                },
                {
                    "sha": "dddaa265c8c2783b8756cedaae5c24290443c8f4",
                    "author": {
                        "email": "mtraverso@gmail.com",
                        "name": "Martin Traverso"
                    },
                    "message": "Rename methods",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/dddaa265c8c2783b8756cedaae5c24290443c8f4"
                },
                {
                    "sha": "e472dc67565d5e04439ae75b575bcff8085121e2",
                    "author": {
                        "email": "mtraverso@gmail.com",
                        "name": "Martin Traverso"
                    },
                    "message": "Remove unused methods",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/e472dc67565d5e04439ae75b575bcff8085121e2"
                }
            ]
        },
        "public": true,
        "created_at": "2022-11-29T23:08:01Z"
    },
    {
        "id": "25548103926",
        "type": "PullRequestEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 166515022,
            "name": "trinodb/trino",
            "url": "https://api.github.com/repos/trinodb/trino"
        },
        "payload": {
            "action": "opened",
            "number": 15246,
            "pull_request": {
                "url": "https://api.github.com/repos/trinodb/trino/pulls/15246",
                "id": 1139513259,
                "node_id": "PR_kwDOCezRTs5D65er",
                "html_url": "https://github.com/trinodb/trino/pull/15246",
                "diff_url": "https://github.com/trinodb/trino/pull/15246.diff",
                "patch_url": "https://github.com/trinodb/trino/pull/15246.patch",
                "issue_url": "https://api.github.com/repos/trinodb/trino/issues/15246",
                "number": 15246,
                "state": "open",
                "locked": false,
                "title": "Support public bucket",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "## Description\r\n\r\nAllow Hive connector to read files from public S3 buckets. Fixes #6127\r\n\r\nAdds boolean connector property `hive.s3.anonymous-requests.enabled` to access a public bucket (no AWS access key or secret key is required).\r\n\r\n<!-- Provide details that would help an engineer who is unfamiliar with this part of the code. -->\r\n## Additional context\r\n\r\nBefore this change, attempts to access a public S3 bucket fail with `AccessDeniedException`. Now, when `hive.s3.anonymous-requests.enabled` is set to `true`, `TrinoS3FileSystem` creates the appropriate `AWSCredentialsProvider` to access the public bucket anonymously.\r\n\r\n<!-- Mark the appropriate option with an (x). Propose a release note if you can. -->\r\n## Release notes\r\n\r\n( ) This is not user-visible or docs only and no release notes are required.\r\n( ) Release notes are required, please propose a release note for me.\r\n(x) Release notes are required, with the following suggested text:\r\n\r\nAllow Hive connector to read data from public S3 buckets via a new `hive.s3.anonymous-requests.enabled` connector property. (#6127)\r\n\r\n## Acknowledgements\r\n\r\nMany thanks to @tooptoop4 for the bulk of the work. I just rebased their changes and added tests and docs.",
                "created_at": "2022-11-29T20:44:22Z",
                "updated_at": "2022-11-29T20:44:22Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": null,
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/trinodb/trino/pulls/15246/commits",
                "review_comments_url": "https://api.github.com/repos/trinodb/trino/pulls/15246/comments",
                "review_comment_url": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/trinodb/trino/issues/15246/comments",
                "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/a88eab9b966d9482404eca0938b37ee82d6e582e",
                "head": {
                    "label": "metadaddy:support-public-bucket",
                    "ref": "support-public-bucket",
                    "sha": "a88eab9b966d9482404eca0938b37ee82d6e582e",
                    "user": {
                        "login": "metadaddy",
                        "id": 723517,
                        "node_id": "MDQ6VXNlcjcyMzUxNw==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/metadaddy",
                        "html_url": "https://github.com/metadaddy",
                        "followers_url": "https://api.github.com/users/metadaddy/followers",
                        "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                        "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                        "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                        "repos_url": "https://api.github.com/users/metadaddy/repos",
                        "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 509274784,
                        "node_id": "R_kgDOHlrqoA",
                        "name": "trino",
                        "full_name": "metadaddy/trino",
                        "private": false,
                        "owner": {
                            "login": "metadaddy",
                            "id": 723517,
                            "node_id": "MDQ6VXNlcjcyMzUxNw==",
                            "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/metadaddy",
                            "html_url": "https://github.com/metadaddy",
                            "followers_url": "https://api.github.com/users/metadaddy/followers",
                            "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                            "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                            "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                            "repos_url": "https://api.github.com/users/metadaddy/repos",
                            "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/metadaddy/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": true,
                        "url": "https://api.github.com/repos/metadaddy/trino",
                        "forks_url": "https://api.github.com/repos/metadaddy/trino/forks",
                        "keys_url": "https://api.github.com/repos/metadaddy/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/metadaddy/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/metadaddy/trino/teams",
                        "hooks_url": "https://api.github.com/repos/metadaddy/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/metadaddy/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/metadaddy/trino/events",
                        "assignees_url": "https://api.github.com/repos/metadaddy/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/metadaddy/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/metadaddy/trino/tags",
                        "blobs_url": "https://api.github.com/repos/metadaddy/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/metadaddy/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/metadaddy/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/metadaddy/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/metadaddy/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/metadaddy/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/metadaddy/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/metadaddy/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/metadaddy/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/metadaddy/trino/subscription",
                        "commits_url": "https://api.github.com/repos/metadaddy/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/metadaddy/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/metadaddy/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/metadaddy/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/metadaddy/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/metadaddy/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/metadaddy/trino/merges",
                        "archive_url": "https://api.github.com/repos/metadaddy/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/metadaddy/trino/downloads",
                        "issues_url": "https://api.github.com/repos/metadaddy/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/metadaddy/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/metadaddy/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/metadaddy/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/metadaddy/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/metadaddy/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/metadaddy/trino/deployments",
                        "created_at": "2022-07-01T00:43:32Z",
                        "updated_at": "2022-07-06T01:44:20Z",
                        "pushed_at": "2022-11-29T20:31:06Z",
                        "git_url": "git://github.com/metadaddy/trino.git",
                        "ssh_url": "git@github.com:metadaddy/trino.git",
                        "clone_url": "https://github.com/metadaddy/trino.git",
                        "svn_url": "https://github.com/metadaddy/trino",
                        "homepage": "https://trino.io",
                        "size": 179144,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": "Java",
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "master"
                    }
                },
                "base": {
                    "label": "trinodb:master",
                    "ref": "master",
                    "sha": "861d51c8b8047d43f017e887231edf01d1561c65",
                    "user": {
                        "login": "trinodb",
                        "id": 34147222,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                        "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/trinodb",
                        "html_url": "https://github.com/trinodb",
                        "followers_url": "https://api.github.com/users/trinodb/followers",
                        "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                        "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                        "organizations_url": "https://api.github.com/users/trinodb/orgs",
                        "repos_url": "https://api.github.com/users/trinodb/repos",
                        "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/trinodb/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 166515022,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNjY1MTUwMjI=",
                        "name": "trino",
                        "full_name": "trinodb/trino",
                        "private": false,
                        "owner": {
                            "login": "trinodb",
                            "id": 34147222,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/trinodb",
                            "html_url": "https://github.com/trinodb",
                            "followers_url": "https://api.github.com/users/trinodb/followers",
                            "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                            "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                            "organizations_url": "https://api.github.com/users/trinodb/orgs",
                            "repos_url": "https://api.github.com/users/trinodb/repos",
                            "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/trinodb/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/trinodb/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": false,
                        "url": "https://api.github.com/repos/trinodb/trino",
                        "forks_url": "https://api.github.com/repos/trinodb/trino/forks",
                        "keys_url": "https://api.github.com/repos/trinodb/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/trinodb/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/trinodb/trino/teams",
                        "hooks_url": "https://api.github.com/repos/trinodb/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/trinodb/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/trinodb/trino/events",
                        "assignees_url": "https://api.github.com/repos/trinodb/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/trinodb/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/trinodb/trino/tags",
                        "blobs_url": "https://api.github.com/repos/trinodb/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/trinodb/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/trinodb/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/trinodb/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/trinodb/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/trinodb/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/trinodb/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/trinodb/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/trinodb/trino/subscription",
                        "commits_url": "https://api.github.com/repos/trinodb/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/trinodb/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/trinodb/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/trinodb/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/trinodb/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/trinodb/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/trinodb/trino/merges",
                        "archive_url": "https://api.github.com/repos/trinodb/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/trinodb/trino/downloads",
                        "issues_url": "https://api.github.com/repos/trinodb/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/trinodb/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/trinodb/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/trinodb/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/trinodb/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/trinodb/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/trinodb/trino/deployments",
                        "created_at": "2019-01-19T06:38:14Z",
                        "updated_at": "2022-11-29T19:42:12Z",
                        "pushed_at": "2022-11-29T20:24:16Z",
                        "git_url": "git://github.com/trinodb/trino.git",
                        "ssh_url": "git@github.com:trinodb/trino.git",
                        "clone_url": "https://github.com/trinodb/trino.git",
                        "svn_url": "https://github.com/trinodb/trino",
                        "homepage": "https://trino.io",
                        "size": 192385,
                        "stargazers_count": 6732,
                        "watchers_count": 6732,
                        "language": "Java",
                        "has_issues": true,
                        "has_projects": false,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": true,
                        "forks_count": 2081,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 2136,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "analytics",
                            "big-data",
                            "data-science",
                            "database",
                            "databases",
                            "datalake",
                            "distributed-database",
                            "distributed-databases",
                            "distributed-systems",
                            "hadoop",
                            "hive",
                            "java",
                            "jdbc",
                            "presto",
                            "prestodb",
                            "query-engine",
                            "sql",
                            "trino"
                        ],
                        "visibility": "public",
                        "forks": 2081,
                        "open_issues": 2136,
                        "watchers": 6732,
                        "default_branch": "master"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15246"
                    },
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/15246"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15246"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/15246/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15246/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/15246/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/trinodb/trino/statuses/a88eab9b966d9482404eca0938b37ee82d6e582e"
                    }
                },
                "author_association": "MEMBER",
                "auto_merge": null,
                "active_lock_reason": null,
                "merged": false,
                "mergeable": null,
                "rebaseable": null,
                "mergeable_state": "unknown",
                "merged_by": null,
                "comments": 0,
                "review_comments": 0,
                "maintainer_can_modify": true,
                "commits": 2,
                "additions": 84,
                "deletions": 2,
                "changed_files": 6
            }
        },
        "public": true,
        "created_at": "2022-11-29T20:44:22Z",
        "org": {
            "id": 34147222,
            "login": "trinodb",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/trinodb",
            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?"
        }
    },
    {
        "id": "25547870741",
        "type": "PushEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 509274784,
            "name": "metadaddy/trino",
            "url": "https://api.github.com/repos/metadaddy/trino"
        },
        "payload": {
            "push_id": 11826293121,
            "size": 400,
            "distinct_size": 2,
            "ref": "refs/heads/support-public-bucket",
            "head": "a88eab9b966d9482404eca0938b37ee82d6e582e",
            "before": "269b16abe95d5016bb844b8f65d3f225e4a350a4",
            "commits": [
                {
                    "sha": "f78923b19e63788afb6005e99a5094c5376712ed",
                    "author": {
                        "email": "ashhar.hasan@starburstdata.com",
                        "name": "Ashhar Hasan"
                    },
                    "message": "Update Druid JDBC driver version",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/f78923b19e63788afb6005e99a5094c5376712ed"
                },
                {
                    "sha": "c8f2949d6233c2df1023248c85ba38e61417159c",
                    "author": {
                        "email": "ashhar.hasan@starburstdata.com",
                        "name": "Ashhar Hasan"
                    },
                    "message": "Update protobuf-java version in Pinot connector",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/c8f2949d6233c2df1023248c85ba38e61417159c"
                },
                {
                    "sha": "89ee3a3b5461d2695b3b6a79aae7850195f44be2",
                    "author": {
                        "email": "ashhar.hasan@starburstdata.com",
                        "name": "Ashhar Hasan"
                    },
                    "message": "Update Redshift JDBC driver\n\nThe newer driver fixes some issues with metadata queries where incorrect\ndata type or precision/decimal digits can be returned",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/89ee3a3b5461d2695b3b6a79aae7850195f44be2"
                },
                {
                    "sha": "e98e17ad9199ae85862d95731dbb7d8288fb4ef5",
                    "author": {
                        "email": "ashhar.hasan@starburstdata.com",
                        "name": "Ashhar Hasan"
                    },
                    "message": "Update AWS Java SDK to address CVE-2022-31159\n\nNote that Trino doesn't use TransferManager and is not actually affected.",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/e98e17ad9199ae85862d95731dbb7d8288fb4ef5"
                },
                {
                    "sha": "f9e51977aad684e16a715dcd5e5f25354f7f185b",
                    "author": {
                        "email": "surpass.simple@gmail.com",
                        "name": "tangjiangling"
                    },
                    "message": "Use arrays to initialize the member variables of MultilevelSplitQueue\n\nPreviously in `MultilevelSplitQueue`, `levelScheduledTime` and\n`levelMinPriority` were initialized using arrays, while\n`levelWaitingSplits` and `selectedLevelCounters` were initialized using\n`List`, this commit unifies the style by making all these variables\ninitialized using array style.",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/f9e51977aad684e16a715dcd5e5f25354f7f185b"
                },
                {
                    "sha": "4f5bc7c236f786a6890a10e504ef21f68ca78388",
                    "author": {
                        "email": "surpass.simple@gmail.com",
                        "name": "tangjiangling"
                    },
                    "message": "Rename variables for readability\n\nThe indexes of these arrays are all \"level\" related, so we can rename\nthem.",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/4f5bc7c236f786a6890a10e504ef21f68ca78388"
                },
                {
                    "sha": "c3ebf6e4c94a622878bf80b38629ab565776c715",
                    "author": {
                        "email": "surpass.simple@gmail.com",
                        "name": "tangjiangling"
                    },
                    "message": "Replace `Stream#toArray` with `toArray`",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/c3ebf6e4c94a622878bf80b38629ab565776c715"
                },
                {
                    "sha": "40711d82f43a3b43a4217683843f893cfa470573",
                    "author": {
                        "email": "surpass.simple@gmail.com",
                        "name": "tangjiangling"
                    },
                    "message": "Replace lambda with method reference",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/40711d82f43a3b43a4217683843f893cfa470573"
                },
                {
                    "sha": "b52e31860893f67f9626d7ab38abd4fe1f2b957c",
                    "author": {
                        "email": "surpass.simple@gmail.com",
                        "name": "tangjiangling"
                    },
                    "message": "Simplify with functional style expression",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/b52e31860893f67f9626d7ab38abd4fe1f2b957c"
                },
                {
                    "sha": "b012d610796a6a434f9b1b772cc317ee02e5d96e",
                    "author": {
                        "email": "surpass.simple@gmail.com",
                        "name": "tangjiangling"
                    },
                    "message": "Fix typos",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/b012d610796a6a434f9b1b772cc317ee02e5d96e"
                },
                {
                    "sha": "a1e87ba3de9e55cc2aec9590836142e0cac932bd",
                    "author": {
                        "email": "surpass.simple@gmail.com",
                        "name": "tangjiangling"
                    },
                    "message": "Remove unnecessary boxing",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/a1e87ba3de9e55cc2aec9590836142e0cac932bd"
                },
                {
                    "sha": "3f4771cee916ca244b049eeeb505a541015cb176",
                    "author": {
                        "email": "jacob.baskin@gmail.com",
                        "name": "Jacob Baskin"
                    },
                    "message": "Ensure concurrency/write parallelism for product tests",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/3f4771cee916ca244b049eeeb505a541015cb176"
                },
                {
                    "sha": "0ae69d20d2b9e9ca3e4acd9dadab6a2ae6d69f1c",
                    "author": {
                        "email": "mtraverso@gmail.com",
                        "name": "Martin Traverso"
                    },
                    "message": "Migrate TestRowOperators to new assertions",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/0ae69d20d2b9e9ca3e4acd9dadab6a2ae6d69f1c"
                },
                {
                    "sha": "993b0f18f506d28721c5e98932608740167e7e80",
                    "author": {
                        "email": "mtraverso@gmail.com",
                        "name": "Martin Traverso"
                    },
                    "message": "Migrate TestDateTimeFunctions to new assertions",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/993b0f18f506d28721c5e98932608740167e7e80"
                },
                {
                    "sha": "fdec4b93bde0103588659eafa585a95ede135518",
                    "author": {
                        "email": "mtraverso@gmail.com",
                        "name": "Martin Traverso"
                    },
                    "message": "Use switch expression",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/fdec4b93bde0103588659eafa585a95ede135518"
                },
                {
                    "sha": "49aa6f04ddd57907d89e5017643fdf4ab19ed527",
                    "author": {
                        "email": "mtraverso@gmail.com",
                        "name": "Martin Traverso"
                    },
                    "message": "Migrate TestExpressionCompiler to new assertions",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/49aa6f04ddd57907d89e5017643fdf4ab19ed527"
                },
                {
                    "sha": "fda40d421c0669e055d8cb172296f6820804081a",
                    "author": {
                        "email": "mtraverso@gmail.com",
                        "name": "Martin Traverso"
                    },
                    "message": "Remove support for parallel execution in TestExpressioCompiler\n\nIt's already disabled, it doesn't actually work (tests fail if enabled),\nand the whole suite takes under two minutes to run, so it seems unnecessary.",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/fda40d421c0669e055d8cb172296f6820804081a"
                },
                {
                    "sha": "bd143ce94700dce802289a65a5cc1ef48bcfd6b4",
                    "author": {
                        "email": "mtraverso@gmail.com",
                        "name": "Martin Traverso"
                    },
                    "message": "Migrate test to JUnit 5",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/bd143ce94700dce802289a65a5cc1ef48bcfd6b4"
                },
                {
                    "sha": "ac8f435bc9065d9ab5bc9e8a15dd19014519daed",
                    "author": {
                        "email": "mtraverso@gmail.com",
                        "name": "Martin Traverso"
                    },
                    "message": "Rename methods",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/ac8f435bc9065d9ab5bc9e8a15dd19014519daed"
                },
                {
                    "sha": "29f1c9258d9a7bff185b6516c26da72bd14bb2cb",
                    "author": {
                        "email": "mtraverso@gmail.com",
                        "name": "Martin Traverso"
                    },
                    "message": "Remove unused methods",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/29f1c9258d9a7bff185b6516c26da72bd14bb2cb"
                }
            ]
        },
        "public": true,
        "created_at": "2022-11-29T20:31:07Z"
    },
    {
        "id": "25547826392",
        "type": "PushEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 509274784,
            "name": "metadaddy/trino",
            "url": "https://api.github.com/repos/metadaddy/trino"
        },
        "payload": {
            "push_id": 11826270030,
            "size": 398,
            "distinct_size": 398,
            "ref": "refs/heads/master",
            "head": "861d51c8b8047d43f017e887231edf01d1561c65",
            "before": "62349751f1c337bee4b93c290cbd1ae563d75a3b",
            "commits": [
                {
                    "sha": "f78923b19e63788afb6005e99a5094c5376712ed",
                    "author": {
                        "email": "ashhar.hasan@starburstdata.com",
                        "name": "Ashhar Hasan"
                    },
                    "message": "Update Druid JDBC driver version",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/f78923b19e63788afb6005e99a5094c5376712ed"
                },
                {
                    "sha": "c8f2949d6233c2df1023248c85ba38e61417159c",
                    "author": {
                        "email": "ashhar.hasan@starburstdata.com",
                        "name": "Ashhar Hasan"
                    },
                    "message": "Update protobuf-java version in Pinot connector",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/c8f2949d6233c2df1023248c85ba38e61417159c"
                },
                {
                    "sha": "89ee3a3b5461d2695b3b6a79aae7850195f44be2",
                    "author": {
                        "email": "ashhar.hasan@starburstdata.com",
                        "name": "Ashhar Hasan"
                    },
                    "message": "Update Redshift JDBC driver\n\nThe newer driver fixes some issues with metadata queries where incorrect\ndata type or precision/decimal digits can be returned",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/89ee3a3b5461d2695b3b6a79aae7850195f44be2"
                },
                {
                    "sha": "e98e17ad9199ae85862d95731dbb7d8288fb4ef5",
                    "author": {
                        "email": "ashhar.hasan@starburstdata.com",
                        "name": "Ashhar Hasan"
                    },
                    "message": "Update AWS Java SDK to address CVE-2022-31159\n\nNote that Trino doesn't use TransferManager and is not actually affected.",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/e98e17ad9199ae85862d95731dbb7d8288fb4ef5"
                },
                {
                    "sha": "f9e51977aad684e16a715dcd5e5f25354f7f185b",
                    "author": {
                        "email": "surpass.simple@gmail.com",
                        "name": "tangjiangling"
                    },
                    "message": "Use arrays to initialize the member variables of MultilevelSplitQueue\n\nPreviously in `MultilevelSplitQueue`, `levelScheduledTime` and\n`levelMinPriority` were initialized using arrays, while\n`levelWaitingSplits` and `selectedLevelCounters` were initialized using\n`List`, this commit unifies the style by making all these variables\ninitialized using array style.",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/f9e51977aad684e16a715dcd5e5f25354f7f185b"
                },
                {
                    "sha": "4f5bc7c236f786a6890a10e504ef21f68ca78388",
                    "author": {
                        "email": "surpass.simple@gmail.com",
                        "name": "tangjiangling"
                    },
                    "message": "Rename variables for readability\n\nThe indexes of these arrays are all \"level\" related, so we can rename\nthem.",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/4f5bc7c236f786a6890a10e504ef21f68ca78388"
                },
                {
                    "sha": "c3ebf6e4c94a622878bf80b38629ab565776c715",
                    "author": {
                        "email": "surpass.simple@gmail.com",
                        "name": "tangjiangling"
                    },
                    "message": "Replace `Stream#toArray` with `toArray`",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/c3ebf6e4c94a622878bf80b38629ab565776c715"
                },
                {
                    "sha": "40711d82f43a3b43a4217683843f893cfa470573",
                    "author": {
                        "email": "surpass.simple@gmail.com",
                        "name": "tangjiangling"
                    },
                    "message": "Replace lambda with method reference",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/40711d82f43a3b43a4217683843f893cfa470573"
                },
                {
                    "sha": "b52e31860893f67f9626d7ab38abd4fe1f2b957c",
                    "author": {
                        "email": "surpass.simple@gmail.com",
                        "name": "tangjiangling"
                    },
                    "message": "Simplify with functional style expression",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/b52e31860893f67f9626d7ab38abd4fe1f2b957c"
                },
                {
                    "sha": "b012d610796a6a434f9b1b772cc317ee02e5d96e",
                    "author": {
                        "email": "surpass.simple@gmail.com",
                        "name": "tangjiangling"
                    },
                    "message": "Fix typos",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/b012d610796a6a434f9b1b772cc317ee02e5d96e"
                },
                {
                    "sha": "a1e87ba3de9e55cc2aec9590836142e0cac932bd",
                    "author": {
                        "email": "surpass.simple@gmail.com",
                        "name": "tangjiangling"
                    },
                    "message": "Remove unnecessary boxing",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/a1e87ba3de9e55cc2aec9590836142e0cac932bd"
                },
                {
                    "sha": "3f4771cee916ca244b049eeeb505a541015cb176",
                    "author": {
                        "email": "jacob.baskin@gmail.com",
                        "name": "Jacob Baskin"
                    },
                    "message": "Ensure concurrency/write parallelism for product tests",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/3f4771cee916ca244b049eeeb505a541015cb176"
                },
                {
                    "sha": "0ae69d20d2b9e9ca3e4acd9dadab6a2ae6d69f1c",
                    "author": {
                        "email": "mtraverso@gmail.com",
                        "name": "Martin Traverso"
                    },
                    "message": "Migrate TestRowOperators to new assertions",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/0ae69d20d2b9e9ca3e4acd9dadab6a2ae6d69f1c"
                },
                {
                    "sha": "993b0f18f506d28721c5e98932608740167e7e80",
                    "author": {
                        "email": "mtraverso@gmail.com",
                        "name": "Martin Traverso"
                    },
                    "message": "Migrate TestDateTimeFunctions to new assertions",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/993b0f18f506d28721c5e98932608740167e7e80"
                },
                {
                    "sha": "fdec4b93bde0103588659eafa585a95ede135518",
                    "author": {
                        "email": "mtraverso@gmail.com",
                        "name": "Martin Traverso"
                    },
                    "message": "Use switch expression",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/fdec4b93bde0103588659eafa585a95ede135518"
                },
                {
                    "sha": "49aa6f04ddd57907d89e5017643fdf4ab19ed527",
                    "author": {
                        "email": "mtraverso@gmail.com",
                        "name": "Martin Traverso"
                    },
                    "message": "Migrate TestExpressionCompiler to new assertions",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/49aa6f04ddd57907d89e5017643fdf4ab19ed527"
                },
                {
                    "sha": "fda40d421c0669e055d8cb172296f6820804081a",
                    "author": {
                        "email": "mtraverso@gmail.com",
                        "name": "Martin Traverso"
                    },
                    "message": "Remove support for parallel execution in TestExpressioCompiler\n\nIt's already disabled, it doesn't actually work (tests fail if enabled),\nand the whole suite takes under two minutes to run, so it seems unnecessary.",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/fda40d421c0669e055d8cb172296f6820804081a"
                },
                {
                    "sha": "bd143ce94700dce802289a65a5cc1ef48bcfd6b4",
                    "author": {
                        "email": "mtraverso@gmail.com",
                        "name": "Martin Traverso"
                    },
                    "message": "Migrate test to JUnit 5",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/bd143ce94700dce802289a65a5cc1ef48bcfd6b4"
                },
                {
                    "sha": "ac8f435bc9065d9ab5bc9e8a15dd19014519daed",
                    "author": {
                        "email": "mtraverso@gmail.com",
                        "name": "Martin Traverso"
                    },
                    "message": "Rename methods",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/ac8f435bc9065d9ab5bc9e8a15dd19014519daed"
                },
                {
                    "sha": "29f1c9258d9a7bff185b6516c26da72bd14bb2cb",
                    "author": {
                        "email": "mtraverso@gmail.com",
                        "name": "Martin Traverso"
                    },
                    "message": "Remove unused methods",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/29f1c9258d9a7bff185b6516c26da72bd14bb2cb"
                }
            ]
        },
        "public": true,
        "created_at": "2022-11-29T20:28:37Z"
    },
    {
        "id": "25547773914",
        "type": "CreateEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 509274784,
            "name": "metadaddy/trino",
            "url": "https://api.github.com/repos/metadaddy/trino"
        },
        "payload": {
            "ref": "support-public-bucket",
            "ref_type": "branch",
            "master_branch": "master",
            "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
            "pusher_type": "user"
        },
        "public": true,
        "created_at": "2022-11-29T20:25:39Z"
    },
    {
        "id": "25519446534",
        "type": "PushEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 567902821,
            "name": "backblaze-b2-samples/cloudflare-b2",
            "url": "https://api.github.com/repos/backblaze-b2-samples/cloudflare-b2"
        },
        "payload": {
            "push_id": 11812077664,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/main",
            "head": "ff556be29f8e8295fb9672a4aa4b0db4ba962444",
            "before": "116bd68b5004a4f0e28fa95362e1b74f08696599",
            "commits": [
                {
                    "sha": "ff556be29f8e8295fb9672a4aa4b0db4ba962444",
                    "author": {
                        "email": "pat@backblaze.com",
                        "name": "Pat Patterson"
                    },
                    "message": "Minor fix to README",
                    "distinct": true,
                    "url": "https://api.github.com/repos/backblaze-b2-samples/cloudflare-b2/commits/ff556be29f8e8295fb9672a4aa4b0db4ba962444"
                }
            ]
        },
        "public": true,
        "created_at": "2022-11-28T19:08:01Z",
        "org": {
            "id": 17604039,
            "login": "backblaze-b2-samples",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/backblaze-b2-samples",
            "avatar_url": "https://avatars.githubusercontent.com/u/17604039?"
        }
    },
    {
        "id": "25519362476",
        "type": "PushEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 567902821,
            "name": "backblaze-b2-samples/cloudflare-b2",
            "url": "https://api.github.com/repos/backblaze-b2-samples/cloudflare-b2"
        },
        "payload": {
            "push_id": 11812039810,
            "size": 3,
            "distinct_size": 3,
            "ref": "refs/heads/main",
            "head": "116bd68b5004a4f0e28fa95362e1b74f08696599",
            "before": "f5380671f1b5cfe8b9227aa441c0eb3b730bc866",
            "commits": [
                {
                    "sha": "0e3f2faaa088de326acf1443167d0a8148add125",
                    "author": {
                        "email": "pat@backblaze.com",
                        "name": "Pat Patterson"
                    },
                    "message": "Rework bucket naming",
                    "distinct": true,
                    "url": "https://api.github.com/repos/backblaze-b2-samples/cloudflare-b2/commits/0e3f2faaa088de326acf1443167d0a8148add125"
                },
                {
                    "sha": "68ca73b448df5fab8c9eedf97040dcaf701b3107",
                    "author": {
                        "email": "pat@backblaze.com",
                        "name": "Pat Patterson"
                    },
                    "message": "Rework bucket naming",
                    "distinct": true,
                    "url": "https://api.github.com/repos/backblaze-b2-samples/cloudflare-b2/commits/68ca73b448df5fab8c9eedf97040dcaf701b3107"
                },
                {
                    "sha": "116bd68b5004a4f0e28fa95362e1b74f08696599",
                    "author": {
                        "email": "pat@backblaze.com",
                        "name": "Pat Patterson"
                    },
                    "message": "Redo config naming",
                    "distinct": true,
                    "url": "https://api.github.com/repos/backblaze-b2-samples/cloudflare-b2/commits/116bd68b5004a4f0e28fa95362e1b74f08696599"
                }
            ]
        },
        "public": true,
        "created_at": "2022-11-28T19:04:22Z",
        "org": {
            "id": 17604039,
            "login": "backblaze-b2-samples",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/backblaze-b2-samples",
            "avatar_url": "https://avatars.githubusercontent.com/u/17604039?"
        }
    },
    {
        "id": "25393422026",
        "type": "PushEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 567902821,
            "name": "backblaze-b2-samples/cloudflare-b2",
            "url": "https://api.github.com/repos/backblaze-b2-samples/cloudflare-b2"
        },
        "payload": {
            "push_id": 11744554881,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/main",
            "head": "f5380671f1b5cfe8b9227aa441c0eb3b730bc866",
            "before": "29a38f154c6d74ef49ac93a5e4e33339e1adf15c",
            "commits": [
                {
                    "sha": "f5380671f1b5cfe8b9227aa441c0eb3b730bc866",
                    "author": {
                        "email": "pat@backblaze.com",
                        "name": "Pat Patterson"
                    },
                    "message": "Disallow list bucket requests",
                    "distinct": true,
                    "url": "https://api.github.com/repos/backblaze-b2-samples/cloudflare-b2/commits/f5380671f1b5cfe8b9227aa441c0eb3b730bc866"
                }
            ]
        },
        "public": true,
        "created_at": "2022-11-22T06:31:57Z",
        "org": {
            "id": 17604039,
            "login": "backblaze-b2-samples",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/backblaze-b2-samples",
            "avatar_url": "https://avatars.githubusercontent.com/u/17604039?"
        }
    },
    {
        "id": "25383731379",
        "type": "PushEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 500179197,
            "name": "metadaddy/metadaddy.github.io",
            "url": "https://api.github.com/repos/metadaddy/metadaddy.github.io"
        },
        "payload": {
            "push_id": 11739675512,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/master",
            "head": "92361b633e663e59faabf24baa9d64ecfb0289bb",
            "before": "2b2247cc6a796ef13ae94181c59611cc60f449b6",
            "commits": [
                {
                    "sha": "92361b633e663e59faabf24baa9d64ecfb0289bb",
                    "author": {
                        "email": "pat@superpat.com",
                        "name": "Pat Patterson"
                    },
                    "message": "Move <a> on index to <link> in head",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/metadaddy.github.io/commits/92361b633e663e59faabf24baa9d64ecfb0289bb"
                }
            ]
        },
        "public": true,
        "created_at": "2022-11-21T19:53:19Z"
    },
    {
        "id": "25349645226",
        "type": "PushEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 567902821,
            "name": "backblaze-b2-samples/cloudflare-b2",
            "url": "https://api.github.com/repos/backblaze-b2-samples/cloudflare-b2"
        },
        "payload": {
            "push_id": 11720375061,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/main",
            "head": "29a38f154c6d74ef49ac93a5e4e33339e1adf15c",
            "before": "4feebaa5da599cfaa504f28b32a1c0e0f14f0023",
            "commits": [
                {
                    "sha": "29a38f154c6d74ef49ac93a5e4e33339e1adf15c",
                    "author": {
                        "email": "pat@backblaze.com",
                        "name": "Pat Patterson"
                    },
                    "message": "Initial version",
                    "distinct": true,
                    "url": "https://api.github.com/repos/backblaze-b2-samples/cloudflare-b2/commits/29a38f154c6d74ef49ac93a5e4e33339e1adf15c"
                }
            ]
        },
        "public": true,
        "created_at": "2022-11-19T16:07:43Z",
        "org": {
            "id": 17604039,
            "login": "backblaze-b2-samples",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/backblaze-b2-samples",
            "avatar_url": "https://avatars.githubusercontent.com/u/17604039?"
        }
    },
    {
        "id": "25349612544",
        "type": "PushEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 567902821,
            "name": "backblaze-b2-samples/cloudflare-b2",
            "url": "https://api.github.com/repos/backblaze-b2-samples/cloudflare-b2"
        },
        "payload": {
            "push_id": 11720352979,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/main",
            "head": "4feebaa5da599cfaa504f28b32a1c0e0f14f0023",
            "before": "a7805984a48c50c8837de6391235cc09d1c34969",
            "commits": [
                {
                    "sha": "4feebaa5da599cfaa504f28b32a1c0e0f14f0023",
                    "author": {
                        "email": "pat@backblaze.com",
                        "name": "Pat Patterson"
                    },
                    "message": "README tweaks",
                    "distinct": true,
                    "url": "https://api.github.com/repos/backblaze-b2-samples/cloudflare-b2/commits/4feebaa5da599cfaa504f28b32a1c0e0f14f0023"
                }
            ]
        },
        "public": true,
        "created_at": "2022-11-19T16:03:15Z",
        "org": {
            "id": 17604039,
            "login": "backblaze-b2-samples",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/backblaze-b2-samples",
            "avatar_url": "https://avatars.githubusercontent.com/u/17604039?"
        }
    },
    {
        "id": "25313608348",
        "type": "WatchEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 6500920,
            "name": "gregrahn/tpcds-kit",
            "url": "https://api.github.com/repos/gregrahn/tpcds-kit"
        },
        "payload": {
            "action": "started"
        },
        "public": true,
        "created_at": "2022-11-17T19:33:51Z"
    },
    {
        "id": "25187991310",
        "type": "PushEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 506752547,
            "name": "metadaddy/trino-getting-started",
            "url": "https://api.github.com/repos/metadaddy/trino-getting-started"
        },
        "payload": {
            "push_id": 11635460736,
            "size": 4,
            "distinct_size": 2,
            "ref": "refs/heads/main",
            "head": "5e0963ba0e3bf267b911925439f90b8e31279c19",
            "before": "58790e463b29274a2011524e05f8de84cbbe8306",
            "commits": [
                {
                    "sha": "4de2e90a5209e8281f4c0186d552720d62d0f17c",
                    "author": {
                        "email": "pat@backblaze.com",
                        "name": "Pat Patterson"
                    },
                    "message": "A few minor README tweaks and corrections",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino-getting-started/commits/4de2e90a5209e8281f4c0186d552720d62d0f17c"
                },
                {
                    "sha": "9a4f44e31df09b83d2ecfd2a4fbaa88b0da8e6f6",
                    "author": {
                        "email": "findinpath@gmail.com",
                        "name": "Marius Grama"
                    },
                    "message": "Merge pull request #10 from metadaddy/readme-corrections\n\nA few minor README tweaks and corrections",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino-getting-started/commits/9a4f44e31df09b83d2ecfd2a4fbaa88b0da8e6f6"
                },
                {
                    "sha": "fb6ea5ceaae7db7dfb374b5b502b76c2b522fd83",
                    "author": {
                        "email": "pat@backblaze.com",
                        "name": "Pat Patterson"
                    },
                    "message": "Add date column to drivestats table",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino-getting-started/commits/fb6ea5ceaae7db7dfb374b5b502b76c2b522fd83"
                },
                {
                    "sha": "5e0963ba0e3bf267b911925439f90b8e31279c19",
                    "author": {
                        "email": "findinpath@gmail.com",
                        "name": "Marius Grama"
                    },
                    "message": "Merge pull request #11 from metadaddy/readme-corrections\n\nAdd date column to drivestats table",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino-getting-started/commits/5e0963ba0e3bf267b911925439f90b8e31279c19"
                }
            ]
        },
        "public": true,
        "created_at": "2022-11-11T20:13:45Z"
    },
    {
        "id": "25186107590",
        "type": "ForkEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 311406909,
            "name": "Backblaze/terraform-provider-b2",
            "url": "https://api.github.com/repos/Backblaze/terraform-provider-b2"
        },
        "payload": {
            "forkee": {
                "id": 564879470,
                "node_id": "R_kgDOIatgbg",
                "name": "terraform-provider-b2",
                "full_name": "metadaddy/terraform-provider-b2",
                "private": false,
                "owner": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "html_url": "https://github.com/metadaddy/terraform-provider-b2",
                "description": "Terraform Provider for Backblaze B2 Cloud Storage",
                "fork": true,
                "url": "https://api.github.com/repos/metadaddy/terraform-provider-b2",
                "forks_url": "https://api.github.com/repos/metadaddy/terraform-provider-b2/forks",
                "keys_url": "https://api.github.com/repos/metadaddy/terraform-provider-b2/keys{/key_id}",
                "collaborators_url": "https://api.github.com/repos/metadaddy/terraform-provider-b2/collaborators{/collaborator}",
                "teams_url": "https://api.github.com/repos/metadaddy/terraform-provider-b2/teams",
                "hooks_url": "https://api.github.com/repos/metadaddy/terraform-provider-b2/hooks",
                "issue_events_url": "https://api.github.com/repos/metadaddy/terraform-provider-b2/issues/events{/number}",
                "events_url": "https://api.github.com/repos/metadaddy/terraform-provider-b2/events",
                "assignees_url": "https://api.github.com/repos/metadaddy/terraform-provider-b2/assignees{/user}",
                "branches_url": "https://api.github.com/repos/metadaddy/terraform-provider-b2/branches{/branch}",
                "tags_url": "https://api.github.com/repos/metadaddy/terraform-provider-b2/tags",
                "blobs_url": "https://api.github.com/repos/metadaddy/terraform-provider-b2/git/blobs{/sha}",
                "git_tags_url": "https://api.github.com/repos/metadaddy/terraform-provider-b2/git/tags{/sha}",
                "git_refs_url": "https://api.github.com/repos/metadaddy/terraform-provider-b2/git/refs{/sha}",
                "trees_url": "https://api.github.com/repos/metadaddy/terraform-provider-b2/git/trees{/sha}",
                "statuses_url": "https://api.github.com/repos/metadaddy/terraform-provider-b2/statuses/{sha}",
                "languages_url": "https://api.github.com/repos/metadaddy/terraform-provider-b2/languages",
                "stargazers_url": "https://api.github.com/repos/metadaddy/terraform-provider-b2/stargazers",
                "contributors_url": "https://api.github.com/repos/metadaddy/terraform-provider-b2/contributors",
                "subscribers_url": "https://api.github.com/repos/metadaddy/terraform-provider-b2/subscribers",
                "subscription_url": "https://api.github.com/repos/metadaddy/terraform-provider-b2/subscription",
                "commits_url": "https://api.github.com/repos/metadaddy/terraform-provider-b2/commits{/sha}",
                "git_commits_url": "https://api.github.com/repos/metadaddy/terraform-provider-b2/git/commits{/sha}",
                "comments_url": "https://api.github.com/repos/metadaddy/terraform-provider-b2/comments{/number}",
                "issue_comment_url": "https://api.github.com/repos/metadaddy/terraform-provider-b2/issues/comments{/number}",
                "contents_url": "https://api.github.com/repos/metadaddy/terraform-provider-b2/contents/{+path}",
                "compare_url": "https://api.github.com/repos/metadaddy/terraform-provider-b2/compare/{base}...{head}",
                "merges_url": "https://api.github.com/repos/metadaddy/terraform-provider-b2/merges",
                "archive_url": "https://api.github.com/repos/metadaddy/terraform-provider-b2/{archive_format}{/ref}",
                "downloads_url": "https://api.github.com/repos/metadaddy/terraform-provider-b2/downloads",
                "issues_url": "https://api.github.com/repos/metadaddy/terraform-provider-b2/issues{/number}",
                "pulls_url": "https://api.github.com/repos/metadaddy/terraform-provider-b2/pulls{/number}",
                "milestones_url": "https://api.github.com/repos/metadaddy/terraform-provider-b2/milestones{/number}",
                "notifications_url": "https://api.github.com/repos/metadaddy/terraform-provider-b2/notifications{?since,all,participating}",
                "labels_url": "https://api.github.com/repos/metadaddy/terraform-provider-b2/labels{/name}",
                "releases_url": "https://api.github.com/repos/metadaddy/terraform-provider-b2/releases{/id}",
                "deployments_url": "https://api.github.com/repos/metadaddy/terraform-provider-b2/deployments",
                "created_at": "2022-11-11T18:08:19Z",
                "updated_at": "2022-10-25T04:13:24Z",
                "pushed_at": "2022-06-24T06:18:57Z",
                "git_url": "git://github.com/metadaddy/terraform-provider-b2.git",
                "ssh_url": "git@github.com:metadaddy/terraform-provider-b2.git",
                "clone_url": "https://github.com/metadaddy/terraform-provider-b2.git",
                "svn_url": "https://github.com/metadaddy/terraform-provider-b2",
                "homepage": "",
                "size": 408,
                "stargazers_count": 0,
                "watchers_count": 0,
                "language": null,
                "has_issues": false,
                "has_projects": true,
                "has_downloads": true,
                "has_wiki": true,
                "has_pages": false,
                "has_discussions": false,
                "forks_count": 0,
                "mirror_url": null,
                "archived": false,
                "disabled": false,
                "open_issues_count": 0,
                "license": {
                    "key": "other",
                    "name": "Other",
                    "spdx_id": "NOASSERTION",
                    "url": null,
                    "node_id": "MDc6TGljZW5zZTA="
                },
                "allow_forking": true,
                "is_template": false,
                "web_commit_signoff_required": false,
                "topics": [],
                "visibility": "public",
                "forks": 0,
                "open_issues": 0,
                "watchers": 0,
                "default_branch": "master",
                "public": true
            }
        },
        "public": true,
        "created_at": "2022-11-11T18:08:20Z",
        "org": {
            "id": 10283486,
            "login": "Backblaze",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/Backblaze",
            "avatar_url": "https://avatars.githubusercontent.com/u/10283486?"
        }
    },
    {
        "id": "25079948402",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 341978481,
            "name": "bitsondatadev/trino-getting-started",
            "url": "https://api.github.com/repos/bitsondatadev/trino-getting-started"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/issues/11",
                "repository_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started",
                "labels_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/issues/11/labels{/name}",
                "comments_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/issues/11/comments",
                "events_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/issues/11/events",
                "html_url": "https://github.com/bitsondatadev/trino-getting-started/pull/11",
                "id": 1436736346,
                "node_id": "PR_kwDOFGItcc5CPq5U",
                "number": 11,
                "title": "Add date column to drivestats table",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 1,
                "created_at": "2022-11-04T23:55:43Z",
                "updated_at": "2022-11-07T18:23:33Z",
                "closed_at": null,
                "author_association": "CONTRIBUTOR",
                "active_lock_reason": null,
                "draft": false,
                "pull_request": {
                    "url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/pulls/11",
                    "html_url": "https://github.com/bitsondatadev/trino-getting-started/pull/11",
                    "diff_url": "https://github.com/bitsondatadev/trino-getting-started/pull/11.diff",
                    "patch_url": "https://github.com/bitsondatadev/trino-getting-started/pull/11.patch",
                    "merged_at": null
                },
                "body": "We added a `date` column to the drivestats table to allow for easier querying - it's much easier to, for example, find the most recent entry in the data set than it was using the `year`, `month` and `day` columns.",
                "reactions": {
                    "url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/issues/11/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/issues/11/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/issues/comments/1306014509",
                "html_url": "https://github.com/bitsondatadev/trino-getting-started/pull/11#issuecomment-1306014509",
                "issue_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/issues/11",
                "id": 1306014509,
                "node_id": "IC_kwDOFGItcc5N2DMt",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2022-11-07T18:23:33Z",
                "updated_at": "2022-11-07T18:23:33Z",
                "author_association": "CONTRIBUTOR",
                "body": "Hi @findinpath,\r\n\r\nThe queries in the README don't go into too much detail, but in writing [this blog post on querying the Drive Stats data using Trino](https://www.backblaze.com/blog/querying-a-decade-of-drive-stats-data/), I had to write queries such as:\r\n\r\n```\r\nSELECT serial_number, MAX(DATE(FORMAT('%04d-%02d-%02d', \r\nyear, month, day))) AS date\r\n    FROM drivestats \r\n    GROUP BY serial_number;\r\n```\r\n\r\nI realized that adding the date column to the schema, alongside the year/month/day we originally specified for the sake of partitioning, would make this sort of query much more straightforward. Of course, this should all go away if/when we migrate from Hive to Iceberg.\r\n\r\nI've regenerated the Parquet data in B2 with the `date` column, so I'd like the schema here to match it.",
                "reactions": {
                    "url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/issues/comments/1306014509/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2022-11-07T18:23:33Z"
    },
    {
        "id": "25050054104",
        "type": "PushEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 500179197,
            "name": "metadaddy/metadaddy.github.io",
            "url": "https://api.github.com/repos/metadaddy/metadaddy.github.io"
        },
        "payload": {
            "push_id": 11564842079,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/master",
            "head": "2b2247cc6a796ef13ae94181c59611cc60f449b6",
            "before": "c571bb8304c324d960e8b5a8fa607f031822f50a",
            "commits": [
                {
                    "sha": "2b2247cc6a796ef13ae94181c59611cc60f449b6",
                    "author": {
                        "email": "pat@superpat.com",
                        "name": "Pat Patterson"
                    },
                    "message": "Add fosstodon link",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/metadaddy.github.io/commits/2b2247cc6a796ef13ae94181c59611cc60f449b6"
                }
            ]
        },
        "public": true,
        "created_at": "2022-11-05T19:21:03Z"
    },
    {
        "id": "25049524711",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 166515022,
            "name": "trinodb/trino",
            "url": "https://api.github.com/repos/trinodb/trino"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/trinodb/trino/issues/6131",
                "repository_url": "https://api.github.com/repos/trinodb/trino",
                "labels_url": "https://api.github.com/repos/trinodb/trino/issues/6131/labels{/name}",
                "comments_url": "https://api.github.com/repos/trinodb/trino/issues/6131/comments",
                "events_url": "https://api.github.com/repos/trinodb/trino/issues/6131/events",
                "html_url": "https://github.com/trinodb/trino/pull/6131",
                "id": 752676545,
                "node_id": "MDExOlB1bGxSZXF1ZXN0NTI4OTQ4MTI5",
                "number": 6131,
                "title": "Support public S3 bucket access",
                "user": {
                    "login": "tooptoop4",
                    "id": 33283496,
                    "node_id": "MDQ6VXNlcjMzMjgzNDk2",
                    "avatar_url": "https://avatars.githubusercontent.com/u/33283496?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/tooptoop4",
                    "html_url": "https://github.com/tooptoop4",
                    "followers_url": "https://api.github.com/users/tooptoop4/followers",
                    "following_url": "https://api.github.com/users/tooptoop4/following{/other_user}",
                    "gists_url": "https://api.github.com/users/tooptoop4/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/tooptoop4/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/tooptoop4/subscriptions",
                    "organizations_url": "https://api.github.com/users/tooptoop4/orgs",
                    "repos_url": "https://api.github.com/users/tooptoop4/repos",
                    "events_url": "https://api.github.com/users/tooptoop4/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/tooptoop4/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 1202580151,
                        "node_id": "MDU6TGFiZWwxMjAyNTgwMTUx",
                        "url": "https://api.github.com/repos/trinodb/trino/labels/cla-signed",
                        "name": "cla-signed",
                        "color": "ededed",
                        "default": false,
                        "description": null
                    }
                ],
                "state": "closed",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 8,
                "created_at": "2020-11-28T13:27:44Z",
                "updated_at": "2022-11-05T17:58:06Z",
                "closed_at": "2022-10-21T06:29:58Z",
                "author_association": "CONTRIBUTOR",
                "active_lock_reason": null,
                "draft": false,
                "pull_request": {
                    "url": "https://api.github.com/repos/trinodb/trino/pulls/6131",
                    "html_url": "https://github.com/trinodb/trino/pull/6131",
                    "diff_url": "https://github.com/trinodb/trino/pull/6131.diff",
                    "patch_url": "https://github.com/trinodb/trino/pull/6131.patch",
                    "merged_at": null
                },
                "body": "Fixes https://github.com/prestosql/presto/issues/6127",
                "reactions": {
                    "url": "https://api.github.com/repos/trinodb/trino/issues/6131/reactions",
                    "total_count": 2,
                    "+1": 2,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/trinodb/trino/issues/6131/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/trinodb/trino/issues/comments/1304601171",
                "html_url": "https://github.com/trinodb/trino/pull/6131#issuecomment-1304601171",
                "issue_url": "https://api.github.com/repos/trinodb/trino/issues/6131",
                "id": 1304601171,
                "node_id": "IC_kwDOCezRTs5NwqJT",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2022-11-05T17:58:06Z",
                "updated_at": "2022-11-05T17:58:06Z",
                "author_association": "MEMBER",
                "body": "BTW - I've rebased @tooptoop4's changes into the current master, and I'm currently testing them. I'll submit a new PR in the next week or so.",
                "reactions": {
                    "url": "https://api.github.com/repos/trinodb/trino/issues/comments/1304601171/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2022-11-05T17:58:06Z",
        "org": {
            "id": 34147222,
            "login": "trinodb",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/trinodb",
            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?"
        }
    },
    {
        "id": "25043027248",
        "type": "PullRequestEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 341978481,
            "name": "bitsondatadev/trino-getting-started",
            "url": "https://api.github.com/repos/bitsondatadev/trino-getting-started"
        },
        "payload": {
            "action": "opened",
            "number": 11,
            "pull_request": {
                "url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/pulls/11",
                "id": 1111404116,
                "node_id": "PR_kwDOFGItcc5CPq5U",
                "html_url": "https://github.com/bitsondatadev/trino-getting-started/pull/11",
                "diff_url": "https://github.com/bitsondatadev/trino-getting-started/pull/11.diff",
                "patch_url": "https://github.com/bitsondatadev/trino-getting-started/pull/11.patch",
                "issue_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/issues/11",
                "number": 11,
                "state": "open",
                "locked": false,
                "title": "Add date column to drivestats table",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "We added a `date` column to the drivestats table to allow for easier querying - it's much easier to, for example, find the most recent entry in the data set than it was using the `year`, `month` and `day' columns.",
                "created_at": "2022-11-04T23:55:43Z",
                "updated_at": "2022-11-04T23:55:43Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": null,
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/pulls/11/commits",
                "review_comments_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/pulls/11/comments",
                "review_comment_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/issues/11/comments",
                "statuses_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/statuses/fb6ea5ceaae7db7dfb374b5b502b76c2b522fd83",
                "head": {
                    "label": "metadaddy:readme-corrections",
                    "ref": "readme-corrections",
                    "sha": "fb6ea5ceaae7db7dfb374b5b502b76c2b522fd83",
                    "user": {
                        "login": "metadaddy",
                        "id": 723517,
                        "node_id": "MDQ6VXNlcjcyMzUxNw==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/metadaddy",
                        "html_url": "https://github.com/metadaddy",
                        "followers_url": "https://api.github.com/users/metadaddy/followers",
                        "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                        "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                        "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                        "repos_url": "https://api.github.com/users/metadaddy/repos",
                        "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 506752547,
                        "node_id": "R_kgDOHjRuIw",
                        "name": "trino-getting-started",
                        "full_name": "metadaddy/trino-getting-started",
                        "private": false,
                        "owner": {
                            "login": "metadaddy",
                            "id": 723517,
                            "node_id": "MDQ6VXNlcjcyMzUxNw==",
                            "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/metadaddy",
                            "html_url": "https://github.com/metadaddy",
                            "followers_url": "https://api.github.com/users/metadaddy/followers",
                            "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                            "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                            "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                            "repos_url": "https://api.github.com/users/metadaddy/repos",
                            "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/metadaddy/trino-getting-started",
                        "description": null,
                        "fork": true,
                        "url": "https://api.github.com/repos/metadaddy/trino-getting-started",
                        "forks_url": "https://api.github.com/repos/metadaddy/trino-getting-started/forks",
                        "keys_url": "https://api.github.com/repos/metadaddy/trino-getting-started/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/metadaddy/trino-getting-started/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/metadaddy/trino-getting-started/teams",
                        "hooks_url": "https://api.github.com/repos/metadaddy/trino-getting-started/hooks",
                        "issue_events_url": "https://api.github.com/repos/metadaddy/trino-getting-started/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/metadaddy/trino-getting-started/events",
                        "assignees_url": "https://api.github.com/repos/metadaddy/trino-getting-started/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/metadaddy/trino-getting-started/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/metadaddy/trino-getting-started/tags",
                        "blobs_url": "https://api.github.com/repos/metadaddy/trino-getting-started/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/metadaddy/trino-getting-started/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/metadaddy/trino-getting-started/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/metadaddy/trino-getting-started/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/metadaddy/trino-getting-started/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/metadaddy/trino-getting-started/languages",
                        "stargazers_url": "https://api.github.com/repos/metadaddy/trino-getting-started/stargazers",
                        "contributors_url": "https://api.github.com/repos/metadaddy/trino-getting-started/contributors",
                        "subscribers_url": "https://api.github.com/repos/metadaddy/trino-getting-started/subscribers",
                        "subscription_url": "https://api.github.com/repos/metadaddy/trino-getting-started/subscription",
                        "commits_url": "https://api.github.com/repos/metadaddy/trino-getting-started/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/metadaddy/trino-getting-started/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/metadaddy/trino-getting-started/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/metadaddy/trino-getting-started/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/metadaddy/trino-getting-started/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/metadaddy/trino-getting-started/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/metadaddy/trino-getting-started/merges",
                        "archive_url": "https://api.github.com/repos/metadaddy/trino-getting-started/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/metadaddy/trino-getting-started/downloads",
                        "issues_url": "https://api.github.com/repos/metadaddy/trino-getting-started/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/metadaddy/trino-getting-started/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/metadaddy/trino-getting-started/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/metadaddy/trino-getting-started/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/metadaddy/trino-getting-started/labels{/name}",
                        "releases_url": "https://api.github.com/repos/metadaddy/trino-getting-started/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/metadaddy/trino-getting-started/deployments",
                        "created_at": "2022-06-23T18:37:35Z",
                        "updated_at": "2022-08-27T02:19:58Z",
                        "pushed_at": "2022-11-04T23:53:17Z",
                        "git_url": "git://github.com/metadaddy/trino-getting-started.git",
                        "ssh_url": "git@github.com:metadaddy/trino-getting-started.git",
                        "clone_url": "https://github.com/metadaddy/trino-getting-started.git",
                        "svn_url": "https://github.com/metadaddy/trino-getting-started",
                        "homepage": null,
                        "size": 21866,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": "Python",
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "main"
                    }
                },
                "base": {
                    "label": "bitsondatadev:main",
                    "ref": "main",
                    "sha": "9a4f44e31df09b83d2ecfd2a4fbaa88b0da8e6f6",
                    "user": {
                        "login": "bitsondatadev",
                        "id": 8547669,
                        "node_id": "MDQ6VXNlcjg1NDc2Njk=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/8547669?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/bitsondatadev",
                        "html_url": "https://github.com/bitsondatadev",
                        "followers_url": "https://api.github.com/users/bitsondatadev/followers",
                        "following_url": "https://api.github.com/users/bitsondatadev/following{/other_user}",
                        "gists_url": "https://api.github.com/users/bitsondatadev/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/bitsondatadev/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/bitsondatadev/subscriptions",
                        "organizations_url": "https://api.github.com/users/bitsondatadev/orgs",
                        "repos_url": "https://api.github.com/users/bitsondatadev/repos",
                        "events_url": "https://api.github.com/users/bitsondatadev/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/bitsondatadev/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 341978481,
                        "node_id": "MDEwOlJlcG9zaXRvcnkzNDE5Nzg0ODE=",
                        "name": "trino-getting-started",
                        "full_name": "bitsondatadev/trino-getting-started",
                        "private": false,
                        "owner": {
                            "login": "bitsondatadev",
                            "id": 8547669,
                            "node_id": "MDQ6VXNlcjg1NDc2Njk=",
                            "avatar_url": "https://avatars.githubusercontent.com/u/8547669?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/bitsondatadev",
                            "html_url": "https://github.com/bitsondatadev",
                            "followers_url": "https://api.github.com/users/bitsondatadev/followers",
                            "following_url": "https://api.github.com/users/bitsondatadev/following{/other_user}",
                            "gists_url": "https://api.github.com/users/bitsondatadev/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/bitsondatadev/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/bitsondatadev/subscriptions",
                            "organizations_url": "https://api.github.com/users/bitsondatadev/orgs",
                            "repos_url": "https://api.github.com/users/bitsondatadev/repos",
                            "events_url": "https://api.github.com/users/bitsondatadev/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/bitsondatadev/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/bitsondatadev/trino-getting-started",
                        "description": null,
                        "fork": false,
                        "url": "https://api.github.com/repos/bitsondatadev/trino-getting-started",
                        "forks_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/forks",
                        "keys_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/teams",
                        "hooks_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/hooks",
                        "issue_events_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/events",
                        "assignees_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/tags",
                        "blobs_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/languages",
                        "stargazers_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/stargazers",
                        "contributors_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/contributors",
                        "subscribers_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/subscribers",
                        "subscription_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/subscription",
                        "commits_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/merges",
                        "archive_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/downloads",
                        "issues_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/labels{/name}",
                        "releases_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/deployments",
                        "created_at": "2021-02-24T17:23:52Z",
                        "updated_at": "2022-11-01T18:33:10Z",
                        "pushed_at": "2022-11-04T23:55:44Z",
                        "git_url": "git://github.com/bitsondatadev/trino-getting-started.git",
                        "ssh_url": "git@github.com:bitsondatadev/trino-getting-started.git",
                        "clone_url": "https://github.com/bitsondatadev/trino-getting-started.git",
                        "svn_url": "https://github.com/bitsondatadev/trino-getting-started",
                        "homepage": null,
                        "size": 21867,
                        "stargazers_count": 129,
                        "watchers_count": 129,
                        "language": "Python",
                        "has_issues": true,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "forks_count": 48,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 5,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 48,
                        "open_issues": 5,
                        "watchers": 129,
                        "default_branch": "main"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/bitsondatadev/trino-getting-started/pulls/11"
                    },
                    "html": {
                        "href": "https://github.com/bitsondatadev/trino-getting-started/pull/11"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/bitsondatadev/trino-getting-started/issues/11"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/bitsondatadev/trino-getting-started/issues/11/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/bitsondatadev/trino-getting-started/pulls/11/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/bitsondatadev/trino-getting-started/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/bitsondatadev/trino-getting-started/pulls/11/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/bitsondatadev/trino-getting-started/statuses/fb6ea5ceaae7db7dfb374b5b502b76c2b522fd83"
                    }
                },
                "author_association": "CONTRIBUTOR",
                "auto_merge": null,
                "active_lock_reason": null,
                "merged": false,
                "mergeable": null,
                "rebaseable": null,
                "mergeable_state": "unknown",
                "merged_by": null,
                "comments": 0,
                "review_comments": 0,
                "maintainer_can_modify": true,
                "commits": 1,
                "additions": 2,
                "deletions": 0,
                "changed_files": 1
            }
        },
        "public": true,
        "created_at": "2022-11-04T23:55:44Z"
    },
    {
        "id": "25043010432",
        "type": "PushEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 506752547,
            "name": "metadaddy/trino-getting-started",
            "url": "https://api.github.com/repos/metadaddy/trino-getting-started"
        },
        "payload": {
            "push_id": 11560148359,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/readme-corrections",
            "head": "fb6ea5ceaae7db7dfb374b5b502b76c2b522fd83",
            "before": "4de2e90a5209e8281f4c0186d552720d62d0f17c",
            "commits": [
                {
                    "sha": "fb6ea5ceaae7db7dfb374b5b502b76c2b522fd83",
                    "author": {
                        "email": "pat@backblaze.com",
                        "name": "Pat Patterson"
                    },
                    "message": "Add date column to drivestats table",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino-getting-started/commits/fb6ea5ceaae7db7dfb374b5b502b76c2b522fd83"
                }
            ]
        },
        "public": true,
        "created_at": "2022-11-04T23:53:18Z"
    },
    {
        "id": "24994763180",
        "type": "PullRequestEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 560949628,
            "name": "rmoff/devrel-mastodon",
            "url": "https://api.github.com/repos/rmoff/devrel-mastodon"
        },
        "payload": {
            "action": "opened",
            "number": 8,
            "pull_request": {
                "url": "https://api.github.com/repos/rmoff/devrel-mastodon/pulls/8",
                "id": 1108900143,
                "node_id": "PR_kwDOIW9pfM5CGHkv",
                "html_url": "https://github.com/rmoff/devrel-mastodon/pull/8",
                "diff_url": "https://github.com/rmoff/devrel-mastodon/pull/8.diff",
                "patch_url": "https://github.com/rmoff/devrel-mastodon/pull/8.patch",
                "issue_url": "https://api.github.com/repos/rmoff/devrel-mastodon/issues/8",
                "number": 8,
                "state": "open",
                "locked": false,
                "title": "Add metadaddy",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": null,
                "created_at": "2022-11-02T22:27:58Z",
                "updated_at": "2022-11-02T22:27:58Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": null,
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/rmoff/devrel-mastodon/pulls/8/commits",
                "review_comments_url": "https://api.github.com/repos/rmoff/devrel-mastodon/pulls/8/comments",
                "review_comment_url": "https://api.github.com/repos/rmoff/devrel-mastodon/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/rmoff/devrel-mastodon/issues/8/comments",
                "statuses_url": "https://api.github.com/repos/rmoff/devrel-mastodon/statuses/8c56616d2029a3bf37b9f8b56ee63b0fd435560c",
                "head": {
                    "label": "metadaddy:add-metadaddy",
                    "ref": "add-metadaddy",
                    "sha": "8c56616d2029a3bf37b9f8b56ee63b0fd435560c",
                    "user": {
                        "login": "metadaddy",
                        "id": 723517,
                        "node_id": "MDQ6VXNlcjcyMzUxNw==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/metadaddy",
                        "html_url": "https://github.com/metadaddy",
                        "followers_url": "https://api.github.com/users/metadaddy/followers",
                        "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                        "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                        "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                        "repos_url": "https://api.github.com/users/metadaddy/repos",
                        "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 561068352,
                        "node_id": "R_kgDOIXE5QA",
                        "name": "devrel-mastodon",
                        "full_name": "metadaddy/devrel-mastodon",
                        "private": false,
                        "owner": {
                            "login": "metadaddy",
                            "id": 723517,
                            "node_id": "MDQ6VXNlcjcyMzUxNw==",
                            "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/metadaddy",
                            "html_url": "https://github.com/metadaddy",
                            "followers_url": "https://api.github.com/users/metadaddy/followers",
                            "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                            "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                            "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                            "repos_url": "https://api.github.com/users/metadaddy/repos",
                            "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/metadaddy/devrel-mastodon",
                        "description": "List of DevRel folk on Mastodon",
                        "fork": true,
                        "url": "https://api.github.com/repos/metadaddy/devrel-mastodon",
                        "forks_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/forks",
                        "keys_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/teams",
                        "hooks_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/hooks",
                        "issue_events_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/events",
                        "assignees_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/tags",
                        "blobs_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/languages",
                        "stargazers_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/stargazers",
                        "contributors_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/contributors",
                        "subscribers_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/subscribers",
                        "subscription_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/subscription",
                        "commits_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/merges",
                        "archive_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/downloads",
                        "issues_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/labels{/name}",
                        "releases_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/deployments",
                        "created_at": "2022-11-02T21:54:14Z",
                        "updated_at": "2022-11-02T19:59:14Z",
                        "pushed_at": "2022-11-02T22:27:47Z",
                        "git_url": "git://github.com/metadaddy/devrel-mastodon.git",
                        "ssh_url": "git@github.com:metadaddy/devrel-mastodon.git",
                        "clone_url": "https://github.com/metadaddy/devrel-mastodon.git",
                        "svn_url": "https://github.com/metadaddy/devrel-mastodon",
                        "homepage": "",
                        "size": 11,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": null,
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": false,
                        "has_pages": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": null,
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "main"
                    }
                },
                "base": {
                    "label": "rmoff:main",
                    "ref": "main",
                    "sha": "c8dd21bc7145719d3a137be85f2ccf5f4d6545a6",
                    "user": {
                        "login": "rmoff",
                        "id": 3671582,
                        "node_id": "MDQ6VXNlcjM2NzE1ODI=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/3671582?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/rmoff",
                        "html_url": "https://github.com/rmoff",
                        "followers_url": "https://api.github.com/users/rmoff/followers",
                        "following_url": "https://api.github.com/users/rmoff/following{/other_user}",
                        "gists_url": "https://api.github.com/users/rmoff/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/rmoff/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/rmoff/subscriptions",
                        "organizations_url": "https://api.github.com/users/rmoff/orgs",
                        "repos_url": "https://api.github.com/users/rmoff/repos",
                        "events_url": "https://api.github.com/users/rmoff/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/rmoff/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 560949628,
                        "node_id": "R_kgDOIW9pfA",
                        "name": "devrel-mastodon",
                        "full_name": "rmoff/devrel-mastodon",
                        "private": false,
                        "owner": {
                            "login": "rmoff",
                            "id": 3671582,
                            "node_id": "MDQ6VXNlcjM2NzE1ODI=",
                            "avatar_url": "https://avatars.githubusercontent.com/u/3671582?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/rmoff",
                            "html_url": "https://github.com/rmoff",
                            "followers_url": "https://api.github.com/users/rmoff/followers",
                            "following_url": "https://api.github.com/users/rmoff/following{/other_user}",
                            "gists_url": "https://api.github.com/users/rmoff/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/rmoff/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/rmoff/subscriptions",
                            "organizations_url": "https://api.github.com/users/rmoff/orgs",
                            "repos_url": "https://api.github.com/users/rmoff/repos",
                            "events_url": "https://api.github.com/users/rmoff/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/rmoff/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/rmoff/devrel-mastodon",
                        "description": "List of DevRel folk on Mastodon",
                        "fork": false,
                        "url": "https://api.github.com/repos/rmoff/devrel-mastodon",
                        "forks_url": "https://api.github.com/repos/rmoff/devrel-mastodon/forks",
                        "keys_url": "https://api.github.com/repos/rmoff/devrel-mastodon/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/rmoff/devrel-mastodon/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/rmoff/devrel-mastodon/teams",
                        "hooks_url": "https://api.github.com/repos/rmoff/devrel-mastodon/hooks",
                        "issue_events_url": "https://api.github.com/repos/rmoff/devrel-mastodon/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/rmoff/devrel-mastodon/events",
                        "assignees_url": "https://api.github.com/repos/rmoff/devrel-mastodon/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/rmoff/devrel-mastodon/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/rmoff/devrel-mastodon/tags",
                        "blobs_url": "https://api.github.com/repos/rmoff/devrel-mastodon/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/rmoff/devrel-mastodon/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/rmoff/devrel-mastodon/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/rmoff/devrel-mastodon/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/rmoff/devrel-mastodon/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/rmoff/devrel-mastodon/languages",
                        "stargazers_url": "https://api.github.com/repos/rmoff/devrel-mastodon/stargazers",
                        "contributors_url": "https://api.github.com/repos/rmoff/devrel-mastodon/contributors",
                        "subscribers_url": "https://api.github.com/repos/rmoff/devrel-mastodon/subscribers",
                        "subscription_url": "https://api.github.com/repos/rmoff/devrel-mastodon/subscription",
                        "commits_url": "https://api.github.com/repos/rmoff/devrel-mastodon/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/rmoff/devrel-mastodon/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/rmoff/devrel-mastodon/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/rmoff/devrel-mastodon/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/rmoff/devrel-mastodon/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/rmoff/devrel-mastodon/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/rmoff/devrel-mastodon/merges",
                        "archive_url": "https://api.github.com/repos/rmoff/devrel-mastodon/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/rmoff/devrel-mastodon/downloads",
                        "issues_url": "https://api.github.com/repos/rmoff/devrel-mastodon/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/rmoff/devrel-mastodon/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/rmoff/devrel-mastodon/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/rmoff/devrel-mastodon/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/rmoff/devrel-mastodon/labels{/name}",
                        "releases_url": "https://api.github.com/repos/rmoff/devrel-mastodon/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/rmoff/devrel-mastodon/deployments",
                        "created_at": "2022-11-02T16:01:51Z",
                        "updated_at": "2022-11-02T19:59:14Z",
                        "pushed_at": "2022-11-02T21:21:36Z",
                        "git_url": "git://github.com/rmoff/devrel-mastodon.git",
                        "ssh_url": "git@github.com:rmoff/devrel-mastodon.git",
                        "clone_url": "https://github.com/rmoff/devrel-mastodon.git",
                        "svn_url": "https://github.com/rmoff/devrel-mastodon",
                        "homepage": "",
                        "size": 11,
                        "stargazers_count": 1,
                        "watchers_count": 1,
                        "language": null,
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": false,
                        "has_pages": false,
                        "forks_count": 9,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 4,
                        "license": null,
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "devrel",
                            "mastodon"
                        ],
                        "visibility": "public",
                        "forks": 9,
                        "open_issues": 4,
                        "watchers": 1,
                        "default_branch": "main"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/rmoff/devrel-mastodon/pulls/8"
                    },
                    "html": {
                        "href": "https://github.com/rmoff/devrel-mastodon/pull/8"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/rmoff/devrel-mastodon/issues/8"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/rmoff/devrel-mastodon/issues/8/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/rmoff/devrel-mastodon/pulls/8/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/rmoff/devrel-mastodon/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/rmoff/devrel-mastodon/pulls/8/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/rmoff/devrel-mastodon/statuses/8c56616d2029a3bf37b9f8b56ee63b0fd435560c"
                    }
                },
                "author_association": "NONE",
                "auto_merge": null,
                "active_lock_reason": null,
                "merged": false,
                "mergeable": null,
                "rebaseable": null,
                "mergeable_state": "unknown",
                "merged_by": null,
                "comments": 0,
                "review_comments": 0,
                "maintainer_can_modify": true,
                "commits": 1,
                "additions": 1,
                "deletions": 0,
                "changed_files": 1
            }
        },
        "public": true,
        "created_at": "2022-11-02T22:27:59Z"
    },
    {
        "id": "24994760655",
        "type": "CreateEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 561068352,
            "name": "metadaddy/devrel-mastodon",
            "url": "https://api.github.com/repos/metadaddy/devrel-mastodon"
        },
        "payload": {
            "ref": "add-metadaddy",
            "ref_type": "branch",
            "master_branch": "main",
            "description": "List of DevRel folk on Mastodon",
            "pusher_type": "user"
        },
        "public": true,
        "created_at": "2022-11-02T22:27:48Z"
    },
    {
        "id": "24994269382",
        "type": "ForkEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 560949628,
            "name": "rmoff/devrel-mastodon",
            "url": "https://api.github.com/repos/rmoff/devrel-mastodon"
        },
        "payload": {
            "forkee": {
                "id": 561068352,
                "node_id": "R_kgDOIXE5QA",
                "name": "devrel-mastodon",
                "full_name": "metadaddy/devrel-mastodon",
                "private": false,
                "owner": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "html_url": "https://github.com/metadaddy/devrel-mastodon",
                "description": "List of DevRel folk on Mastodon",
                "fork": true,
                "url": "https://api.github.com/repos/metadaddy/devrel-mastodon",
                "forks_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/forks",
                "keys_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/keys{/key_id}",
                "collaborators_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/collaborators{/collaborator}",
                "teams_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/teams",
                "hooks_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/hooks",
                "issue_events_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/issues/events{/number}",
                "events_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/events",
                "assignees_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/assignees{/user}",
                "branches_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/branches{/branch}",
                "tags_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/tags",
                "blobs_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/git/blobs{/sha}",
                "git_tags_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/git/tags{/sha}",
                "git_refs_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/git/refs{/sha}",
                "trees_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/git/trees{/sha}",
                "statuses_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/statuses/{sha}",
                "languages_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/languages",
                "stargazers_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/stargazers",
                "contributors_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/contributors",
                "subscribers_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/subscribers",
                "subscription_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/subscription",
                "commits_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/commits{/sha}",
                "git_commits_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/git/commits{/sha}",
                "comments_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/comments{/number}",
                "issue_comment_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/issues/comments{/number}",
                "contents_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/contents/{+path}",
                "compare_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/compare/{base}...{head}",
                "merges_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/merges",
                "archive_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/{archive_format}{/ref}",
                "downloads_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/downloads",
                "issues_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/issues{/number}",
                "pulls_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/pulls{/number}",
                "milestones_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/milestones{/number}",
                "notifications_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/notifications{?since,all,participating}",
                "labels_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/labels{/name}",
                "releases_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/releases{/id}",
                "deployments_url": "https://api.github.com/repos/metadaddy/devrel-mastodon/deployments",
                "created_at": "2022-11-02T21:54:14Z",
                "updated_at": "2022-11-02T19:59:14Z",
                "pushed_at": "2022-11-02T21:21:36Z",
                "git_url": "git://github.com/metadaddy/devrel-mastodon.git",
                "ssh_url": "git@github.com:metadaddy/devrel-mastodon.git",
                "clone_url": "https://github.com/metadaddy/devrel-mastodon.git",
                "svn_url": "https://github.com/metadaddy/devrel-mastodon",
                "homepage": "",
                "size": 11,
                "stargazers_count": 0,
                "watchers_count": 0,
                "language": null,
                "has_issues": false,
                "has_projects": true,
                "has_downloads": true,
                "has_wiki": false,
                "has_pages": false,
                "forks_count": 0,
                "mirror_url": null,
                "archived": false,
                "disabled": false,
                "open_issues_count": 0,
                "license": null,
                "allow_forking": true,
                "is_template": false,
                "web_commit_signoff_required": false,
                "topics": [],
                "visibility": "public",
                "forks": 0,
                "open_issues": 0,
                "watchers": 0,
                "default_branch": "main",
                "public": true
            }
        },
        "public": true,
        "created_at": "2022-11-02T21:54:15Z"
    },
    {
        "id": "24973802364",
        "type": "PullRequestEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 341978481,
            "name": "bitsondatadev/trino-getting-started",
            "url": "https://api.github.com/repos/bitsondatadev/trino-getting-started"
        },
        "payload": {
            "action": "opened",
            "number": 10,
            "pull_request": {
                "url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/pulls/10",
                "id": 1107700733,
                "node_id": "PR_kwDOFGItcc5CBiv9",
                "html_url": "https://github.com/bitsondatadev/trino-getting-started/pull/10",
                "diff_url": "https://github.com/bitsondatadev/trino-getting-started/pull/10.diff",
                "patch_url": "https://github.com/bitsondatadev/trino-getting-started/pull/10.patch",
                "issue_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/issues/10",
                "number": 10,
                "state": "open",
                "locked": false,
                "title": "A few minor README tweaks and corrections",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": null,
                "created_at": "2022-11-02T05:19:06Z",
                "updated_at": "2022-11-02T05:19:06Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": null,
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/pulls/10/commits",
                "review_comments_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/pulls/10/comments",
                "review_comment_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/issues/10/comments",
                "statuses_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/statuses/4de2e90a5209e8281f4c0186d552720d62d0f17c",
                "head": {
                    "label": "metadaddy:readme-corrections",
                    "ref": "readme-corrections",
                    "sha": "4de2e90a5209e8281f4c0186d552720d62d0f17c",
                    "user": {
                        "login": "metadaddy",
                        "id": 723517,
                        "node_id": "MDQ6VXNlcjcyMzUxNw==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/metadaddy",
                        "html_url": "https://github.com/metadaddy",
                        "followers_url": "https://api.github.com/users/metadaddy/followers",
                        "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                        "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                        "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                        "repos_url": "https://api.github.com/users/metadaddy/repos",
                        "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 506752547,
                        "node_id": "R_kgDOHjRuIw",
                        "name": "trino-getting-started",
                        "full_name": "metadaddy/trino-getting-started",
                        "private": false,
                        "owner": {
                            "login": "metadaddy",
                            "id": 723517,
                            "node_id": "MDQ6VXNlcjcyMzUxNw==",
                            "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/metadaddy",
                            "html_url": "https://github.com/metadaddy",
                            "followers_url": "https://api.github.com/users/metadaddy/followers",
                            "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                            "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                            "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                            "repos_url": "https://api.github.com/users/metadaddy/repos",
                            "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/metadaddy/trino-getting-started",
                        "description": null,
                        "fork": true,
                        "url": "https://api.github.com/repos/metadaddy/trino-getting-started",
                        "forks_url": "https://api.github.com/repos/metadaddy/trino-getting-started/forks",
                        "keys_url": "https://api.github.com/repos/metadaddy/trino-getting-started/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/metadaddy/trino-getting-started/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/metadaddy/trino-getting-started/teams",
                        "hooks_url": "https://api.github.com/repos/metadaddy/trino-getting-started/hooks",
                        "issue_events_url": "https://api.github.com/repos/metadaddy/trino-getting-started/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/metadaddy/trino-getting-started/events",
                        "assignees_url": "https://api.github.com/repos/metadaddy/trino-getting-started/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/metadaddy/trino-getting-started/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/metadaddy/trino-getting-started/tags",
                        "blobs_url": "https://api.github.com/repos/metadaddy/trino-getting-started/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/metadaddy/trino-getting-started/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/metadaddy/trino-getting-started/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/metadaddy/trino-getting-started/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/metadaddy/trino-getting-started/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/metadaddy/trino-getting-started/languages",
                        "stargazers_url": "https://api.github.com/repos/metadaddy/trino-getting-started/stargazers",
                        "contributors_url": "https://api.github.com/repos/metadaddy/trino-getting-started/contributors",
                        "subscribers_url": "https://api.github.com/repos/metadaddy/trino-getting-started/subscribers",
                        "subscription_url": "https://api.github.com/repos/metadaddy/trino-getting-started/subscription",
                        "commits_url": "https://api.github.com/repos/metadaddy/trino-getting-started/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/metadaddy/trino-getting-started/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/metadaddy/trino-getting-started/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/metadaddy/trino-getting-started/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/metadaddy/trino-getting-started/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/metadaddy/trino-getting-started/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/metadaddy/trino-getting-started/merges",
                        "archive_url": "https://api.github.com/repos/metadaddy/trino-getting-started/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/metadaddy/trino-getting-started/downloads",
                        "issues_url": "https://api.github.com/repos/metadaddy/trino-getting-started/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/metadaddy/trino-getting-started/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/metadaddy/trino-getting-started/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/metadaddy/trino-getting-started/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/metadaddy/trino-getting-started/labels{/name}",
                        "releases_url": "https://api.github.com/repos/metadaddy/trino-getting-started/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/metadaddy/trino-getting-started/deployments",
                        "created_at": "2022-06-23T18:37:35Z",
                        "updated_at": "2022-08-27T02:19:58Z",
                        "pushed_at": "2022-11-02T05:18:04Z",
                        "git_url": "git://github.com/metadaddy/trino-getting-started.git",
                        "ssh_url": "git@github.com:metadaddy/trino-getting-started.git",
                        "clone_url": "https://github.com/metadaddy/trino-getting-started.git",
                        "svn_url": "https://github.com/metadaddy/trino-getting-started",
                        "homepage": null,
                        "size": 21865,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": "Python",
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "main"
                    }
                },
                "base": {
                    "label": "bitsondatadev:main",
                    "ref": "main",
                    "sha": "58790e463b29274a2011524e05f8de84cbbe8306",
                    "user": {
                        "login": "bitsondatadev",
                        "id": 8547669,
                        "node_id": "MDQ6VXNlcjg1NDc2Njk=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/8547669?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/bitsondatadev",
                        "html_url": "https://github.com/bitsondatadev",
                        "followers_url": "https://api.github.com/users/bitsondatadev/followers",
                        "following_url": "https://api.github.com/users/bitsondatadev/following{/other_user}",
                        "gists_url": "https://api.github.com/users/bitsondatadev/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/bitsondatadev/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/bitsondatadev/subscriptions",
                        "organizations_url": "https://api.github.com/users/bitsondatadev/orgs",
                        "repos_url": "https://api.github.com/users/bitsondatadev/repos",
                        "events_url": "https://api.github.com/users/bitsondatadev/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/bitsondatadev/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 341978481,
                        "node_id": "MDEwOlJlcG9zaXRvcnkzNDE5Nzg0ODE=",
                        "name": "trino-getting-started",
                        "full_name": "bitsondatadev/trino-getting-started",
                        "private": false,
                        "owner": {
                            "login": "bitsondatadev",
                            "id": 8547669,
                            "node_id": "MDQ6VXNlcjg1NDc2Njk=",
                            "avatar_url": "https://avatars.githubusercontent.com/u/8547669?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/bitsondatadev",
                            "html_url": "https://github.com/bitsondatadev",
                            "followers_url": "https://api.github.com/users/bitsondatadev/followers",
                            "following_url": "https://api.github.com/users/bitsondatadev/following{/other_user}",
                            "gists_url": "https://api.github.com/users/bitsondatadev/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/bitsondatadev/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/bitsondatadev/subscriptions",
                            "organizations_url": "https://api.github.com/users/bitsondatadev/orgs",
                            "repos_url": "https://api.github.com/users/bitsondatadev/repos",
                            "events_url": "https://api.github.com/users/bitsondatadev/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/bitsondatadev/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/bitsondatadev/trino-getting-started",
                        "description": null,
                        "fork": false,
                        "url": "https://api.github.com/repos/bitsondatadev/trino-getting-started",
                        "forks_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/forks",
                        "keys_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/teams",
                        "hooks_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/hooks",
                        "issue_events_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/events",
                        "assignees_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/tags",
                        "blobs_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/languages",
                        "stargazers_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/stargazers",
                        "contributors_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/contributors",
                        "subscribers_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/subscribers",
                        "subscription_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/subscription",
                        "commits_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/merges",
                        "archive_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/downloads",
                        "issues_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/labels{/name}",
                        "releases_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/deployments",
                        "created_at": "2021-02-24T17:23:52Z",
                        "updated_at": "2022-11-01T18:33:10Z",
                        "pushed_at": "2022-11-02T05:19:06Z",
                        "git_url": "git://github.com/bitsondatadev/trino-getting-started.git",
                        "ssh_url": "git@github.com:bitsondatadev/trino-getting-started.git",
                        "clone_url": "https://github.com/bitsondatadev/trino-getting-started.git",
                        "svn_url": "https://github.com/bitsondatadev/trino-getting-started",
                        "homepage": null,
                        "size": 21865,
                        "stargazers_count": 129,
                        "watchers_count": 129,
                        "language": "Python",
                        "has_issues": true,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "forks_count": 48,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 5,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 48,
                        "open_issues": 5,
                        "watchers": 129,
                        "default_branch": "main"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/bitsondatadev/trino-getting-started/pulls/10"
                    },
                    "html": {
                        "href": "https://github.com/bitsondatadev/trino-getting-started/pull/10"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/bitsondatadev/trino-getting-started/issues/10"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/bitsondatadev/trino-getting-started/issues/10/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/bitsondatadev/trino-getting-started/pulls/10/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/bitsondatadev/trino-getting-started/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/bitsondatadev/trino-getting-started/pulls/10/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/bitsondatadev/trino-getting-started/statuses/4de2e90a5209e8281f4c0186d552720d62d0f17c"
                    }
                },
                "author_association": "CONTRIBUTOR",
                "auto_merge": null,
                "active_lock_reason": null,
                "merged": false,
                "mergeable": null,
                "rebaseable": null,
                "mergeable_state": "unknown",
                "merged_by": null,
                "comments": 0,
                "review_comments": 0,
                "maintainer_can_modify": true,
                "commits": 1,
                "additions": 6,
                "deletions": 6,
                "changed_files": 1
            }
        },
        "public": true,
        "created_at": "2022-11-02T05:19:06Z"
    },
    {
        "id": "24973791100",
        "type": "CreateEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 506752547,
            "name": "metadaddy/trino-getting-started",
            "url": "https://api.github.com/repos/metadaddy/trino-getting-started"
        },
        "payload": {
            "ref": "readme-corrections",
            "ref_type": "branch",
            "master_branch": "main",
            "description": null,
            "pusher_type": "user"
        },
        "public": true,
        "created_at": "2022-11-02T05:18:05Z"
    },
    {
        "id": "24964939740",
        "type": "WatchEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 341978481,
            "name": "bitsondatadev/trino-getting-started",
            "url": "https://api.github.com/repos/bitsondatadev/trino-getting-started"
        },
        "payload": {
            "action": "started"
        },
        "public": true,
        "created_at": "2022-11-01T18:33:10Z"
    },
    {
        "id": "24964111403",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 166515022,
            "name": "trinodb/trino",
            "url": "https://api.github.com/repos/trinodb/trino"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/trinodb/trino/issues/6131",
                "repository_url": "https://api.github.com/repos/trinodb/trino",
                "labels_url": "https://api.github.com/repos/trinodb/trino/issues/6131/labels{/name}",
                "comments_url": "https://api.github.com/repos/trinodb/trino/issues/6131/comments",
                "events_url": "https://api.github.com/repos/trinodb/trino/issues/6131/events",
                "html_url": "https://github.com/trinodb/trino/pull/6131",
                "id": 752676545,
                "node_id": "MDExOlB1bGxSZXF1ZXN0NTI4OTQ4MTI5",
                "number": 6131,
                "title": "Support public S3 bucket access",
                "user": {
                    "login": "tooptoop4",
                    "id": 33283496,
                    "node_id": "MDQ6VXNlcjMzMjgzNDk2",
                    "avatar_url": "https://avatars.githubusercontent.com/u/33283496?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/tooptoop4",
                    "html_url": "https://github.com/tooptoop4",
                    "followers_url": "https://api.github.com/users/tooptoop4/followers",
                    "following_url": "https://api.github.com/users/tooptoop4/following{/other_user}",
                    "gists_url": "https://api.github.com/users/tooptoop4/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/tooptoop4/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/tooptoop4/subscriptions",
                    "organizations_url": "https://api.github.com/users/tooptoop4/orgs",
                    "repos_url": "https://api.github.com/users/tooptoop4/repos",
                    "events_url": "https://api.github.com/users/tooptoop4/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/tooptoop4/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 1202580151,
                        "node_id": "MDU6TGFiZWwxMjAyNTgwMTUx",
                        "url": "https://api.github.com/repos/trinodb/trino/labels/cla-signed",
                        "name": "cla-signed",
                        "color": "ededed",
                        "default": false,
                        "description": null
                    }
                ],
                "state": "closed",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 6,
                "created_at": "2020-11-28T13:27:44Z",
                "updated_at": "2022-11-01T17:53:30Z",
                "closed_at": "2022-10-21T06:29:58Z",
                "author_association": "CONTRIBUTOR",
                "active_lock_reason": null,
                "draft": false,
                "pull_request": {
                    "url": "https://api.github.com/repos/trinodb/trino/pulls/6131",
                    "html_url": "https://github.com/trinodb/trino/pull/6131",
                    "diff_url": "https://github.com/trinodb/trino/pull/6131.diff",
                    "patch_url": "https://github.com/trinodb/trino/pull/6131.patch",
                    "merged_at": null
                },
                "body": "Fixes https://github.com/prestosql/presto/issues/6127",
                "reactions": {
                    "url": "https://api.github.com/repos/trinodb/trino/issues/6131/reactions",
                    "total_count": 2,
                    "+1": 2,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/trinodb/trino/issues/6131/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/trinodb/trino/issues/comments/1298898008",
                "html_url": "https://github.com/trinodb/trino/pull/6131#issuecomment-1298898008",
                "issue_url": "https://api.github.com/repos/trinodb/trino/issues/6131",
                "id": 1298898008,
                "node_id": "IC_kwDOCezRTs5Na5xY",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2022-11-01T17:53:30Z",
                "updated_at": "2022-11-01T17:53:30Z",
                "author_association": "MEMBER",
                "body": "@mosabua From inspecting the code in the master branch, I can confidently say that this feature is not already available.",
                "reactions": {
                    "url": "https://api.github.com/repos/trinodb/trino/issues/comments/1298898008/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2022-11-01T17:53:30Z",
        "org": {
            "id": 34147222,
            "login": "trinodb",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/trinodb",
            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?"
        }
    },
    {
        "id": "24963884562",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 166515022,
            "name": "trinodb/trino",
            "url": "https://api.github.com/repos/trinodb/trino"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/trinodb/trino/issues/13095",
                "repository_url": "https://api.github.com/repos/trinodb/trino",
                "labels_url": "https://api.github.com/repos/trinodb/trino/issues/13095/labels{/name}",
                "comments_url": "https://api.github.com/repos/trinodb/trino/issues/13095/comments",
                "events_url": "https://api.github.com/repos/trinodb/trino/issues/13095/events",
                "html_url": "https://github.com/trinodb/trino/pull/13095",
                "id": 1295003432,
                "node_id": "PR_kwDOCezRTs465Hjk",
                "number": 13095,
                "title": "Use correct abbreviations for data quantities",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 1202580151,
                        "node_id": "MDU6TGFiZWwxMjAyNTgwMTUx",
                        "url": "https://api.github.com/repos/trinodb/trino/labels/cla-signed",
                        "name": "cla-signed",
                        "color": "ededed",
                        "default": false,
                        "description": null
                    }
                ],
                "state": "closed",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 8,
                "created_at": "2022-07-06T01:57:55Z",
                "updated_at": "2022-11-01T17:42:17Z",
                "closed_at": "2022-11-01T00:37:01Z",
                "author_association": "MEMBER",
                "active_lock_reason": null,
                "draft": false,
                "pull_request": {
                    "url": "https://api.github.com/repos/trinodb/trino/pulls/13095",
                    "html_url": "https://github.com/trinodb/trino/pull/13095",
                    "diff_url": "https://github.com/trinodb/trino/pull/13095.diff",
                    "patch_url": "https://github.com/trinodb/trino/pull/13095.patch",
                    "merged_at": null
                },
                "body": "## Description\r\n\r\nThe Trino CLI currently reports data size incorrectly, using the legacy, 1,024-based, values for K, M, G etc rather than the modern 1,000-based values.\r\n\r\n> Is this change a fix, improvement, new feature, refactoring, or other?\r\n\r\nFix\r\n\r\n> Is this a change to the core query engine, a connector, client library, or the SPI interfaces? (be specific)\r\n\r\nCLI\r\n\r\n> How would you describe this change to a non-technical end user or system administrator?\r\n\r\nThis change corrects the display of data sizes in the CLI to use 1,000-based units.\r\n\r\n## Related issues, pull requests, and links\r\n\r\n* Fixes #13054\r\n\r\n<!-- The following sections are filled in by the maintainer with input from the contributor:\r\nUse :white_check_mark: or (x) to signal selection.\r\n-->\r\n\r\n## Documentation\r\n\r\n( ) No documentation is needed.\r\n( ) Sufficient documentation is included in this PR.\r\n( ) Documentation PR is available with #prnumber.\r\n( ) Documentation issue #issuenumber is filed, and can be handled later.\r\n\r\n## Release notes\r\n\r\n( ) No release notes entries required.\r\n( ) Release notes entries required with the following suggested text:\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/trinodb/trino/issues/13095/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/trinodb/trino/issues/13095/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/trinodb/trino/issues/comments/1298885394",
                "html_url": "https://github.com/trinodb/trino/pull/13095#issuecomment-1298885394",
                "issue_url": "https://api.github.com/repos/trinodb/trino/issues/13095",
                "id": 1298885394,
                "node_id": "IC_kwDOCezRTs5Na2sS",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2022-11-01T17:42:17Z",
                "updated_at": "2022-11-01T17:42:17Z",
                "author_association": "MEMBER",
                "body": "Replaced by #14859",
                "reactions": {
                    "url": "https://api.github.com/repos/trinodb/trino/issues/comments/1298885394/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2022-11-01T17:42:18Z",
        "org": {
            "id": 34147222,
            "login": "trinodb",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/trinodb",
            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?"
        }
    },
    {
        "id": "24963869963",
        "type": "PullRequestEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 166515022,
            "name": "trinodb/trino",
            "url": "https://api.github.com/repos/trinodb/trino"
        },
        "payload": {
            "action": "opened",
            "number": 14859,
            "pull_request": {
                "url": "https://api.github.com/repos/trinodb/trino/pulls/14859",
                "id": 1107087304,
                "node_id": "PR_kwDOCezRTs5B_M_I",
                "html_url": "https://github.com/trinodb/trino/pull/14859",
                "diff_url": "https://github.com/trinodb/trino/pull/14859.diff",
                "patch_url": "https://github.com/trinodb/trino/pull/14859.patch",
                "issue_url": "https://api.github.com/repos/trinodb/trino/issues/14859",
                "number": 14859,
                "state": "open",
                "locked": false,
                "title": "Use correct abbreviations for data quantities. Fixes #13054",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "<!-- Thank you for submitting a pull request! Find more information in our development guide at https://github.com/trinodb/trino/blob/master/.github/DEVELOPMENT.md and contact us on #dev in Slack. -->\r\n<!-- Provide an overview of the PR for maintainers and reviewers. -->\r\n## Description\r\n\r\nThe Trino CLI currently reports data size incorrectly, using the legacy, 1,024-based, values for K, M, G etc rather than the modern 1,000-based values.\r\n\r\n> Is this change a fix, improvement, new feature, refactoring, or other?\r\n\r\nFix\r\n\r\n> Is this a change to the core query engine, a connector, client library, or the SPI interfaces? (be specific)\r\n\r\nCLI\r\n\r\n<!-- Provide a user-friendly explanation, keep it brief if it isn't user-visible. -->\r\n## Non-technical explanation\r\n\r\nThis change corrects the display of data sizes in the CLI to use 1,000-based units.\r\n\r\n\r\n<!-- Mark the appropriate option with an (x). Propose a release note if you can. -->\r\n## Release notes\r\n\r\n( ) This is not user-visible or docs only and no release notes are required.\r\n( ) Release notes are required, please propose a release note for me.\r\n( ) Release notes are required, with the following suggested text:\r\n\r\n## Related issues, pull requests, and links\r\n\r\n* Fixes #13054\r\n* Replaces #13095 ",
                "created_at": "2022-11-01T17:41:35Z",
                "updated_at": "2022-11-01T17:41:35Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": null,
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/trinodb/trino/pulls/14859/commits",
                "review_comments_url": "https://api.github.com/repos/trinodb/trino/pulls/14859/comments",
                "review_comment_url": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/trinodb/trino/issues/14859/comments",
                "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/3f602f00ac8f1e2dc2f365791b58e5b9db6f6693",
                "head": {
                    "label": "metadaddy:cli-wrong-units",
                    "ref": "cli-wrong-units",
                    "sha": "3f602f00ac8f1e2dc2f365791b58e5b9db6f6693",
                    "user": {
                        "login": "metadaddy",
                        "id": 723517,
                        "node_id": "MDQ6VXNlcjcyMzUxNw==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/metadaddy",
                        "html_url": "https://github.com/metadaddy",
                        "followers_url": "https://api.github.com/users/metadaddy/followers",
                        "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                        "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                        "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                        "repos_url": "https://api.github.com/users/metadaddy/repos",
                        "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 509274784,
                        "node_id": "R_kgDOHlrqoA",
                        "name": "trino",
                        "full_name": "metadaddy/trino",
                        "private": false,
                        "owner": {
                            "login": "metadaddy",
                            "id": 723517,
                            "node_id": "MDQ6VXNlcjcyMzUxNw==",
                            "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/metadaddy",
                            "html_url": "https://github.com/metadaddy",
                            "followers_url": "https://api.github.com/users/metadaddy/followers",
                            "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                            "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                            "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                            "repos_url": "https://api.github.com/users/metadaddy/repos",
                            "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/metadaddy/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": true,
                        "url": "https://api.github.com/repos/metadaddy/trino",
                        "forks_url": "https://api.github.com/repos/metadaddy/trino/forks",
                        "keys_url": "https://api.github.com/repos/metadaddy/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/metadaddy/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/metadaddy/trino/teams",
                        "hooks_url": "https://api.github.com/repos/metadaddy/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/metadaddy/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/metadaddy/trino/events",
                        "assignees_url": "https://api.github.com/repos/metadaddy/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/metadaddy/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/metadaddy/trino/tags",
                        "blobs_url": "https://api.github.com/repos/metadaddy/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/metadaddy/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/metadaddy/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/metadaddy/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/metadaddy/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/metadaddy/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/metadaddy/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/metadaddy/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/metadaddy/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/metadaddy/trino/subscription",
                        "commits_url": "https://api.github.com/repos/metadaddy/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/metadaddy/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/metadaddy/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/metadaddy/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/metadaddy/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/metadaddy/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/metadaddy/trino/merges",
                        "archive_url": "https://api.github.com/repos/metadaddy/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/metadaddy/trino/downloads",
                        "issues_url": "https://api.github.com/repos/metadaddy/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/metadaddy/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/metadaddy/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/metadaddy/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/metadaddy/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/metadaddy/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/metadaddy/trino/deployments",
                        "created_at": "2022-07-01T00:43:32Z",
                        "updated_at": "2022-07-06T01:44:20Z",
                        "pushed_at": "2022-11-01T17:34:20Z",
                        "git_url": "git://github.com/metadaddy/trino.git",
                        "ssh_url": "git@github.com:metadaddy/trino.git",
                        "clone_url": "https://github.com/metadaddy/trino.git",
                        "svn_url": "https://github.com/metadaddy/trino",
                        "homepage": "https://trino.io",
                        "size": 179161,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": "Java",
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "master"
                    }
                },
                "base": {
                    "label": "trinodb:master",
                    "ref": "master",
                    "sha": "a1e87ba3de9e55cc2aec9590836142e0cac932bd",
                    "user": {
                        "login": "trinodb",
                        "id": 34147222,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                        "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/trinodb",
                        "html_url": "https://github.com/trinodb",
                        "followers_url": "https://api.github.com/users/trinodb/followers",
                        "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                        "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                        "organizations_url": "https://api.github.com/users/trinodb/orgs",
                        "repos_url": "https://api.github.com/users/trinodb/repos",
                        "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/trinodb/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 166515022,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNjY1MTUwMjI=",
                        "name": "trino",
                        "full_name": "trinodb/trino",
                        "private": false,
                        "owner": {
                            "login": "trinodb",
                            "id": 34147222,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/trinodb",
                            "html_url": "https://github.com/trinodb",
                            "followers_url": "https://api.github.com/users/trinodb/followers",
                            "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                            "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                            "organizations_url": "https://api.github.com/users/trinodb/orgs",
                            "repos_url": "https://api.github.com/users/trinodb/repos",
                            "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/trinodb/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/trinodb/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": false,
                        "url": "https://api.github.com/repos/trinodb/trino",
                        "forks_url": "https://api.github.com/repos/trinodb/trino/forks",
                        "keys_url": "https://api.github.com/repos/trinodb/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/trinodb/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/trinodb/trino/teams",
                        "hooks_url": "https://api.github.com/repos/trinodb/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/trinodb/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/trinodb/trino/events",
                        "assignees_url": "https://api.github.com/repos/trinodb/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/trinodb/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/trinodb/trino/tags",
                        "blobs_url": "https://api.github.com/repos/trinodb/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/trinodb/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/trinodb/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/trinodb/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/trinodb/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/trinodb/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/trinodb/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/trinodb/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/trinodb/trino/subscription",
                        "commits_url": "https://api.github.com/repos/trinodb/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/trinodb/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/trinodb/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/trinodb/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/trinodb/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/trinodb/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/trinodb/trino/merges",
                        "archive_url": "https://api.github.com/repos/trinodb/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/trinodb/trino/downloads",
                        "issues_url": "https://api.github.com/repos/trinodb/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/trinodb/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/trinodb/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/trinodb/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/trinodb/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/trinodb/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/trinodb/trino/deployments",
                        "created_at": "2019-01-19T06:38:14Z",
                        "updated_at": "2022-11-01T16:53:32Z",
                        "pushed_at": "2022-11-01T17:41:35Z",
                        "git_url": "git://github.com/trinodb/trino.git",
                        "ssh_url": "git@github.com:trinodb/trino.git",
                        "clone_url": "https://github.com/trinodb/trino.git",
                        "svn_url": "https://github.com/trinodb/trino",
                        "homepage": "https://trino.io",
                        "size": 179133,
                        "stargazers_count": 6435,
                        "watchers_count": 6435,
                        "language": "Java",
                        "has_issues": true,
                        "has_projects": false,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "forks_count": 2020,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 2205,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "analytics",
                            "big-data",
                            "data-science",
                            "database",
                            "databases",
                            "datalake",
                            "distributed-database",
                            "distributed-databases",
                            "distributed-systems",
                            "hadoop",
                            "hive",
                            "java",
                            "jdbc",
                            "presto",
                            "prestodb",
                            "query-engine",
                            "sql",
                            "trino"
                        ],
                        "visibility": "public",
                        "forks": 2020,
                        "open_issues": 2205,
                        "watchers": 6435,
                        "default_branch": "master"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/14859"
                    },
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/14859"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/14859"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/14859/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/14859/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/14859/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/trinodb/trino/statuses/3f602f00ac8f1e2dc2f365791b58e5b9db6f6693"
                    }
                },
                "author_association": "MEMBER",
                "auto_merge": null,
                "active_lock_reason": null,
                "merged": false,
                "mergeable": null,
                "rebaseable": null,
                "mergeable_state": "unknown",
                "merged_by": null,
                "comments": 0,
                "review_comments": 0,
                "maintainer_can_modify": true,
                "commits": 1,
                "additions": 364,
                "deletions": 10,
                "changed_files": 2
            }
        },
        "public": true,
        "created_at": "2022-11-01T17:41:35Z",
        "org": {
            "id": 34147222,
            "login": "trinodb",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/trinodb",
            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?"
        }
    },
    {
        "id": "24963725482",
        "type": "PushEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 509274784,
            "name": "metadaddy/trino",
            "url": "https://api.github.com/repos/metadaddy/trino"
        },
        "payload": {
            "push_id": 11519836897,
            "size": 1000,
            "distinct_size": 1,
            "ref": "refs/heads/cli-wrong-units",
            "head": "3f602f00ac8f1e2dc2f365791b58e5b9db6f6693",
            "before": "0b7a691461216fa9c06dfaf63899574f4a0e7a22",
            "commits": [
                {
                    "sha": "624fedb3cf139f76f9f2e1d773773f75afa01fe1",
                    "author": {
                        "email": "andriyrosa@gmail.com",
                        "name": "Andrii Rosa"
                    },
                    "message": "Change randomized prefix to contain only hex characters\n\nSome storage systems prefer the prefix to be hexadecimal characters",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/624fedb3cf139f76f9f2e1d773773f75afa01fe1"
                },
                {
                    "sha": "d4288f6fffca2bf850bd1c8c50ff2f6416694b29",
                    "author": {
                        "email": "ashhar.hasan@starburstdata.com",
                        "name": "Ashhar Hasan"
                    },
                    "message": "Disallow table creation in BigQuery with query retries enabled\n\nBigQuery connector doesn't support fault tolerant execution yet.",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/d4288f6fffca2bf850bd1c8c50ff2f6416694b29"
                },
                {
                    "sha": "42f3b8a3bf158352b11ec34dc14be8dbd5ea5ad4",
                    "author": {
                        "email": "ashhar.hasan@starburstdata.com",
                        "name": "Ashhar Hasan"
                    },
                    "message": "Add test to verify CREATE SCHEMA with case-insensitive matching",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/42f3b8a3bf158352b11ec34dc14be8dbd5ea5ad4"
                },
                {
                    "sha": "8fea27c974e5078e8d1105fdb56a2dd417f7750b",
                    "author": {
                        "email": "surpass.simple@gmail.com",
                        "name": "tangjiangling"
                    },
                    "message": "Rename variables for readability\n\nNow this variable only holds the result of the low bound comparison, so\nit could be renamed.",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/8fea27c974e5078e8d1105fdb56a2dd417f7750b"
                },
                {
                    "sha": "1e61a7ce05ce21f9f54f18cf8ba8e38187e38d67",
                    "author": {
                        "email": "mateusz.gajewski@gmail.com",
                        "name": "Mateusz Gajewski"
                    },
                    "message": "Squash Phoenix environment extender into EnvMultinodePhoenix5",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/1e61a7ce05ce21f9f54f18cf8ba8e38187e38d67"
                },
                {
                    "sha": "9ce301813e2de8bc3137e2664fb6b54112f34c3f",
                    "author": {
                        "email": "ebyhry@gmail.com",
                        "name": "Yuya Ebihara"
                    },
                    "message": "Add main method to S3HiveQueryRunner",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/9ce301813e2de8bc3137e2664fb6b54112f34c3f"
                },
                {
                    "sha": "19c2bc45aaa4e5eb90c33c910628cbf09da2b093",
                    "author": {
                        "email": "andriyrosa@gmail.com",
                        "name": "Andrii Rosa"
                    },
                    "message": "Remove unused method in StageTaskSourceFactory",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/19c2bc45aaa4e5eb90c33c910628cbf09da2b093"
                },
                {
                    "sha": "d9402bc77994d858672313b68cacac623d8f3c14",
                    "author": {
                        "email": "andriyrosa@gmail.com",
                        "name": "Andrii Rosa"
                    },
                    "message": "Support coordinator task scheduling in fault tolerant scheduler",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/d9402bc77994d858672313b68cacac623d8f3c14"
                },
                {
                    "sha": "170faf53cd1c6a1a39118ae6d9475f21926b3885",
                    "author": {
                        "email": "andriyrosa@gmail.com",
                        "name": "Andrii Rosa"
                    },
                    "message": "Fix FaultTolerantStageScheduler#isFinished\n\nWait for split enumeration feature to finish before returning true from isFinished",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/170faf53cd1c6a1a39118ae6d9475f21926b3885"
                },
                {
                    "sha": "a183959a962b8c9b012547afc02d566a10cf2591",
                    "author": {
                        "email": "andriyrosa@gmail.com",
                        "name": "Andrii Rosa"
                    },
                    "message": "Transition stage to FINISHED state early\n\nIn FTE a stage is transtitioned to FINISHED only after query completion.\nThis was needed to allow certain tasks to be rescheduled to reconstruct\nlost data (due to unreliable exchange). This mechanism has never been\nutilized and likely will never be as currently the solution is built\nunder assumption that exchange is reliable.",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/a183959a962b8c9b012547afc02d566a10cf2591"
                },
                {
                    "sha": "43d61ab04bef3cbc844193d1f8cc616778fc1cc1",
                    "author": {
                        "email": "andriyrosa@gmail.com",
                        "name": "Andrii Rosa"
                    },
                    "message": "Abort / cancel tasks only once",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/43d61ab04bef3cbc844193d1f8cc616778fc1cc1"
                },
                {
                    "sha": "c9e27f895fb78fab06b9aeb422ed56cb37b79858",
                    "author": {
                        "email": "andriyrosa@gmail.com",
                        "name": "Andrii Rosa"
                    },
                    "message": "Remove FaultTolerantStageSchedule#reportTaskFailure\n\nWith only spooling exchange being used in fault tolerant execution\nthere's no need to report task failures from coordinator what was only\nneeded with direct exchange",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/c9e27f895fb78fab06b9aeb422ed56cb37b79858"
                },
                {
                    "sha": "26ba659305d698eafb5b1d6f5a98a49f27d480f8",
                    "author": {
                        "email": "andriyrosa@gmail.com",
                        "name": "Andrii Rosa"
                    },
                    "message": "Fail tasks directly through SqlStage\n\nTo avoid unnecessary indirections",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/26ba659305d698eafb5b1d6f5a98a49f27d480f8"
                },
                {
                    "sha": "5f685f5cc0fb27fc1cf50dfe2e4b6c2b479b0833",
                    "author": {
                        "email": "andriyrosa@gmail.com",
                        "name": "Andrii Rosa"
                    },
                    "message": "Extract StageManager into a standalone class",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/5f685f5cc0fb27fc1cf50dfe2e4b6c2b479b0833"
                },
                {
                    "sha": "7990d40ea28f548aefde10d1eed147dfe741b84f",
                    "author": {
                        "email": "andriyrosa@gmail.com",
                        "name": "Andrii Rosa"
                    },
                    "message": "Refactor StageManager\n\nDo not pass session separately as it can be obtained through\nQueryStateMachine",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/7990d40ea28f548aefde10d1eed147dfe741b84f"
                },
                {
                    "sha": "d0b0994531c8ebd2c38a88592400410f1dc31d17",
                    "author": {
                        "email": "andriyrosa@gmail.com",
                        "name": "Andrii Rosa"
                    },
                    "message": "Separate fault tolerant and pipelined scheduler implementations",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/d0b0994531c8ebd2c38a88592400410f1dc31d17"
                },
                {
                    "sha": "a977d88b051e6616d1fd9c355362627383abec29",
                    "author": {
                        "email": "lukasz@osipiuk.net",
                        "name": "\u0141ukasz Osipiuk"
                    },
                    "message": "Change data ownership contract in call of ExchangeSink.add\n\nAfter the change the contract changes in a way that ownership of data\npassed as an argument is passed from caller to callee.\nApart from usage in DeduplicatingDirectExchangeBuffer the Slices passed\nas to ExchangeSink.add were single-use and not mutataded/reclaimed\nafterwards.\n\nThe semantics change allows for simplere and more effective\nimplementations of ExchangeSinks as no extra data copying is enforced.",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/a977d88b051e6616d1fd9c355362627383abec29"
                },
                {
                    "sha": "f7ad25addca4aad78acda38bc947523c3a7f88d6",
                    "author": {
                        "email": "ebyhry@gmail.com",
                        "name": "Yuya Ebihara"
                    },
                    "message": "Check error code for RENAME COLUMN failure in MariaDB\n\nSQLSyntaxErrorException contains invalid column name.",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/f7ad25addca4aad78acda38bc947523c3a7f88d6"
                },
                {
                    "sha": "0547b321937befa4ed95ea2b065dd16ec4bbecf9",
                    "author": {
                        "email": "ebyhry@gmail.com",
                        "name": "Yuya Ebihara"
                    },
                    "message": "Set SUPPORTS_RENAME_COLUMN as false in unsupported connectors\n\ntestRenameColumn was skipped by SUPPORTS_CREATE_TABLE\ncondition.",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/0547b321937befa4ed95ea2b065dd16ec4bbecf9"
                },
                {
                    "sha": "d9aa5b328345218916deba29aad5274d98ce577a",
                    "author": {
                        "email": "ebyhry@gmail.com",
                        "name": "Yuya Ebihara"
                    },
                    "message": "Add renameColumnSql method to JDBC connectors",
                    "distinct": false,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/d9aa5b328345218916deba29aad5274d98ce577a"
                }
            ]
        },
        "public": true,
        "created_at": "2022-11-01T17:34:23Z"
    },
    {
        "id": "24963592773",
        "type": "CreateEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 509274784,
            "name": "metadaddy/trino",
            "url": "https://api.github.com/repos/metadaddy/trino"
        },
        "payload": {
            "ref": "cli-wrong-units",
            "ref_type": "branch",
            "master_branch": "master",
            "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
            "pusher_type": "user"
        },
        "public": true,
        "created_at": "2022-11-01T17:28:08Z"
    },
    {
        "id": "24963511754",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 166515022,
            "name": "trinodb/trino",
            "url": "https://api.github.com/repos/trinodb/trino"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/trinodb/trino/issues/13095",
                "repository_url": "https://api.github.com/repos/trinodb/trino",
                "labels_url": "https://api.github.com/repos/trinodb/trino/issues/13095/labels{/name}",
                "comments_url": "https://api.github.com/repos/trinodb/trino/issues/13095/comments",
                "events_url": "https://api.github.com/repos/trinodb/trino/issues/13095/events",
                "html_url": "https://github.com/trinodb/trino/pull/13095",
                "id": 1295003432,
                "node_id": "PR_kwDOCezRTs465Hjk",
                "number": 13095,
                "title": "Use correct abbreviations for data quantities",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 1202580151,
                        "node_id": "MDU6TGFiZWwxMjAyNTgwMTUx",
                        "url": "https://api.github.com/repos/trinodb/trino/labels/cla-signed",
                        "name": "cla-signed",
                        "color": "ededed",
                        "default": false,
                        "description": null
                    }
                ],
                "state": "closed",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 7,
                "created_at": "2022-07-06T01:57:55Z",
                "updated_at": "2022-11-01T17:24:09Z",
                "closed_at": "2022-11-01T00:37:01Z",
                "author_association": "MEMBER",
                "active_lock_reason": null,
                "draft": false,
                "pull_request": {
                    "url": "https://api.github.com/repos/trinodb/trino/pulls/13095",
                    "html_url": "https://github.com/trinodb/trino/pull/13095",
                    "diff_url": "https://github.com/trinodb/trino/pull/13095.diff",
                    "patch_url": "https://github.com/trinodb/trino/pull/13095.patch",
                    "merged_at": null
                },
                "body": "## Description\r\n\r\nThe Trino CLI currently reports data size incorrectly, using the legacy, 1,024-based, values for K, M, G etc rather than the modern 1,000-based values.\r\n\r\n> Is this change a fix, improvement, new feature, refactoring, or other?\r\n\r\nFix\r\n\r\n> Is this a change to the core query engine, a connector, client library, or the SPI interfaces? (be specific)\r\n\r\nCLI\r\n\r\n> How would you describe this change to a non-technical end user or system administrator?\r\n\r\nThis change corrects the display of data sizes in the CLI to use 1,000-based units.\r\n\r\n## Related issues, pull requests, and links\r\n\r\n* Fixes #13054\r\n\r\n<!-- The following sections are filled in by the maintainer with input from the contributor:\r\nUse :white_check_mark: or (x) to signal selection.\r\n-->\r\n\r\n## Documentation\r\n\r\n( ) No documentation is needed.\r\n( ) Sufficient documentation is included in this PR.\r\n( ) Documentation PR is available with #prnumber.\r\n( ) Documentation issue #issuenumber is filed, and can be handled later.\r\n\r\n## Release notes\r\n\r\n( ) No release notes entries required.\r\n( ) Release notes entries required with the following suggested text:\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/trinodb/trino/issues/13095/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/trinodb/trino/issues/13095/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/trinodb/trino/issues/comments/1298864456",
                "html_url": "https://github.com/trinodb/trino/pull/13095#issuecomment-1298864456",
                "issue_url": "https://api.github.com/repos/trinodb/trino/issues/13095",
                "id": 1298864456,
                "node_id": "IC_kwDOCezRTs5NaxlI",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2022-11-01T17:24:09Z",
                "updated_at": "2022-11-01T17:24:09Z",
                "author_association": "MEMBER",
                "body": "Oops - I submitted this PR from my master branch, then I needed to sync back for another change. I'll submit another PR with a different branch and reference this one.",
                "reactions": {
                    "url": "https://api.github.com/repos/trinodb/trino/issues/comments/1298864456/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2022-11-01T17:24:10Z",
        "org": {
            "id": 34147222,
            "login": "trinodb",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/trinodb",
            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?"
        }
    },
    {
        "id": "24946246970",
        "type": "PushEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 509274784,
            "name": "metadaddy/trino",
            "url": "https://api.github.com/repos/metadaddy/trino"
        },
        "payload": {
            "push_id": 11511040508,
            "size": 1000,
            "distinct_size": 1610,
            "ref": "refs/heads/master",
            "head": "62349751f1c337bee4b93c290cbd1ae563d75a3b",
            "before": "6cb319916328184a673d3ca9eb204cc5181c9f25",
            "commits": [
                {
                    "sha": "a6a0b6b172e255cfb9ed1254e726a61a14e20d25",
                    "author": {
                        "email": "jan.was@starburstdata.com",
                        "name": "Jan Wa\u015b"
                    },
                    "message": "Add comment explaining why CI cleans local Maven repo",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/a6a0b6b172e255cfb9ed1254e726a61a14e20d25"
                },
                {
                    "sha": "624fedb3cf139f76f9f2e1d773773f75afa01fe1",
                    "author": {
                        "email": "andriyrosa@gmail.com",
                        "name": "Andrii Rosa"
                    },
                    "message": "Change randomized prefix to contain only hex characters\n\nSome storage systems prefer the prefix to be hexadecimal characters",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/624fedb3cf139f76f9f2e1d773773f75afa01fe1"
                },
                {
                    "sha": "d4288f6fffca2bf850bd1c8c50ff2f6416694b29",
                    "author": {
                        "email": "ashhar.hasan@starburstdata.com",
                        "name": "Ashhar Hasan"
                    },
                    "message": "Disallow table creation in BigQuery with query retries enabled\n\nBigQuery connector doesn't support fault tolerant execution yet.",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/d4288f6fffca2bf850bd1c8c50ff2f6416694b29"
                },
                {
                    "sha": "42f3b8a3bf158352b11ec34dc14be8dbd5ea5ad4",
                    "author": {
                        "email": "ashhar.hasan@starburstdata.com",
                        "name": "Ashhar Hasan"
                    },
                    "message": "Add test to verify CREATE SCHEMA with case-insensitive matching",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/42f3b8a3bf158352b11ec34dc14be8dbd5ea5ad4"
                },
                {
                    "sha": "8fea27c974e5078e8d1105fdb56a2dd417f7750b",
                    "author": {
                        "email": "surpass.simple@gmail.com",
                        "name": "tangjiangling"
                    },
                    "message": "Rename variables for readability\n\nNow this variable only holds the result of the low bound comparison, so\nit could be renamed.",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/8fea27c974e5078e8d1105fdb56a2dd417f7750b"
                },
                {
                    "sha": "1e61a7ce05ce21f9f54f18cf8ba8e38187e38d67",
                    "author": {
                        "email": "mateusz.gajewski@gmail.com",
                        "name": "Mateusz Gajewski"
                    },
                    "message": "Squash Phoenix environment extender into EnvMultinodePhoenix5",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/1e61a7ce05ce21f9f54f18cf8ba8e38187e38d67"
                },
                {
                    "sha": "9ce301813e2de8bc3137e2664fb6b54112f34c3f",
                    "author": {
                        "email": "ebyhry@gmail.com",
                        "name": "Yuya Ebihara"
                    },
                    "message": "Add main method to S3HiveQueryRunner",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/9ce301813e2de8bc3137e2664fb6b54112f34c3f"
                },
                {
                    "sha": "19c2bc45aaa4e5eb90c33c910628cbf09da2b093",
                    "author": {
                        "email": "andriyrosa@gmail.com",
                        "name": "Andrii Rosa"
                    },
                    "message": "Remove unused method in StageTaskSourceFactory",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/19c2bc45aaa4e5eb90c33c910628cbf09da2b093"
                },
                {
                    "sha": "d9402bc77994d858672313b68cacac623d8f3c14",
                    "author": {
                        "email": "andriyrosa@gmail.com",
                        "name": "Andrii Rosa"
                    },
                    "message": "Support coordinator task scheduling in fault tolerant scheduler",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/d9402bc77994d858672313b68cacac623d8f3c14"
                },
                {
                    "sha": "170faf53cd1c6a1a39118ae6d9475f21926b3885",
                    "author": {
                        "email": "andriyrosa@gmail.com",
                        "name": "Andrii Rosa"
                    },
                    "message": "Fix FaultTolerantStageScheduler#isFinished\n\nWait for split enumeration feature to finish before returning true from isFinished",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/170faf53cd1c6a1a39118ae6d9475f21926b3885"
                },
                {
                    "sha": "a183959a962b8c9b012547afc02d566a10cf2591",
                    "author": {
                        "email": "andriyrosa@gmail.com",
                        "name": "Andrii Rosa"
                    },
                    "message": "Transition stage to FINISHED state early\n\nIn FTE a stage is transtitioned to FINISHED only after query completion.\nThis was needed to allow certain tasks to be rescheduled to reconstruct\nlost data (due to unreliable exchange). This mechanism has never been\nutilized and likely will never be as currently the solution is built\nunder assumption that exchange is reliable.",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/a183959a962b8c9b012547afc02d566a10cf2591"
                },
                {
                    "sha": "43d61ab04bef3cbc844193d1f8cc616778fc1cc1",
                    "author": {
                        "email": "andriyrosa@gmail.com",
                        "name": "Andrii Rosa"
                    },
                    "message": "Abort / cancel tasks only once",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/43d61ab04bef3cbc844193d1f8cc616778fc1cc1"
                },
                {
                    "sha": "c9e27f895fb78fab06b9aeb422ed56cb37b79858",
                    "author": {
                        "email": "andriyrosa@gmail.com",
                        "name": "Andrii Rosa"
                    },
                    "message": "Remove FaultTolerantStageSchedule#reportTaskFailure\n\nWith only spooling exchange being used in fault tolerant execution\nthere's no need to report task failures from coordinator what was only\nneeded with direct exchange",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/c9e27f895fb78fab06b9aeb422ed56cb37b79858"
                },
                {
                    "sha": "26ba659305d698eafb5b1d6f5a98a49f27d480f8",
                    "author": {
                        "email": "andriyrosa@gmail.com",
                        "name": "Andrii Rosa"
                    },
                    "message": "Fail tasks directly through SqlStage\n\nTo avoid unnecessary indirections",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/26ba659305d698eafb5b1d6f5a98a49f27d480f8"
                },
                {
                    "sha": "5f685f5cc0fb27fc1cf50dfe2e4b6c2b479b0833",
                    "author": {
                        "email": "andriyrosa@gmail.com",
                        "name": "Andrii Rosa"
                    },
                    "message": "Extract StageManager into a standalone class",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/5f685f5cc0fb27fc1cf50dfe2e4b6c2b479b0833"
                },
                {
                    "sha": "7990d40ea28f548aefde10d1eed147dfe741b84f",
                    "author": {
                        "email": "andriyrosa@gmail.com",
                        "name": "Andrii Rosa"
                    },
                    "message": "Refactor StageManager\n\nDo not pass session separately as it can be obtained through\nQueryStateMachine",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/7990d40ea28f548aefde10d1eed147dfe741b84f"
                },
                {
                    "sha": "d0b0994531c8ebd2c38a88592400410f1dc31d17",
                    "author": {
                        "email": "andriyrosa@gmail.com",
                        "name": "Andrii Rosa"
                    },
                    "message": "Separate fault tolerant and pipelined scheduler implementations",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/d0b0994531c8ebd2c38a88592400410f1dc31d17"
                },
                {
                    "sha": "a977d88b051e6616d1fd9c355362627383abec29",
                    "author": {
                        "email": "lukasz@osipiuk.net",
                        "name": "\u0141ukasz Osipiuk"
                    },
                    "message": "Change data ownership contract in call of ExchangeSink.add\n\nAfter the change the contract changes in a way that ownership of data\npassed as an argument is passed from caller to callee.\nApart from usage in DeduplicatingDirectExchangeBuffer the Slices passed\nas to ExchangeSink.add were single-use and not mutataded/reclaimed\nafterwards.\n\nThe semantics change allows for simplere and more effective\nimplementations of ExchangeSinks as no extra data copying is enforced.",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/a977d88b051e6616d1fd9c355362627383abec29"
                },
                {
                    "sha": "f7ad25addca4aad78acda38bc947523c3a7f88d6",
                    "author": {
                        "email": "ebyhry@gmail.com",
                        "name": "Yuya Ebihara"
                    },
                    "message": "Check error code for RENAME COLUMN failure in MariaDB\n\nSQLSyntaxErrorException contains invalid column name.",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/f7ad25addca4aad78acda38bc947523c3a7f88d6"
                },
                {
                    "sha": "0547b321937befa4ed95ea2b065dd16ec4bbecf9",
                    "author": {
                        "email": "ebyhry@gmail.com",
                        "name": "Yuya Ebihara"
                    },
                    "message": "Set SUPPORTS_RENAME_COLUMN as false in unsupported connectors\n\ntestRenameColumn was skipped by SUPPORTS_CREATE_TABLE\ncondition.",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino/commits/0547b321937befa4ed95ea2b065dd16ec4bbecf9"
                }
            ]
        },
        "public": true,
        "created_at": "2022-11-01T00:37:18Z"
    },
    {
        "id": "24946244232",
        "type": "PullRequestEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 166515022,
            "name": "trinodb/trino",
            "url": "https://api.github.com/repos/trinodb/trino"
        },
        "payload": {
            "action": "closed",
            "number": 13095,
            "pull_request": {
                "url": "https://api.github.com/repos/trinodb/trino/pulls/13095",
                "id": 988051684,
                "node_id": "PR_kwDOCezRTs465Hjk",
                "html_url": "https://github.com/trinodb/trino/pull/13095",
                "diff_url": "https://github.com/trinodb/trino/pull/13095.diff",
                "patch_url": "https://github.com/trinodb/trino/pull/13095.patch",
                "issue_url": "https://api.github.com/repos/trinodb/trino/issues/13095",
                "number": 13095,
                "state": "closed",
                "locked": false,
                "title": "Use correct abbreviations for data quantities",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "## Description\r\n\r\nThe Trino CLI currently reports data size incorrectly, using the legacy, 1,024-based, values for K, M, G etc rather than the modern 1,000-based values.\r\n\r\n> Is this change a fix, improvement, new feature, refactoring, or other?\r\n\r\nFix\r\n\r\n> Is this a change to the core query engine, a connector, client library, or the SPI interfaces? (be specific)\r\n\r\nCLI\r\n\r\n> How would you describe this change to a non-technical end user or system administrator?\r\n\r\nThis change corrects the display of data sizes in the CLI to use 1,000-based units.\r\n\r\n## Related issues, pull requests, and links\r\n\r\n* Fixes #13054\r\n\r\n<!-- The following sections are filled in by the maintainer with input from the contributor:\r\nUse :white_check_mark: or (x) to signal selection.\r\n-->\r\n\r\n## Documentation\r\n\r\n( ) No documentation is needed.\r\n( ) Sufficient documentation is included in this PR.\r\n( ) Documentation PR is available with #prnumber.\r\n( ) Documentation issue #issuenumber is filed, and can be handled later.\r\n\r\n## Release notes\r\n\r\n( ) No release notes entries required.\r\n( ) Release notes entries required with the following suggested text:\r\n",
                "created_at": "2022-07-06T01:57:55Z",
                "updated_at": "2022-11-01T00:37:02Z",
                "closed_at": "2022-11-01T00:37:01Z",
                "merged_at": null,
                "merge_commit_sha": "332a51ddc6060cc9b7aa06ee2b8102bc3e6bcdb2",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/trinodb/trino/pulls/13095/commits",
                "review_comments_url": "https://api.github.com/repos/trinodb/trino/pulls/13095/comments",
                "review_comment_url": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/trinodb/trino/issues/13095/comments",
                "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/6cb319916328184a673d3ca9eb204cc5181c9f25",
                "head": {
                    "label": "metadaddy:master",
                    "ref": "master",
                    "sha": "6cb319916328184a673d3ca9eb204cc5181c9f25",
                    "user": {
                        "login": "metadaddy",
                        "id": 723517,
                        "node_id": "MDQ6VXNlcjcyMzUxNw==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/metadaddy",
                        "html_url": "https://github.com/metadaddy",
                        "followers_url": "https://api.github.com/users/metadaddy/followers",
                        "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                        "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                        "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                        "repos_url": "https://api.github.com/users/metadaddy/repos",
                        "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 509274784,
                        "node_id": "R_kgDOHlrqoA",
                        "name": "trino",
                        "full_name": "metadaddy/trino",
                        "private": false,
                        "owner": {
                            "login": "metadaddy",
                            "id": 723517,
                            "node_id": "MDQ6VXNlcjcyMzUxNw==",
                            "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/metadaddy",
                            "html_url": "https://github.com/metadaddy",
                            "followers_url": "https://api.github.com/users/metadaddy/followers",
                            "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                            "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                            "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                            "repos_url": "https://api.github.com/users/metadaddy/repos",
                            "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/metadaddy/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": true,
                        "url": "https://api.github.com/repos/metadaddy/trino",
                        "forks_url": "https://api.github.com/repos/metadaddy/trino/forks",
                        "keys_url": "https://api.github.com/repos/metadaddy/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/metadaddy/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/metadaddy/trino/teams",
                        "hooks_url": "https://api.github.com/repos/metadaddy/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/metadaddy/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/metadaddy/trino/events",
                        "assignees_url": "https://api.github.com/repos/metadaddy/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/metadaddy/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/metadaddy/trino/tags",
                        "blobs_url": "https://api.github.com/repos/metadaddy/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/metadaddy/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/metadaddy/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/metadaddy/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/metadaddy/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/metadaddy/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/metadaddy/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/metadaddy/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/metadaddy/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/metadaddy/trino/subscription",
                        "commits_url": "https://api.github.com/repos/metadaddy/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/metadaddy/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/metadaddy/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/metadaddy/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/metadaddy/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/metadaddy/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/metadaddy/trino/merges",
                        "archive_url": "https://api.github.com/repos/metadaddy/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/metadaddy/trino/downloads",
                        "issues_url": "https://api.github.com/repos/metadaddy/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/metadaddy/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/metadaddy/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/metadaddy/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/metadaddy/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/metadaddy/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/metadaddy/trino/deployments",
                        "created_at": "2022-07-01T00:43:32Z",
                        "updated_at": "2022-07-06T01:44:20Z",
                        "pushed_at": "2022-11-01T00:36:59Z",
                        "git_url": "git://github.com/metadaddy/trino.git",
                        "ssh_url": "git@github.com:metadaddy/trino.git",
                        "clone_url": "https://github.com/metadaddy/trino.git",
                        "svn_url": "https://github.com/metadaddy/trino",
                        "homepage": "https://trino.io",
                        "size": 159789,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": "Java",
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "master"
                    }
                },
                "base": {
                    "label": "trinodb:master",
                    "ref": "master",
                    "sha": "62349751f1c337bee4b93c290cbd1ae563d75a3b",
                    "user": {
                        "login": "trinodb",
                        "id": 34147222,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                        "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/trinodb",
                        "html_url": "https://github.com/trinodb",
                        "followers_url": "https://api.github.com/users/trinodb/followers",
                        "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                        "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                        "organizations_url": "https://api.github.com/users/trinodb/orgs",
                        "repos_url": "https://api.github.com/users/trinodb/repos",
                        "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/trinodb/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 166515022,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNjY1MTUwMjI=",
                        "name": "trino",
                        "full_name": "trinodb/trino",
                        "private": false,
                        "owner": {
                            "login": "trinodb",
                            "id": 34147222,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0MTQ3MjIy",
                            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/trinodb",
                            "html_url": "https://github.com/trinodb",
                            "followers_url": "https://api.github.com/users/trinodb/followers",
                            "following_url": "https://api.github.com/users/trinodb/following{/other_user}",
                            "gists_url": "https://api.github.com/users/trinodb/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/trinodb/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/trinodb/subscriptions",
                            "organizations_url": "https://api.github.com/users/trinodb/orgs",
                            "repos_url": "https://api.github.com/users/trinodb/repos",
                            "events_url": "https://api.github.com/users/trinodb/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/trinodb/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/trinodb/trino",
                        "description": "Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io)",
                        "fork": false,
                        "url": "https://api.github.com/repos/trinodb/trino",
                        "forks_url": "https://api.github.com/repos/trinodb/trino/forks",
                        "keys_url": "https://api.github.com/repos/trinodb/trino/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/trinodb/trino/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/trinodb/trino/teams",
                        "hooks_url": "https://api.github.com/repos/trinodb/trino/hooks",
                        "issue_events_url": "https://api.github.com/repos/trinodb/trino/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/trinodb/trino/events",
                        "assignees_url": "https://api.github.com/repos/trinodb/trino/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/trinodb/trino/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/trinodb/trino/tags",
                        "blobs_url": "https://api.github.com/repos/trinodb/trino/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/trinodb/trino/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/trinodb/trino/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/trinodb/trino/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/trinodb/trino/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/trinodb/trino/languages",
                        "stargazers_url": "https://api.github.com/repos/trinodb/trino/stargazers",
                        "contributors_url": "https://api.github.com/repos/trinodb/trino/contributors",
                        "subscribers_url": "https://api.github.com/repos/trinodb/trino/subscribers",
                        "subscription_url": "https://api.github.com/repos/trinodb/trino/subscription",
                        "commits_url": "https://api.github.com/repos/trinodb/trino/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/trinodb/trino/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/trinodb/trino/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/trinodb/trino/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/trinodb/trino/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/trinodb/trino/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/trinodb/trino/merges",
                        "archive_url": "https://api.github.com/repos/trinodb/trino/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/trinodb/trino/downloads",
                        "issues_url": "https://api.github.com/repos/trinodb/trino/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/trinodb/trino/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/trinodb/trino/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/trinodb/trino/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/trinodb/trino/labels{/name}",
                        "releases_url": "https://api.github.com/repos/trinodb/trino/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/trinodb/trino/deployments",
                        "created_at": "2019-01-19T06:38:14Z",
                        "updated_at": "2022-10-31T23:36:51Z",
                        "pushed_at": "2022-11-01T00:19:03Z",
                        "git_url": "git://github.com/trinodb/trino.git",
                        "ssh_url": "git@github.com:trinodb/trino.git",
                        "clone_url": "https://github.com/trinodb/trino.git",
                        "svn_url": "https://github.com/trinodb/trino",
                        "homepage": "https://trino.io",
                        "size": 179068,
                        "stargazers_count": 6430,
                        "watchers_count": 6430,
                        "language": "Java",
                        "has_issues": true,
                        "has_projects": false,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "forks_count": 2016,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 2200,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "analytics",
                            "big-data",
                            "data-science",
                            "database",
                            "databases",
                            "datalake",
                            "distributed-database",
                            "distributed-databases",
                            "distributed-systems",
                            "hadoop",
                            "hive",
                            "java",
                            "jdbc",
                            "presto",
                            "prestodb",
                            "query-engine",
                            "sql",
                            "trino"
                        ],
                        "visibility": "public",
                        "forks": 2016,
                        "open_issues": 2200,
                        "watchers": 6430,
                        "default_branch": "master"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/13095"
                    },
                    "html": {
                        "href": "https://github.com/trinodb/trino/pull/13095"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/13095"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/issues/13095/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/13095/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/trinodb/trino/pulls/13095/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/trinodb/trino/statuses/6cb319916328184a673d3ca9eb204cc5181c9f25"
                    }
                },
                "author_association": "MEMBER",
                "auto_merge": null,
                "active_lock_reason": null,
                "merged": false,
                "mergeable": null,
                "rebaseable": null,
                "mergeable_state": "unknown",
                "merged_by": null,
                "comments": 7,
                "review_comments": 0,
                "maintainer_can_modify": false,
                "commits": 0,
                "additions": 0,
                "deletions": 0,
                "changed_files": 0
            }
        },
        "public": true,
        "created_at": "2022-11-01T00:37:02Z",
        "org": {
            "id": 34147222,
            "login": "trinodb",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/trinodb",
            "avatar_url": "https://avatars.githubusercontent.com/u/34147222?"
        }
    },
    {
        "id": "24946244012",
        "type": "PushEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 509274784,
            "name": "metadaddy/trino",
            "url": "https://api.github.com/repos/metadaddy/trino"
        },
        "payload": {
            "push_id": 11511039146,
            "size": 0,
            "distinct_size": 0,
            "ref": "refs/heads/master",
            "head": "6cb319916328184a673d3ca9eb204cc5181c9f25",
            "before": "0b7a691461216fa9c06dfaf63899574f4a0e7a22",
            "commits": []
        },
        "public": true,
        "created_at": "2022-11-01T00:37:01Z"
    },
    {
        "id": "24944622790",
        "type": "PushEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 556391398,
            "name": "backblaze-b2-samples/node-copy-http",
            "url": "https://api.github.com/repos/backblaze-b2-samples/node-copy-http"
        },
        "payload": {
            "push_id": 11510197618,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/main",
            "head": "dd6ac4cb8a7cc8fdfaeec98888baf295fd7de81f",
            "before": "98ba6d1cad50b54ea234445bcc7411b3d4ff29a1",
            "commits": [
                {
                    "sha": "dd6ac4cb8a7cc8fdfaeec98888baf295fd7de81f",
                    "author": {
                        "email": "pat@backblaze.com",
                        "name": "Pat Patterson"
                    },
                    "message": "Create README.md",
                    "distinct": true,
                    "url": "https://api.github.com/repos/backblaze-b2-samples/node-copy-http/commits/dd6ac4cb8a7cc8fdfaeec98888baf295fd7de81f"
                }
            ]
        },
        "public": true,
        "created_at": "2022-10-31T22:20:00Z",
        "org": {
            "id": 17604039,
            "login": "backblaze-b2-samples",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/backblaze-b2-samples",
            "avatar_url": "https://avatars.githubusercontent.com/u/17604039?"
        }
    },
    {
        "id": "24829244507",
        "type": "PushEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 506752547,
            "name": "metadaddy/trino-getting-started",
            "url": "https://api.github.com/repos/metadaddy/trino-getting-started"
        },
        "payload": {
            "push_id": 11449373493,
            "size": 6,
            "distinct_size": 6,
            "ref": "refs/heads/main",
            "head": "58790e463b29274a2011524e05f8de84cbbe8306",
            "before": "5100953e1462b18155efece1c86603c23d3668c5",
            "commits": [
                {
                    "sha": "b7ce0dfcc0c807ec68a0a72e7a062ea5675a09d1",
                    "author": {
                        "email": "zjffdu@apache.org",
                        "name": "Jeff Zhang"
                    },
                    "message": "Add Zeppelin docker-compose example",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino-getting-started/commits/b7ce0dfcc0c807ec68a0a72e7a062ea5675a09d1"
                },
                {
                    "sha": "a633f542f4be4887e707c14326c69d3857c580bc",
                    "author": {
                        "email": "vontikov@gmail.com",
                        "name": "Vladimir Ontikov"
                    },
                    "message": "Create Delta Lake S3 bucket at startup",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino-getting-started/commits/a633f542f4be4887e707c14326c69d3857c580bc"
                },
                {
                    "sha": "89a1bcb6268c2e6da08a7c322dcf4b69d8b7d9e6",
                    "author": {
                        "email": "bits@bitsondata.dev",
                        "name": "bitsondatadev"
                    },
                    "message": "Add init hudi env - not working yet",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino-getting-started/commits/89a1bcb6268c2e6da08a7c322dcf4b69d8b7d9e6"
                },
                {
                    "sha": "ff90dfeb1f637829c0ce274279771913bd394af8",
                    "author": {
                        "email": "bits@bitsondata.dev",
                        "name": "Brian \"bits\" Olsen"
                    },
                    "message": "Merge pull request #4 from zjffdu/zeppelin\n\nAdd Zeppelin docker-compose example",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino-getting-started/commits/ff90dfeb1f637829c0ce274279771913bd394af8"
                },
                {
                    "sha": "dc33ec6a4d2aa8c383404dc38826f1f1f877a763",
                    "author": {
                        "email": "bits@bitsondata.dev",
                        "name": "Brian \"bits\" Olsen"
                    },
                    "message": "Merge pull request #6 from vontikov/main\n\nCreate Delta Lake S3 bucket at startup",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino-getting-started/commits/dc33ec6a4d2aa8c383404dc38826f1f1f877a763"
                },
                {
                    "sha": "58790e463b29274a2011524e05f8de84cbbe8306",
                    "author": {
                        "email": "metadaddy@gmail.com",
                        "name": "Pat Patterson"
                    },
                    "message": "New Tutorial: Hive Connector over Backblaze B2 Cloud Storage (#8)\n\nAdded Trino/B2 example",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino-getting-started/commits/58790e463b29274a2011524e05f8de84cbbe8306"
                }
            ]
        },
        "public": true,
        "created_at": "2022-10-26T00:47:42Z"
    },
    {
        "id": "24776048024",
        "type": "PushEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 556391398,
            "name": "backblaze-b2-samples/node-copy-http",
            "url": "https://api.github.com/repos/backblaze-b2-samples/node-copy-http"
        },
        "payload": {
            "push_id": 11422606893,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/main",
            "head": "98ba6d1cad50b54ea234445bcc7411b3d4ff29a1",
            "before": "5160a7fa93f619f772fce32cf88b7f21e825b8b8",
            "commits": [
                {
                    "sha": "98ba6d1cad50b54ea234445bcc7411b3d4ff29a1",
                    "author": {
                        "email": "pat@backblaze.com",
                        "name": "Pat Patterson"
                    },
                    "message": "init",
                    "distinct": true,
                    "url": "https://api.github.com/repos/backblaze-b2-samples/node-copy-http/commits/98ba6d1cad50b54ea234445bcc7411b3d4ff29a1"
                }
            ]
        },
        "public": true,
        "created_at": "2022-10-23T18:48:09Z",
        "org": {
            "id": 17604039,
            "login": "backblaze-b2-samples",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/backblaze-b2-samples",
            "avatar_url": "https://avatars.githubusercontent.com/u/17604039?"
        }
    },
    {
        "id": "24776040745",
        "type": "CreateEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 556391398,
            "name": "backblaze-b2-samples/node-copy-http",
            "url": "https://api.github.com/repos/backblaze-b2-samples/node-copy-http"
        },
        "payload": {
            "ref": "main",
            "ref_type": "branch",
            "master_branch": "main",
            "description": "Fastly RisingCloud task demo for Tech Day 2022",
            "pusher_type": "user"
        },
        "public": true,
        "created_at": "2022-10-23T18:46:59Z",
        "org": {
            "id": 17604039,
            "login": "backblaze-b2-samples",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/backblaze-b2-samples",
            "avatar_url": "https://avatars.githubusercontent.com/u/17604039?"
        }
    },
    {
        "id": "24776040709",
        "type": "CreateEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 556391398,
            "name": "backblaze-b2-samples/node-copy-http",
            "url": "https://api.github.com/repos/backblaze-b2-samples/node-copy-http"
        },
        "payload": {
            "ref": null,
            "ref_type": "repository",
            "master_branch": "main",
            "description": "Fastly RisingCloud task demo for Tech Day 2022",
            "pusher_type": "user"
        },
        "public": true,
        "created_at": "2022-10-23T18:46:59Z",
        "org": {
            "id": 17604039,
            "login": "backblaze-b2-samples",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/backblaze-b2-samples",
            "avatar_url": "https://avatars.githubusercontent.com/u/17604039?"
        }
    },
    {
        "id": "24775902407",
        "type": "PushEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 556378910,
            "name": "backblaze-b2-samples/fastly-on-demand-migration",
            "url": "https://api.github.com/repos/backblaze-b2-samples/fastly-on-demand-migration"
        },
        "payload": {
            "push_id": 11422508597,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/main",
            "head": "696602315b0b3ff0bf735af31ddc8b4878291a3f",
            "before": "9fca5ba1e69075e17d17b1450fc5aa3532c0e46f",
            "commits": [
                {
                    "sha": "696602315b0b3ff0bf735af31ddc8b4878291a3f",
                    "author": {
                        "email": "pat@backblaze.com",
                        "name": "Pat Patterson"
                    },
                    "message": "Generify fastly.toml",
                    "distinct": true,
                    "url": "https://api.github.com/repos/backblaze-b2-samples/fastly-on-demand-migration/commits/696602315b0b3ff0bf735af31ddc8b4878291a3f"
                }
            ]
        },
        "public": true,
        "created_at": "2022-10-23T18:25:57Z",
        "org": {
            "id": 17604039,
            "login": "backblaze-b2-samples",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/backblaze-b2-samples",
            "avatar_url": "https://avatars.githubusercontent.com/u/17604039?"
        }
    },
    {
        "id": "24775834577",
        "type": "PushEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 556378910,
            "name": "backblaze-b2-samples/fastly-on-demand-migration",
            "url": "https://api.github.com/repos/backblaze-b2-samples/fastly-on-demand-migration"
        },
        "payload": {
            "push_id": 11422463627,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/main",
            "head": "9fca5ba1e69075e17d17b1450fc5aa3532c0e46f",
            "before": "416879c5deba7a945ac58935098621a313eb16b8",
            "commits": [
                {
                    "sha": "9fca5ba1e69075e17d17b1450fc5aa3532c0e46f",
                    "author": {
                        "email": "pat@backblaze.com",
                        "name": "Pat Patterson"
                    },
                    "message": "Update README",
                    "distinct": true,
                    "url": "https://api.github.com/repos/backblaze-b2-samples/fastly-on-demand-migration/commits/9fca5ba1e69075e17d17b1450fc5aa3532c0e46f"
                }
            ]
        },
        "public": true,
        "created_at": "2022-10-23T18:16:14Z",
        "org": {
            "id": 17604039,
            "login": "backblaze-b2-samples",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/backblaze-b2-samples",
            "avatar_url": "https://avatars.githubusercontent.com/u/17604039?"
        }
    },
    {
        "id": "24775819655",
        "type": "PushEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 556378910,
            "name": "backblaze-b2-samples/fastly-on-demand-migration",
            "url": "https://api.github.com/repos/backblaze-b2-samples/fastly-on-demand-migration"
        },
        "payload": {
            "push_id": 11422453301,
            "size": 4,
            "distinct_size": 4,
            "ref": "refs/heads/main",
            "head": "416879c5deba7a945ac58935098621a313eb16b8",
            "before": "39a2fa48e079c308cc7789f39be6efdc7d729356",
            "commits": [
                {
                    "sha": "6426dd9bcbc690d07860c29afe3159cc82cbd05f",
                    "author": {
                        "email": "pat@backblaze.com",
                        "name": "Pat Patterson"
                    },
                    "message": "init",
                    "distinct": true,
                    "url": "https://api.github.com/repos/backblaze-b2-samples/fastly-on-demand-migration/commits/6426dd9bcbc690d07860c29afe3159cc82cbd05f"
                },
                {
                    "sha": "1e5a79a283087ac74911a54dcd5dd5abf9d8f939",
                    "author": {
                        "email": "pat@backblaze.com",
                        "name": "Pat Patterson"
                    },
                    "message": "working",
                    "distinct": true,
                    "url": "https://api.github.com/repos/backblaze-b2-samples/fastly-on-demand-migration/commits/1e5a79a283087ac74911a54dcd5dd5abf9d8f939"
                },
                {
                    "sha": "f3cb8028deb637917043d46d93dc9cb390decbb1",
                    "author": {
                        "email": "pat@backblaze.com",
                        "name": "Pat Patterson"
                    },
                    "message": "Remove origin setting",
                    "distinct": true,
                    "url": "https://api.github.com/repos/backblaze-b2-samples/fastly-on-demand-migration/commits/f3cb8028deb637917043d46d93dc9cb390decbb1"
                },
                {
                    "sha": "416879c5deba7a945ac58935098621a313eb16b8",
                    "author": {
                        "email": "pat@backblaze.com",
                        "name": "Pat Patterson"
                    },
                    "message": "Commenting",
                    "distinct": true,
                    "url": "https://api.github.com/repos/backblaze-b2-samples/fastly-on-demand-migration/commits/416879c5deba7a945ac58935098621a313eb16b8"
                }
            ]
        },
        "public": true,
        "created_at": "2022-10-23T18:14:20Z",
        "org": {
            "id": 17604039,
            "login": "backblaze-b2-samples",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/backblaze-b2-samples",
            "avatar_url": "https://avatars.githubusercontent.com/u/17604039?"
        }
    },
    {
        "id": "24775789419",
        "type": "CreateEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 556378910,
            "name": "backblaze-b2-samples/fastly-on-demand-migration",
            "url": "https://api.github.com/repos/backblaze-b2-samples/fastly-on-demand-migration"
        },
        "payload": {
            "ref": "main",
            "ref_type": "branch",
            "master_branch": "main",
            "description": "Fastly Compute@Edge app demo for Tech Day 2022",
            "pusher_type": "user"
        },
        "public": true,
        "created_at": "2022-10-23T18:10:19Z",
        "org": {
            "id": 17604039,
            "login": "backblaze-b2-samples",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/backblaze-b2-samples",
            "avatar_url": "https://avatars.githubusercontent.com/u/17604039?"
        }
    },
    {
        "id": "24775789326",
        "type": "CreateEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 556378910,
            "name": "backblaze-b2-samples/fastly-on-demand-migration",
            "url": "https://api.github.com/repos/backblaze-b2-samples/fastly-on-demand-migration"
        },
        "payload": {
            "ref": null,
            "ref_type": "repository",
            "master_branch": "main",
            "description": "Fastly Compute@Edge app demo for Tech Day 2022",
            "pusher_type": "user"
        },
        "public": true,
        "created_at": "2022-10-23T18:10:18Z",
        "org": {
            "id": 17604039,
            "login": "backblaze-b2-samples",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/backblaze-b2-samples",
            "avatar_url": "https://avatars.githubusercontent.com/u/17604039?"
        }
    },
    {
        "id": "24737807745",
        "type": "PushEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 506752547,
            "name": "metadaddy/trino-getting-started",
            "url": "https://api.github.com/repos/metadaddy/trino-getting-started"
        },
        "payload": {
            "push_id": 11400827064,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/main",
            "head": "5100953e1462b18155efece1c86603c23d3668c5",
            "before": "2145bcd1ab76f4175197a1076e91155021b9c3db",
            "commits": [
                {
                    "sha": "5100953e1462b18155efece1c86603c23d3668c5",
                    "author": {
                        "email": "pat@backblaze.com",
                        "name": "Pat Patterson"
                    },
                    "message": "Fixed circular link",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino-getting-started/commits/5100953e1462b18155efece1c86603c23d3668c5"
                }
            ]
        },
        "public": true,
        "created_at": "2022-10-21T00:25:44Z"
    },
    {
        "id": "24737731092",
        "type": "PullRequestEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 341978481,
            "name": "bitsondatadev/trino-getting-started",
            "url": "https://api.github.com/repos/bitsondatadev/trino-getting-started"
        },
        "payload": {
            "action": "opened",
            "number": 8,
            "pull_request": {
                "url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/pulls/8",
                "id": 1094596852,
                "node_id": "PR_kwDOFGItcc5BPjj0",
                "html_url": "https://github.com/bitsondatadev/trino-getting-started/pull/8",
                "diff_url": "https://github.com/bitsondatadev/trino-getting-started/pull/8.diff",
                "patch_url": "https://github.com/bitsondatadev/trino-getting-started/pull/8.patch",
                "issue_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/issues/8",
                "number": 8,
                "state": "open",
                "locked": false,
                "title": "New Tutorial: Hive Connector over Backblaze B2 Cloud Storage",
                "user": {
                    "login": "metadaddy",
                    "id": 723517,
                    "node_id": "MDQ6VXNlcjcyMzUxNw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/metadaddy",
                    "html_url": "https://github.com/metadaddy",
                    "followers_url": "https://api.github.com/users/metadaddy/followers",
                    "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                    "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                    "repos_url": "https://api.github.com/users/metadaddy/repos",
                    "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "We've been [experimenting with using Backblaze B2 as cloud storage with Trino's Hive connector](https://www.backblaze.com/blog/storing-and-querying-analytical-data-in-backblaze-b2/) here at Backblaze. We got started from the excellent [MinIO tutorial](https://github.com/bitsondatadev/trino-getting-started/tree/main/hive/trino-minio), so, as I'm about to publish a second blog entry inviting the [Drive Stats](https://www.backblaze.com/drivestats) community to get to grips with the data, I added a tutorial for Backblaze B2, including the Drive Stats data set. Would you be interested in pulling it into your repo?",
                "created_at": "2022-10-21T00:18:55Z",
                "updated_at": "2022-10-21T00:18:55Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": null,
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/pulls/8/commits",
                "review_comments_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/pulls/8/comments",
                "review_comment_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/issues/8/comments",
                "statuses_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/statuses/2145bcd1ab76f4175197a1076e91155021b9c3db",
                "head": {
                    "label": "metadaddy:main",
                    "ref": "main",
                    "sha": "2145bcd1ab76f4175197a1076e91155021b9c3db",
                    "user": {
                        "login": "metadaddy",
                        "id": 723517,
                        "node_id": "MDQ6VXNlcjcyMzUxNw==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/metadaddy",
                        "html_url": "https://github.com/metadaddy",
                        "followers_url": "https://api.github.com/users/metadaddy/followers",
                        "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                        "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                        "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                        "repos_url": "https://api.github.com/users/metadaddy/repos",
                        "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 506752547,
                        "node_id": "R_kgDOHjRuIw",
                        "name": "trino-getting-started",
                        "full_name": "metadaddy/trino-getting-started",
                        "private": false,
                        "owner": {
                            "login": "metadaddy",
                            "id": 723517,
                            "node_id": "MDQ6VXNlcjcyMzUxNw==",
                            "avatar_url": "https://avatars.githubusercontent.com/u/723517?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/metadaddy",
                            "html_url": "https://github.com/metadaddy",
                            "followers_url": "https://api.github.com/users/metadaddy/followers",
                            "following_url": "https://api.github.com/users/metadaddy/following{/other_user}",
                            "gists_url": "https://api.github.com/users/metadaddy/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/metadaddy/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/metadaddy/subscriptions",
                            "organizations_url": "https://api.github.com/users/metadaddy/orgs",
                            "repos_url": "https://api.github.com/users/metadaddy/repos",
                            "events_url": "https://api.github.com/users/metadaddy/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/metadaddy/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/metadaddy/trino-getting-started",
                        "description": null,
                        "fork": true,
                        "url": "https://api.github.com/repos/metadaddy/trino-getting-started",
                        "forks_url": "https://api.github.com/repos/metadaddy/trino-getting-started/forks",
                        "keys_url": "https://api.github.com/repos/metadaddy/trino-getting-started/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/metadaddy/trino-getting-started/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/metadaddy/trino-getting-started/teams",
                        "hooks_url": "https://api.github.com/repos/metadaddy/trino-getting-started/hooks",
                        "issue_events_url": "https://api.github.com/repos/metadaddy/trino-getting-started/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/metadaddy/trino-getting-started/events",
                        "assignees_url": "https://api.github.com/repos/metadaddy/trino-getting-started/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/metadaddy/trino-getting-started/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/metadaddy/trino-getting-started/tags",
                        "blobs_url": "https://api.github.com/repos/metadaddy/trino-getting-started/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/metadaddy/trino-getting-started/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/metadaddy/trino-getting-started/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/metadaddy/trino-getting-started/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/metadaddy/trino-getting-started/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/metadaddy/trino-getting-started/languages",
                        "stargazers_url": "https://api.github.com/repos/metadaddy/trino-getting-started/stargazers",
                        "contributors_url": "https://api.github.com/repos/metadaddy/trino-getting-started/contributors",
                        "subscribers_url": "https://api.github.com/repos/metadaddy/trino-getting-started/subscribers",
                        "subscription_url": "https://api.github.com/repos/metadaddy/trino-getting-started/subscription",
                        "commits_url": "https://api.github.com/repos/metadaddy/trino-getting-started/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/metadaddy/trino-getting-started/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/metadaddy/trino-getting-started/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/metadaddy/trino-getting-started/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/metadaddy/trino-getting-started/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/metadaddy/trino-getting-started/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/metadaddy/trino-getting-started/merges",
                        "archive_url": "https://api.github.com/repos/metadaddy/trino-getting-started/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/metadaddy/trino-getting-started/downloads",
                        "issues_url": "https://api.github.com/repos/metadaddy/trino-getting-started/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/metadaddy/trino-getting-started/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/metadaddy/trino-getting-started/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/metadaddy/trino-getting-started/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/metadaddy/trino-getting-started/labels{/name}",
                        "releases_url": "https://api.github.com/repos/metadaddy/trino-getting-started/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/metadaddy/trino-getting-started/deployments",
                        "created_at": "2022-06-23T18:37:35Z",
                        "updated_at": "2022-08-27T02:19:58Z",
                        "pushed_at": "2022-10-21T00:10:41Z",
                        "git_url": "git://github.com/metadaddy/trino-getting-started.git",
                        "ssh_url": "git@github.com:metadaddy/trino-getting-started.git",
                        "clone_url": "https://github.com/metadaddy/trino-getting-started.git",
                        "svn_url": "https://github.com/metadaddy/trino-getting-started",
                        "homepage": null,
                        "size": 20729,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": "Python",
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "main"
                    }
                },
                "base": {
                    "label": "bitsondatadev:main",
                    "ref": "main",
                    "sha": "6a9aad4432b01705e247d9c2e1c8dff77d40cc4e",
                    "user": {
                        "login": "bitsondatadev",
                        "id": 8547669,
                        "node_id": "MDQ6VXNlcjg1NDc2Njk=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/8547669?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/bitsondatadev",
                        "html_url": "https://github.com/bitsondatadev",
                        "followers_url": "https://api.github.com/users/bitsondatadev/followers",
                        "following_url": "https://api.github.com/users/bitsondatadev/following{/other_user}",
                        "gists_url": "https://api.github.com/users/bitsondatadev/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/bitsondatadev/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/bitsondatadev/subscriptions",
                        "organizations_url": "https://api.github.com/users/bitsondatadev/orgs",
                        "repos_url": "https://api.github.com/users/bitsondatadev/repos",
                        "events_url": "https://api.github.com/users/bitsondatadev/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/bitsondatadev/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 341978481,
                        "node_id": "MDEwOlJlcG9zaXRvcnkzNDE5Nzg0ODE=",
                        "name": "trino-getting-started",
                        "full_name": "bitsondatadev/trino-getting-started",
                        "private": false,
                        "owner": {
                            "login": "bitsondatadev",
                            "id": 8547669,
                            "node_id": "MDQ6VXNlcjg1NDc2Njk=",
                            "avatar_url": "https://avatars.githubusercontent.com/u/8547669?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/bitsondatadev",
                            "html_url": "https://github.com/bitsondatadev",
                            "followers_url": "https://api.github.com/users/bitsondatadev/followers",
                            "following_url": "https://api.github.com/users/bitsondatadev/following{/other_user}",
                            "gists_url": "https://api.github.com/users/bitsondatadev/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/bitsondatadev/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/bitsondatadev/subscriptions",
                            "organizations_url": "https://api.github.com/users/bitsondatadev/orgs",
                            "repos_url": "https://api.github.com/users/bitsondatadev/repos",
                            "events_url": "https://api.github.com/users/bitsondatadev/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/bitsondatadev/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/bitsondatadev/trino-getting-started",
                        "description": null,
                        "fork": false,
                        "url": "https://api.github.com/repos/bitsondatadev/trino-getting-started",
                        "forks_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/forks",
                        "keys_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/teams",
                        "hooks_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/hooks",
                        "issue_events_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/events",
                        "assignees_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/tags",
                        "blobs_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/languages",
                        "stargazers_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/stargazers",
                        "contributors_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/contributors",
                        "subscribers_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/subscribers",
                        "subscription_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/subscription",
                        "commits_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/merges",
                        "archive_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/downloads",
                        "issues_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/labels{/name}",
                        "releases_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/bitsondatadev/trino-getting-started/deployments",
                        "created_at": "2021-02-24T17:23:52Z",
                        "updated_at": "2022-10-14T09:26:34Z",
                        "pushed_at": "2022-07-06T11:51:17Z",
                        "git_url": "git://github.com/bitsondatadev/trino-getting-started.git",
                        "ssh_url": "git@github.com:bitsondatadev/trino-getting-started.git",
                        "clone_url": "https://github.com/bitsondatadev/trino-getting-started.git",
                        "svn_url": "https://github.com/bitsondatadev/trino-getting-started",
                        "homepage": null,
                        "size": 20720,
                        "stargazers_count": 126,
                        "watchers_count": 126,
                        "language": "Python",
                        "has_issues": true,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "forks_count": 47,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 6,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 47,
                        "open_issues": 6,
                        "watchers": 126,
                        "default_branch": "main"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/bitsondatadev/trino-getting-started/pulls/8"
                    },
                    "html": {
                        "href": "https://github.com/bitsondatadev/trino-getting-started/pull/8"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/bitsondatadev/trino-getting-started/issues/8"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/bitsondatadev/trino-getting-started/issues/8/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/bitsondatadev/trino-getting-started/pulls/8/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/bitsondatadev/trino-getting-started/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/bitsondatadev/trino-getting-started/pulls/8/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/bitsondatadev/trino-getting-started/statuses/2145bcd1ab76f4175197a1076e91155021b9c3db"
                    }
                },
                "author_association": "NONE",
                "auto_merge": null,
                "active_lock_reason": null,
                "merged": false,
                "mergeable": null,
                "rebaseable": null,
                "mergeable_state": "unknown",
                "merged_by": null,
                "comments": 0,
                "review_comments": 0,
                "maintainer_can_modify": true,
                "commits": 12,
                "additions": 879,
                "deletions": 0,
                "changed_files": 23
            }
        },
        "public": true,
        "created_at": "2022-10-21T00:18:55Z"
    },
    {
        "id": "24737638743",
        "type": "PushEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 506752547,
            "name": "metadaddy/trino-getting-started",
            "url": "https://api.github.com/repos/metadaddy/trino-getting-started"
        },
        "payload": {
            "push_id": 11400739242,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/main",
            "head": "2145bcd1ab76f4175197a1076e91155021b9c3db",
            "before": "5ee077af85421d09ba1be882e2b28e3984748528",
            "commits": [
                {
                    "sha": "2145bcd1ab76f4175197a1076e91155021b9c3db",
                    "author": {
                        "email": "pat@backblaze.com",
                        "name": "Pat Patterson"
                    },
                    "message": "I'll get this right soon",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino-getting-started/commits/2145bcd1ab76f4175197a1076e91155021b9c3db"
                }
            ]
        },
        "public": true,
        "created_at": "2022-10-21T00:10:41Z"
    },
    {
        "id": "24737629710",
        "type": "PushEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 506752547,
            "name": "metadaddy/trino-getting-started",
            "url": "https://api.github.com/repos/metadaddy/trino-getting-started"
        },
        "payload": {
            "push_id": 11400734244,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/main",
            "head": "5ee077af85421d09ba1be882e2b28e3984748528",
            "before": "2bdd51f82be07da31d5a1672df8495cb22c2df09",
            "commits": [
                {
                    "sha": "5ee077af85421d09ba1be882e2b28e3984748528",
                    "author": {
                        "email": "pat@backblaze.com",
                        "name": "Pat Patterson"
                    },
                    "message": "Typo",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino-getting-started/commits/5ee077af85421d09ba1be882e2b28e3984748528"
                }
            ]
        },
        "public": true,
        "created_at": "2022-10-21T00:09:51Z"
    },
    {
        "id": "24737625161",
        "type": "PushEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 506752547,
            "name": "metadaddy/trino-getting-started",
            "url": "https://api.github.com/repos/metadaddy/trino-getting-started"
        },
        "payload": {
            "push_id": 11400731824,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/main",
            "head": "2bdd51f82be07da31d5a1672df8495cb22c2df09",
            "before": "7dce02b5a171bbca34b0994ada9a89fc06953292",
            "commits": [
                {
                    "sha": "2bdd51f82be07da31d5a1672df8495cb22c2df09",
                    "author": {
                        "email": "pat@backblaze.com",
                        "name": "Pat Patterson"
                    },
                    "message": "Fix drivestats.sql path",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino-getting-started/commits/2bdd51f82be07da31d5a1672df8495cb22c2df09"
                }
            ]
        },
        "public": true,
        "created_at": "2022-10-21T00:09:26Z"
    },
    {
        "id": "24737552137",
        "type": "PushEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 506752547,
            "name": "metadaddy/trino-getting-started",
            "url": "https://api.github.com/repos/metadaddy/trino-getting-started"
        },
        "payload": {
            "push_id": 11400693416,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/main",
            "head": "7dce02b5a171bbca34b0994ada9a89fc06953292",
            "before": "731524da5bfb78f950359b7cffb2581394ec3ab0",
            "commits": [
                {
                    "sha": "7dce02b5a171bbca34b0994ada9a89fc06953292",
                    "author": {
                        "email": "pat@backblaze.com",
                        "name": "Pat Patterson"
                    },
                    "message": "Yet more image sizing",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino-getting-started/commits/7dce02b5a171bbca34b0994ada9a89fc06953292"
                }
            ]
        },
        "public": true,
        "created_at": "2022-10-21T00:02:48Z"
    },
    {
        "id": "24737532939",
        "type": "PushEvent",
        "actor": {
            "id": 723517,
            "login": "metadaddy",
            "display_login": "metadaddy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metadaddy",
            "avatar_url": "https://avatars.githubusercontent.com/u/723517?"
        },
        "repo": {
            "id": 506752547,
            "name": "metadaddy/trino-getting-started",
            "url": "https://api.github.com/repos/metadaddy/trino-getting-started"
        },
        "payload": {
            "push_id": 11400683125,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/main",
            "head": "731524da5bfb78f950359b7cffb2581394ec3ab0",
            "before": "00ea30dacfde8c6307996577c9bf8387ad345297",
            "commits": [
                {
                    "sha": "731524da5bfb78f950359b7cffb2581394ec3ab0",
                    "author": {
                        "email": "pat@backblaze.com",
                        "name": "Pat Patterson"
                    },
                    "message": "More image sizing",
                    "distinct": true,
                    "url": "https://api.github.com/repos/metadaddy/trino-getting-started/commits/731524da5bfb78f950359b7cffb2581394ec3ab0"
                }
            ]
        },
        "public": true,
        "created_at": "2022-10-21T00:01:05Z"
    }
]